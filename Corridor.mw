{{Header}}
{{Title|
title=Using corridor, a Tor traffic whitelisting gateway with Whonix
}}
{{#seo:
|description=Using corridor, a Tor traffic whitelisting gateway with Whonix
}}
__forcetoc__

= Introduction =
corridor is a Tor traffic whitelisting gateway. It is a filtering gateway. Not a proxying gateway.

https://github.com/rustybird/corridor

It can also be used as a [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/BridgeFirewall BridgeFirewall].

= Connecting to corridor before Tor =
== Introduction ==
'''UNFINISHED'''

Testers only!

It is possible to configure Whonix-Gateway (sys-whonix) to use corridor as <u>local</u> proxy to establish the following tunnel:<br />
'''User -> corridor -> Tor > Internet'''

This is not necessarily more anonymous. It is an additional fail-save Tor traffic whitelisting firewall that would protect from accidental clearnet leaks (hypothetical clearnet leak bugs in Whonix). As [https://github.com/rustybird/corridor corridor's project description] states, quote "it cannot prevent malware on a client computer from finding out your clearnet IP address". corridor is mostly useful for developers and auditors of Whonix, perhaps also for advanced users who would like to have an additional safety net. It cannot protect from hypothetical Qubes ProxyVM leak bugs either, a [https://github.com/rustybird/corridor physically isolated, standalone corridor-Gateway] would be better and could cover that.

It does not increase the tunnel length, i.e. it does not add more relays between you and the destination, if you are interested in that, see [[Tunnels/Introduction]].

If you want to do this, apply the following instructions.

[[Qubes-Whonix]] only! [[Non-Qubes-Whonix]] is [[unsupported]]. <ref>
https://phabricator.whonix.org/T524
</ref>

Credits: The author of corridor is [https://github.com/rustybird rustybird]. The author of [https://en.wikipedia.org/wiki/Fork_%28software_development%29 fork] of [https://github.com/adrelanos/corridor corridor for Debian] which will be used in this instructions is [https://github.com/adrelanos Patrick Schleizer].

The following instructions should be applied in a [https://www.qubes-os.org Qubes] using a [https://www.qubes-os.org/doc/templates/debian/ Debian template].

== Warning ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = 
The following instructions will result by default in:

* the [https://packages.debian.org/jessie/tor Debian tor package] being installed
* and thereby automatically connecting to the [https://www.torproject.org Tor] public network.
* Downloading corridor from [[Whonix-APT-Repository]].
* This may not be what you want if you want to [[Hide_Tor_and_Whonix_from_your_ISP|hide Tor and Whonix from your ISP]].
* If you are already using Whonix, which you are most likely doing when reading this page, in running a second instance of [[Tor]] which is independent from the one running inside Whonix-Gateway. From the perspective of your ISP you will have a different network [[Fingerprint]]. This should be no worse than running the Tor Browser Bundle, or system-tor and Whonix at the same time.
}}

== dom0 setup ==
Create a new standalone ProxyVM called {{Code2|sys-corridor}} based on Debian-8 template.

<code>Qubes VM Manager -> Create AppVM -> enable 'Standalone' -> name: {{Code2|sys-corridor}} -> template: Debian-8 -> OK</code>

Enable the {{Code2|corridor}} qvm service.

<code>Qubes VM Manager -> click on {{Code2|sys-corridor}} -> right click -> VM settings -> services -> type in the field -> {{Code2|corridor}} -> press {{Code2|+}} -> press OK</code>

== sys-corridor setup ==
Start {{Code2|sys-corridor}} and open a terminal using Qubes start menu.

Inside {{Code2|sys-corridor}}...

Optional. If you want to use corridor as a [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/BridgeFirewall BridgeFirewall], configure Tor to use [https://www.torproject.org/docs/bridges.html.en bridges] now. (The Whonix page about [[Bridges]] might help but it does not apply one to one.) Also if you want to do that, create folder {{Code2|/etc/corridor.d}} and configuration file {{Code2|/etc/corridor.d/21-bridges-user.conf}} now. Otherwise if you like to use Tor entry guards <ref>
https://www.torproject.org/docs/faq.html.en#EntryGuards
</ref>, you can skip that.

Note: ''Bridges are less reliable and tend to have lower performance than other entry points. If you live in a uncensored area, they are not necessarily more secure than entry guards.'' ''Source: [https://lists.torproject.org/pipermail/tor-talk/2012-May/024378.html bridge vs non-bridge users anonymity].''

{{Open with root rights|filename=
/etc/corridor.d/21-bridges-user.conf
}}

Add.

{{CodeSelect|code=
BRIDGES=`grep -Ei '^[[:space:]]*Bridge[[:space:]]' /etc/tor/torrc`
}}

Save.

{{Whonix-APT-Repository-Add}}

[[Update]] your package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install corridor.

{{CodeSelect|code=
sudo apt-get install corridor
}}

As long as this instructions are experimental, you are advised to run the following systemctl commands to check if everything is alright.

{{CodeSelect|code=
sudo systemctl status corridor-data
sudo systemctl status corridor-init-forwarding 
sudo systemctl status corridor-init-logged 
sudo systemctl status corridor-init-snat
}}

Reboot {{Code2|sys-corridor}}.

== test corridor ==
Run the above systemctl commands again.

Create (or use an appropriate existing one) AppVM called {{Code2|corridor-client}} or so and install / run either system-tor (from Debian or Fedora package sources) or the Tor Browser Bundle (TBB). Then set the NetVM of {{Code2|corridor-client}} to {{Code2|sys-corridor}}. Tor should be still able to connect.

To test system-tor, start watching Tor's log.

{{CodeSelect|code=
sudo tail -f /var/log/tor/log
}}

See if it initially successfully connected.

Then restart Tor.

{{CodeSelect|code=
sudo service tor restart
}}

See if Tor is still able to connect.

To test TBB, check if it is able to initially connect to the internet while NetVM is still set to {{Code2|sys-firewall}}. Then set the NetVM to {{Code2|sys-corridor}} and see if it is still able to connect. If so, that is a good sign. Finally, you could should attempt an un-torified connection by using an un-torified application such as the chromium or firefox browser. Un-torified applications should fail to connect to the internet.

== test logging ==
Whenever you try something that gets blocked by corridor, such as the above [[#test corridor]], it will appear in syslog. Examine {{Code2|/var/log/syslog}}.

{{Open File|filename=
/var/log/syslog
}}

To check that run inside {{Code2|sys-corridor}}.

{{CodeSelect|code=
tail -f /var/log/syslog
}}

If corridor blocked something, it will look like this.

{{CodeSelect|code=
Jul 19 00:58:27 localhost kernel: [  954.706833] corridor:
}}

== interpreting the results ==
It is probably best not to connect set other VMs than {{Code2|sys-whonix}} to use {{Code2|sys-corridor}} as NetVM. This is because [https://github.com/marmarek/qubes-core-agent-linux/blob/master/vm-systemd/qubes-update-check.service qubes-update-check.service] will and [https://github.com/QubesOS/qubes-issues/issues/1814 other stuff] may try to use the internet without using Tor. Therefore shut down {{Code2|corridor-client}}.

== configure sys-whonix ==
Set sys-whonix's NetVM to {{Code2|sys-corridor}}.

<code>Qubes VM Manager -> one left click on sys-whonix -> right click -> VM-Settings -> NetVM -> {{Code2|sys-corridor}} -> OK</code>

== done ==
sys-whonix should now be using sys-corridor.

= Debugging =
In case you are having issues, this chapter contains snippets on how to gather useful information for debugging. Otherwise you can skip this chapter.

See if the {{Code2|corridor_relays}} ipset gets populated.

{{CodeSelect|code=
sudo ipset list corridor_relays
}}

Please also install the {{Code2|usability-misc}} package from Whonix repository since it provides the {{Code2|iptables-save-deterministic}} command or get it from [[Dev/Firewall_Refactoring|elsewhere]].

{{CodeSelect|code=
sudo apt-get install usability-misc
}}

Run {{Code2|iptables-save-deterministic}}.

{{CodeSelect|code=
sudo iptables-save-deterministic
}}

Should look like this for Qubes.

<pre>
*nat
:PREROUTING ACCEPT [0,0]
:INPUT ACCEPT [0,0]
:OUTPUT ACCEPT [0,0]
:POSTROUTING ACCEPT [0,0]
:CORRIDOR_SNAT - [0,0]
-A POSTROUTING -j CORRIDOR_SNAT
-A CORRIDOR_SNAT -s 10.137.0.0/16 ! -d 10.137.0.0/16 -j MASQUERADE
COMMIT
*filter
:INPUT ACCEPT [0,0]
:FORWARD ACCEPT [0,0]
:OUTPUT ACCEPT [0,0]
:CORRIDOR_FILTER - [0,0]
-A FORWARD -j CORRIDOR_FILTER
-A CORRIDOR_FILTER -m conntrack --ctstate RELATED,ESTABLISHED -j RETURN
-A CORRIDOR_FILTER -m set --match-set corridor_relays dst,dst -j RETURN
-A CORRIDOR_FILTER -m set --match-set corridor_logged src -j LOG --log-prefix "corridor: reject " --log-macdecode
-A CORRIDOR_FILTER -j REJECT --reject-with icmp-host-prohibited
COMMIT
</pre>

= Footnotes =
<references/>

{{Footer}}

[[Category:Documentation]]
