{{Header}}
{{#seo:
|description=Using Whonix with Qubes OS
}}

'''Testers only!'''



= Notice =

'''Qubes + Whonix''' has been fundamentally upgraded to a new native architecture that integrates much more seamlessly with the Qubes platform. This new system obsoletes the original and greatly improves upon the ease of installation and use of Qubes + Whonix going forward. For security purposes, documentation of the old obsoleted system will persist upon this wiki page until sufficient public leak testing of the new system has been completed in the [https://www.whonix.org/forum/Qubes Whonix Qubes Forum]. You are welcome to obtain and begin using the new Qubes + Whonix platform now, if you take on full responsibility of testing and trusting the platform "as is". A minimal beta install guide is provided here:

* '''https://www.whonix.org/forum/index.php/topic,896.0.html'''



'''TO BE UPDATED: PRIOR SYSTEM CONTENT BELOW THIS POINT'''



= General =

This page provides primary information and instructions for running Whonix on the Qubes virtualization platform for the goal of torifying your internet traffic inside of the highly secure VM isolation framework that Qubes provides.

Learn more about Qubes at: https://qubes-os.org

For support or development issues specific to Qubes + Whonix, we have the dedicated Whonix Qubes forum at:

* https://www.whonix.org/forum/Qubes


Qubes + Whonix currently exists as a customized dual HVM (HardwareVM) configuration:

<pre>Whonix-Gateway HVM + Whonix-Workstation HVM</pre>

A simple networking setup for Qubes + Whonix would look like:

<pre>NetVM <- FirewallVM <- Whonix-Gateway <- Whonix-Workstation</pre>

Where, for example, the Whonix-Gateway conceptually replaces TorVM as your Tor ProxyVM, and Whonix-Workstation conceptually replaces your standard AppVMs (AnonVMs).

We hope to provide a native ProxyVM + AppVM support, once the Qubes Debian Template gets ProxyVM capability added.

We could use your help. Please feel free to join in with improving the Qubes + Whonix platform!



= Starting Whonix HVMs =

Unfortunately Qubes doesn't presently seem to allow you to set a custom config file as the default.

This means you have to ALWAYS startup the Whonix HVMs in the dom0 terminal, using the (qvm-start --custom-config=) command.

These sample Whonix startup commands will work if your variable names match those in the Install Guides.

* For Whonix-Gateway:
** <pre>qvm-start --custom-config=/var/lib/qubes/appvms/whonix-gateway/custom.conf whonix-gateway</pre>

* For Whonix-Workstation:
** <pre>qvm-start --custom-config=/var/lib/qubes/appvms/whonix-workstation/custom.conf whonix-workstation</pre>

* Otherwise you can adjust this Whonix startup command to your own custom setup:
** <pre>qvm-start --custom-config=<ABSOLUTE_PATH_TO_CUSTOM_CONFIG_FILE> <WHONIX_HVM_NAME></pre>



= Whonix vs. TorVM =

The Qubes project provides TorVM for routing VM traffic through Tor.

Running Whonix within Qubes provides an alternative to TorVM and similarly routes VM traffic through Tor.

The Whonix-Gateway serves as an alternative replacement to TorVM, while the Whonix-Workstation acts as an alternative replacement to AppVMs (AnonVMs) when using Whonix within Qubes.

There has been prior discussions and information shared in the Whonix & Qubes communities about the comparative differences and pros vs. cons between Whonix & TorVM.

Here are some sources of relevant discussion and information on Whonix vs. TorVM:

* https://www.whonix.org/wiki/Comparison_with_Others

* https://www.whonix.org/wiki/Features

* https://wiki.qubes-os.org/wiki/UserDoc/TorVM

* https://groups.google.com/d/topic/qubes-devel/2vnGqsoM9p0

* https://groups.google.com/d/topic/qubes-devel/GT8LyE-la-o

* https://tor.stackexchange.com/questions/38/what-threat-model-is-qubes-os-torvm-most-appropriate-for


We welcome further discussion and curation on the pros & cons of using Whonix vs. TorVM in Qubes, so that users may better understand which alternative is the right choice for them.

We have opened a dedicated thread for further discussion on Whonix vs. TorVM in our Qubes forum. Feel free to join in here:

* https://www.whonix.org/forum/index.php/topic,479.0.html



= Known Issues =

These are known issues that are currently unresolved. Please feel free to report any additional issues specific to running Whonix on top of Qubes in the [https://www.whonix.org/forum/index.php/board,16.0.html Whonix Qubes Forum]. Please also feel free to help us resolve these known issues in the Qubes + Whonix platform.

* ''' No TransPort Internet Access [BUG]:'''
** Currently the Tor TransPort transparent proxy is not working in Qubes, which means that applications other than Whonix default apps will not have internet access by default. However, Whonix default apps, such as Tor Browser, will have internet access since they come pre-configured to route through SocksPort instead of TransPort.
** https://www.whonix.org/forum/index.php/topic,600.0.html
** https://www.whonix.org/forum/index.php/topic,524.0.html

* ''' No Sound/Audio Output [BUG]:'''
** Currently sound/audio is not working for Whonix in Qubes. This has been confirmed for the Whonix Binary Images install.
** https://www.whonix.org/forum/index.php/topic,601.0.html
** https://www.whonix.org/forum/index.php/topic,590.0.html



= Install Guides =

Additional install guides will be provided as new Qubes + Whonix configurations are developed.

The following install guides are currently compatible with Whonix {{VersionNew}}. If wanting to use a different Whonix version, it may take some modifications.



== Install in Qubes HVM with Whonix Binary Images ==

This approach uses the Whonix qcow2 binary image downloads to import the Whonix-Gateway and Whonix-Workstation into Qubes HVMs.



=== Provide Whonix Raw Images to Qubes dom0 ===

There are several differing methods and security philosophies for completing this section of steps, so if you prefer a different approach of acquiring, extracting, converting, or transferring the Whonix raw-formatted images to dom0, then please feel free to do so.



'''1. Create a Temporary AppVM (whonix-images) for Processing Whonix Images:'''

* In dom0: Qubes VM Manager: Create New VM
** Choose Settings:
*** Name and label: whonix-images
*** Use this template: fedora-20-x64 (default)
*** Type: AppVM
** Press: OK



'''2. Expand Disk Image of whonix-images:'''

* In dom0: Terminal:
** <pre>qvm-grow-private whonix-images 15G</pre>

* In whonix-images: Terminal:
** <pre>sudo resize2fs /dev/xvdb</pre>



'''3. Download and Transfer Whonix qcow2 Images to whonix-images:'''

Depending upon your workflow and security preferences, you can:


* Download Whonix directly within whonix-images:
** For Whonix-Gateway:
*** Whonix-Gateway {{VersionNew}} qcow2 Image: http://mirror.whonix.de/{{VersionNew}}/Whonix-Gateway-{{VersionNew}}.libvirt.xz
*** Whonix-Gateway {{VersionNew}} qcow2 Signature: http://mirror.whonix.de/{{VersionNew}}/Whonix-Gateway-{{VersionNew}}.libvirt.xz.asc
*** Whonix-Gateway {{VersionNew}} qcow2 Signing Key: https://www.whonix.org/wiki/Whonix_Signing_Key
** For Whonix-Workstation:
*** Whonix-Workstation {{VersionNew}} qcow2 Image: http://mirror.whonix.de/{{VersionNew}}/Whonix-Workstation-{{VersionNew}}.libvirt.xz
*** Whonix-Workstation {{VersionNew}} qcow2 Signature: http://mirror.whonix.de/{{VersionNew}}/Whonix-Workstation-{{VersionNew}}.libvirt.xz.asc
*** Whonix-Workstation {{VersionNew}} qcow2 Signing Key: https://www.whonix.org/wiki/Whonix_Signing_Key


* Download Whonix elsewhere and transfer into whonix-images:
** Qubes File Copy Between VMs:
*** https://qubes-os.org/wiki/CopyingFiles
** Qubes USB Storage Mounting:
*** https://qubes-os.org/wiki/StickMounting


Important: Please check file verification signatures of Whonix downloads before using them!

Whonix Verification Instructions: https://www.whonix.org/wiki/Download#Verify_the_Whonix_images



'''4. Extract Whonix qcow2 Images:'''

* For Whonix-Gateway:
** In whonix-images: Terminal:
*** <pre>tar -xvf Whonix-Gateway-*.libvirt.xz</pre>

* For Whonix-Workstation:
** In whonix-images: Terminal:
*** <pre>tar -xvf Whonix-Workstation-*.libvirt.xz</pre>



'''5. Install qemu-img Package:'''

* In whonix-images: Terminal:
** <pre>sudo yum install qemu-img</pre>



'''6. Convert Whonix qcow2 Images to raw Images:'''

* For Whonix-Gateway:
** In whonix-images: Terminal:
*** <pre>qemu-img convert Whonix-Gateway-*.qcow2 -O raw Whonix-Gateway.img</pre>

* For Whonix-Workstation:
** In whonix-images: Terminal:
*** <pre>qemu-img convert Whonix-Workstation-*.qcow2 -O raw Whonix-Workstation.img</pre>



'''7. Transfer raw Images from whonix-images to dom0:'''

This transfer process may take a while. Maybe ~15 minutes per file, depending upon the speed of your system.

First ensure that the raw images (.img) are in the "/home/user" directory of whonix-images.

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>qvm-run --pass-io whonix-images 'tar -cvSf - Whonix-Gateway.img' > ~/Whonix-Gateway.img.tar && tar -xvSf ~/Whonix-Gateway.img.tar</pre>

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>qvm-run --pass-io whonix-images 'tar -cvSf - Whonix-Workstation.img' > ~/Whonix-Workstation.img.tar && tar -xvSf ~/Whonix-Workstation.img.tar</pre>

=== Qubes HVM Create and Custom Configuration ===



'''8. Create Whonix HVMs:'''

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>qvm-create whonix-gateway --hvm --standalone --label=purple --root-move-from=/home/user/Whonix-Gateway.img</pre>

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>qvm-create whonix-workstation --hvm --standalone --label=purple --root-move-from=/home/user/Whonix-Workstation.img</pre>



'''9. Boot & Kill Whonix HVMs to Establish Network Adapter:'''

* For Whonix-Gateway:
** Qubes VM Manager: whonix-gateway: Start VM
** Qubes VM Manager: whonix-gateway: Kill VM

* For Whonix-Workstation:
** Qubes VM Manager: whonix-workstation: Start VM
** Qubes VM Manager: whonix-workstation: Kill VM



'''10. Attach eth1 Network Adapter to Whonix-Gateway:'''

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-gateway</pre>
*** <pre>cp whonix-gateway.conf custom.conf</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.137.2.X,backend=firewallvm' ]</pre>
*** Add a comma (,) after the ending single quote (') of the first virtual network interface, before the closing bracket (]).
*** Copy and paste a duplicate of the first single quoted virtual network interface after the comma (,) and before the closing bracket (]).
*** Change the last "YY:YY:YY" MAC address characters to something random with the same number of total characters.
*** Change the IP address of the second virtual network interface to "10.152.152.10".
*** Your changes should look like this:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.137.2.X,backend=firewallvm', 'mac=XX:XX:XX:YY:YY:YY,script=/etc/xen/scripts/vif-route-qubes,ip=10.152.152.10,backend=firewallvm' ]</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).



'''11. Modify IP of eth0 Network Adapter on Whonix-Workstation:'''

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-workstation</pre>
*** <pre>cp whonix-workstation.conf custom.conf</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.137.2.X,backend=firewallvm' ]</pre>
*** Change the IP address of the second virtual network interface to "10.152.152.11".
*** Your changes should look like this:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.152.152.11,backend=firewallvm' ]</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).



'''12. Set Time to UTC in custom.conf:'''

Important for anonymity!

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-gateway</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>localtime = 1</pre>
*** Change the 1 to 0.
*** Your changes should look like this:
*** <pre>localtime = 0</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-workstation</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>localtime = 1</pre>
*** Change the 1 to 0.
*** Your changes should look like this:
*** <pre>localtime = 0</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).



=== Qubes Firewall Configuration ===



'''13. Deny Unnecessary Network Access:'''

Important for anonymity and security!

* For Whonix-Gateway:
** In dom0: Qubes VM Manager: whonix-gateway: Edit VM firewall rules
*** Choose Settings:
**** Select/Allow: Allow network access
**** Uncheck/Deny: Allow ICMP traffic
**** Uncheck/Deny: Allow DNS queries
**** Uncheck/Deny: Allow connections to Updates Proxy
*** Press: OK

* For Whonix-Workstation:
** In dom0: Qubes VM Manager: whonix-workstation: Edit VM firewall rules
*** Choose Settings:
**** Select/Deny: Deny network access
**** Uncheck/Deny: Allow ICMP traffic
**** Uncheck/Deny: Allow DNS queries
**** Uncheck/Deny: Allow connections to Updates Proxy
*** Press: OK



'''14. Open FirewallVM Between Whonix-Gateway and Whonix-Workstation:'''

* In firewallvm: Terminal:
** <pre>sudo bash</pre>
** <pre>echo "iptables -I FORWARD 2 -s 10.152.152.10 -d 10.152.152.11 -j ACCEPT" >> /rw/config/qubes_firewall_user_script</pre>
** <pre>echo "iptables -I FORWARD 2 -s 10.152.152.11 -d 10.152.152.10 -j ACCEPT" >> /rw/config/qubes_firewall_user_script</pre>
** <pre>chmod +x /rw/config/qubes_firewall_user_script</pre>



=== Whonix First Run ===

Notice that presently in Qubes you must ALWAYS start VMs from the dom0 terminal when using a custom config (qvm-start --custom-config=).

During first boot, Whonix will go through the "Whonix First Run Initializer" and then shut down.

After first boot, you will need to restart the VMs with the following startup commands.



'''15. Start Whonix HVMs:'''

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>qvm-start --custom-config=/var/lib/qubes/appvms/whonix-gateway/custom.conf whonix-gateway</pre>

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>qvm-start --custom-config=/var/lib/qubes/appvms/whonix-workstation/custom.conf whonix-workstation</pre>



=== Whonix Network Configuration ===



'''16. Complete the whonixsetup Connection Wizard:'''

* For Whonix-Gateway:
** In whonix-gateway: whonixsetup:
*** Complete the wizard and enable Tor.

* For Whonix-Workstation:
** In whonix-workstation: whonixsetup:
*** Complete the wizard and enable Tor.



'''17. Configure eth0 Network Adapter on Whonix-Gateway:'''

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>kdesudo kwrite /etc/network/interfaces</pre>
**** Default Password: changeme
*** For eth0: Deactivate DHCP networking by commenting out:
**** <pre>#auto eth0</pre>
**** <pre>#iface eth0 inet dhcp</pre>
**** <pre>#pre-up /usr/bin/whonix_firewall</pre>
*** For eth0: Activate static networking by uncommenting:
**** <pre>auto eth0</pre>
**** <pre>iface eth0 inet static</pre>
**** <pre>address 10.0.2.15</pre>
**** <pre>netmask 255.255.255.0</pre>
**** <pre>gateway 10.0.2.2</pre>
**** <pre>pre-up /usr/bin/whonix_firewall</pre>
*** For eth0: Change static networking to match Qubes credentials:
**** <pre>auto eth0</pre>
**** <pre>iface eth0 inet static</pre>
**** <pre>address 10.137.2.X</pre>
**** <pre>netmask 255.255.255.0</pre>
**** <pre>gateway 10.137.2.1</pre>
**** <pre>pre-up /usr/bin/whonix_firewall</pre>
**** Get the ending IP number (X) found in the Qubes VM Manager for whonix-gateway.
*** Save & Close the network interfaces file.
** In whonix-gateway: Terminal:
*** <pre>sudo service networking restart</pre>
**** Default Password: changeme



'''18. Run Whonix Check:'''

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>whonixcheck</pre>

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>whonixcheck</pre>



=== Update Whonix OS ===

Important for anonymity and security!



'''19. Fetch and Install Whonix OS Updates:'''

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>sudo apt-get update</pre>
*** <pre>sudo apt-get dist-upgrade</pre>
**** Default Password: changeme

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>sudo apt-get update</pre>
*** <pre>sudo apt-get dist-upgrade</pre>
**** Default Password: changeme



=== Final Cleanup (optional) ===



'''20. Remove Temporary AppVM whonix-images:'''

* In dom0: Qubes VM Manager: whonix-images: Remove AppVM



'''All Finished!'''



== Install in Qubes HVM with Whonix Source Code ==

This approach uses the Whonix source code to build the Whonix-Gateway and Whonix-Workstation in Qubes HVMs.



=== Qubes HVM Create and Prepare Debian Install ===



'''1. Provide Debian iso to a Trusted AppVM:'''

The objective here is to download, verify, and provide an iso of the Debian OS to a trusted AppVM in Qubes.

You can make a new standard AppVM or use an existing one for obtaining the Debian OS iso file in.

Follow these instructions for getting Debian:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Get_Debian

* https://www.whonix.org/wiki/Debian



'''2. Create a Temporary HVM (whonix-build) for Preparing the Whonix Build:'''

This temporary HVM will be used as a base template for cloning and building the whonix-gateway and whonix-workstation HVMs.

* In dom0: Qubes VM Manager: Create New VM
** Choose Settings:
*** Name and label: whonix-build
*** Type: HVM
*** Check: Standalone
*** Check: Allow networking: firewallvm (default)
** Press: OK



'''3. Set HVM Memory Size:'''

The default Whonix configuration is based on 768 MB of RAM. You can follow this default size for fingerprinting purposes, or increase/decrease this size based on your computing needs.

* In dom0: Qubes VM Manager: whonix-build: VM Settings: Advanced Tab: Memory/CPU
** Choose Settings:
*** Initial memory: 768 MB
** Press: OK



'''4. Mount Debian iso as an Additional Drive:'''

* In dom0: Qubes VM Manager: whonix-build: VM Settings: Advanced Tab: Additional Drive
** Choose Settings:
*** Check: Additional drive
*** Type: cdrom
*** Backend domain: Select the AppVM where your Debian iso is located
*** Path: Click to browse and select the path where your Debian iso is located
** Press: OK



'''5. Start HVM whonix-build:'''

After starting the whonix-build HVM, you should likely see the "Debian GNU/Linux installer boot menu".

* In dom0: Qubes VM Manager: whonix-build: Start VM



=== Install Debian OS ===



'''6. Install Debian OS in HVM whonix-build:'''

After starting the whonix-build HVM and seeing the "Debian GNU/Linux installer boot menu", you can proceed to installing the Debian OS.

Follow the build instructions for installing Debian:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Install_Debian



'''7. Unmount Debian iso as an Additional Drive:'''

* In dom0: Qubes VM Manager: whonix-build: VM Settings: Advanced Tab: Additional Drive
** Choose Settings:
*** Uncheck: Additional drive
** Press: OK



=== Prepare Whonix Build ===



'''8. Start HVM whonix-build:'''

* In dom0: Qubes VM Manager: whonix-build: Start VM



'''9. Configure eth0 Network Adapter on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Network_Configuration

* In whonix-build: Terminal:
** <pre>su root</pre>
** <pre>nano /etc/network/interfaces</pre>
** For eth0: Activate static networking by changing "dhcp" to "static":
*** <pre>iface eth0 inet static</pre>
** For eth0: Change static networking to match Qubes credentials:
*** <pre>address 10.137.2.X</pre>
*** <pre>netmask 255.255.255.0</pre>
*** <pre>gateway 10.137.2.1</pre>
*** Get the ending IP number (X) found in the Qubes VM Manager for whonix-build.
** Save/WriteOut (Ctrl + o) your changes to "/etc/network/interfaces" and Exit nano (Ctrl + x).
** <pre>service networking restart</pre>
** <pre>ifup eth0</pre>



'''10. Logon and Upgrade Debian on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Logon_and_upgrade_Debian

* In whonix-build: Terminal:
** <pre>su root</pre>
** <pre>echo "deb http://ftp.us.debian.org/debian stable main" >> /etc/apt/sources.list</pre>
** <pre>apt-get update && apt-get dist-upgrade -y</pre>



'''11. Preparation on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Preparation

* In whonix-build: Terminal:
** <pre>su root</pre>
** <pre>apt-get install sudo -y</pre>
** <pre>addgroup user sudo</pre>

* In dom0: Qubes VM Manager: whonix-build: Shutdown VM
* In dom0: Qubes VM Manager: whonix-build: Start VM



'''12. Get the Source Code on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Get_the_Source_Code

* In whonix-build: Terminal:
** <pre>sudo apt-get install git curl -y</pre>
** <pre>cd /home/user</pre>
** <pre>git clone https://github.com/Whonix/Whonix</pre>



'''13. Get the Signing Key on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Get_the_Signing_Key

* In whonix-build: Terminal:
** <pre>curl --tlsv1 --proto =https https://www.whonix.org/patrick.asc | gpg --import</pre>
* See the link above for instructions to properly verify the signing key.



'''14. OpenPGP Verify the Source Code on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#OpenPGP_Verify_the_Source_Code

* In whonix-build: Terminal:
** <pre>cd /home/user</pre>
** <pre<noinclude></noinclude>>git tag -v {{VersionNew}}</pre>
* See the link above for instructions to properly verify the source code.



'''15. Choose Version on whonix-build:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Choose_Version

* In whonix-build: Terminal:
** <pre>cd /home/user/Whonix</pre>
** <pre<noinclude></noinclude>>git checkout {{VersionNew}}</pre>



'''16. Shutdown HVM whonix-build:'''

* In dom0: Qubes VM Manager: whonix-build: Shutdown VM



'''17. Clone HVM whonix-build:'''

* For Whonix-Gateway:
** In dom0: Qubes VM Manager: whonix-build: Clone VM
*** Enter name for VM whonix-build clone: whonix-gateway

* For Whonix-Workstation:
** In dom0: Qubes VM Manager: whonix-build: Clone VM
*** Enter name for VM whonix-build clone: whonix-workstation



=== Complete Whonix Build ===



'''18. Start Build HVMs:'''

* For Whonix-Gateway:
** In dom0: Qubes VM Manager: whonix-gateway: Start VM

* For Whonix-Workstation:
* In dom0: Qubes VM Manager: whonix-workstation: Start VM



'''19. Reconfigure eth0 Network Adapter:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Network_Configuration

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>sudo nano /etc/network/interfaces</pre>
*** For eth0: Change static networking address to match Qubes credentials:
**** <pre>address 10.137.2.X</pre>
**** Get the ending IP number (X) found in the Qubes VM Manager for whonix-gateway.
*** Save/WriteOut (Ctrl + o) your changes to "/etc/network/interfaces" and Exit nano (Ctrl + x).
*** <pre>sudo service networking restart</pre>
*** <pre>sudo ifup eth0</pre>

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>sudo nano /etc/network/interfaces</pre>
*** For eth0: Change static networking address to match Qubes credentials:
**** <pre>address 10.137.2.X</pre>
**** Get the ending IP number (X) found in the Qubes VM Manager for whonix-workstation.
*** Save/WriteOut (Ctrl + o) your changes to "/etc/network/interfaces" and Exit nano (Ctrl + x).
*** <pre>sudo service networking restart</pre>
*** <pre>sudo ifup eth0</pre>



'''20. Run Build Script:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Run_Build_Script

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>cd /home/user/Whonix</pre>
*** <pre>sudo ./whonix_build --tor-gateway --install-to-root --build >> ~/log-phyiso 2>&1</pre>
** In a second terminal window, to monitor the build process:
*** <pre>tail -f ~/log-phyiso</pre>
** Upon successful build completion, the end of the build log should say:
*** <pre>+ true INFO: End of: ./whonix_build --tor-gateway --install-to-root --build No error detected.</pre>

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>cd /home/user/Whonix</pre>
*** <pre>sudo ./whonix_build --tor-workstation --install-to-root --build >> ~/log-phyiso 2>&1</pre>
** In a second terminal window, to monitor the build process:
*** <pre>tail -f ~/log-phyiso</pre>
** Upon successful build completion, the end of the build log should say:
*** <pre>+ true INFO: End of: ./whonix_build --tor-workstation --install-to-root --build No error detected.</pre>



'''21. Shutdown Build HVMs:'''

* For Whonix-Gateway:
** In dom0: Qubes VM Manager: whonix-gateway: Shutdown VM

* For Whonix-Workstation:
** In dom0: Qubes VM Manager: whonix-workstation: Shutdown VM

=== Qubes Firewall Configuration ===



'''22. Deny Unnecessary Network Access:'''

Important for anonymity and security!

* For Whonix-Gateway:
** In dom0: Qubes VM Manager: whonix-gateway: Edit VM firewall rules
*** Choose Settings:
**** Select/Allow: Allow network access
**** Uncheck/Deny: Allow ICMP traffic
**** Uncheck/Deny: Allow DNS queries
**** Uncheck/Deny: Allow connections to Updates Proxy
*** Press: OK

* For Whonix-Workstation:
** In dom0: Qubes VM Manager: whonix-workstation: Edit VM firewall rules
*** Choose Settings:
**** Select/Deny: Deny network access
**** Uncheck/Deny: Allow ICMP traffic
**** Uncheck/Deny: Allow DNS queries
**** Uncheck/Deny: Allow connections to Updates Proxy
*** Press: OK



'''23. Open FirewallVM Between Whonix-Gateway and Whonix-Workstation:'''

* In firewallvm: Terminal:
** <pre>sudo bash</pre>
** <pre>echo "iptables -I FORWARD 2 -s 10.152.152.10 -d 10.152.152.11 -j ACCEPT" >> /rw/config/qubes_firewall_user_script</pre>
** <pre>echo "iptables -I FORWARD 2 -s 10.152.152.11 -d 10.152.152.10 -j ACCEPT" >> /rw/config/qubes_firewall_user_script</pre>
** <pre>chmod +x /rw/config/qubes_firewall_user_script</pre>



=== Qubes Custom Configuration ===



'''24. Attach eth1 Network Adapter to Whonix-Gateway:'''

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-gateway</pre>
*** <pre>cp whonix-gateway.conf custom.conf</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.137.2.X,backend=firewallvm' ]</pre>
*** Add a comma (,) after the ending single quote (') of the first virtual network interface, before the closing bracket (]).
*** Copy and paste a duplicate of the first single quoted virtual network interface after the comma (,) and before the closing bracket (]).
*** Change the last "YY:YY:YY" MAC address characters to something random with the same number of total characters.
*** Change the IP address of the second virtual network interface to "10.152.152.10".
*** Your changes should look like this:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.137.2.X,backend=firewallvm', 'mac=XX:XX:XX:YY:YY:YY,script=/etc/xen/scripts/vif-route-qubes,ip=10.152.152.10,backend=firewallvm' ]</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).



'''25. Modify IP of eth0 Network Adapter on Whonix-Workstation:'''

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-workstation</pre>
*** <pre>cp whonix-workstation.conf custom.conf</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.137.2.X,backend=firewallvm' ]</pre>
*** Change the IP address of the second virtual network interface to "10.152.152.11".
*** Your changes should look like this:
*** <pre>vif = [ 'mac=XX:XX:XX:XX:XX:XX,script=/etc/xen/scripts/vif-route-qubes,ip=10.152.152.11,backend=firewallvm' ]</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).



'''26. Set Time to UTC in custom.conf:'''

Important for anonymity!

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-gateway</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>localtime = 1</pre>
*** Change the 1 to 0.
*** Your changes should look like this:
*** <pre>localtime = 0</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>cd /var/lib/qubes/appvms/whonix-workstation</pre>
*** <pre>nano custom.conf</pre>
** In dom0: Terminal: nano: custom.conf: For the following line:
*** <pre>localtime = 1</pre>
*** Change the 1 to 0.
*** Your changes should look like this:
*** <pre>localtime = 0</pre>
*** Save/WriteOut (Ctrl + o) your changes to custom.conf and Exit nano (Ctrl + x).



=== Whonix First Run ===

Notice that presently in Qubes you must ALWAYS start VMs from the dom0 terminal when using a custom config (qvm-start --custom-config=).

During first boot, Whonix will go through the "Whonix First Run Initializer" and then shut down.

After first boot, you will need to restart the VMs with the following startup commands.



'''27. Start Whonix HVMs:'''

* For Whonix-Gateway:
** In dom0: Terminal:
*** <pre>qvm-start --custom-config=/var/lib/qubes/appvms/whonix-gateway/custom.conf whonix-gateway</pre>

* For Whonix-Workstation:
** In dom0: Terminal:
*** <pre>qvm-start --custom-config=/var/lib/qubes/appvms/whonix-workstation/custom.conf whonix-workstation</pre>



=== Whonix Network Configuration ===



'''28. Complete the whonixsetup Connection Wizard:'''

* For Whonix-Gateway:
** In whonix-gateway: whonixsetup:
*** Complete the wizard and enable Tor.

* For Whonix-Workstation:
** In whonix-workstation: whonixsetup:
*** Complete the wizard and enable Tor.



'''29. Configure eth0 Network Adapter on Whonix-Gateway:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Network_Configuration

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>kdesudo kwrite /etc/network/interfaces</pre>
*** For eth0: Deactivate DHCP networking by commenting out:
**** <pre>#auto eth0</pre>
**** <pre>#iface eth0 inet dhcp</pre>
**** <pre>#pre-up /usr/bin/whonix_firewall</pre>
*** For eth0: Activate static networking by uncommenting:
**** <pre>auto eth0</pre>
**** <pre>iface eth0 inet static</pre>
**** <pre>address 10.0.2.15</pre>
**** <pre>netmask 255.255.255.0</pre>
**** <pre>gateway 10.0.2.2</pre>
**** <pre>pre-up /usr/bin/whonix_firewall</pre>
*** For eth0: Change static networking to match Qubes credentials:
**** <pre>auto eth0</pre>
**** <pre>iface eth0 inet static</pre>
**** <pre>address 10.137.2.X</pre>
**** <pre>netmask 255.255.255.0</pre>
**** <pre>gateway 10.137.2.1</pre>
**** <pre>pre-up /usr/bin/whonix_firewall</pre>
**** Get the ending IP number (X) found in the Qubes VM Manager for whonix-gateway.
*** Save & Close the network interfaces file.
** In whonix-gateway: Terminal:
*** <pre>sudo service networking restart</pre>



'''30. Run Whonix Check:'''

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>whonixcheck</pre>

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>whonixcheck</pre>



=== Update Whonix OS ===

Important for anonymity and security!



'''31. Fetch and Install Whonix OS Updates:'''

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>sudo apt-get update</pre>
*** <pre>sudo apt-get dist-upgrade</pre>

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>sudo apt-get update</pre>
*** <pre>sudo apt-get dist-upgrade</pre>



=== Final Cleanup (optional) ===



'''32. Remove Temporary Files:'''

Based on the build instructions:

* https://www.whonix.org/wiki/Dev/Build_Documentation/Physical_Isolation/9#Cleanup

* For Whonix-Gateway:
** In whonix-gateway: Terminal:
*** <pre>cd /home/user/Whonix</pre>
*** <pre>./help-steps/cleanup-files</pre>

* For Whonix-Workstation:
** In whonix-workstation: Terminal:
*** <pre>cd /home/user/Whonix</pre>
*** <pre>./help-steps/cleanup-files</pre>



'''33. Remove Temporary HVM whonix-build:'''

* In dom0: Qubes VM Manager: whonix-build: Remove AppVM



'''All Finished!'''



= Additional Info =
See:
* [https://www.whonix.org/forum/Qubes Whonix Qubes Forum]
* https://www.whonix.org/wiki/Dev/Qubes
* https://www.whonix.org/wiki/Comparison_with_Others
* https://groups.google.com/d/topic/qubes-devel/2vnGqsoM9p0
* https://groups.google.com/d/topic/qubes-devel/GT8LyE-la-o

= Footnotes =
<references/>


{{Footer}}

[[Category:Documentation]]
