<translate>

{{DISPLAYTITLE:Titel}}
{{Header}}
{{#seo:
|description=How is Data Mining on the Web technically done? Overview of Data Collection Techniques.
|image=https://www.whonix.org/w/images/5/5a/Cookies.png
}}
= Data Collection Techniques =

Some of the techniques employed by data miners on the Internet are briefly introduced below.

== Cookies ==

=== Introduction ===

Cookies have been in existence since 1994, when they were conceived by a programmer working for Netscape Communications as a reliable method for e-commerce applications. According to Wikipedia: <ref>https://en.wikipedia.org/wiki/HTTP_cookie</ref>

<blockquote>An HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.</blockquote>

=== Cookie Classification ===

Whonix users are probably most familiar with [https://en.wikipedia.org/wiki/HTTP_cookie#Third-party_cookie third-party cookies] since they can be used to track browsing history via web page content sourced from external websites, such as banner advertisements. However, cookies have a range of both useful and potentially harmful applications: <ref>https://en.wikipedia.org/wiki/HTTP_cookie</ref>

* <u>Authentication cookies</u>: Used by web servers to know whether a user is logged in, and the account being used.
* <u>Session cookies</u>: Exist temporarily in memory while a website is navigated and are normally deleted when the browser is closed.
* <u>Persistent cookies</u>: Expire after a specific period of time, or on a set date. They transmit information to servers every time a user browses websites that are associated with the cookie. Persistent cookies can track a user's browsing habits over an extended period, possibly years. <ref>They also have legitimate functions such as keeping users logged into specific accounts.</ref>
* <u>Secure cookies</u>: Transmitted over encrypted (HTTPS) connections, making them less vulnerable to cookie theft.
* <u>Third-party cookies</u>: Belong to domains that are different from the URL shown in the web browser address bar. Tracking is enabled via the following process:
** Website A contains an advertisement served by {{Code|eviladvertiser.org}}
** A cookie belonging to {{Code|eviladvertiser.org}} is downloaded and stored on the user's computer.
** Website B is visited and also contains advertising content from {{Code|eviladvertiser.org}}, setting another cookie belonging to that domain.
** Both cookies are eventually sent to {{Code|eviladvertiser.org}}, and an extensive profile of browsing history is gradually acquired over time.
* <u>Supercookies</u>: Have an origin of a [https://en.wikipedia.org/wiki/Top-level_domain top-level domain] like {{Code|.org}} or a public suffix such as {{Code|.com.de}}. If not blocked by the browser, adversaries in control of malicious websites can set supercookies and then impersonate or disrupt user requests to another website sharing the same top-level domain or public suffix.
* <u>Entity tag (ETag) cookies</u>: HTTP supports simple cache control mechanisms, including ETags which store either a version number or a user identifier (ETag cookie). The purpose is to save bandwidth and have browsers use caches for web content when it has not changed, instead of reloading the complete web server content again. <ref>https://en.wikipedia.org/wiki/HTTP_ETag</ref> Unfortunately this provides a tracking mechanism which can be persistently stored, and has been used by various websites including {{Code|Hulu.com}}. ETag cookies can be, and often are respawned. <ref>http://cyberlaw.stanford.edu/blog/2011/08/tracking-trackers-microsoft-advertising</ref>
* <u>Zombie cookies</u>: Automatically recreated after being deleted. Cookie content is stored in multiple locations such as [https://en.wikipedia.org/wiki/Web_storage HTML5 web storage], [https://en.wikipedia.org/wiki/Web_storage Flash Local shared object], client-side and server-side locations. When the cookie is deleted on a user's computer, this is detected and restored from one of the other cookie storage locations.

=== Cookie Threats ===

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Over 95 percent of websites use cookies <ref>https://www.digitaltrends.com/computing/history-of-cookies-and-effect-on-privacy/</ref> and embedded, external advertisement and analytics services are increasingly common.
}}


It is evident that cookies are useful for website personalization, logins, monitoring purchases and other functions, but they also present a dire tracking threat. The average website places 34 cookies on a device on the first visit, and 70 percent of these are third-party cookies. Expiry dates are often set to the year "9999", indicating there is no intention to ever stop recording user behavior. <ref>https://www.digitaltrends.com/computing/history-of-cookies-and-effect-on-privacy/</ref> A 2011 [http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1898390 study by the University of California, Berkeley] found that the top 100 websites at that time stored a total of 5,675 cookies. Of these, 4,914 cookies were set by third party domains and not the first-party domain being purposefully visited by the user. When browsing these 100 websites, data was transmitted to 600 servers.

Cookie security is dependent on whether cookie data is encrypted, since adversaries may otherwise use this information to gain access to user data or to access websites with the user's credentials. Examples of this attack include [https://en.wikipedia.org/wiki/Cross-site_scripting cross-site scripting] and [https://en.wikipedia.org/wiki/Cross-site_request_forgery cross-site request forgery].

As well as gathering the IP address and/or the HTTP referrer field of the computer requesting the web page, cookies can also store the requested URL and the date/time of the request. Web hosts are therefore capable of recording a large proportion of browsing behavior over many years, and correlating the accumulated profile data with individuals. The typical Internet user has collected hundreds of cookies from various websites on their PC without their knowledge. For instance, the following figure exhibits a small number of the cookies that are stored when a request is made to {{Code|www.nytimes.com}}.

'''Figure:''' ''Cookies set by the New York Times''

[[Image:cookies_nytimes.png|frame|none]]


Most modern browsers integrate an optional function to block cookies, but the option has to be first set by the user.  [[Tor Browser]], which comes bundled with Whonix, has activated cookie blocking by default. Firefox has also adopted Tor Browser's [https://www.bleepingcomputer.com/news/software/another-tor-browser-feature-makes-it-into-firefox-first-party-isolation/ first party isolation] feature since version 55, meaning cookies are separated on a per-domain basis. Advertisement trackers are unable to see all the cookies stored on a user's computer (only the cookie for the currently viewed domain), meaning they cannot aggregate persistent cookie data for profiling. In the future, it is expected that more functions will become available to administrate preferences and acquired cookie collections.

=== Evercookies ===

More than 80% of users disapprove of tracking while surfing the web. Many surfers use browser settings which prevent long-term tracking. Therefore, ad and tracking networks are moving on to use more sophisticated methods to distinguish each user.

* Flash-Cookies (LSOs) have been deployed for the last several years to recover deleted cookies with the same identification properties. Clearspring Technologies, Inc. had been using this technique successfully (until it got sued in 2010) and boasts of its precise data collection of 200 million Internet users.
* In a [http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1898390 study of the University of California, Berkeley] the methods of Space Pencil, Inc., aka KISSmetrics, were exposed which, in addition to cookies and flash cookies, used cache cookies via ETags, DOMStorage and IE-userData in order to distinguish each user. KISSmetrics got sued as well and is going to dispense with using Etags. It is also going to respect the [http://donottrack.us/ "Do Not Track"] HTTP header.
* The tracking service [http://help.yahoo.com/l/us/yahoo/ywa/documentation/install_guide/ig_get_started.html Yahoo! Web Analytics] is making claims about being able to set cookies on 99.9% of the users. This [http://smorgasbork.com/component/content/article/84-a-study-of-internet-users-cookie-and-javascript-settings indicates] that [http://www.truststc.org/reu/10/Reports/GomezG,YalajuJ_paper.pdf cookie-generating JavaScript] and/or Flash cookies are deployed.
* Samy Kamkar shows further possible methods to mark Internet users individually in his article, [http://samy.pl/evercookie/ "evercookie - never forget"].

[[Tor Browser]] (which comes with Whonix) resists evercookies.

== Active Web Contents ==

Web content accessible by browser plugins such as Flash, Java, ActiveX and Silverlight renders the Web more dynamic and colorful but also more dangerous, for they allow websites to execute code on your PC. If executed, these plugins are able to read many details about your computer and network configuration and send it to a remote server. By certain techniques, they can also read and edit files on your machine and in an extreme case even gain complete control over it.

Especially beware of signed Java applets: by accepting its signature, and by extension the applet, the visited webserver automatically receives all user rights on your machine. In particular, it may then read your [[#IP address]], your [[#MAC Address]] and even hard disk contents. It does not help to only surf websites you deem trustworthy either. This concept is outdated since nowadays even numerous large and authentic websites are being hacked and filled with malicious code. Only blocking, deactivating, and removing these plugins provide real security.

In Whonix, learning the IP address wouldn't give an adversary any meaningful results. It is either a local IP address shared among all Whonix users or the IP of a Tor exit relay, which is safe as well. The [[#MAC Address]] is a virtual one which is shared among all Whonix users as well, and is therefore meaningless. Active content, although it couldn't reveal your real [[#IP address]], is deactivated in Tor Browser by default. See [[Browser Plugins]] for a detailed anonymity, security, and privacy discussion of browser plugins in Whonix.

== JavaScript ==

The browser is a bit better protected against attacks on your privacy using ''JavaScript'' ("scripts", "active scripting") than against those using the aforementioned plugins. but also it is not completely safe, though. Do not confuse JavaScript with ''Java'' or the ''active Java plugin'', respectively, which is a completely different thing despite the similar name (see above).

It is possible to compromise the browser or operating system using software exploits or a maliciously-crafted website. An attacker can, for example, inject malicious JavaScript code by [http://en.wikipedia.org/wiki/Cross-site_scripting Cross Site Scripting] and thus try phishing for login creditials, bank accounts or other sensitive data.

Using JavaScript, it is possible for web masters to access lots of information about your browser, your desktop settings, and your hardware. All this information may be accumulated into an individual fingerprint of a particular user. A user may be recognized by this fingerprint. The anonymity test [http://ip-check.info/?lang=en ip-check.info] shows '''only some examples''' of values which may be gathered (JavaScript needs to be enabled). It demonstrates the labeling of users by JavaScript, too (same effect as cookies).

[https://anonymous-proxy-servers.net/forum/viewtopic.php?f=10&t=7319 ip-check.info returns some false values and confuses TBB users] ([http://www.webcitation.org/6cJ0l5mvC w])

<s>Therefore, we recommend you only activate JavaScript if needed and to block it by default.</s> <font size=-3>However, there are fingerprinting concerns about disabling JavaScript. See [https://lists.torproject.org/pipermail/tor-talk/2012-May/024224.html Tor Browser disabling Javascript anonymity set reduction]</font>

=== Session Replay Scripts ===

Enabling Javascript does more than reveal additional information about a user's system and increase the probability of a successful browser exploit. It can also lead to a complete, literal recording of the entire browsing session if the user is unlucky enough to browse one of nearly [https://webtransparency.cs.princeton.edu/no_boundaries/session_replay_sites.html 500 sites] in the Alexa top 50,000: <ref>https://freedom-to-tinker.com/2017/11/15/no-boundaries-exfiltration-of-personal-data-by-session-replay-scripts/</ref> <ref>This includes the usual privacy offenders such as microsoft.com, skype.com and adobe.com, along with various sites providing banking, media, torrenting, educational, telecommunications, forums, shopping, and anti-virus services.</ref>

<blockquote>You may know that most websites have third-party analytics scripts that record which pages you visit and the searches you make. But lately, more and more sites use “session replay” scripts. These scripts record your keystrokes, mouse movements, and scrolling behavior, along with the entire contents of the pages you visit, and send them to third-party servers. Unlike typical analytics services that provide aggregate statistics, these scripts are intended for the recording and playback of individual browsing sessions, as if someone is looking over your shoulder.</blockquote>

The law as it stands allows corporate entities to embed Javascript functions on sites in order to record highly personal information. This includes what is typed, exact movements of the mouse, and even "co-browsing", whereby an unseen intruder can watch what it is done in real time, without any form of notification. There are few limits to the data harvested;  name, email, phone number, address, social security numbers and date of birth are all considered fair game by companies like FullStory, Hotjar, and Smartlook. Many offer the option to [https://web.archive.org/web/20171114004942/https://www.smartlook.com/docs/identify-visitors explicitly] [https://web.archive.org/web/20170623160320/http://help.fullstory.com/develop-js/identify link] recordings to real identities.

Although full or part redactions are attempted on passwords, credit card numbers, CVC numbers, and credit card expiry dates, sensitive information was found to leak in many instances, such as: <ref>https://freedom-to-tinker.com/2017/11/15/no-boundaries-exfiltration-of-personal-data-by-session-replay-scripts/</ref>

* Passwords entered into registration forms.
* Leaking of credit card details on payment pages, even in real time.
* Leaking of specific medical conditions and prescriptions.


The same tracking companies often use insecure HTTP pages to deliver the recording playbacks or publisher page contents,  providing an enticing man-in-the-middle attack opportunity for advanced adversaries. <ref>Reinforcing the perception that the private sector really is a comfortable and principal ally in the surveillance-industrial complex.</ref> Fortunately, disabling Javascript is sufficient to prevent this activity completely, and ad-blocking lists are also useful in preventing data exfiltration. <ref>For instance, the EasyList and EasyPrivacy blocking lists that are available in popular extensions. However, they did not block all the major companies at the time of writing.</ref> Users should not solely rely on ad-blockers for general tracking protection, as [https://ericmathison.com/blog/bypass-ad-blockers-and-track-your-visitors-with-piwik/ tools have already been developed] which successfully defeat the most popular extensions, including Adblock Plus, Adblocker Ultimate, Ghostery and uBlock Origin.

=== Conclusion ===

It is unwise to browse the Internet without a well secured browser, otherwise there is a danger of a browser exploit leading to an infected system. Personally configuring a browser to be secure is an enormous effort requiring expertise and significant trial and error. The safer path is to use [[Tor Browser]], preferably on a Whonix platform, since it is already hardened against data leakage. As noted in the [[Tor Browser]] chapter:

<blockquote>Tor Browser is a fork of the Mozilla Firefox web browser. It is developed by The Tor Project and optimized and designed for Tor, anonymity and security.<br />
... <br />
<br />
Features like proxy obedience, state separation, network isolation, anonymity set preservation and a host of others are simply unsupported by other browsers.<br />
<br />
In stark contrast to regular browsers, Tor Browser is optimized for anonymity and has a plethora of privacy-enhancing patches and add-ons. With Tor Browser, the user "blends in" and shares the Fingerprint of nearly three million other users, which is advantageous for privacy.</blockquote>


Tor Browser blocks most dangerous technologies by default, but most popular websites like Youtube will still resolve correctly. For media portals which rely on Flash or alternative plugins, the user can download the relevant files with special software and then view it with an open source media player like [[Software#Media_Player|VLC]]. Websites should be avoided if they insist on the use of active plugins, see [[Browser Plugins]].

== Fingerprinting of Browser (HTTP) Header ==

With every request for a webpage, browsers send information within the framework of the HTTP protocol that can be analyzed by the visited site: language, browser name and version, operating system and version, supported character sets, files, codecs and the last visited webpage. Sending these headers is usually not necessary for rendering websites, but it can be exploited for reidentifying, profiling, and analyzing websurfers. The EFF's [http://panopticlick.eff.org Panopticlick] project demonstrated browser fingerprinting. Most surfers are traceable by a unique browser fingerprint.

Of late, different filter applications and services have been developed that allow hiding or changing problematic browser headers (e.g. Privoxy). Unfortunately, these applications cannot filter encrypted connections: once you load a presumably "secure" website (HTTPS) all filtering fails. Plus, these programs allow every user to define the header data himself. But setting an individual browser type in itself is what renders you perfectly trackable. [TorBrowser] always sends the same profile for encrypted connections too. This guarantees that websites may at most realize that it is a Tor Browser user visiting; it will not be able to tell who the user is or what the user is visiting.

<font size="-3"> [https://blog.torproject.org/blog/effs-panopticlick-and-torbutton Tor Blog: EFF's Panopticlick and Torbutton] </font>

Fingerprinting defense is not perfect yet in any browser. There are still open bugs. <font size="-3">(See [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_information&status=needs_review&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-linkability tbb-linkability] and [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_review&status=needs_revision&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-fingerprinting tbb-fingerprinting].)</font>

== Browser History and Cache ==

A [http://cseweb.ucsd.edu/users/lerner/papers/ccs10-jsc.pdf publication from the University of California] provides an analysis of the top 50,000 websites. 1% of these websites collect information about web surfers via history sniffing. Using malicious JavaScript code and CSS hacks, information about previously visited websites were collected. Webmasters who are not familiar with sniffing technologies can use services like Tealium or Beencounter for real-time history sniffing.

Collected information is not only used for advertisements. It can be used for de-anonymization of surfers too. A [http://www.iseclab.org/papers/sonda-TR.pdf publication from Isec] shows one possible way. Using the browser history the visited groups of the social network site Xing were collected. Because there are generally no two people who are members of the exact same set of groups in a social network, it was possible to get the real names and e-mail addresses of the users.

By certain trickery, websites can tell which websites are saved in your browser history. For this, the visited website embeds special formatting commands (CSS Stylesheets) that contain external links "of interest" on the pages you visit. If you have visited one of the external websites before, your browser will react by executing a command defined in the format, e.g. download a small picture from the website. The website can thereby largely guess the contents of your browser history.

From the contents of your browser cache one can conclude already cached, thus previously visited, websites. Together with every website an ETag is sent by the server and stored in the browser cache. If the website was called again, the Etag is sent first to ask for changes. This tag may contain a unique user ID. [http://www.kissmetrics.com/ KISSmetrics] was using ETags in this way to identify visitors of some TOP100 websites.

Additionally, the time required for loading a website changes when part of it is already in the browser cache. By subtle placement of the images on the website, the server can analyze the cache one by one.

At the moment, there is no reliable protection against the analysis of browser histories apart from deactivating this feature, which has been made the default in Tor Browser.

Unlike deactivating your browser history, deactivating your cache would have tremendous effect on your surfing speed, which is why we don't recommend it. In Tor Browser a protective mechanism has been integrated instead which bypasses the cache for third party content. Also, the cache is deleted automatically when you close the browser. A website can thus only gain information about itself, not about other websites.

== Webbugs and Banner Ads ==

Very likely, you will find one or more [[#cookies]] in your browser from data miners such as [http://www.doubleclick.com/ doubleclick.com], [http://www.advertisement.com/ advertisement.com] or [http://www.google.com Google], although you may have never even visited their websites. This is due to the fact that these enterprises use, on other web sites, a simple trick to nevertheless plant cookies in your browser and watch your browsing: ''Webbugs''.

"Webbugs" are usually pictures of 1 pixel by 1 pixel which are therefore invisible to the viewer. However, they can also be coded into banner ads embedded in a website. The website contains a picture (webbug) that is loaded from another server running a statistics service (such as Doubleclick or Google Analytics). Thereby the statistics service may set or edit a cookie in your browser unnoticeably. The browser will then send this cookie back to the statistics service with every new request for a site where any webbug of this service is embedded. If the service is used on many different websites, it can now track large parts of your browsing session. If the owner of the statistics service moreover collaborates with the owner of your preferred search engine, he gets an almost complete picture of your Internet activities.

The privacy functions of most current browsers of simply rejecting cookies and/or deleting them upon browser shutdown do not achieve optimal protection from web bugs.

<s>To prevent session tracking, all cookies should be blocked by default if possible and only allowed in if needed for the duration of the session. Tor Browser is therefore preconfigured to deny all cookies but allow single websites at the expense of two mouse clicks. We recommend allowing cookies only on a temporary basis, so that they will be automatically blocked again after the session.</s>

Another nasty feature of webbugs is, that they send, besides cookies, also your [[#IP address]] to the statistics service upon request. Even with a very good browser configuration, including switching off cookies and using webbug filters, you are never able to reliably prevent this. The only effective methods of protection against this are anonymization services like Tor.

== TCP Timestamps ==

The Transmission Control Protocol (TCP) is a session-layer protocol for transferring data between computers. It is necessary for using Internet protocols like http (WWW), smtp (E-Mail) and ftp. When your computer sends a request for a web site, for example, this data is sent within many small TCP packets. Besides that request data, a TCP packet also contains some optional information fields in the header (metadata). One of those optional fields is the TCP timestamp. The value of this timestamp is proportional to the current time of your computer and is incremented according to your computer's internal clock.

The timestamp may be used by the client and/or server machine for performance metrics and optimization. However, an Internet server may recognize and track your computer by observing those timestamps: By measuring the clock skew of the timestamps, it may calculate an [http://www.cs.washington.edu/homes/yoshi/papers/PDF/ individual clock skew profile] for your computer. Moreover, it may estimate the time when your machine was last booted. These tricks work even if you have otherwise perfectly anonymised your Internet connections.

If you are using Whonix, however, you are protected against being observed this way. The clock in Whonix-Workstation does not match your clock on the host and the clock in Whonix-Workstation is set securely by [[Dev/TimeSync|sdwdate]] over https, which will result in slightly different results compared to using the more accurate NTP.

If you are using Tor, you are also being protected against being profiled in another way: The Tor relays automatically replace your potentially insecure TCP packets with their own.

<font size="-3"> [https://trac.torproject.org/projects/tor/ticket/8169 source 1: Tor trac #8169 replace TCP timestamp] [https://trac.torproject.org/projects/tor/wiki/doc/TorFAQ#DoesTorresistremotephysicaldevicefingerprinting source 2: Tor wiki FAQ] </font>

== IP Address ==

The IP address is given to you by your provider on dialing into the Internet. The provider usually saves it for months or even years together with your customer data and your online time. It is your distinct identifier on the Internet which is sent along whenever you make a direct connection to any Internet service. The IP address tells the server where to send his response. As long as your IP does not change, it is easy to monitor when and what website you have contacted. The IP also reveals your provider, your location (many times) and sometimes (in case of a company or computer center) even what terminal you are on. In many cases, an IP address relates directly to one person.

All that your IP-address is revealing:

* Your current whereabouts

The country and the city/region where you are. With the help of databases [http://www.netop.org/services/ip-geolocation free of charge] or [http://www.maxmind.com/app/ip-location with costs] even districts and office buildings can be identified. This is called geolocation.

* Your Internet-provider

Personal data can be retrieved using your provider.

* Your access technology

With the help of databases one can find out whether you are using, for instance, DSL, a modem or a mobile device to surf the Web.

* Your company / your authority

In the case where you are surfing from within the network of a company or an authority, its name can be found out.

Some of the information that is given away by your IP or browser can be reviewed on [http://ip-check.info/?lang=en ip-check.info].

While the traces mentioned so far can be blurred without any special services needed, the same cannot be said about your IP address. That is why Tor has been developed: In order to blur any connection between your IP and the websites you visit. Whonix connects to the service Tor network. <font size="-3">[https://www.torproject.org/about/overview.html.en How Tor works]</font>

== MAC Address ==

The MAC address (MAC=Media-Access-Control, sometimes also called ''Ethernet-ID'', ''Airport-ID'' or ''physical address'') is the hardware address of each individual network device. Each computer may have several of such physical or virtual network devices (bound to a cable ''(LAN)'', wireless ''(WLAN)'', mobile ''(GPRS, UMTS)'', virtual ''(VPS)'', ...). The MAC address serves as a unique identifier for the respective device in a local area network. On the Internet, it is neither used nor transmitted. Also, your access provider may only see it if your computer is not connected to the Internet over a router, but directly, for example by a modem. You may moreover [http://translate.google.com/translate?hl=en&sl=de&tl=en&u=http://de.wikipedia.org/wiki/MAC-Adresse change the MAC address yourself].

There is an extra chapter about the [[Computer Security Education#MAC Address|MAC address later in documentation in the Computer Security Education]].

== HTML5 Canvas Image Data ==

Websites routinely request browser configuration settings in order to help select the best page format for the visitor. One of those variables is HTML5 canvas image data, because it relates to graphical rendering. Canvas is a drawable region in HTML code with height and width attributes, and Javascript code can access this area though a large set of drawing functions related to animation, games, images and so on.<ref>https://en.wikipedia.org/wiki/Canvas_element</ref> 

When combined with other exposed browser settings, this can be enough to uniquely identify an individual, even without access to the specific IP address. <ref>https://tor.stackexchange.com/questions/4029/html-5-canvas-imagedata-extraction-what-does-it-actually-mean</ref>

The Tor Project provides a good explanation of this fingerprinting method: <ref>https://www.torproject.org/projects/torbrowser/design/</ref>

<blockquote>After plugins and plugin-provided information, we believe that the [https://developer.mozilla.org/en-US/docs/HTML/Canvas HTML5 Canvas] is the single largest fingerprinting threat browsers face today. [https://cseweb.ucsd.edu/~hovav/dist/canvas.pdf Studies] [https://securehomes.esat.kuleuven.be/~gacar/persistent/the_web_never_forgets.pdf show] that the Canvas can provide an easy-access fingerprinting target: The adversary simply renders WebGL, font, and named color data to a Canvas element, extracts the image buffer, and computes a hash of that image data. Subtle differences in the video card, font packs, and even font and graphics library versions allow the adversary to produce a stable, simple, high-entropy fingerprint of a computer. In fact, the hash of the rendered image can be used almost identically to a tracking cookie by the web server.</blockquote>

The Tor Browser is patched to prompt before returning valid image data to the Canvas APIs. By default, if the site hasn't been given previous permission to extract canvas image data, then white image data is returned to the Javscript APIs. Third parties are not allow to extract canvas image data though.

If users are browsing and are prompted with a message like the following, they are recommended to select {{code|n}}.

<pre>This website (github.com) attempted to extract HTML5 canvas image data, which may be used to uniquely identify your computer.

Should Tor browser allow this website to extract HTML5 canvas image data? </pre>

= License =

{{JonDos}} The DataCollectionTechniques page contains content from the JonDonym documentation [https://anonymous-proxy-servers.net/en/help/wwwprivacy_technik.html DataCollectionTechniques] page.

{{Footer}}

[[Category:Documentation]] [[Category:Design]]
</translate>
