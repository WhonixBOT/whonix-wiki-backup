{{Header}}
{{#seo:
|description=Preventing Tor over Tor for Tor Browser, TorChat and others.
}}

= Why? =
See [[DoNot#Prevent_Tor_over_Tor_scenarios.]]

= Implementation =
TODO: needs update (moved to socat with Whonix 13 <code>anon-ws-disable-stacked-tor</code> <code>3:2.4-1</code> stable upgrade)

Implemented in three ways on Whonix-Workstation.

* Implemented in [https://github.com/Whonix/anon-ws-disable-stacked-tor anon-ws-disable-stacked-tor], [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/debian/control {{Code|debian/control}}]. The package uses the "Provides: tor" field<ref>See "7.5 Virtual packages - Provides" on http://www.debian.org/doc/debian-policy/ch-relationships.html</ref>, which should avoid any kinds of conflicts, in case upstream releases a higher version of Tor. This won't work for packages, which depend on an explicit version of Tor (such as TorChat). This is non-ideal, since for example the {{Code|torchat}} package will install Tor, but still acceptable, because of the following additional implementations.

* Tor's autostart is disabled in {{Code|/etc/default/tor}} (dpkg-diverted using config-package-dev), so even if the {{Code|tor}} package gets installed, it won't be automatically started.

* {{Code|rinetd}} is configured by [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/etc/rinetd.conf.anondist {{Code|/etc/rinetd.conf}}] to listen on
** Tor's default ports. I.e.
*** system Tor's {{Code|127.0.0.1:9050}}, {{Code|127.0.0.1:9051}} and,
*** Tor Browser's {{Code|127.0.0.1:9150}}, {{Code|127.0.0.1:9051}}
*** Tor Messenger's {{Code|127.0.0.1:9152}}, {{Code|127.0.0.1:9153}}
** Those are forwarded to Whonix-Gateway.
** This prevents the default Tor Browser, Tor Messenger and/or Tor package by The Tor Project from opening these default ports, which will result in Tor failing to open its listening port and therefore exiting, thus preventing Tor over Tor.

https://forums.whonix.org/t/socat-running-on-ws-called-from/2225

https://www.whonix.org/wiki/Dev/Whonix_Packages#anon-ws-disable-stacked-tor

We mimic a functional Tor as good as possible.

anon-ws-disable-stacked-tor is also providing:

* Tor Control Unix Domain Socket file: /var/run/tor/control, which is redirected to Control Port Filter Proxy on Whonix-Gateway.
* Tor Control Auth Cookie: a functional /var/run/tor/control.authcookie that works with [[Dev/Control_Port_Filter_Proxy|Control Port Filter Proxy]].
* Tor Socks Unix Domain Socket file: /var/run/tor/socks that is redirected to Whonix-Gateway Tor port 9050

https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/etc/anon-ws-disable-stacked-tor.d/30_anon-dist.conf

Required for Tor Browser connectivity, SocksSocket:

* https://phabricator.whonix.org/T192
* https://trac.torproject.org/projects/tor/ticket/14272#comment:3
* https://trac.torproject.org/projects/tor/ticket/20111#comment:5

https://cloud.githubusercontent.com/assets/156128/21556064/8ead0338-cdd2-11e6-918c-d4ca61724b52.png any should work.

TODO: describe

* bindp
* https://phabricator.whonix.org/T561
* systemd socket activation
* https://phabricator.whonix.org/T357

= Debugging =
Run.

{{CodeSelect|code=
echo "$TOR_SOCKS_IPC_PATH"
}}

Should show the following.

<pre>
/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9150.sock
</pre>

----

Run.

{{CodeSelect|code=
echo "$TOR_CONTROL_IPC_PATH"
}}

Should show the following.

<pre>
/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9151.sock
</pre>

Also please run.

{{CodeSelect|code=
UWT_DEV_PASSTHROUGH=1 curl 127.0.0.1:9150
}}

Should show the following.

<pre>
<html>
<head>
<title>Tor is not an HTTP Proxy</title>
</head>
<body>
<h1>Tor is not an HTTP Proxy</h1>
<p>
It appears you have configured your web browser to use Tor as an HTTP proxy.
This is not correct: Tor is a SOCKS proxy, not an HTTP proxy.
Please configure your client accordingly.
</p>
<p>
See <a href="https://www.torproject.org/documentation.html">https://www.torproject.org/documentation.html</a> for more information.
<!-- Plus this comment, to make the body response more than 512 bytes, so      IE will be willing to display it. Comment comment comment comment      comment comment comment comment comment comment comment comment.-->
</p>
</body>
</html
</pre>

Run a similar command.

<pre>
echo GET | socat - UNIX-CONNECT:/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9150.sock
</pre>

Should show the same as above.

-----

Next one to try.

{{CodeSelect|code=
UWT_DEV_PASSTHROUGH=1 curl 127.0.0.1:9151
}}

Should show the following.

<pre>
510 Request filtered
...
</pre>

Run a similar command.

<pre>
echo GET | socat - UNIX-CONNECT:/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9151.sock
</pre>

Should show.

<pre>
510 Request filtered
</pre>

-----

= Application Developers =
* Please use <code>add_onion</code> Tor control protocol command / Tor ephemeral onion services.

ephemeral: Means the onion service will be gone after the Tor control connection is closed. It's however possible and usual to retrieve onion service private key and to restore it at next run.

For example [https://github.com/ricochet-im/ricochet ricochet] by [https://github.com/special @special] is doing that.

Tor ephemeral onion services are a lot a lot better for Whonix than preconfigued Tor hidden services.

[https://github.com/micahflee/onionshare onionshare] by [https://github.com/micahflee @micahflee] has superb Tails and Whonix support.

* It can listen on all interfaces rather than just localhost. (This is required since the incoming onion service connection comes from the network, not from localhost.)

<pre>
    # In Whonix, listen on 0.0.0.0 instead of 127.0.0.1 (#220)
    if os.path.exists('/usr/share/anon-ws-base-files/workstation'):
        host = '0.0.0.0'
    else:
        host = '127.0.0.1'
</pre>

Related: [https://github.com/Whonix/proposals/blob/master/635-listen-port-convention.txt Listen Port Convention]

* Don't crash the application if Tor ControlPort replies something unexpected such as <code>510 Command filtered</code>.

* Show an error message if Whonix is detected and seeing <code>510 Command filtered</code>:

<blockquote>
Error talking to the Tor controller.\nIf you're using Whonix, check out https://www.whonix.org/wiki/ProgramName to make ProgramName work.
</blockquote>

* onionshare has a [http://cdn.ghacks.net/wp-content/uploads/2017/03/onionshare-password.png Tor settings dialog]. But not really needed in Whonix.

* Auto detect Tor settings through <code>TOR_*</code> environment variables.

In Whonix:

<pre>
TOR_CONTROL_IPC_PATH=/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9151.sock
</pre>

<pre>
TOR_SOCKS_IPC_PATH=/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9150.sock
</pre>

These are unix domain socket files.

Ports would also work but nowadays unix domain socket files are much more advisable since these are less likely to leak.

* Please set a socks user name for [[Stream Isolation]]. (<code>IsolateSOCKSAuth</code>)

* Bonus: Make a list of Tor control commands you are using so an onion-grater profile can be written.

* Bonus: Write an [https://github.com/Whonix/onion-grater/tree/master/usr/share/onion-grater-merger/examples onion-grater profile].

= Footnotes =
<references />

{{Footer}}

[[Category:Design]]
