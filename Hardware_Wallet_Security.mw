{{Header}}
{{#seo:
|description=How Bitcoin can be stolen even when using a Hardware Wallet.
|image=https://www.{{project_clearnet}}/w/images/4/40/Cryptohardwarethreat.jpg
}}
{{Title|
title=Cryptocurrency Hardware Wallet: Threat Model
}}
[[image:Cryptohardwarethreat.jpg|thumb]]
'''How Bitcoin can be stolen even when using a hardware wallet.'''

= Introduction =

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Hardware wallets <u>might</u> increase security under some threat models but this requires knowledge. Most users lack the required background knowledge and would still loose their cryptocurrency under many different attack models. <ref>
https://twitter.com/JWWeatherman_/status/1327712434572947456
</ref>
}}

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = <u>Note</u>: The term "account number" rather than "address" is used throughout this wiki entry in order to avoid confusion.
}}

[https://theycallitcrypto.com/tutorial/what-is-a-hardware-wallet-the-definitive-guide/ Hardware wallets] are:

<blockquote>... a physical device on which a user stores their private keys to access their blockchain wallets. These devices donâ€™t have to be electronic. Any physical item that can store a private key is considered a hardware wallet.

From a general perspective, hardware wallets are convenient, secure, and immune to many of the hazards other wallet types can fall victim too.</blockquote>

It is absolutely crucial to understand the concept of an <code>insecure display</code> versus a <code>secure display</code>.

In essence, hardware wallets seek to secure users' funds under the sane assumption that the computer in use may be compromised by [[Malware and Firmware Trojans|malware]]. Once infected this way, malware can:

* secretly view all user actions without obvious signs;
* manipulate the screen, such as showing one account number instead of another correct account number; and
* capture all key strokes (sniff passwords), download files and perform other malicious actions.

For these reasons the computer display is considered an untrustworthy, an <code>insecure display</code>, while the display of the hardware device is considered trustworthy, a <code>secure display</code>. The reason for considering the hardware device's display to be trustworthy is that vendors of hardware wallets enforce a requirement that only signed software must be used. Unless the cryptographic verification process that prevents unsigned software from running on the hardware wallet can be subverted, the hardware wallet is considered to be free of malware and therefore a secure display. In other arenas, this security concept is referred to as "What you see is what you sign" ([https://en.wikipedia.org/wiki/WYSIWYS WYSIWYS]). <ref>
In other words, just sign what you see.
</ref>

= Threat Model =

In order to perform cryptocurrency transactions securely, a number of threats must be averted so funds are not lost to attackers.

'''Table:''' ''Hardware Wallet Threats''

{| class="wikitable"
|-

! scope="col"| '''Threat Domain'''
! scope="col"| '''Description and Recommendations'''
|-

! scope="row"| Failure to Understand Basic Threat Model Risk
| 
* <u>Threat</u>: Many users lack basic background knowledge such as the difference between a <code>secure display</code> and an <code>insecure display</code> as mentioned in the [[#Introduction|Introduction chapter of this page]].
* <u>Conclusion</u>: The computer screen could be modified by malware to fraudulently ask the user to enter the backup recovery seed phrase (recovery phrase) (perhaps under pretense of seed phrase verification) which would then give the attacker full access to all cryptocurrency holdings of the user.
* <u>Workarounds</u>:
** Learn how to use hardware wallets in combination with a malware free computer first with tiny amounts of cryptocurrency for testing purposes to learn the basic process. Later be suspicious about changes in the workflow and ask for trustworthy advice before proceeding.
|-

! scope="row"| Recipient Account Number Discovery Risk
| 
* <u>Threat</u>: It is difficult to view one's recipient account number on the hardware wallet's secure display.
** Ledger Live has a "show address on device" ("show account number") feature, which shows the account number on the secure hardware wallet display.
** In some devices, even if the account number is shown it is difficult to read from the display.
*** The [https://shop.ledger.com/products/ledger-nano-s Ledger Nano S] only has a small display and the account number -- which can be 35-45 random characters long -- and is displayed as ticker text which automatically scrolls over the display at high speed. This means at best it is only possible to view the first few and last few characters, while skipping all those in the middle. This provides an opportunity for attackers to try to create an address where the start and end of the address match, but the middle section is under their control. 
*** The [https://shop.ledger.com/products/ledger-nano-x Ledger Nano X] does not have the above problem and shows the full account number at once, providing an opportunity to verify it in full.
* <u>Conclusion</u>: The regular user of a ledger hardware wallet will have difficulty in discovering their own recipient account number in a secure manner, due to the risk of fraudulent modification by malware running on the computer. This means it is also difficult to tell senders of the correct recipient account number without potentially being misled by [[Malware and Firmware Trojans|malware]].
* <u>Workaround</u>: Use multiple computers to discover the account number in the hope they are not all compromised.
|-

! scope="row"| Receiving Account Number Transmission Risk
| 
* <u>Threat</u>: When receiving coins -- such as when withdrawing cryptocurrency from the cryptocurrency exchange -- the user's recipient account number is entered into their computer, which is utilizing an insecure display. 
* <u>Conclusion</u>: The screen could be modified by malware to fraudulently redirect the withdrawal to an account number held in the attacker's wallet.
* <u>Workarounds</u>:
** Use withdrawal account number whitelists if they are offered by the sender.
** This issue does not apply if the user can transmit the recipient account number through a trusted channel. 
|-

! scope="row"| Account Balance Discovery Risk
| 
* <u>Threat</u>: Even if cryptocurrency has been received on the device, the balance is not shown on the hardware wallet secure display.
* <u>Conclusion</u>: The user might mistakenly believe they have received more value than was actually transferred.
* <u>Workaround</u>: Use multiple computers to check the balance (watch-only accounts), in the hope they are not all compromised.
|-

! scope="row"| Recipient Account Number Transmission Risk
| 
* <u>Threat</u>: When sending cryptocurrency to merchants or cryptocurrency exchanges, the recipient account number is shown on the computer's insecure display. It could be modified by malware to redirect the receiving account number to the attacker. Since the hardware wallet secure display will ask for confirmation (account number and amount), at least smaller transactions are protected. For example if the user has 1 Bitcoin but only wants to send 0.1 Bitcoin, there is an option to abort the transaction if the ledger display asks to confirm a transaction that is larger than expected.
* <u>Workarounds</u>:
** This issue does not apply if the recipient account number can be verified through a trusted channel. For example, multiple devices can be used (since it is unlikely they are all infected) or a personal meeting with the sender can occur beforehand.
** It is possible to send funds in small installments and then confirm with the recipient via a secure channel they were received. This limits the amount of funds that may be lost to the size of the installment.
|-

! scope="row"| Time of Compromise Matters
| 
* Once funds are on the hardware wallet they are safe - depending on the security of hardware wallet - until the user attempts to spend those funds.
* This means if/when the user's computer is compromised later on (after stocking up funds), less funds are lost but all the aforementioned threats apply.
|-

! scope="row"| Unauthorized Physical Access (attacker gains physical access to the device)
| 
* If the hardware wallet and/or computer are stolen, all funds are safe as long as the user still has the backup recovery seed phrase (recovery phrase). This assumes the attacker is unable to circumvent the hardware wallet PIN entry and/or extract the keys from the device.
* If the user stores the hardware wallet and PIN in the same place and loses it, all funds will be lost.
* If the recovery phrase is lost and hardware wallet or PIN code is lost all funds are irretrievable.
* Compared to full disk encryption:
** usability: It is easier to keep private keys secured.
** security:
*** The protections afforded by hardware wallet security are not necessarily stronger than computer full disk encryption (such as LUKS in Linux).
*** Those hardware wallets that include a Secure Element are generally more secure.
*** Some hardware wallets are reported to have been hacked before. Examples:
**** Simple physical theft was <ref>
No actual reports of this happening in the media. More correct wording might be "would have been"?
</ref> sufficient to hack Trezor. [https://www.wired.com/story/i-forgot-my-pin-an-epic-tale-of-losing-dollar30000-in-bitcoin/ Trezor was impressively hacked by a 15 years old for a price of $3,700 (0.85 BTC at the time)] <ref>
https://twitter.com/el33th4xor/status/925013437226221569
</ref>
**** Ledger was vulnerable to malware, evil maid and supply chain attacks. [https://saleemrashid.com/2018/03/20/breaking-ledger-security-model/ Ledger got impressively hacked by the same 15 years old.]
*** For some hardware wallets there might be no public reports yet of attackers who gained physical access but not the PIN code (or recovery phrase) and then managed to steal funds.
|-

! scope="row"| Usability
| 
* easier to safely split bitcoin / bitcoin cash / bitcoin gold: yes
* easy to carry: yes
* easy to backup: yes
* easy to replace device: yes
* easier than Qubes OS (offline vault VM): yes
|-

! scope="row"| Usability Issues
| 
* browser support on/off
* ledger device applications do not auto start
|-

! scope="row"| Miscellaneous
| 
* more obscure to attack than a "simple trojan horse": yes
|-

! scope="row"| Multisig
| 
* useful for diversification in multisig: yes
* multisig is easier to use: no
* easy restoration process: [[#multisig|no]]
* risk of restoration issues: [[#multisig|higher]]
|-

! scope="row"| Non-Freedom Software
| 
* [[Avoid_nonfreedom_software|Avoid Non-Freedom Software]]!
* Ledger firmware is non-freedom software at time of writing. <ref>
https://www.reddit.com/r/ledgerwallet/comments/6vgl1z/is_the_nano_ss_firmware_open_source/
</ref>
|-

! scope="row"| Low Quality of Randomness
| 
* <u>Threat</u>:
** The quality of randomness required by the device to create the backup recovery seed phrase (recovery phrase) might be too low. An attack might find a a weakness in the Random Number Generator (RNG) which helps to attacker to guess other other user's recovery phrase and thereby steal their cryptocurrency.
** Since well encrypted data is indistinguishable from random data, it would even be possible for an attacker to subvert the production process of a hardware wallet, thereby compromising the RNG. All tests for verification of randomness would pass but the attacker could have user a cryptographic algorithm and private key which turns the apparently random data into predictable data for the attacker only. Thereby the attacker could wait for the hardware wallet to be widely used before stealing huge amounts of cryptocurrency.
** Suspicious and even proven to be broken RNG's exist. [[Dev/Entropy#RDRAND|See this list of references]].
** [https://github.com/Whonix/security-misc security-misc] (installed by default in {{kicksecure}} and Whonix) distrusts the CPU for initial entropy at boot as it is not possible to audit, may contain weaknesses or a backdoor.
** [[Kicksecure]] and [[Whonix]] improve entropy generation due to pre-installed entropy generators. See wiki page [[Dev/Entropy#RDRAND|Dev/Entropy]] for details.
** Quote [https://support.ledger.com/hc/en-us/articles/360010073520-Quality-of-randomness ledger hardware wallet on Quality of randomness]:
*** <blockquote>Hardware RNGs like the one used in Ledger hardware wallets use several sources of randomness.</blockquote>
*** But does not elaborate on that page what these several sources of randomness are.
** Trezor: has a lot more documentation. <ref>
* https://wiki.trezor.io/Recovery_seed
* https://wiki.trezor.io/Microcontroller
* https://www.st.com/content/ccc/resource/technical/document/reference_manual/51/f7/f3/06/cd/b6/46/ec/CD00225773.pdf/files/CD00225773.pdf/jcr:content/translations/en.CD00225773.pdf
* https://www.st.com/content/ccc/resource/technical/document/reference_manual/3d/6d/5a/66/b4/99/40/d4/DM00031020.pdf/files/DM00031020.pdf/jcr:content/translations/en.DM00031020.pdf#page=767
</ref>
* <u>Conclusion</u>: A hardware wallet should not be trusted with recovery phrase creation.
* <u>Workarounds</u>:
** Create the recovery phrase on a device with high quality randomness (i.e. a computer). This will be very difficult for most users since this requires a malware free computer to begin with.
** Use a passphrase. [https://www.ledger.com/academy/passphrase-an-advanced-security-feature Quote ledger hardware wallet]:
*** <blockquote>The Passphrase is an advanced feature that adds a 25th word of your choosing of max 100 characters to your recovery phrase</blockquote>
*** The passphrase needs a good password strength. Ideally at least as strong as the password strength of recovery phrase since the recovery phrase is in question here. However, such as strong passphrase is difficult to generate for most users. (That is why the default workflow that most hardware wallet vendors lay out is for the recovery phrase to be generated by the hardware and not by the user.) Quote Wikipedia:
**** <blockquote>Human-generated passwords: People are notoriously poor at achieving sufficient entropy to produce satisfactory passwords.</blockquote>
**** Simplified: Most human generated passwords are insecure.
*** For information on strong password, see the [[Passwords]] page.
|-

! scope="row"| Impracticality of Workarounds Risk
| 
* <u>Threat</u>: As denoted by the term, a 'workaround' is not an actual fix. For workarounds to be effective, they require: awareness (of which there is probably very little); wide adoption (very few people are applying these), and easy steps (most are cumbersome due to bad usability).
* <u>Conclusion</u>: It is likely most workarounds will be neglected during various phases due bad usability (difficult to use), limited awareness/skills and/or time pressure.
|-

|}

= Recommendations =
Quote [https://twitter.com/_benkaufman Ben Kaufman], [https://twitter.com/_benkaufman/status/1341700878072504321 Thread: 10 Rules for Verification on a #Bitcoin Hardware Wallet]:

<blockquote>Rule #1: DO NOT TRUST THE COMPUTER SCREEN.

The very reason for using a hardware wallet is that your computer IS compromised, trusting it makes using the hardware wallet an expensive security theatre (or 2FA at best).
Always verify on the HWW device screen!</blockquote>

Indeed. This is a different way to put it than the formal wording above.

<blockquote>Rule #2: Verify your "receive" addresses BEFORE accepting funds.

A compromised computer can be tricked into displaying addresses that belong to an attacker. The only way to make sure you own the addresses is to display them on the HWW device and verify they match.</blockquote>

Always use the "show address on device" feature of the hardware wallet.

<blockquote>Rule #3: Verifying change address should be done by the device when sending funds, not before like receive addresses!

It is pointless at best, and misleading at worst, to verify them beforehand like receive addresses...
All hardware wallets support verifying the change address belongs to you AT TIME OF SIGNING A TRANSACTION.
Verifying before that is pointless and error-prone.</blockquote>

TODO: we need to document what a "change address" is.

<blockquote>Rule #8: For convenience, you may print out/ write down a large batch of your receiving addresses - verify all at the same time, and rely on that paper list for your day to day verification.</blockquote>

Consider ignoring this advice if all crypto currency addresses should remain concealed and secured by [[Full Disk Encryption]].

<blockquote>Rule #10: Hardware wallets cannot verify your balances - and that's great!

Verifying balances requires getting information from the Bitcoin network - i.e. you need to be online - which would make hww more vulnerable...
This is where a full node comes in!
It is strongly recommended that you run your own Bitcoin full node - and use it as your main source for verifying your balances and transaction history!
For redundancy, you could double-check against block explorers or another node (use a different device for either!).
One last thing: These rules apply to any device you use as a segregated signing device - be it a "traditional" hardware wallet, an airgapped laptop, a mobile phone etc.

If you want to separate your keys without having a security theatre, you should verify on your signing device!</blockquote>

Running a blockchain full validating node such [[Bitcoin#Bitcoin_Core|Bitcoin Core]] for [[Bitcoin]] a very good idea since it is much more secure than using relying on a SPV wallet. Most if not all official hardware wallet desktop or mobile applications provided by the vendor of the hardware wallet are SPV wallets. For the expense of setting up a full validating node (setup time, download quota, CPU utilization) a lot higher certainty of receiving real coins can be accomplished.

[https://github.com/LedgerHQ/ledger-live-desktop/issues/4309 ledger feature request: show balance on hardware wallet screen]

= multisig =
<blockquote>Now let's talk some multisig...</blockquote>

<blockquote>Rule #4: Verify the xpub of each hardware wallet used in a multisig quorum on the device it belongs to.

This is not 100% mandatory - but if you're no expert - you really should do it.

If a hardware wallet doesn't support displaying the xpub, (like Trezor), it could be fine to just verify each address on it - so long as you verify consistency on all other devices as well, but I wouldn't recommend such a device for non-experts.</blockquote>

<blockquote>Rule #5: Verify "receive" addresses on EVERY device of the multisig quorum.

This is especially true for at least one address (see next rule) but recommended for all. If using a device that you haven't verified the xpub of on-screen, you should verify all receive addresses on it!</blockquote>

<blockquote>Rule #6: While it is best to verify each receive addresses on ALL devices in the multisig setup - you might choose to trust a specific one, verifying the xpub/ first address on all - then the rely only on the "trusted" device - ONLY IF YOU ALSO VERIFY XPUBS...
By that, I mean verify on the "trusted" hww used for general verification, that the xpubs are consistent for all cosigners.
This is needed only once with wallets like ColdCard, Cobo Vault, Bitbox02, and Specter DIY - since they allow saving the multisig xpubs on the device.
With Trezor T - you have to verify the xpubs of cosigners every time - which is why it's not recommended for that purpose - with Trezor One it's simply not possible...

So while you might use a Trezor in a multisig, I would not recommend it to non-experts.</blockquote>

<blockquote>Rule #7: Do NOT use Ledger in a multisig setup! (unless you are an expert or have a very good reason...)

Ledger currently does not allow verifying multisig addresses on the device - nor displaying the XPUB on its screen.
This means you have no way to verify it was not swapped by an attacker in your multisig setup - EVEN IF YOU DO A SUCCESSFUL TEST TRANSACTION!

It is still possible for a (very) sophisticated attacker to make you think it worked, while it was him signing for you...</blockquote>

<blockquote>Rule #8: For convenience, you may print out/ write down a large batch of your receiving addresses - verify all at the same time, and rely on that paper list for your day to day verification.
This is very useful for multisig! - where devices might be distributed in various places.</blockquote>

<blockquote>Rule #9: Multisig change verification should be the same as with Rule #3 - on the device at the time of signing.

Popular devices (besides Ledger as said), can verify that the address you send from and the change address used belong to the same multisig wallet (from same xpubs).
If they fail to verify the change address - they will show it as a standard, independent, recipient - in that case YOU SHOULD NOT MAKE THE TRANSACTION.
This is valid for both single sig and multisig! (although even more relevant for the latter).</blockquote>

<blockquote>Please note: Some things here might not be fully accurate for the expert user (especially around multisig address verification), but for the less advanced users' sake, I have tried to be on the safe side when things get tricky...
That said, if you see inaccuracies or mistakes (or just have questions), please comment!!

Also check out some more info on multisig setups over at:
https://btcguide.github.io  ( [https://twitter.com/mflaxman @mflaxman] guide)</blockquote>

= Donations =
If this wiki page has contributed to safekeeping of crypto currency, please consider making a [[Donate|donation]] to {{project name}} to help keep it running for many years to come.

{{Pay Bitcoin Specific}}

{{Pay_Monero_Specific}}

= See Also =
<div style="column-count:2;-moz-column-count:2;-webkit-column-count:2">

* [https://wallet.fail wallet.fail]
* [https://blog.kraken.com/post/5590/kraken-security-labs-supply-chain-attacks-against-ledger-nano-x/ Kraken Security Labs Identifies Supply Chain Attacks Against Ledger Nano X Wallets]
* [https://blog.kraken.com/post/6746/ledger-phishing-scam-targets-crypto-hardware-wallet-users/ Ledger Phishing Scam Targets Crypto Hardware Wallet Users]
* [https://www.ledger.com/anatomy-of-a-phishing-attack Anatomy of a Phishing Attack]
* [https://support.ledger.com/hc/en-us/articles/360035343054-Beware-of-phishing-attempts Beware of phishing attempts]
* [https://www.ledger.com/phishing-campaigns-status Ongoing phishing campaigns]
* [https://www.ledger.com/academy/security/hack-malware-to-take-control-of-your-pc-or-mobile-phone Hack #1 â€“ Check out this link!]
* [https://www.ledger.com/academy/security/hack-anonymous-call-from-messaging-platform Hack #2 â€“ A stranger is calling you]
* [https://www.ledger.com/academy/security/hack-wifi Hack #3 â€“ Do you have WiFi password?]
* [https://www.ledger.com/academy/hack-keylogging Hack #4 â€“ The hacker sees all]
* [https://www.ledger.com/academy/hack-5-malicious-wallet Hack #5 â€“ Malicious Wallet App]
* [[Social_Engineering|Social Engineering and (Spear) Phishing]]
* [[Bitcoin]]
* [[Electrum]]
* [[Monero]]
* [[Ethereum]]
* [[Money]]
</div>

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
