{{Title|title=
Website Tests / Server Tests
}}
{{Header}}
{{#seo:
|description=hardenize.com / securityheaders.com / Mozilla Observatory / SSL Labs / hstspreload.org
}}

{{stub}}

= Introduction =
Security is not a checklist. Security is not about making websites show a lot green and no red at all. The context is important. This is a bit similar to [[Browser Tests]]. There are many false positives.

SSL certificate, HSTS, (CAA) Policy, Expect-CT header, DNSSEC, <u>C</u>ontent <u>S</u>ecurity <u>P</u>olicy (CSP), Feature-Policy, MTA-STS, TLS-RPT, DANE, SPF, DKIM, DMARC, Frame Options, XSS Protection, Content Type Options are all nice sounding and nice to have website or server security features.

While website test websites such as hardenize.com are amazing tools for website owners helping to check security features, these tests say little about the security of the server. Such tests cannot check if kernel, operating system and web app upgrades are up to date or neglect, if SSH is configured for public key authentication only, if the server is [[Kicksecure]] hardened, backups are being made and so forth.

For example at time of writing the Microsoft website did not have a CSP, neither DNSSEC, nor DANE and a C level securityheaders.com rating. Does this mean that the Microsoft website gets hacked every year and spreads malicious software uploaded by unauthorized third parties? No. <ref>
* https://web.archive.org/web/20201213150857/https://www.hardenize.com/report/microsoft.com/1607820284
* https://web.archive.org/web/20201213145224/https://securityheaders.com/?q=microsoft.com&followRedirects=on
</ref>

See also [[Privacy Policy Technical Details]], [[Privacy Policy Technical Details#website|Privacy on the {{project_name}} Website]], 
[[Trust#Trusting_the_{{project_name}}_.E2.84.A2_Website|Trusting the {{project_name}} Website]] and [[Trust#Distrusting_Infrastructure|Distrusting Infrastructure]].

= hardenize.com =
https://www.hardenize.com/report/whonix.org/1607868311

https://forums.whonix.org/t/no-clean-hsts-preload-dnssec/10255

https://forums.whonix.org/t/expect-ct-security-header-for-whonix-org/10286

= SSL Labs =
https://www.ssllabs.com/ssltest/analyze.html?d={{project_clearnet}}

= hstspreload.org =
https://hstspreload.org/?domain={{project_clearnet}}

= Email DANE =
<blockquote>Email DANE (SMTP)

DNS-based Authentication of Named Entities (DANE) is a bridge between DNSSEC and TLS. In one possible scenario, DANE can be used for public key pinning, building on an existing publicly-trusted certificate. In another approach, it can be used to completely bypass the CA ecosystem and establish trust using DNSSEC alone.
Feature not implemented or disabled
Your server doesn't support this feature.</blockquote>

The <code>{{project_clearnet}}</code> website doesn't offer free or paid e-mail accounts. The extend in which <code>{{project_clearnet}}</code> uses e-mail:

* Sends e-mails to wiki editors who signed up to be notified about changes.
* Forum e-mail sign-up and notifications.
* [[Mailing Lists]]
* Developer accounts.

Even if e-mail security was "perfected", even if the DANE test would pass on website tests, it should not be relied on DANE. Better use end-to-end encryption such as [[OpenPGP]] or even better such as [[codecrypt]].

= Website DANE =
See [[Dev/About_Infrastructure#DANE_TLSA|DANE TLSA References]]. Quote [https://forums.whonix.org/t/dane-tlsa-dns-based-authentication-of-named-entities-for-whonix-org/10218 DANE TLSA (DNS-based Authentication of Named Entities) for whonix.org]:

<blockquote>For now decided not to implement it due to:

* low adaption
* no support in major browsers
* complex, maintenance demanding setup</blockquote>

= Content-Security-Policy CSP =
<code>{{project_clearnet}}</code> has an essential CSP. TODO: expand

https://forums.whonix.org/t/content-security-policy-now-deployed-on-whonix-websites/5494

= gzip =
Not security relevant. Performance only.

https://onionheaders.website shows gzip is disabled but checking with <code>curl</code> shows it is actually enabled. As per [https://davidwalsh.name/check-gzip curl gzip test instructions].

{{CodeSelect|code=
torsocks curl -H "Accept-Encoding: gzip" --head http://dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/wiki/Documentation
}}

Output includes.

<blockquote>Content-Encoding: gzip</blockquote>

= Comparison with Others =
Before demanding what <code>{{project_clearnet}}</code> website ought to implement, and might not do yet due to lack of resources, please compare with much better funded organizations for a fair comparison.

* [https://www.hardenize.com/report/microsoft.com/1607820284 multi billion company, Microsoft, hardenize.com]
* [https://securityheaders.com/?q=microsoft.com&followRedirects=on multi billion company, Microsoft, securityheaders.com]
* [https://www.hardenize.com/report/torproject.org/1607868814#www_hsts The Tor Project, hardenize.com]
* [https://securityheaders.com/?q=wikipedia.org&followRedirects=on Wikipedia, securityheaders.com]
* [https://securityheaders.com/?q=mediawiki.org&followRedirects=on mediawiki.org, securityheaders.com]
* [https://securityheaders.com/?q=https%3A%2F%2Fmeta.discourse.org&followRedirects=on Discourse, securityheaders.com]

= See Also =
* [[Privacy Policy Technical Details]]
* [[Trust#Trusting_the_{{project_name}}_.E2.84.A2_Website|Trusting the {{project_name}} Website]]
* [[Trust#Distrusting_Infrastructure|Distrusting Infrastructure]]

= Footnotes  =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
