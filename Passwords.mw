{{Header}}
{{#seo:
|description=Generating Strong Passwords
|og:image=https://www.whonix.org/w/images/b/b6/Passwords2132341.jpg
}}

= Introduction =

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' It is safe to assume that advanced adversaries with modern technology can conduct bruteforce attacks at a rate of more than a trillion attempts per second. <ref>https://www.password-depot.com/know-how/brute-force-attacks.htm</ref> <ref>https://theintercept.com/2015/03/26/passphrases-can-memorize-attackers-cant-guess/</ref>
}}


If weak passwords (passphrases) are used, they can be easily determined by [https://en.wikipedia.org/wiki/Brute-force_attack brute-force attacks], whether or not Whonix is installed. In essence, attackers systematically try all passwords until the correct one is found, or attempt to guess the key which is created from the password using a key derivation function (an exhaustive key search). This method is very fast for short and/or non-random passwords.

= Generating Unbreakable Passwords =

== Introduction ==

To generate passphrases which cannot be bruteforced even over a timeframe of several billion years (barring breakthroughs in quantum computing), users should default to [https://en.wikipedia.org/wiki/Diceware diceware passphrases of TODO-TODO words in length]. This provides password entropy of TODO-TODO bits. <ref>https://en.wikipedia.org/wiki/Password_strength#Random_passwords</ref> As Wikipedia explains: <ref>https://en.wikipedia.org/wiki/Diceware</ref>

<blockquote>Diceware is a method for creating passphrases, passwords, and other cryptographic variables using ordinary dice as a hardware random number generator. For each word in the passphrase, five rolls of the dice are required. The numbers from 1 to 6 that come up in the rolls are assembled as a five-digit number, e.g. 43146. That number is then used to look up a word in a word list. In the English list 43146 corresponds to munch. By generating several words in sequence, a lengthy passphrase can be constructed.<br />
<br />
A Diceware word list is any list of 6^5 = 7,776 ... unique words, preferably ones the user will find easy to spell and to remember... The level of unpredictability of a Diceware passphrase can be easily calculated: each word adds 12.9 bits of entropy to the passphrase... This level of unpredictability assumes that a potential attacker knows that Diceware has been used to generate the passphrase, knows the particular word list used, and knows exactly how many words make up the passphrase. If the attacker has less information, the entropy can be greater than 12.9 bits per word.</blockquote>

A suitable diceware word list can be found [https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases here]. It is available in a [https://www.eff.org/files/2016/07/18/eff_large_wordlist.txt long list version] for those using 5 dice, or in a [https://www.eff.org/files/2016/09/08/eff_short_wordlist_1.txt short list version] if using only 4 dice. Note that only using 4 dice and shorter word lists reduces the entropy to 10.3 bits per word, so a longer passphrase must be generated to be safe. <ref>The list has also improved the words so that they are easier to memorize, and vulgar, profane, insulting or emotionally-charged words have been removed.</ref>

== Physically-generated Passwords ==

It is preferable to rely on physical measures of randomness when creating diceware passphrases. This means the words are guaranteed to be truly chosen at random if the dice are correctly weighted. The same cannot be said for RNG or other measures of pseudo-randomness based on software.

TODO: reword RNG

Generally speaking, lower entropy is reasonable to prevent online attacks due to limits on incorrect username/password combinations, but up to 128 bits of entropy is suggested for important cryptographic keys; a diceware passphrase of TODO words in length. <ref>https://en.wikipedia.org/wiki/Password_strength#Required_bits_of_entropy</ref>

== Software-generated Passwords ==

Advanced users can install the [https://tracker.debian.org/pkg/diceware diceware package] from Debian testing in order to create diceware passphrases from the command line.

To generate a 10 word passphrase, run.

{{CodeSelect|code=
diceware -n 10
}}

= Principles for Stronger Passwords =

Users should read [https://en.wikipedia.org/wiki/Password_strength#Examples_of_weak_passwords Wikipedia: Weak Passwords] to learn about better practices for generating strong passwords, and to learn if current passwords are weak. ([http://www.webcitation.org/6EUz4uxz8 w]). The general principles for stronger passwords are outlined below. <ref>https://en.wikipedia.org/wiki/Password_strength#Guidelines_for_strong_passwords</ref>

== Password Content and Length ==

* '''Avoid Short Passwords:''' Passwords should not be less than 12-14 characters in length; longer passwords are exponentially more difficult to crack than shorter ones. <ref>https://www.password-depot.com/know-how/brute-force-attacks.htm</ref>

* '''Online Services:''' Passwords used for online services do not need to be extremely long, since the server rate-limits how many passwords an attacker can attempt. However, passwords used for offline encryption such as full disk encryption should be far stronger, since the threat model is different. An attacker can parallelize brute forcing the password and is only limited by available system resources. Edward Snowden estimated in 2013 that serious adversaries are capable of one trillion guesses per second. <ref>https://theintercept.com/2015/03/26/passphrases-can-memorize-attackers-cant-guess/</ref>

* '''Password Variety:''' If the user is not relying on [https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases diceware passphrases], then include upper and lower case characters, special characters, digits, spaces, underscores and brackets.

== Password Generation ==

* '''Avoid Dictionary-based Passwords:''' It is unsafe to use passwords that are dependent on dictionary words, keyboard patterns, special letter or number sequences, usernames, phrases from anything read or seen, relative or pet names, biographical information, or persons known to the user.

* '''Generate True Password Randomness:''' Random passwords require the use of specialized tools like diceware. The human brain is not good at creating passwords which are both easy to memorize and also secure.

* '''Never Use Online Password Generators:''' These tools are only useful for satisfying curiosity or additional learning, since it is possible for the server to log them. The only place where passwords should be generated is locally, and ideally by using physical measures (like dice) or via software in a VM disconnected from the Internet.

== Password Poor Habits ==

* '''Avoid Personal Information:''' Any information that might be publicly linked to the user or the user's account, or which is known by friends or acquaintances, should never be used for passwords.

* '''Avoid Two-factor Authentication:''' Contrary to conventional wisdom, 2FA gives away a user's identity, and also makes it easier for third parties to break into an account; for example, by performing sim-cloning and then conducting social engineering attacks on the cellular provider. <ref>https://www.wired.com/2016/06/hey-stop-using-texts-two-factor-authentication/</ref>

* '''Do not Re-use Passwords:''' Even slight variations of a password allows the linking of multiple identities back to an individual. Attackers can use these discoveries to make templates which do not completely rely on brute force attacks.

== Password Storage ==

* '''Password Managers:''' Consider using a [https://www.keepassx.org/ secure password manager], so hundreds of different passwords can be kept stored in an encrypted password database, with access only requiring one master password which is itself a cryptographically strong password.

* '''Physical Records:''' If passwords are written down, they should be stored securely and not be left in obvious places.

= Forum Discussion =
https://forums.whonix.org/t/password-advice-wiki-page-enhancements

= See Also =
* [[Two-factor_authentication_2FA|Two-factor authentication (2FA)]]

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
