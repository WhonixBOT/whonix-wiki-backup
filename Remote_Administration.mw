{{Header}}
{{#seo:
|description=Remote Administration 
|image=https://www.whonix.org/w/images/a/ad/Remoteadmin.png
}}
[[image:Remoteadmin.png|thumb]]

= Introduction =

== Warning ==

Remote administration of any system should be considered a potential anonymity hazard, since it is not under the user's physical protection and could be compromised. All activities, all programs, everything should be assumed to be monitored by the host of the server (VPS, dedicated server, etc.).

Although counter-intuitive, it is necessary to follow all relevant recommendations in the [[Surfing Posting Blogging]] chapter to stay safe:

* Beware of [[Surfing_Posting_Blogging#Keystroke_Fingerprinting|Keystroke]] and [[Surfing_Posting_Blogging#Mouse_Fingerprinting|Mouse Fingerprinting]].
* Beware of [[Surfing_Posting_Blogging#Stylometry|Stylometry]].
* Beware of difficulties in paying anonymously, see [[Money]].

At a minimum, check the connection is encrypted / authenticated, because [https://en.wikipedia.org/wiki/Virtual_Network_Computing Virtual Network Computing (VNC)] by default is unencrypted / unauthenticated. Possible methods:

* Perhaps by tunneling VNC through [[SSH]];
* Running VNC through a [[Onion Services|Tor Onion Service]];
* Using both SSH and an Onion Service, for stronger encryption and authentication; or
* Onion Services Authentication.

== UDP ==

It is suggested to utilize software that does not require the User Datagram Protocol (UDP), for the following reason.

{{Tor_UDP}}

= Remmina =
[[image:Remminalogo.png|Remmina Logo|thumb]]
It is possible to remotely administer any operating system with GNU/Linux by using the [https://remmina.org/ Remmina] desktop client. Remmina supports multiple network protocols, including RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC. For an overview of Remmina features, see [https://remmina.org/remmina-features/ here].

Note there are two separate Debian packages:

* <code>remmina</code>: the main GTK+ application.
* <code>remmina-plugins</code>: a set of plugins to support various network protocols.

{{Install Package
|package=remmina
}}

If you are interested in using Remmina, please first search the forums for this topic: https://forums.whonix.org/search?q=remmina

= SSH into {{Project name}} =
== Introduction ==
It is possible to install an SSH server on either {{Gateway product name}} and/or {{Workstation product name}} and making it accessible through an anonymous [[Onion Services|onion service]].

== SSH into Whonix-Gateway ==
'''1.''' Update the package lists and install necessary software.

{{CodeSelect|code=
sudo apt-get update
}}

Install the {{Code2|openssh-server}} package.

{{CodeSelect|code=
sudo apt-get install --no-install-recommends openssh-server
}}

'''2.''' Optionally [[SSH|harden SSH]].

'''3.''' Make necessary {{gateway_product_name}} adjustments.

{{Open /usr/local/etc/torrc.d/50_user.conf}}

Add.

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/gateway_ssh_service/
HiddenServicePort 22 127.0.0.1:22
HiddenServiceVersion 3
}}

Save.

'''4.''' {{Reload Tor}}

'''5.''' Retrieve the Tor onion service url.

{{CodeSelect|code=
sudo cat /var/lib/tor/gateway_ssh_service/hostname
}}

{{
Backups_Tor_Onion_Service_private_key
|private_key_file=/var/lib/tor/workstation_ssh_service/hs_ed25519_secret_key
|file_name=hs_ed25519_secret_key
}}

== SSH into Whonix-Workstation ==
'''1.''' Update the package lists and install necessary software.

{{CodeSelect|code=
sudo apt-get update
}}

Install the {{Code2|openssh-server}} package.

{{CodeSelect|code=
sudo apt-get install --no-install-recommends openssh-server
}}

'''2.''' Optionally [[SSH|harden SSH]].

'''3.''' Make necessary {{gateway_product_name}} adjustments.

{{Open /usr/local/etc/torrc.d/50_user.conf}}

Add.

Qubes-Whonix Note: Cannot use <code>10.152.152.11:22</code>. See page [[Onion Services]] for <code>/qubes-ip</code>.

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/workstation_ssh_service/
HiddenServicePort 22 10.152.152.11:22
HiddenServiceVersion 3
}}

Save.

'''4.''' Reload Tor.

{{Reload Tor}}

'''5.''' Retrieve the Tor onion service url.

{{CodeSelect|code=
sudo cat /var/lib/tor/workstation_ssh_service/hostname
}}

{{
Backups_Tor_Onion_Service_private_key
|private_key_file=/var/lib/tor/workstation_ssh_service/hs_ed25519_secret_key
|file_name=hs_ed25519_secret_key
}}

'''6.''' Adjust {{workstation_product_name}} firewall settings.

{{Firewall Settings Workstation}}

Add.

{{CodeSelect|code=
EXTERNAL_OPEN_PORTS+=" 22 "
}}

Save.

'''7.''' Reload the firewall.

{{Reload_Firewall_ws}}

== Graphical ==
=== Introduction ===
It is possible to install a VNC server on either {{Gateway product name}} and/or {{Workstation product name}} and making it accessible through an anonymous [[Onion Services|onion service]].

=== x2go ===
==== Installation ====
'''1.''' Set up SSH first as per above chapters.

This is because x2go uses SSH. x2go [[Dev/Qubes_Remote_Support#x2go_bugs|might]] be incompatible with [[SSH|SSH hardening]].

'''2.''' Update the package lists and install necessary software.

Either on {{Gateway product name}} or {{Workstation product name}}, depending on where it should be accessible.

{{CodeSelect|code=
sudo apt-get update
}}

Install the {{Code2|x2goserver}} package.

{{CodeSelect|code=
sudo apt-get install --no-install-recommends x2goserver
}}

==== Usage ====
In <code>remote-support-provider</code> VM.

Start <code>x2goclient</code> in a {{Workstation product name}}. <ref>
Or any other system with transparent torification. It cannot be easily made to work using socksifier <code>torsocks</code>.
</ref>

As user. Run <code>x2goclient</code>.

* host: the onion v3 domain
* login: the user name such as <code>user</code>
* password: the user login password such as <code>changeme</code>
* session type: connect to local desktop
* media -> disable client side printing support
* settings for better performance
** connection -> image quality 0
** connection -> method -> 8-jpeg
** feel free to experiment with these settings
* OK
* Click on the newly setup connection
* OK

Alternatively session type terminal could be used.

=== Test Results ===
Using [[Non-Qubes-Whonix]]. All times are created with an external stopwatch and should have +/- 2 seconds human caused inaccuracy.

* keypress delay: 2 seconds
* maximize xfce4-terminal-emulator window: 1.5 seconds
* <code>cd /etc && ls -la</code>: 2 seconds
* clock in systray (shows seconds) update: every 1 or 2 seconds
* start thunar: 5 seconds

Using Qubes / Qubes-Whonix is [[Dev/Qubes_Remote_Support#Test_Results|a lot slower]], has additional challenges and is still under development, see [[Dev/Qubes_Remote_Support]].

= See Also =
* [[SSH]]

= Help Wanted =
Please contribute by helping to create full working instructions in Whonix! See: [https://phabricator.whonix.org/T547 add user documentation for Remote Administration, Keystroke Fingerprinting, Stylometry].

[[Category:Documentation]]
{{Footer}}
