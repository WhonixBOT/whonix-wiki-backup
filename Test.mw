{{Header}}

= Basic Troubleshooting =
== Introduction ==
This introduction is a summary of the basic troubleshooting instructions. It will be described below in greater details. This basically boils down to:

# If you haven't already done, verify the Whonix virtual machine images.
# Make sure you have imported the Virtual Machines into a supported virtualizer (currently only VirtualBox).
# Check if the [https://www.torproject.org/download/download-easy.html.en Tor Browser Bundle] works for you on the host.
# Check if other Virtual Box virtual machines, ones you created yourself or from a different vendor have working internet.

Include all these information in a support request or bug report.

== Before you start ==
[[Download#Verify_the_Whonix_images|Verify the Whonix virtual machine images]].

== On the host ==
=== General ===
Always test first, if your host internet connection is working. (ping 8.8.8.8, ping google.com, etc). On your host:

<pre>ping google.com</pre>

Check time.

<pre>date</pre>

{{Code2|sudo dpkg-reconfigure -a}} must be silent, i.e. not show any errors, must show output at all. Will take a while...

<pre>sudo dpkg-reconfigure -a</pre>

{{Code2|sudo dpkg --configure -a}} must be silent, i.e. not show any errors, must show output at all. Will take a while...

<pre>sudo dpkg --configure -a</pre>

Get all updates:

<pre>
sudo apt-get update
sudo apt-get dist-upgrade
</pre>

Check VirtualBox version.

<pre>vboxmanage --version</pre>

Get the Tor Browser Bundle from [https://www.torproject.org/download/download-easy.html.en torproject.org] and test if it's working.

<pre>
## If you can not get the Tor Browser Bundle to work,
## you will most certainly not get Whonix to work either.
##
## In the Whonix Documentation it is recommended to have a current
## copy of the Tor Browser Bundle at all times.
##
## The Tor Browser Bundle is great for testing if you live in a
## censored area or not, if Tor is blocked by your ISP or not.
## When you need (private) (obfuscated) bridges for the Tor Browser Bundle,
## you will need them for Whonix as well.
</pre>

=== Import Whonix images ===
Importing the images with the VirtualBox GUI should work well in most cases. If not, please check first if you have enough free disk space. Please also refer to the Whonix [[Install|Install Screenshots]] or [[Videos|Video Tutorials]]. Also check if the checksums of the ova images match, which is explained at the top of this page.

Delete any half imported or otherwise broken virtual machine images by using the VBoxManage command line tool. Copy the output.

<pre>VBoxManage unregistervm "Whonix-Gateway" --delete</pre>

<pre>VBoxManage unregistervm "Whonix-Workstation" --delete</pre>

Go to the folder where you downloaded Whonix. Import Whonix-Gateway and Whonix-Workstation by using the VBoxManage command line tool.

<pre>VBoxManage import Whonix-Gateway.ova</pre>

<pre>VBoxManage import Whonix-Workstation.ova</pre>

Clean (anonymize) the output.

<pre># Remove operating system user name or any problematic paths.</pre>

[[Contact|Contact Whonix developer]] by sending the output.

<pre>.</pre>

=== No network inside Whonix? ===
If you have trouble with networking inside Whonix virtual machines, maybe something went wrong while installing VirtualBox. In this case,

# Please install some operating system in one of your own virtual machine or download a regular image without Tor enforcement [http://virtualboximages.com/ elsewhere].
# Try if networking is functional in the freshly downloaded non-Whonix virtual machine.
# If it's not working: then Whonix won't work either. You need to sort that out first. Try re-installing VirtualBox. Deinstall VirtualBox, reboot, re-install VirtualBox, reboot, try again.
# If it's working: add this to your support request or bug report, that networking in other non-Whonix VMs is working.

== On the Gateway ==
=== As user {{Code2|user}} ===
Login as user {{Code2|user}}.

<pre>sudo su user</pre>

Check your <code>route</code> command, make sure the network 192.168.0.0 is associated with eth1.

<pre>route</pre>

Check if Tor is running with 'pgrep tor -l', this should return something like "103 tor". If not try 'sudo service tor start' and check for any errors.

<pre>pgrep tor -l</pre>

Check the status of Tor.

<pre>sudo service tor status | less</pre>

Should reply with.

<pre>tor is running.</pre>

Restart Tor.

<pre>sudo service tor restart | less</pre>

Tor should show only notices, no errors.

Verify Tor configuration is valid:

<pre>sudo tor --verify-config | less</pre>

You should see confirmation:

<pre>Configuration was valid</pre>

Ping the Whonix-Workstation.

<pre>ping 192.168.0.11</pre>

Ping VirtualBox.

<pre>
ping 10.0.2.2
</pre>

Should show {{Code2|Packet filtered}}.

nslookup should NOT work.

<pre>nslookup google.com</pre>

Should show timeout.

=== As user {{Code2|unsafe}} ===
Login as user {{Code2|unsafe}}.

<pre>sudo su unsafe</pre>

'''The following tests in this very "Login as unsafe" chapter might reveal, that you are a Whonix user. Omit them, if that is of concern for you.'''

unsafe user account has no password. Login with

<pre>sudo su unsafe</pre>

Remove write protection from /etc/resolv.conf

<pre>chattr -i /etc/resolv.conf</pre>

Restart networking. DHCP will rewrite /etc/resolv.conf (Temporary login as root.)

<pre>service networking restart</pre>

Check /etc/resolv.conf.

<pre>cat /etc/resolv.conf</pre>

Content should be:

<pre>nameserver 10.0.2.2</pre>

Check if dns resolution is functional.

<pre>nslookup google.com</pre>

== Tests on both Virtual Machines ==
Run the following tests on Whonix-Gateway and on Whonix-Workstation.

Login as user {{Code2|user}}.

<pre>sudo su user</pre>

Check time.

<pre>date</pre>

{{Code2|sudo dpkg-reconfigure -a}} must be silent, i.e. not show any errors, must show output at all. Will take a while...

<pre>sudo dpkg-reconfigure -a</pre>

{{Code2|sudo dpkg --configure -a}} must be silent, i.e. not show any errors, must show output at all. Will take a while...

<pre>sudo dpkg --configure -a</pre>

Test update-grub.

<pre>sudo update-grub</pre>

Run 'locale'. Must not report any error.

<pre>
locale
sudo locale
</pre>

Restart networking:

<pre>sudo service networking restart | less</pre>

Apt-get must be fully functional.

<pre>
sudo apt-get update
sudo apt-get dist-upgrade
</pre>

Test whonixcheck.

<pre>whonixcheck</pre>

Test whonixcheck with debugging.

<pre>whonixcheck --verbose</pre>

Check the timezone.

<pre>cat /etc/timezone</pre>

Must be {{Code2|Etc/UTC}}.

= Advanced users / developers and testers only =

== On Whonix-Gateway and Whonix-Workstation ==
Check if there are any DENIED messages from AppArmor inside /var/log/syslog.

<pre>cat /var/log/syslog | grep DENIED</pre>

Install dpkg-dev, which is required for dpkg-vendor.

<pre>sudo apt-get install --no-install-recommends dpkg-dev</pre>

Run {{Code2|dpkg-vendor --query vendor}}.

<pre>dpkg-vendor --query vendor</pre>

The output must be "Whonix".

Check apt config and see if periodic updates are disabled.

<pre>apt-config dump</pre>

Install test wise new kernel.

<pre>.</pre>

Remove test wise linux-image-486 kernel.

<pre>sudo apt-get remove linux-image-486</pre>

Check content of {{Code2|/etc/network/interfaces}}.

<pre>cat /etc/network/interfaces</pre>

Check content of {{Code2|/etc/resolv.conf}}.

<pre>cat /etc/resolv.conf</pre>

Check {{Code2|/etc/apt/sources.list}}.

<pre>cat /etc/apt/sources.list</pre>

Check iptables.

<pre>sudo iptables --list | more</pre>

=== Extra ===
Check if aptitude is functional.

<pre>sudo aptitude update</pre>

Check if /var/run/bootclockrandomization/success exists.

<pre>ls -la /var/run/bootclockrandomization/success</pre>

Check boot clock randomization log.

<pre>cat /var/log/bootclockrandomization.log

sudo service bootclockrandomization status

echo $?</pre>

Check if /var/run/timesanitycheck/success exists.

<pre>ls -la /var/run/timesanitycheck/success</pre>

Check log of time sanity check.

<pre>cat /var/log/timesanitycheck.log</pre>

Check status of time sanity check.

<pre>
sudo service timesanitycheck status

echo $?
</pre>

Check if /var/run/htpdate/success exists

<pre>ls -la /var/run/htpdate/success</pre>

Check log of htpdate.

<pre>cat /var/log/htpdate.log</pre>

Check status of htpdate.

<pre>
sudo service htpdate status

echo $?
</pre>

== Test on Whonix-Gateway ==
Check Tor version.

<pre>sudo tor --version</pre>

Check obfsproxy version. Must include obfs3.

<pre>obfsproxy -h</pre>

Check the logs.

<pre>less /var/log/tor/log</pre>

Test if arm is fully functional.

<pre>sudo arm</pre>

Test if arm's new identity function is working.

<pre>.</pre>

After logging in you should see Whonix help/welcome/disclaimer message.

<pre>.</pre>

Test connecting to an obfsproxy bridge. Check /var/log/syslog for AppArmor error messages.

<pre>.</pre>

== Test Whonix-Workstation ==

=== Basics ===

Ping the Whonix-Gateway. Will ''NOT'' work.

<pre># You will not be able to ping the Whonix-Gateway,
# because ICMP is blocked by the firewall.
# If you want to test it, you have to adjust the firewall,
# or to deactivate the firewall while testing.
ping 192.168.0.10</pre>

Power off Whonix-Gateway. Try to ping outside or to use the browser in Whonix-Workstation. Obviously, should NOT work.

<pre>.</pre>

Power on Whonix-Gateway again. Visit https://check.torproject.org/ with Tor Browser. You should see a “Congratulations”.

<pre>.</pre>

Use a Tor Browser to visit a .onion address (Try the [http://idnxcnkne4qt76tg.onion torproject.org hidden service])

<pre>http://idnxcnkne4qt76tg.onion</pre>

Whonix {{Whonix6}} and above: Test Tor Button's New Identity Feature.

<pre>.</pre>

Note: Ping commands should NOT work for external addresses from your Whonix-Workstation, ICMP traffic<ref>http://en.wikipedia.org/wiki/Internet_Control_Message_Protocol</ref> is not proxied, and filtered by Whonix's Firewall ({{WhonixFirewall}}), because Tor does not support UDP.

<pre>.</pre>

{{Code2|dig google.com}} must only return a single IP, compare with the output on Whonix-Gateway or Host.

<pre>dig google.com</pre>

Test gpg.

<pre>
## Example:
gpg --keyserver keys.gnupg.net --recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89
</pre>

Test wget uwt wrapper.

<pre>wget http://idnxcnkne4qt76tg.onion</pre>

Test wget through TransPort.

<pre>/usr/bin/wget http://idnxcnkne4qt76tg.onion</pre>

Setup a hidden service on Whonix-Gateway and test if it works. You can access your own test hidden service using Tor Browser.

<pre>.</pre>

See if whonixcheck gets autostarted.

<pre>.</pre>

Test XChat, connect to a an SSL protected IRC server.

<pre>.</pre>

test XChat, connect to a hidden IRC server.

<pre>.</pre>

Whonix {{Whonix6}} and above:

Install lighttpd.

<pre>sudo apt-get install lighttpd</pre>

Restart lighttpd.

<pre>sudo service lighttpd restart</pre>

Try to download the local index.html.

<pre>wget.real 127.0.0.1</pre>

Check.

<pre>cat index.html</pre>

Let's check if git is working. A good testing target would be a hidden git server. Therefore, check if [http://wzrtr6gpencksu3d.onion:8080/ Gittor] is online by visiting its list of [http://wzrtr6gpencksu3d.onion/gitlab/public public Gittor repositories]. Test it.

<pre>git clone http://wzrtr6gpencksu3d.onion/gitlab/w00t/pgp-auth.git</pre>

Check if regular git servers are reachable as well.

<pre>git clone https://github.com/Whonix/Whonix</pre>

=== Default Browser ===
==== Quick Launcher ====
Check if the Tor Browser quick launcher (fav icon) next to the start menu button is visible and startable.

==== Text Links ====
1. Open Konsole.

2. Run the following command.

<pre>
echo http://127.0.0.1
</pre>

3. Right click on the echoed {{Code2|http://127.0.0.1}} and choose open link.

4. Check if it opens asks for confirmation to open that file in Tor Browser. Check if nothing happens, when pressing {{Code2|No}} (which should be the default!) and check if it opens a new Tor Browser window when pressing {{Code2|Yes}}.

==== File Links ====
1. Create a file {{Code2|~/test.html}} with the following content.

<pre>
test
</pre>

2. Open Dolphin (default file manager) and double click on that file.

3. Check if it opens asks for confirmation to open that file in Tor Browser.

==== Terminal ====
1. Open Konsole.

2. Run the following command.

<pre>
x-www-browser http://127.0.0.1
</pre>

3. Check if it opens asks for confirmation to open that file in Tor Browser.

4. Check the same for.

<pre>
gnome-www-browser http://127.0.0.1
</pre>

5. Check the same for.

<pre>
xdg-open http://127.0.0.1
</pre>

=== Applications ===

* [[Metadata]]
* [[Mixmaster]]
* [[Tor Browser]]
* [[Manually_Updating_Tor_Browser]]: Check if Tor Browser Bundle 3.0 runs in Whonix out of the box (without using the {{Code|torbrowser}} script).

== Leak Tests ==
See [[Dev/Leak Tests]].

= Footnotes =
<references />

{{Footer}}

[[Category:Development]] [[Category:Design]] [[Category:Documentation]]
