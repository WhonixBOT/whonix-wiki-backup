{{Header}}
<!--
Copyright:

Liberte Linux Philosophy page Copyright (C) 2013 Maxim Kammerer <mk at dee dot su>
Whonix E-Mail wiki page Copyright (C) 2013 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

The complete text of the GNU General Public License can also be found online on gnu.org <http://www.gnu.org/licenses/gpl-2.0.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-2 file or in Whonix wiki on <https://sourceforge.net/p/whonix/wiki/GPLv2/>.
-->
{{#seo:
|description=Anonymous Email. Thunderbird. Remailer. Encryption. Mixmaster. Nym.
|og:image=https://www.whonix.org/w/images/d/d7/Enigmailsecuresettings.png
}}
[[Image:Thunderbird_17.0.png|400px|thumb|Mozilla Thunderbird with TorBirdy]]

= Introduction =

Users can either rely on [https://en.wikipedia.org/wiki/Webmail webmail] through [[Tor Browser]] or [[Encrypted_Email_with_Thunderbird_and_Enigmail|Encrypted Email with Mozilla Thunderbird, Enigmail and TorBirdy]].

These and other solutions are imperfect, but this is not a Whonix-specific issue -- it is a general issue with email over the Tor network.

= Safe Email Principles =

== Attachments ==

Email attachments are often used as an exploit vector for infecting the recipient's machine(s), deanonymizing users, or tracking when attachments are viewed, forwarded and so on. To avoid being infected with malware, it is safest to open attachments in a separate VM that does not have an Internet connection. In Qubes-Whonix, DisposableVMs are ideal for opening potentially dangerous files.

== Email Encryption ==

SSL/TLS encryption is inadequate to protect emails from prying eyes. Whonix supports the stock recommendation to use email encryption with Enigmail, which is a graphical front-end for using the GnuPG ("GPG") encryption program. This is a suitable solution for the majority of users, unless they have self-assessed as being a high-risk target. Similarly, the TorBirdy extension is also recommended to make Thunderbird connections take place over the Tor network. 

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Users should bear in mind that only later versions of Enigmail encrypt the subject line, but the [[Encrypted_Email_with_Thunderbird_and_Enigmail|Whonix configuration]] does ''not'' currently encrypt the subject line.
}}


Even if the email content is encrypted and subject lines are random, hidden, empty, use just a dash ({{Code2|-}}), or contain misleading content, the email provider can still log valuable data such as:

* When and with whom the user is in contact.
* When a user logged in and for how long.
* How often a user fetches mail.
* The Tor exit relay that was used for anonymous email.

Extensive metadata can potentially assist adversaries to make (false) assumptions about the user and their identity.

== Email Provider ==

Avoid well-known, large, corporate email providers who purposefully invade user privacy. For instance, [http://marketingland.com/yahoo-email-scan-microsoft-scroogled-46416 Yahoo] and [https://www.theguardian.com/technology/2014/apr/15/gmail-scans-all-emails-new-google-terms-clarify Gmail] use automated software to scan emails for keywords to tailor advertising and sell products. [https://www.nytimes.com/2014/03/21/technology/microsofts-software-leak-case-raises-privacy-issues.html?_r=0 Hotmail] also has a history of reading private emails and messages.

Prefer email providers that:

* Are free.
* Do not require JavaScript or other credentials for registration.
* Provide an [[Onion_Services|onion service]].
* Support PGP encryption and key management. 
* Have encrypted inboxes by default.
* Are outside [https://en.wikipedia.org/wiki/UKUSA_Agreement#9_Eyes.2C_14_Eyes.2C_and_other_.22third_parties.22 Fourteen Eyes] jurisdictions.
* Have desktop email compatibility with [https://www.thunderbird.net/ Mozilla Thunderbird]. <ref>Formerly "Icedove", but now re-branded in Debian following resolution of trademark issues.</ref>

The email provider will always represent a single point of failure. An email account may be quickly closed or suspended in response to external pressure by authorities. Similarly, the administrators may decide (or be forced) to terminate the service completely, or for specific individuals.

Users should create backup anonymous email addresses with different providers so that alternative communication channels remain open in response to potentially hostile third party actions.

== JavaScript and Other Tracking Vectors ==

Many webmail services require JavaScript, which when enabled allows discovery of how fast a user types, how long it takes to read a message, common spelling mistakes, time taken to correct mistakes, destination email addresses, and when emails are received and from whom. For this reason, webmail with active JavaScript is strongly discouraged. In general, a browser is not a safe environment to directly write text; learn more on the [[Surfing_Posting_Blogging| Surfing, Posting, Blogging]] page. 

Other potential tracking vectors include [[Data_Collection_Techniques#Web_Beacons_.28Webbugs.29|web beacons (webbugs)]] <ref>https://en.wikipedia.org/wiki/Web_beacon</ref> which are embedded on various websites, allowing cookies to be implanted in the browser in order to track browsing habits. [[Data_Collection_Techniques#Email_Beacons|Email beacons]] use a similar tracking technique. In this case, tiny images are embedded in emails with unique identifiers in the URL. After the email is opened and the image is requested, the email sender learns when the message was read, along with the IP address (or proxy) that was used.

== Registration ==

Basic precautions must be taken when registering an email address anonymously. For example, personal or identifying data must never be used, and the account must be exclusively paired with Tor. It is also safer to register an anonymous account with a provider that has never been used non-anonymously, and preferably without JavaScript.

== Recommendation ==

The best balance of usability and security is realized by configuring [[Encrypted_Email_with_Thunderbird_and_Enigmail|Encrypted Email with Mozilla Thunderbird, Enigmail and TorBirdy]]. It is also preferable to use POP3 and SMTP, since IMAP leaks more metadata. <ref>For example, how long a user has been running the mail client. IMAP comes with other risks, like saving drafts on the server as the user is typing.</ref>

= Email Provider Comparison =

== Introduction ==

Many users ask whether particular email providers are safer than others, for example Protonmail compared to Tutanota, Riseup, Gmail and so on. <ref>In the past users asked whether I2Pmail was safer than Tor Mail, although Tor Mail is [http://www.democraticunderground.com/10023403890 now offline] because it was hosted on Freedom Hosting which was taken down by the FBI.</ref> <ref>http://www.wired.com/threatlevel/2013/09/freedom-hosting-fbi/</ref> 

The earlier [[#Email_Provider|Email Provider]] section noted that email is always a single point of failure. Despite the many claims made by different services, they are unable to significantly improve privacy by design. Only a few questions are truly relevant:

# Is anonymous registration over Tor possible?
# Is any personal information required for registration?
# Can the account be exclusively paired with Tor - preferably via a (v3) onion service?
# Will the provider bow to external pressure by authorities and close or suspend the account when free speech issues arise? This has a greater impact for projects or movements, rather than individual accounts.

Privacy by policy can only ever provide a weak layer of protection compared to privacy by design. One possible exception might be "pseudo-email" services <ref>These have a different design to classical email and are therefore incompatible.</ref> like [[#BitMessage|BitMessage]], [[#I2P-Bote|I2P-Bote]] and [[#Freemail|Freemail]]. For instant messenger protocols with equivalent features, see [[Chat#Ricochet_IM|Richochet IM]] and [[Chat#RetroShare|RetroShare]].

A few mail providers who are frequently discussed as possible options are briefly considered below. Whonix stands neutral in this regard; objectively speaking no particular mail provider can be recommended.

== I2Pmail.org ==

* Quoted from wikipedia I2P<ref>https://en.wikipedia.org/wiki/I2P</ref>: "''I2P has a free pseudonymous email service run by an individual called Postman. Susimail is a web-based email client intended primarily for use with Postman's mail servers, and is designed with security and anonymity in mind. Susimail was created to address privacy concerns in using these servers directly using traditional email clients, such as leaking the user's hostname while communicating with the SMTP server. It is currently included in the default I2P distribution, and can be accessed through the I2P router console web interface. Mail.I2P can contact both I2P email users, via user@mail.I2P and public internet email users from a user@I2Pmail.org address.''"
* Cleaning the mail header is nice, but TorBirdy can do the same.
* It is technically impossible to encrypt mails to clearnet addresses <ref>Such as gmail, riseup etc.
</ref>, unless the sender and recipient are using end-to-end encryption such as OpenPGP.
* Therefore it is no more/less secure than using riseup, tormail, etc.
* Even though based on I2P, you can still use it in Whonix over Tor, see [[I2P]] for information how to tunnel I2P over Tor.
* We haven't heard about any email accounts which got suspended. (Well, we don't know about spam abuse, but that's another story.)
* Things said in the ''Threats'' chapter still apply.

== riseup.net ==

* Works reliable on mailing lists.
* Privacy by policy.
* Tor friendly.
* Servers hosted in the US.
* We haven't heard about any email accounts which got suspended. (Well, we don't know about spam abuse, but that's another story.)
* Things said in the ''Threats'' chapter still apply.
* Doesn't update warrant canary on a fixed, regular basis.
* "Forgot" to update canary on multiple occasions.
* [https://forums.whonix.org/t/riseup-net-likely-compromised riseup.net likely compromised]

== gmail ==

* Mike Hearn from Google addressed this issue on tor-talk<ref>https://lists.torproject.org/pipermail/tor-talk/2012-October/025923.html</ref>:

<blockquote>
Access to Google accounts via Tor (or any anonymizing proxy service) is not allowed unless you have established a track record of using those services beforehand. You have several ways to do that:
</blockquote>

<blockquote>
1) With Tor active, log in via the web and answer a security question, if any is presented. You may need to receive a code on your phone. If you don't have a phone number on the account the access may be denied.
</blockquote>

<blockquote>
2) Log in via the web without Tor, then activate Tor and log in again WITHOUT clearing cookies. The GAPS cookie on your browser is a large random number that acts as a second factor and will whitelist your access.
</blockquote>

<blockquote>
Once we see that your account has a track record of being successfully accessed via Tor the security checks are relaxed and you should be able to use TorBirdy.
</blockquote>

* Recommended against. Not Tor friendly. It would be very difficult to sign up using Tor and to exclusively use it over Tor. They most likely ask for phone verification and this is almost impossible to do without jeopardizing anonymity. <ref>Because they are also aware of online phone and messaging services and blacklisting the for verification upon knowledge.</ref>

== Anonymity Friendly Email Provider List ==
Another anonymity network provider (JonDos), maintains a list of their recommended email providers. Whonix developer Patrick Schleizer does NOT check this list. Might still be useful. See [https://anonymous-proxy-servers.net/en/help/email-provider.html list] ([https://archive.today/Rz9UN w]), look for "Recommended Mail Provider".

= Encrypted Email =

The Mozilla Thunderbird email client, together with the add-ons Enigmail and TorBirdy <ref>[https://trac.torproject.org/projects/tor/wiki/torbirdy TorBirdy Homepage]</ref> <ref>[https://github.com/ioerror/torbirdy TorBirdy Source Code]</ref> are installed by default in Whonix. If used correctly, they can be used for easy GPG encryption and anonymous (or pseudonymous) email messaging.

A [[Encrypted_Email_with_Thunderbird_and_Enigmail|complete set of instructions]] is now available to:

* Install the latest TorBirdy plugin for the Thunderbird email desktop client.
* Create an email account anonymously with a suitable provider via Tor Browser.
* Setup the new email account: Thunderbird account settings, install necessary extensions (add-ons), and enforce connections to the email provider's Onion Service.
* Create an OpenPGP encryption key pair and revocation certificate using the Enigmail Setup Wizard.
* Encrypt and store the revocation certificate securely.
* Configure Thunderbird preferences for greater security and anonymity.
* Configure additional OpenPGP preferences via Enigmail.
* Key management: import GPG public keys.
* Export the public key to a GPG key server (optional).
* Prepare an email signature with the public GPG key ID and fingerprint (optional).
* Compose and send a test encrypted email.
* Open an encrypted email received in Thunderbird.

= Email Alternatives = 

== Pretty Easy Privacy ==

pretty Easy privacy (p≡p) is a pluggable data encryption and verification system, which provides automatic key management and a KeySync protocol (yet being tested, not activated already) to sync private key material across the devices you want to read the same messages on.<ref>https://news.ycombinator.com/item?id=12827020</ref> It is cross-platform, message protocol agnostic and p2p. It exists as plugin for mail clients (Thunderbird and Outlook) on all major desktop systems and also as a mobile app for Android and iOS. Its cryptographic functionality is handled by open source p≡p engine relying on already existing cryptographic implementations in software like GnuPG, a modified version of netpgp (used only in iOS) and (as of p≡p v2.0) [[GNUnet]]. A non-transferable copyright cross-licensing agreement has just been concluded to allow distributing of the GNUnet binary as part of pEp under non-GPL licenses on restrictive platforms like the Apple store.<ref>https://lists.gnu.org/archive/html/gnunet-developers/2016-12/msg00046.html</ref>

In its default configuration, pEp does not rely on a web of trust or any form of centralized trust infrastructure, but instead lets users verify each others' authenticity by comparing cryptographic fingerprints in the form of natural language strings, which the pEp developers have chosen to call "trustwords". If both sides are using pEp, it automatically uses the anonymous transport provided by [[GNUnet]]. With that technology, meta data is no longer readable for an attacker. pEp is fully peer to peer itself. And only you have the keys. However it can inter-operate with legacy mail to secure that whenever applicable (if the intended recipient has a GPG key).<ref>https://pep-project.org/2014-09/s1410740156</ref> The pEp project is guided by a foundation that supports libre software.<ref>http://pep-project.org/</ref> Enigmail announced its intention to integrate the pEp encryption scheme by October 2016.<ref>https://en.wikipedia.org/wiki/Pretty_Easy_privacy</ref> pEp's code has been audited.<ref>https://pep.foundation/blog/press-release--pep-releases-first-code-audit-of-the-pep-engine/index.html</ref>

For further information on the project's check their [https://prettyeasyprivacy.com/faq/ milestones] [https://pep.foundation/pep-software/index.html pages].

== BitMessage ==

=== Intro ===
[https://bitmessage.org BitMessage] is a P2P asynchronous communications protocol used to send encrypted messages to another person or to many subscribers. The PyBitmessage client is in Python with a Qt GUI. It is decentralized and trustless, meaning that you need-not inherently trust any entities like root certificate authorities. It uses strong self-authenticating Bitcoin style addresses which means that the sender of a message cannot be spoofed. Messages for offline recipients are stored for up to 28 days before being deleted. It relies on Proof-of-Work to prevent spamming. Development of Android clients has stalled. Connecting with a mobile client needs a full node running on a user's PC. 

BitMessage hides sender/recipient metadata by broadcasting everybody's messages to everybody, acting as a simple private information retrieval (PIR) system. For the best possible anonymity run it in Whonix.

Some features include subscription support and Chans (Decentralized Mailing Lists) <ref>https://bitmessage.org/wiki/Decentralized_Mailing_List</ref> For other use-cases see the Arch [https://wiki.archlinux.org/index.php/Bitmessage wiki] on BitMessage.

Bridging services between the BitMessage network and legacy/regular email exist. The most popular is [https://bitmessage.ch/ bitmessage.ch], also available as an [http://bitmailendavkbec.onion/ onion service].
See [https://bitmessage.ch/setup.html setup instructions] to setup an account then [https://bitmessage.ch/register register]. Note that GPG needs to be used for confidentiality when communicating with email users. Thunderbird with Enigmail could be configured to use this [https://bitmessage.ch/faq.html service] (optionally over Tor) for seamless GPG support.

For comparison between it and other open source communications software see the [https://bitmessage.org/wiki/FAQ#How_does_Bitmessage_compare_to_other_messaging_methods FAQ].

No professional audit has been done for BitMessage to date. While we never condone criminal abuse of technology, its past use by miscreants running a ransomware operation (over Tor) without getting caught, shows that it is somewhat "battle-tested".<ref>https://www.bleepingcomputer.com/news/security/chimera-ransomware-uses-a-peer-to-peer-decryption-service/</ref> We hope that dissidents in rogue nations could profit from that experiment.

=== Install ===
The following instructions are for compiling/starting BitMessage and upgrading.<ref>https://bitmessage.org/wiki/Compiling_instructions</ref> [https://github.com/Bitmessage/PyBitmessage/issues/108 Bitmessage developers sign their their source code] '''TO-DO''': Add instructions to verfy git tags.

<pre>
sudo apt-get install git python openssl libssl-dev git python-msgpack python-qt4
</pre>

<pre>
git clone https://github.com/Bitmessage/PyBitmessage $HOME/PyBitmessage
</pre>

<pre>
~/PyBitmessage/src/bitmessagemain.py
</pre>

=== Upgrade ===
To upgrade Bitmessage run the following commands:

<pre>
cd $HOME/PyBitmessage
git pull
</pre>

=== Send Attachments ===
While explicitly attaching files is not supported, technically any file can be sent within the message body.<ref>https://tedjonesweb.blogspot.fr/2013/06/how-to-send-files-like-e-mail.html</ref>

First convert your file with base64 and then copy and paste the contents of the text file.

<pre>
base64 < binary.file > text.file
</pre>

Don't forget to include instructions to the receiver how to decode it. In order to decode the file, the recipient can copy and paste the code into file and convert it with this command:

<pre>
base64 -d < text.file > binary.file
</pre>
 
 
It is not very practical to send large files with BitMessage. Alternatively you can encrypt a file or archive containing a collection with GPG and upload it to un-trusted cloud storage and send recipients the link. Encryption can be done using a contact's public key or with symmetric encryption requiring a password which you send in BitMessage. For GPG symmetric encryption follow this example:

<pre>
gpg -vv -c --cipher-algo AES256 your-file.tar.gz
</pre>

Note that you can use the extended output of <code>pwgen</code> (pre-installed in Whonix 14+) for secure passwords.

=== User Data Back-Up ===
To backup the BitMessage profile and all user-generated program data, copy the folder under this path to your shared folder: <code>/home/user/.config/PyBitmessage</code>. Private keys are stored in '''keys.dat'''<ref>https://bitmessage.org/wiki/Keys.dat</ref> and other data such as inbox contents, contacts and black/white-list info is stored in the '''messages.dat'''<ref>https://bitmessage.org/wiki/Messages.dat</ref> database file. Copy the folder to this location to restore BitMessage data for new installs.

To maintain separate BitMessage identities, the safest way is to run each with its own BitMessage instance in separate Whonix-Workstations.

== Freemail ==
Freemail<ref>https://github.com/freenet/plugin-Freemail/blob/master/docs/spec/spec.tex</ref> is an email system implemented upon the anonymous data distribution network [[Freenet|Freenet]]. It is most similar to I2P-Bote, another anonymous and distributed email solution.  

Like most Freenet plugins, it makes use of an anti-spam mechanism called the Web of Trust<ref>https://wiki.freenetproject.org/Web_of_Trust</ref> to block abusers. Attachment sizes are virtually unlimited. Users would upload files on Freenet and link to them in Freemail messages.

See recommended [[Freenet#Tips|tips]] for Freemail.

== I2P-Bote ==

{{Template:I2P-Bote}}

== Anonymous Remailers ==

Anonymous [[Remailer|Remailers]] are a generation of privacy networks that precede Tor. These are single purpose networks (only support sending email) that use high-latency designs to defeat surveillance. The latest on-going project is the [[Mixmaster|Mixmaster network]]. While sending one-way messages is relatively straight forward, receiving replies requires registration with a [[Nymservers|Nymserver]] and setting up a program to fetch messages from the decentralized [[Usenet|Usenet]] boards.

= Footnotes / References =
{{reflist|close=1}}

= License =

<pre>Liberte Linux Philosophy page Copyright (C) 2013 Maxim Kammerer <mk at dee dot su>
Whonix Anonymity wiki page Copyright (C) 2013 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>

This program with ABSOLUTELY NO WARRANTY; for details see the wiki source code.
This is free software, and you are welcome to redistribute it
under certain conditions; see the wiki source code for details.</pre>
{{Footer}}

[[Category:Documentation]]
