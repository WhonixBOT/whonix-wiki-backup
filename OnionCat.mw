{{Header}}
{{#seo:
|description=OnionCat, GarliCat: Tunnel TCP, UDP, ICMP or any other protocol through Tor or i2p; IPv6, VPN-like, TAP/TUN tunneling device
}}

= OnionCat =
== Introduction ==
Introduction into OnionCat:

* [https://trac.torproject.org/projects/tor/wiki/doc/OnionCat torproject wiki about OnionCat] ([http://www.webcitation.org/6EQUoe9Cs w])
* [http://www.cypherpunk.at/onioncat cypherpunk.at/onioncat] ([http://www.webcitation.org/6EQUqZawz w])
* [https://cryptoanarchy.org/wiki/OnionCat cryptoanarchy.org about OnionCat] ([http://web.archive.org/web/20120810015004/https://cryptoanarchy.org/wiki/OnionCat webarchive]; [http://www.webcitation.org/6EQUZky7n webcitation])

== Status ==
* OnionCat (Tor) will work with Whonix. (Tested.)
* GarliCat (i2p) might partially work with Whonix. (Untested.)

== Over Tor ==
As long you want to use OnionCat over Tor, it may work.

IPv6 is currently disabled on Whonix-Gateway, because Tor doesn't support IPv6 yet (except for bridges), and because no one developed more than rudimentary IPv6 firewall rules for Whonix-Gateway yet. Whonix-Gateway's firewall blocks all IPv6 traffic including local traffic by default. Anyway, that will not be an issue. IPv6 on Whonix-Workstation, where OnionCat will be running, is enabled. Since only OnionCat's underlying operating system requires IPv6, but not the Tor process there will be no problem. OnionCat on Whonix-Workstation will translate the IPv6 requests to IPv4 to the Tor process which is running on Whonix-Gateway. Therefore no IPv6 on Whonix-Gateway is required.

<u>On your Whonix-Gateway.</u>

If you want to read and introduction about hidden services and to learn about about hidden service security, see [[Hidden Services]].

If you also want to run a hidden web server on the same .onion domain (nice for testing and learning Hidden Services basics), see [[Hidden Services]].

Open your {{Code2|/etc/tor/torrc}}.

<pre>
sudo nano /etc/tor/torrc
</pre>

Add. <ref>Arbitrary choice of port to avoid conflicts with custom onioncat setups.</ref>

<pre>
HiddenServiceDir /var/lib/tor/onioncat/
HiddenServicePort 8060 192.168.0.11:8060
</pre>

Reload Tor.

<pre>
sudo service tor reload
</pre>

Reminder: To get your hidden service url.

<pre>
sudo cat /var/lib/tor/onioncat/hostname
</pre>

Reminder: Backup your hidden service key, in case you want to be able to restore it, on another machine, on a newer Whonix-Gateway, after hdd failure, etc. You can find it here and need sudo to access it.

<pre>
/var/lib/tor/onioncat/private_key
</pre>

<u>On your Whonix-Workstation.</u>

Update your package lists

<pre>
sudo apt-get update
</pre>

Install onioncat.

<pre>
sudo apt-get install onioncat
</pre>

Start onioncat. Replace {{Code|address.onion}} with your actual hidden service url from above.

<pre>
sudo ocat address.onion -U -l 192.168.0.11:8060
</pre>

As of onioncat r555 (only applies to Jessie onwards) onioncat starts in unidirection 'client' mode by default. To accept incoming connections '''-U''' must be used. Mutual authentication is also available in this newer version which is needed to ensure that the identities of all endpoints engaged in a transaction are verified. <ref>http://manpages.debian.org/cgi-bin/man.cgi?query=ocat&apropos=0&sektion=0&manpath=Debian+testing+jessie&format=html&locale=en</ref>

Alternatively, if starting onioncat in 'client' mode run:
<pre>sudo ocat -R</pre>
At least one node has to run as a 'server' with a Hidden service configured for contact to occur.


==== Notes ====

==== Security ====
For official documentation on security read the reference at the end of this sentence. <ref>https://www.cypherpunk.at/onioncat_trac/wiki/Security</ref>

===== Tunneling IPv4 =====
For official documentation tunneling IPv4 read the reference at the end of this sentence.<ref>https://www.cypherpunk.at/onioncat_trac/wiki/IPv4</ref>

===== Debugging =====
<u>On your Whonix-Workstation.</u>

To terminate onionat you could use.

<pre>
sudo kill -sigint $(pgrep ocat)
</pre>

===== Miscellaneous =====
To make Onioncat to autostart with the system using the parameters listed above.
editing its configuration file:
<pre>sudo nano /etc/default/onioncat</pre>

Enable the autostart comment by removing '#':
<pre>ENABLED=yes</pre>

Add your settings:
<pre>DAEMON_OPTS="Paramters go here"</pre>

== Over i2p ==

GarliCat over i2p might only work, if you use [[i2p|ip2 over Tor]].

There was the idea to create an [[Dev/Inspiration#i2pBOX|i2pBOX]], but it never came to live due to lack of community interest, which means GarliCat directly over i2p will not be supported by Whonix.

As soon as i2p over Tor is working in Whonix-Workstation, you can probably follow the instructions on [https://cryptoanarchy.org/wiki/OnionCat cryptoanarchy.org] ([http://web.archive.org/web/20120810015004/https://cryptoanarchy.org/wiki/OnionCat webarchive]; [http://www.webcitation.org/6EQUZky7n webcitation]) without modifications.

= General Debugging Hints =
* There at multiple sources for issues, you might stumble upon.
* Therefore it's recommended, before you try using OnionCat with Whonix, if that doesn't endanger you, try first to successfully test OnionCat without Whonix.
* As soon as you learnt that, it eliminated one source for possible issues (OnionCat) and can start learning how to use it with Whonix (which might introduce new issues, but enhanced security will be your reward).
* You also have to learn first, how to use hidden services with Whonix, see [[Hidden Services|hosting hidden services]] for reference.

= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
