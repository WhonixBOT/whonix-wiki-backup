{{Header}}
{{#seo:
|description=I2P over Tor. Tunneling the I2P Anonymizing Network over the Tor Anonymizing Network. Connection Schema: Tor -> I2P -> Destination.
|image=https://www.whonix.org/w/images/b/b1/I2plogo.png
}}



__TOC__
-----
https://www.whonix.org/w/images/1/16/I2Pmainlogo.svg.png

{{Anchor|I2P anonymizing network - Introduction}}
== Introduction ==
=== Network ===
The '''Invisible Internet Project''' (I2P) is an anonymous network, exposing a simple layer that applications can use to anonymously and securely send messages to each other through "tunnels". The network itself is strictly message based (IP), but there is a library available to allow reliable streaming communication on top of it (TCP). All communication is end to end encrypted (in total there are four layers of encryption used when sending a message), and even the end points ("destinations") are cryptographic identifiers (essentially a pair of public keys).<ref>https://geti2p.net/en/about/intro</ref> This is known as [https://en.wikipedia.org/wiki/Garlic_routing Garlic routing] which is a variant of Onion routing and benefits from the research on the latter but makes some different tradeoffs.<ref>https://geti2p.net/en/research</ref> Each client application has their I2P "router" that finds other clients by querying against the fully distributed "network database" - a custom structured distributed hash table (DHT) based off the Kademlia algorithm. Every router transports traffic for its peers which it uses as cover traffic for its own.

Read more about I2P's technical details [https://geti2p.net/en/docs here].

I2P is focused on creating a community around P2P darknet services rather than providing "outproxies"(exits) to the clearnet.

The I2P development [https://geti2p.net/en/about/team team] is an open group, welcome to all who are interested in [https://geti2p.net/en/get-involved getting involved], and all of the code is [https://geti2p.net/en/get-involved/develop/licenses open source]. The core I2P SDK and the current router implementation is done in Java (currently working with both sun and kaffe, gcj support planned for later), and there is a [https://geti2p.net/en/docs/api/sam simple socket based API] for accessing the network from other languages (with a C library available, and both Python and Perl in development). The network is actively being developed and has not yet reached the 1.0 release, but the current [https://geti2p.net/en/get-involved/roadmap roadmap] describes their schedule.

=== Overview on ways to use I2P with Whonix ===
* You can either use [[#Inproxies inside Whonix-Workstation|inproxies inside Whonix-Workstation]] to browse Eepsites or install I2P inside Whonix-Workstation.
** The inproxy method is more suited for a causal use of I2P, where you just want to anonymously view an Eepsite and don't care about eavesdroppers as long you are anonymous.
* [[#Use I2P client inside Whonix-Workstation|Using the I2P client inside Whonix-Workstation (Preferred)]] is safer, all I2P traffic gets tunneled through Tor, fully featured but a tiny bit more difficult than installing I2P the ordinary way, i.e. using I2P in the clear, not over Tor.

=== Concepts ===

Much of Tor's concepts carry over to I2P despite the [https://geti2p.net/en/comparison/tor terminology] being somewhat different.

Other interesting concepts of note:

*[[Hidden_Services#Hidden_Service_Authentication|Tor HS "stealth mode"]] == I2P client whitelist<ref>https://twitter.com/i2p/status/756952247662239744</ref> or using Encrypted LeaseSets<ref>https://geti2p.net/sv/docs/how/network-database</ref> (I2P documentation is lacking but there are plans to improve)

*Tor "Single Onion Service" == I2P 0-hop tunnels<ref>https://twitter.com/i2p/status/756948810790821888</ref>

=== Searching I2P ===
The hidden service search engine https://ahmia.fi now supports I2P eepsites and Tor2Web plans on adding I2P support.<ref>https://lists.torproject.org/pipermail/tor-talk/2016-January/039814.html</ref>

Eepsite directories:

http://identiguy.i2p - lists all known and alive I2P websites.

-----

== Inproxies inside Whonix-Workstation ==

There are several I2P inproxies, those are similar to tor2web<ref>https://trac.torproject.org/projects/tor/wiki/doc/tor2web</ref>. Simply use [[Tor Browser]], which comes with Whonix by default.

Note that you will lose the end-to-end encryption to the eepsites, which I2P would provide, if you would install it directly inside Whonix-Workstation, or if you would use it the ordinary way. Depending on if the inproxy uses http (unencrypted), http'''s''' (or is reachable through a hidden service), also [[Warning#Tor_exit_nodes_can_eavesdrop_on_communications|Exit Nodes Eavesdropping]] applies. In any case, the I2P inproxy admin can also see all of your traffic in the I2P network and there is no way to prevent that.

List of I2P inproxy domains (bolded):

** Example:  [http://forum.i2p.rocks http://forum.i2p'''.rocks'''] <ref>* http://i2p.rocks/</ref>
** Example: [http://forum.i2p.re http://forum.i2p'''.re''']
** Example:  [http://forum.i2p.xyz http://forum.i2p'''.xyz''']
** Example:  [http://forum.i2p2piszzzndhfvr.onion http://forum'''.i2p2piszzzndhfvr.onion''']<ref>http://i2p2piszzzndhfvr.onion - simply append the Onion Service name after the short eepsite name, omitting the '''.i2p''' TLD as shown.</ref>
** https://www.hiddenservice.net/
* many others are down <ref>
* <s>awxcnx I2P eepsite inproxy</s>
** <s>[https://www.awxcnx.de/tor-I2P-proxy2-en.htm clearnet SSL version]</s>
** <s>[http://a5ec6f6zcxtudtch.onion/tor-I2P-proxy2-en.htm Tor hidden service version]</s>
** <s>[http://awxcnx.i2p/tor-I2P-proxy2-en.htm I2P eepsite version]</s>
* <s>awxcnx I2P IRC inproxy (See [[Chat]] for general chat safety advice.)</s>
** <s>[https://www.awxcnx.de/I2P-irc-en.htm clearnet SSL version]</s>
** <s>[http://a5ec6f6zcxtudtch.onion/I2P-irc-en.htm Tor hidden service version]</s>
** <s>[http://awxcnx.i2p/I2P-irc-en.htm I2P eepsite version]</s>
* <s>[http://6dyi4t72u7y6g763.onion/ 6dyi4t72u7y6g763.onion]</s>
* <s>or simply add '.to' after '.i2p'. For example, instant of ''http://forum.I2P'' you can use ''http://forum.i2p.to''.</s>
</ref>

-----

{{Anchor|Use I2P client inside Whonix-Workstation}}
== Use I2P client inside Whonix-Workstation (Preferred) ==
{{Anchor|Connecting to Tor before I2P}}
=== Connecting to Tor before I2P ===
It is possible to run I2P inside the Whonix-Workstation.<br />
'''user -> Tor -> I2P -> Internet'''

In case you want to do that, it is recommended to read the following two related wiki articles:

* [[Tunnels/Introduction]]
* [[Tunnels/Connecting_to_Tor_before_a_proxy]]
<br />
<u>Advantages</u>:

* Anonymity is provided by Tor.
* [http://127.0.0.1:7657/confignet I2P router console] works normal inside Tor Browser. No need to install a graphical user interface on the Whonix-Gateway.
* Eepsites (.i2p) can be reached directly from Tor Browser.
* I2P's end-to-end encryption will be used like usual.

<u>'''Warnings'''</u>:

* No Stream-Isolation Support
** I2P does not have stream isolation support meaning that visits to Eepsites are linkable and fingerprintable; each request includes the same X-I2P-Dest* headers, which are unique only to yourself. This might be true for outproxy requests as well.
** If you access site1.i2p and then site2.i2p, site3.i2p â€¦ and so on, each one of those operators will see the exact same X-I2P-Dest* values. Meaning if they are colluding, they will know that they were all accessed by the same person.
** The longer you leave I2P running, the better profile those operators can build on you. The X-I2P-Dest* values only change on restart of the I2P instance or on stop/start of the HTTP Proxy tunnel. I2P has no fix for this at the moment<ref>http://i2p2piszzzndhfvr.onion/doku.php/start</ref><ref>https://www.reddit.com/r/i2p/comments/579idi/warning_i2p_is_linkablefingerprintable/</ref>, however someone is writing an experimental plugin to provide a stream-isolating mechanism for http-over-I2P. The si-i2p-plugin is an I2P SAM application which presents an http proxy(on port 4443 by default) that acts as an intermediate between your browser and the I2P network. It uses the SAM library to create a unique destination for each I2P site that you visit. This way, your base32 destination couldn't be used to track you with a network of colluding sites.<ref>https://github.com/cmotc/si-i2p-plugin</ref>

<u>Disadvantages</u>:

* Adds load to Tor.
* Adds load to I2P.
* It is slower than I2P directly on Whonix-Gateway or the ordinary usage.
* No contribution to the I2P network  (leeching). <ref>Sounds worse than it is. Only very few people are expected to use I2P over Tor. I2P offers those options itself. It is not like a leeching mod.</ref>

<u>Installation and Setup</u>:

{{Third_Party_Repository}}


''Currently supported architectures include amd64, i386, armel, armhf (for Raspbian), and powerpc.''

1. Before adding the repo<ref>https://geti2p.net/en/download/debian</ref>, fetch the key and verify<ref>https://geti2p.net/_static/i2p-debian-repo.key.asc</ref> fingerprints. Always check the fingerprint for yourself. The output at the moment is:

'''TO-DO: Update signing key info when migration from KYTV infrastructure happens.'''

<pre>
pub  4096R/0x67ECE5605BCF1346 2013-10-10 I2P Debian Package Repository <killyourtv@i2pmail.org>
      Key fingerprint = 7840 E761 0F28 B904 7535  49D7 67EC E560 5BCF 1346
</pre>

Download key with scurl to home folder.

{{CodeSelect|code=
scurl -o i2p-pubkey.asc https://geti2p.net/_static/i2p-debian-repo.key.asc
}}

Check fingerprints/owners without importing anything.

{{CodeSelect|code=
gpg --keyid-format long --with-fingerprint i2p-pubkey.asc
}}

If it looks good import into trusted.gpg.d.<ref>To import asc key files into trusted.gpg.d they must be converted into a .gpg keychain file first.</ref>

{{CodeSelect|code=
gpg --no-default-keyring --keyring ./i2p-pubkey.gpg --import i2p-pubkey.asc
sudo cp i2p-pubkey.gpg /etc/apt/trusted.gpg.d/i2p-pubkey.gpg
}}

For default Whonix using Debian stable:

{{CodeSelect|code=
sudo su -c "echo -e 'deb http://deb.i2p2.no/ jessie main\ndeb-src http://deb.i2p2.no/ jessie main' > /etc/apt/sources.list.d/i2p-release.list"
}}

For Whonix build using Debian Testing or Unstable (Sid):

{{CodeSelect|code=
sudo su -c "echo -e 'deb http://deb.i2p2.no/ unstable main\ndeb-src http://deb.i2p2.no/ unstable main' > /etc/apt/sources.list.d/i2p-release.list"
}}

{{Update}}

{{CodeSelect|code=
sudo apt-get update
}}

Install I2P and dependencies.

{{CodeSelect|code=
sudo apt-get install i2p i2p-keyring
}}<ref>
[https://www.i2p2.de/debian.html I2P .deb Packages installation instructions from I2P's third party repository]
</ref>


2. Configure I2P as a service that automatically runs when your system boots, set the amount of Ram to your needs and leave the User as i2psvc

{{CodeSelect|code=
sudo dpkg-reconfigure i2p
}}


3. {{Template:FoxyProxy}}



4. Start/Stop the I2P service:

 Start the I2P service
{{CodeSelect|code=
sudo systemctl start i2p
}}

 Stop the I2P service
{{CodeSelect|code=
sudo systemctl stop i2p
}}

 Status of the I2P service
{{CodeSelect|code=
sudo systemctl status i2p
}}

'''OPTIONAL'''

To run I2P manually as User:
*Note: The config folder changes to /home/user/.i2p/
{{CodeSelect|code=
i2prouter start
}}


Please review and adjust the bandwidth settings on the configuration page, as the default settings of 300 KB/s down / 60 KB/s up are fairly conservative.

-----

= Services =

Many interesting [https://getI2P.net/en/docs/applications/supported features and functionality] are implemented for I2P in the form of stand-alone packages or plugins that can be optionally installed from their [http://i2pwiki.i2p/index.php?title=Plugins official plugin eepsite]. The instructions are simple to follow. The signing keys for these plugins is already built into the official I2P package and so are already whitelisted. This is not a complete list.

See [https://geti2p.net/en/docs/ports this] page for documentation about default port numbers of I2P plugins.

== I2P-Bote ==
{{Template:I2P-Bote}}

{{Anchor|I2PBOX}}

== RetroShare ==
The development of I2P's distributed forum software (Syndie) is stalled indefinitely. RetroShare is the recommended  replacement for Syndie's functionality which can be tunneled through I2P for enhanced anonymity. 

{{Template:I2P_Retroshare}}

{{Anchor|Installing I2P on Whonix-Gateway (I2PBOX)}}

== ZeroNet ==

As part of a summer coding project (as of 2016), ZeroNet is being modified to natively support tuneling over I2P.

Coming soon.

-----
= Installing I2P on Whonix-Gateway (I2P and Tor simultaneously) =
'''both simultaneously''':<br />
'''user -> Tor -> Internet'''<br />
'''user -> I2P -> Internet'''

development discussion:<br />
https://forums.whonix.org/t/i2p-running-on-whonix-gateway

-----

= Footnotes =
Whonix I2P documentation thread: <br />
https://forums.whonix.org/t/whonix-i2p-documentation/1729

<references/>

{{Footer}}

[[Category:Documentation]]
