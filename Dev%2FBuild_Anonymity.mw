{{Header}}
{{#seo:
|description=Staying anonymous while building {{project name}} from source code.
|image=https://www.whonix.org/w/images/6/6d/Building-1089861640.jpg
}}
{{forkme}}
= Build Anonymity =
This does only apply, if you are going to build {{project name}} from source, and/or if you are going to redistribute {{project name}} and/or if you are going to use Physical Isolation. This is not a {{project name}} specific problem. Most projects do not even have a chapter about build anonymity. While building {{project_name}}, software has to be downloaded. It is a unique selection of software and there is no way to make it non-unique. Therefore your '''i'''nternet '''s'''ervice '''p'''rovider (ISP) could guess, that you are building {{project_name}}. This should not be of any concern in a free country (free by your own definition), if the content of your traffic is not being observed or logged.

Especially, but not exclusively, in case you want to redistribute {{project_name}}, you might be interested to hide the fact, you are building {{project name}} (i.e. you want to stay anonymous).

To prevent any kind of personally identifiable or even fingerprintable information leaking from the build system into the {{project name}} images, it is recommended to build inside of an already torified Virtual Machine. <ref>Yes, this creates a bootstrap, chicken or egg problem. To solve it you can either download already existing {{project name}} binary builds or if you prefer to build from source, build a minimal torified machine yourself first while running any network traffic over Tor. Any help required with that? [[Contact]] us. See also [[Manually_Creating_{{project_name_short}}|Manually Creating {{project_name}}]].</ref> You can build {{project name}} inside an existing {{workstation_product_name}}, but it can also be built on a headless server.

It is also recommended to build in an already torified Virtual Machine, because that prevents leaks from the build system, which could help an attacker (with root access to the {{workstation_product_name}}), to gather identifiable information about that build system, that could ultimately lead back to your identity.

Beginning with {{project name}} 0.4.0, we use grml-debootstrap and chroot for virtual machine image creation. The grml-debootstrap source code tells, that it copies /etc/network/interfaces and /etc/resolv.conf into the chroot. grml-debootstrap also mounts a lot devices (/dev, /proc etc.) inside the chroot and later {{project name}} chroot also mounts some devices. That's why it is recommended to build inside an already torified virtual machine.

Building from source code naturally also leaves local traces on the disk, such as the source code itself and build dependencies. If that is of concern to you, it can be more easily disposed, when it is contained in a Virtual Machine.

It would also be possible to build directly on the host and torify all connections the scripts make, but we don't know what other grml-debootstrap/chroot related leaks there might be.

We know it is not the best solution to build inside a VM.

== VirtualBox inside VirtualBox ==
See [[Nested Virtualization]].

== corridor-Gateway ==
[https://github.com/rustybird/corridor corridor, a Tor traffic whitelisting gateway] might be useful. See also [https://lists.torproject.org/pipermail/tor-talk/2014-February/032152.html discussion on the tor-talk mailing list].

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]] [[Category:Development]]
