{{#seo:
|description=Technical Details on some of the Technical Measures by {{project name}} to increase privacy on {{project name}}.org Why {{project name}} uses MediaWiki, Phabricator and Discourse?
|image=https://www.{{project_clearnet}}/w/images/6/6d/Privacypolicy.jpg
}}
{{legal documents}}

'''See [[Privacy Policy]].'''

'''These technical details are not part of [[Privacy Policy]].'''

In any case, it is recommended to visit this website using either Tor Browser in {{project name}} or the Tor Browser Bundle.

= Overview =

{| class="wikitable"
|-
|Valid SSL Certificate
|{{Yes}}
|-

|HTTPS Everywhere <ref>https://www.eff.org/https-everywhere</ref> Inclusion
|{{Yes}} <ref>https://trac.torproject.org/projects/tor/ticket/9143</ref>
|-

|Passed Qualys SSL LABS <ref>https://www.ssllabs.com/</ref> SSL Server Test <ref>https://www.ssllabs.com/ssltest/index.html</ref>:
|{{Yes}}, A+ rating. <ref>https://www.ssllabs.com/ssltest/analyze.html?d={{project name short}}.org</ref>
|-

|HSTS <ref>https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security</ref>
|{{Yes}} <ref>
{{CodeSelect|code=
curl -i https://{{project clearnet}}
}}
</ref>
|-

|HSTS Preloading List <ref>
http://blog.chromium.org/2011/06/new-chromium-security-features-june.html</ref> <ref>http://blog.stalkr.net/2011/08/hsts-preloading-public-key-pinning-and.html
</ref> <ref>
http://www.chromium.org/sts</ref> <ref>https://blog.mozilla.org/security/2012/11/01/preloading-hsts/
</ref> <ref>
https://bugzilla.mozilla.org/show_bug.cgi?id=861960
</ref>
| {{Yes}} <ref>
https://github.com/{{project_name_short}}/{{project_name_short}}/issues/34
</ref> <ref>
http://src.chromium.org/viewvc/chrome?revision=209444&view=revision
</ref> <ref>
https://hstspreload.org/?domain=whonix.org
</ref>
|-

|Certificate Authority (CA) Pinning
|Obsolete <ref>https://phabricator.{{project name short}}.org/T66</ref>
|-

|DNS Certification Authority Authorization (CAA) Policy<ref>https://blog.qualys.com/ssllabs/2017/03/13/caa-mandated-by-cabrowser-forum</ref>
|{{Yes}}<ref>https://forums.{{project name short}}.org/t/dns-certification-authority-authorization-caa-policy-dnssec-for-{{project name short}}-org-ssllabs-com-test-results/5487</ref>
|-

|HTTP Public Key Pinning<ref>https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning</ref>
|Obsolete <ref>https://phabricator.{{project name short}}.org/T84</ref>
|-

|Expect-CT header <ref>https://scotthelme.co.uk/a-new-security-header-expect-ct/</ref>
|{{Yes}}<ref>
* https://forums.{{project name short}}.org/t/dns-certification-authority-authorization-caa-policy-dnssec-for-{{project name short}}-org-ssllabs-com-test-results/5487/2
* https://forums.{{project name short}}.org/t/expect-ct-security-header-for-whonix-org/10286
</ref>
|-

|certspotter <ref>https://github.com/SSLMate/certspotter</ref>
|{{Yes}}<ref>https://forums.{{project name short}}.org/t/dns-certification-authority-authorization-caa-policy-dnssec-for-{{project name short}}-org-ssllabs-com-test-results/5487/2</ref>
|-

|DNSSEC<ref>https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions</ref>
|{{Yes}}<ref>https://forums.{{project name short}}.org/t/dns-certification-authority-authorization-caa-policy-dnssec-for-{{project name short}}-org-ssllabs-com-test-results/5487</ref>
|-

|Flagged Revisions <ref>https://www.mediawiki.org/wiki/Extension:FlaggedRevs/</ref>
|{{Yes}}, admins must verify changes before they become the default version.
|-

|Content Security Policy (CSP)
|{{Yes}}, A Rating. <ref>
https://securityheaders.io/?followRedirects=on&hide=on&q={{project name short}}.org
</ref> <ref>https://phabricator.{{project name short}}.org/T70 </ref> <ref>https://forums.{{project name short}}.org/t/{{project name short}}-website-security-rating-b-mozilla-observatory-content-security-policy-csp/3874</ref> <ref>https://forums.{{project name short}}.org/t/content-security-policy-now-deployed-on-{{project name short}}-websites/5494</ref>
|-

|Feature-Policy
|{{Yes}}
|-

|Secondary <code>.onion</code> Domain <ref>Optional Tor onion service (<code>.onion</code> domain); alternative [[Onion_Services#Notes_about_End-to-end_Security_of_Onion_Services|end-to-end encrypted/authenticated connection]]; in this use case, not for location privacy; backup in case DNS is not functional.
</ref>
|{{Yes}} <ref>
{{project_onion}}
</ref> <ref>
See also [[Forcing .onion on Project|Forcing .onion on {{project_name}}.org]].
</ref>
|-

|Onion-Location <ref>
https://community.torproject.org/onion-services/advanced/onion-location/
</ref>
|{{Yes}} <ref>
https://forums.whonix.org/t/onion-forum-site-redirects-to-clearnet/197/15
</ref>
|-

|onion over TLS
|[[#Onion TLS on the {{project name}} Website|Unnecessary]].
|-

|}

If users have any further suggestions, please edit this entry or discuss possible changes in the {{project name}} forums.

* SPF - https://dmarcian.com/spf-survey/?domain={{project clearnet}}
* DKIM - https://dmarcian.com/dkim-inspector/?domain={{project clearnet}}&selector=default
* DMARK - https://dmarcian.com/dmarc-inspector/?domain={{project clearnet}}
* BIMI - https://mxtoolbox.com/SuperTool.aspx?action=bimi%3a{{project clearnet}}&run=toolpage
* https://www.digitalocean.com/community/tools/dns?domain={{project clearnet}}

{{Anchor|website}}

= Privacy on the {{project name}} Website =
The {{project name}} website <ref>Clearnet address: https://www.whonix.org and v3 onion address: {{project_onion}}</ref> is using popular web applications (web apps) like [https://www.mediawiki.org/wiki/MediaWiki MediaWiki], [https://phabricator.wikimedia.org/ Phabricator] and [https://www.discourse.org/ Discourse] (forum software). <ref>
This is common practice. For example [https://www.fsf.org/blogs/membership/introducing-our-new-associate-member-forum Free Software Foundation (FSF) also uses discourse.]
</ref> These are Freedom Software projects which are developed by third parties and not the {{project name}} team. As an end user of web apps, <code>{{project clearnet}}</code> has no control over changes made by the respective developers, whom do not necessarily (seldom in fact) prioritize privacy and security.

The {{project name}} platform is similarly based on many third party projects. For a simple (approximate) overview of the {{project name}} organizational structure, see: [[Linux_User_Experience_versus_Commercial_Operating_Systems|Linux User Experience versus Commercial Operating Systems]]. In essence, many independent projects provide their software and source code for free, and they can be modified or used in their default state. Due to the [[#Software Comparison|structure]] of Freedom Software development and the limited [[#Funding Comparison|funding]] available to {{project_name}}, it is infeasible to try and tackle usability, privacy and security issues posed by these web apps.

Consider the Discourse software for example:

* Google is used as the default search engine, even though it would be far preferable to configure another search engine which respects privacy. {{project name}} developers posted a [https://meta.discourse.org/t/feature-request-configurable-search-engine-for-forum-search/35793 Feature request: configurable search engine for forum search], but  discourse developers in essence replied "patches welcome".
* [https://forums.whonix.org/t/moderating-threads-moving-editing-does-not-always-funtion-properly/6334/6 Discourse does not work well with secondary onions].

Based on the preceding information, it is clear websites can at best only provide privacy <u>by policy</u>, which is equivalent to a promise. For detailed information on the {{project name}} privacy policy, see [[Privacy Policy|here]]. <ref>This includes any type of information that is collected and recorded, and how it may be used. The processing of any personal information is subject to the General Data Protection Regulation (GDPR).</ref>

In contrast, the [[What we do|main project activities]] undertaken by {{project name}} include research, development and maintenance of [https://github.com/{{project_name_short}} privacy <u>by design</u> software]. This is achieved via technological enforcement, [[Why_{{project_name_short}}_is_Freedom_Software|remaining free]], <ref>Free in terms of price, while also respecting user and developer freedoms.</ref> and utilizing Freedom Software which encourages external contributions, enhancements and audits.

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = {{project name}} [[Reporting_Bugs#Patches are Welcome|welcomes patches]] or [[Donate|financial contributions]] to support the development of desired features.
}}

See also [[Trust#Trusting_the_Whonix_.E2.84.A2_Website|Trusting the {{project_name}} Website]] and [[Website Tests]].

= View Counters on the {{project name}} Website =
View counter in the {{project name}} wiki have been disabled to reduce server load and because that is incompatible with caching.

View counters in {{project name}} forums were inaccurate and have therefore been disabled on 09 April 2021. <ref>
* https://meta.discourse.org/t/custom-css-for-removing-view-count-bar/74581/6
* https://meta.discourse.org/t/custom-css-for-removing-view-count-bar/74581/9
* https://meta.discourse.org/t/disable-click-counts/146622/2
</ref>

Since all webapps running the {{project name}} server lack access to IP addresses (for details see, [[Privacy Policy|{{project name}} Website privacy policy]], [[Privacy_Policy#IP_Addresses_and_IP_Addresses_Logging_Policy|{{project name}} Website IP Addresses and IP Addresses Logging Policy]]), it is impossible for these webapps to accurately count for example how many times a wiki page has been visited or how many times a forum post has been viewed.

= Onion TLS on the {{project name}} Website =
Would raise the question: use HSTS or not use HSTS for Onion TLS?

Does Tor Browser support HSTS? [https://gitlab.torproject.org/legacy/trac/-/issues/17965 Looks like, yes].

* If not using HSTS: If the user's browser is not instructed to enforce TLS, then what's the point?
* If using HSTS: That has potential to break connectivity when there are issues with the TLS Certificate Authority (CA), such as:
** CA goes out of business.
** CA terminates the services.
** CA starts charging for the service.
** (Legislation changes and) CA starts asking for things which cannot be provided with reasonable effort.

This issue is exacerbated since there is at the of writing only 1 CA that is offering affordable TLS certificates for onion domains, HARICA. (In future, specifically let's encrypt might offer the same and/or others might follow. But that's not the case yet.)

If required at some point for any reason, a downgrade from TLS-onion to non-TLS-onion downgrade would look bad.

There are two different systems.

* A) The "normal" internet. The usual top level doamins, <code>.com</code>, <code>.org</code>, etc. It is a centralized, permissioned system. The same applies for CA's.
* B) The "alternative" internet. For example <code>.onion</code> domains. decentralized, permissionless system. Anyone can set up an <code>.onion</code> without asking a central authority for permission.

Simplified: Connections to onions are already authenticated and end-to-end encrypted. (Details: [[Onion_Services#Notes_about_End-to-end_Security_of_Onion_Services|Notes about End-to-end Security of Onion Services]])

Using onions with a TLS certificate from a CA could be viewed as a downgrade. A decentralized, permissionless system is downgraded to a centralized, permissioned system.

{{project name}} Website is currently using let's encrypt. Server setup would become more complex by adding another CA, HARICA. The advantages do not outweigh the disadvantages.

Quote [https://blog.torproject.org/tls-certificate-for-onion-site Get a TLS certificate for your onion site]:

<blockquote>Our Community portal page about onion services give you a list of reasons why a service admin would need a TLS certificate as part of their implementation. Here are some of them:

* Websites with complex setups and that are serving HTTP and HTTPS content</blockquote>

Not the case.

<blockquote>
* To help the user verify that the .onion address is indeed the site you are hosting (this would be a manual check done by the user looking at the cert registration information)</blockquote>

Answered below (see <code>2.</code>).

<blockquote>
* Some services work with protocols, frameworks, and other infrastructure that has HTTPS connection as a requirement
In case your web server and your tor process are in different machines</blockquote>

Not the case.

Quote [https://community.torproject.org/onion-services/advanced/https/ We compiled some topics and arguments, so you can analyze what's the best for your onion site:]

<blockquote>1. As anyone can generate an onion address and its 56 random alphanumeric characters, some enterprise onions believe that associating their onion site to an HTTPS certificate might be a solution to announce their service to users. Users would need to click and do a manual verification, and that would show that they're visiting the onion site that they're expecting. Alternatively, websites can provide other ways to verify their onion address using HTTPS, for example, linking their onion site address from an HTTPS-authenticated page, or using Onion-Location.</blockquote>

Already using [https://community.torproject.org/onion-services/advanced/onion-location/ Onion-Location].

<blockquote>2. Another topic of this discussion is user expectations and modern browsers. While there is extensive criticism regarding HTTPS and the CA trust model, the information security community has taught users to look for HTTPS when visiting a website as a synonym of secure connection and avoid HTTP connections. Tor Developers and UX team worked together to bring a new user experience for Tor Browser users, so when a user visits an onion site using HTTP [https://support.torproject.org/onionservices/onionservices-5/ Tor Browser doesn't display a warning or error message].</blockquote>

Visitors using the onion are expected to use Tor Browser anyhow which as already mentioned in the quote, does not have this issue.

<blockquote>3. Some websites have a complex setup and are serving HTTP and HTTPS content. In that case, just using onion services over HTTP could leak secure cookies. We wrote about Tor Browser security expectations, and how we're working on onion services usability and adoption. There are some alternatives you might want to try to address this problem:</blockquote>

<blockquote>
* To avoid using an HTTPS certificate for your onion, the easiest answer is to write all your content so it uses only relative links. Then the content will work smoothly no matter what website name it's being served from.</blockquote>

This is implemented.

<blockquote>
* Another option is to use webserver rules to rewrite absolute links on the fly.</blockquote>

This is implemented.

<blockquote>
* Or use a reverse proxy in the middle or more specifically EOTK with an HTTPS certificate.</blockquote>

Not needed.

<blockquote>4. Actually HTTPS does give you a little bit more than onion services. For example, in the case where the webserver isn't in the same location as the Tor program, you would need to use an HTTPS certificate to avoid exposing unencrypted traffic to the network in between the two. Remember that there's no requirement for the webserver and the Tor process to be on the same machine.</blockquote>

Not the case for {{project name}} website. It does not require such a complex setup yet.

This might be revisited at a later point need arises and/or when Onion TLS support improved.

= See Also =
* [[Website_Tests|Website Tests / Server Tests]]
* [[Privacy Policy]]

= Footnotes =
{{reflist|close=1}}
{{Footer}}
