{{Header}}
{{Title|
title=Connecting to Tor before a VPN
}}
{{#seo:
|description=Instructions on how to connect to Tor before a VPN (User -> Tor -> VPN -> Internet)
|og:image=https://www.whonix.org/w/images/1/15/Ball-443853640.jpg
}}

{{Tunnels_Introduction}}

'''User -> Tor -> VPN -> Internet'''

= Increased Threat of Identity Correlation =
By design, a VPN routes all your applications - those without any proxy settings - through the VPN. You may not want this, as explained below. To circumvent that, you should use this Whonix-Workstation only for the particular application you want to route through the tunnel-link. You are advised to use [[Multiple Whonix-Workstations]].

= Prevent Bypassing the Tunnel-Link =
{{Prevent_Bypassing_the_Tunnel-Link}}

= Use a Fail Closed Mechanism =
{{Fail_Closed_Mechanism}}

Instructions below include a fail closed mechanism.

= Setup Tor before a VPN (User -> Tor -> VPN -> Internet) =
Connect to your VPN using your preferred software *inside* the (Whonix-)Workstation. Note that UDP-style VPN connections will not work with Tor. Therefore, use TCP.

'''User -> Tor -> VPN -> Internet'''

===== Preparation =====
{{VPN/Setup/Preparation}}

===== Firewall Settings =====
{{Firewall Settings Whonix-Workstation}}

Add the following settings. You can skip comments (starting with {{Code|#}}). Don't use {{Code|;}} for comments. <ref>That config file is a bash fragment.</ref> Likely you do not need to either uncomment (removing the {{Code|#}} in front) or modify {{Code|VPN_INTERFACE}} / {{Code|LOCAL_NET}}.

<pre>
WORKSTATION_FIREWALL=1
TUNNEL_FIREWALL_ENABLE=true
</pre>

Save.

===== Reload Firewall =====
{{Reload_Firewall_Whonix-Workstation}}

===== sudoers configuration =====
{{VPN/Setup/sudoers_configuration}}

Add.

<pre>
Defaults:tunnel env_keep += script_type
Defaults:tunnel env_keep += dev
</pre>

Save.

===== VPN Setup =====
====== Introduction ======
{{VPN/Setup/Introduction}}

====== Get VPN Certificate ======
{{VPN/Setup/Get VPN Certificate}}

====== VPN Credentials ======
{{VPN/Setup/VPN Credentials}}

====== VPN IP Address ======
{{VPN/Setup/VPN IP Address}}

====== VPN Configuration File ======
{{Open with root rights|filename=
/etc/openvpn/openvpn.conf
}}

Add.

Note: make sure to adjust the {{Code|remote 198.252.153.226 80}} variable in your config (unless you are using {{Code|nyc.vpn.riseup.net}} as your VPN service). Replace the IP ({{Code|198.252.153.226}}) and port ({{Code|80}}) to match your VPN service.

<pre>
##############################
## VPN provider specific settings ##
##############################
auth-user-pass auth.txt

## using nyc.vpn.riseup.net 80
remote 198.252.153.226 80

ca RiseupCA.pem

remote-cert-tls server

#############################
## VPN-Firewall specific settings ##
#############################
client
dev tun0
persist-tun
persist-key

script-security 2
up "/etc/openvpn/update-resolv-conf script_type=up dev=tun0"
down "/etc/openvpn/update-resolv-conf script_type=down dev=tun0"

user tunnel
iproute /usr/bin/ip_unpriv

############################################
## Connecting to Tor before a VPN specific settings #
############################################

proto tcp
</pre>

<ref>
The [https://github.com/Whonix/usability-misc/blob/master/usr/bin/ip_unpriv /usr/bin/ip_unpriv] wrapper script is being provided by the [https://github.com/Whonix/usability-misc usabilty-misc] package.

The [https://github.com/Whonix/usability-misc/blob/master/etc/sudoers.d/tunnel_unpriv /etc/sudoers.d/tunnel_unpriv] wrapper script is being provided by the [https://github.com/Whonix/usability-misc usabilty-misc] package.

The [https://github.com/Whonix/usability-misc/blob/master/lib/systemd/system/openvpn%40openvpn.service.d/50_unpriv.conf /lib/systemd/system/openvpn@openvpn.service.d/50_unpriv.conf] wrapper script is being provided by the [https://github.com/Whonix/usability-misc usabilty-misc] package.
</ref> <ref>We must run OpenVPN as user 'tunnel', because that is the only user besides user {{Code2|clearnet}} that will be allowed to establish external connections when using Whonix Firewall setting VPN_FIREWALL=1.</ref>

Save.

====== install resolvconf ======
{{VPN/Setup/install_resolvconf}}

====== DNS Configuration ======
{{Open with root rights|filename=
/usr/lib/tmpfiles.d/50_openvpn-unpriv.conf
}}

Add. <ref name=Whonix14 />

<pre>
d       /run/resolvconf 0775    root      tunnel    -       -
d       /run/resolvconf/interface         0775      root    tunnel    -    -
</pre>

Save.

Adjust permissions. <ref name=Whonix14>Removeable in Whonix 14 since merged in usablity-misc package.</ref>
<pre>
sudo chown --recursive root:tunnel /run/resolvconf
</pre>

<pre>
sudo chmod --recursive 775 /run/resolvconf
</pre>

{{Open with root rights|filename=
/etc/resolvconf/run/interface/original.resolvconf
}}

Comment everything out by adding a # in front of all entries. Alternatively empty or delete that file.

Save.

==== Setup ====
====== Configuration Folder Permissions ======
{{VPN/Setup/Configuration Folder Permissions}}

===== systemd setup =====
{{Template:VPN/Setup/Systemd}}

===== resolvconf adjustments =====
Restart resolvconf.

<pre>
sudo service resolvconf restart
</pre>

===== Verify DNS Settings =====
<pre>
sudo cat /etc/resolv.conf
</pre>

Should not include the following settings.<ref>These is the standard Whonix DNS server.</ref>

<pre>
nameserver 10.152.152.10
</pre>

Should not include the following settings.<ref>These are standard Qubes DNS servers.</ref>

<pre>
nameserver 10.137.3.1
nameserver 10.137.3.254
</pre>

Should include only the DNS server of your DNS provider. For example.

<pre>
nameserver 10.5.0.1
</pre>

===== whonixcheck =====
whonixcheck cannot work in this configuration out of the box. To unbreak it.

{{Open with root rights|filename=
/etc/whonix.d/50_user.conf
}}

<pre>
whonixcheck_skip_functions+=" check_tor_bootstrap "
whonixcheck_skip_functions+=" check_tor_socks_port_reachability "
whonixcheck_skip_functions+=" check_tor_socks_port "
whonixcheck_skip_functions+=" check_tor_trans_port "
whonixcheck_skip_functions+=" check_stream_isolation "
whonixcheck_skip_functions+=" download_whonix_news "

## {{ Alternative to disabling check_tor_trans_port.

## Make the Tor TransPort test work by simulating the Tor SocksPort test succeeded.
#CHECK_TOR_RESULT_SOCKS_PORT=0

## Do not warn if Tor was not detected. (Will be the VPN.)
#WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1

## }}

## {{ Alternative to download_whonix_news.

## Download news through system default.
#CURL_PROXY_WHONIX_NEWS="--fail"

## }}
</pre>

Save.

===== Qubes specific =====
When using a TemplateBasedVM, to persist these changes use the Qubes bind dirs mechanism.

<pre>
sudo mkdir /rw/config/qubes-bind-dirs.d
</pre>

{{Open with root rights|filename=
/rw/config/qubes-bind-dirs.d/50_user.conf
}}

<pre>
binds+=( '/etc/sudoers.d/tunnel_unpriv' )
binds+=( '/etc/openvpn' )
binds+=( '/lib/systemd/system/openvpn@openvpn.service' )
binds+=( '/etc/systemd/system/multi-user.target.wants/openvpn@openvpn.service' )
</pre>

TODO: Does not work yet. Files need to exist first.

<pre>
/usr/lib/qubes/bind-dirs.sh umount
</pre>

<pre>
/usr/lib/qubes/bind-dirs.sh
</pre>

===== Test =====
Test ping to IP. Ping some IP. Ping google's DNS server or maybe better some server of your choice.

<pre>
ping 8.8.8.8
</pre>

Test DNS. DNS resolve some domain. Resolve check.torproject.org or maybe better some server of your choice.

<pre>
nslookup check.torproject.org
</pre>

Test DNS and output IP address.

<pre>
whonixcheck_skip_functions="" \
CHECK_TOR_RESULT_SOCKS_PORT=0 \
WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1 \
whonixcheck --function check_tor_trans_port
</pre>

===== Done =====
Done.

===== Troubleshooting =====
{{VPN-Firewall/Troubleshooting}}

= Leak Tests =
== Introduction ==
We want to verify, that the traffic always goes {{Code2|User -> Tor -> VPN -> Internet}} and not only {{Code2|User -> Tor -> Internet}}. Therefore we should test the Tor Browser, a uwt wrapper deactivated application as well as a regular application.

== Browser IP Test ==
You can skip this test if you do not care about using Tor Browser through the VPN.

If you did correctly configure everything, test your setup. Open https://check.torproject.org in Tor Browser. It will tell you then "{{Code2|You are not using Tor.}}" and you'll see your VPN's IP. In fact your VPN was tunneled through Tor first. (Because Whonix-Workstation can not make any non-Tor connections by design, everything is tunneled over Tor.)

== uwt wrapped application test ==
Connect to check.tpo.

<!-- Cannot use CodeSelect becuase it does not like the pipe |. -->
<pre>
curl --silent --tlsv1 --proto =https -H 'Host: check.torproject.org' -k https://38.229.72.22 | grep IP
</pre>

Should show something along the lines: {{Code2|Your IP address appears to be: xxx.xxx.xxx.xxx}}<br />
Should show the IP of your VPN.

== regular application test ==
Same test as above, but use {{Code2|curl.anondist-orig}} <ref>Real {{Code2|curl}} binary.</ref> rather than {{Code2|curl}} <ref>{{Code2|uwt}} wrapped version of {{Code2|curl}}.</ref>.

<!-- Cannot use CodeSelect becuase it does not like the pipe |. -->
<pre>
curl.anondist-orig --silent --tlsv1 --proto =https -H 'Host: check.torproject.org' -k https://38.229.72.22 | grep IP
</pre>

= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
