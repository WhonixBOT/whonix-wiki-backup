{{Header}}
{{Title|
title=Connecting to Tor before a VPN
}}
{{#seo:
|description=Instructions on how to connect to Tor before a VPN (User -> Tor -> VPN -> Internet)
|og:image=https://www.whonix.org/w/images/1/15/Ball-443853640.jpg
}}

{{Tunnels_Introduction}}

'''User -> Tor -> VPN -> Internet'''

__TOC__

-----

= Increased Threat of Identity Correlation =
By design, a VPN routes all your applications - those without any proxy settings - through the VPN. You may not want this, as explained below. To circumvent that, you should use this Whonix-Workstation only for the particular application you want to route through the tunnel-link. You are advised to use [[Multiple Whonix-Workstations]].

= Prevent Bypassing the Tunnel-Link =
{{Prevent_Bypassing_the_Tunnel-Link}}

{{Anchor|Fail_Closed_Mechanism}}
= Use a Fail Closed Mechanism =
{{Fail_Closed_Mechanism}}

Instructions below include a fail closed mechanism.

-----

= Setup Tor before a VPN (User -> Tor -> VPN -> Internet) =
== Introduction ==
Two methods. 

* [[Qubes-Whonix]] users have the option to use a [[#Separate VPN-Gateway]] but could also use [[#Inside Whonix-Workstation]].
* [[Non-Qubes-Whonix]] users should prefer [[#Inside Whonix-Workstation]].

-----

== Separate VPN-Gateway ==
A separate VPN-Gateway between Whonix-Gateway and Whonix-Workstation, i.e. Whonix-Workstation -> VPN-Gateway -> Whonix-Gateway.

[[Qubes-Whonix]] only! [[Non-Qubes-Whonix]] is [[unsupported]]!

'''User -> Tor -> VPN -> Internet'''

These "Separate VPN-Gateway" instructions are new. You might be one of the first users. You might run into minor issues. Please test and [https://forums.whonix.org/t/setup-a-vpn-in-proxyvm-over-sys-whonix report] how it went.

Create a new ProxyVM called for example VPN-Gateway.

Set the NetVM of the VPN-Gateway to Whonix-Gateway (commonly called {{Code2|sys-whonix}}).

{{VPN UDP Tor|/rw/config/vpn/openvpn-client.ovpn}}

Setup the VPN-Gateway as per [https://www.qubes-os.org/doc/vpn/ Qubes VPN documentation] for ProxyVMs. It is also highly recommended to setup the iptables firewall rules as described in Qubes VPN documentation to prevent clearnet traffic when the VPN breaks down. (In that cases, Whonix-Workstation (commonly called {{Code2|anon-whonix}} traffic would only go user -> Tor -> Internet as opposed to user -> Tor -> VPN -> Internet, which is what you want if you are reading this documentation chapter.

Check, that your VPN-Gateway is fully functional. Test connectivity from inside the VPN-Gateway.

In Whonix-Workstation (commonly called {{Code2|anon-whonix}}) you might want to apply instructions from above chapter [[#Prevent Bypassing the Tunnel-Link]].

No DNS configuration required. System DNS should work out of the box. <ref>
Because a properly configured Qubes VPN-Gateway will be able to resolve DNS.
</ref>

If you would use [[Tor Browser]], it would show the following warning:
Something Went Wrong!<br />
Tor is not working in this browser.<br />
This is because Tor Browser can no longer access Tor's ControPort ([[Dev/CPFP|control-port-filter-proxy-python]]) on Whonix-Gateway.

For troubleshooting, see footnote. <ref>
* Check, that your VPN-Gateway is fully functional. Test connectivity from inside the VPN-Gateway.
* Add a non-Whonix VM behind your VPN-Gateway. For example, add a debian based AppVM behind your VPN-Gateway. Figure out if the VPN-Gateway works at all before involving Whonix.
</ref>

Done. It is recommended to run the related [[#Leak Tests]].

Whonix user forum discussion:<br />
https://forums.whonix.org/t/setup-a-vpn-in-proxyvm-over-sys-whonix

<ref>
* Qubes users mailing list discussion: https://groups.google.com/d/msgid/qubes-users/5759D76E.8000401%40riseup.net
* Qubes development ticket: https://github.com/QubesOS/qubes-issues/issues/2060
</ref>

-----

== Inside Whonix-Workstation ==
Connect to your VPN using your preferred software *inside* the (Whonix-)Workstation.

{{VPN UDP Tor|/etc/openvpn/openvpn.conf}}

'''User -> Tor -> VPN -> Internet'''

===== Whonix TUNNEL_FIREWALL vs standalone VPN-Firewall =====
{{Whonix_TUNNEL_FIREWALL_vs_standalone_VPN-Firewall}}

===== Preparation =====
{{VPN/Setup/Preparation}}

===== Prerequisite Knowledge =====
Highly recommended reading and understanding before proceeding: [[Whonix Debian Packages]]

===== Firewall Settings =====
{{Firewall Settings Whonix-Workstation}}

Add the following settings. You can skip comments (starting with {{Code|#}}). Don't use {{Code|;}} for comments. <ref>That config file is a bash fragment.</ref> Likely you do not need to either uncomment (removing the {{Code|#}} in front) or modify {{Code|VPN_INTERFACE}} / {{Code|LOCAL_NET}}.

<pre>
WORKSTATION_FIREWALL=1
TUNNEL_FIREWALL_ENABLE=true
</pre>

Save.

===== Reload Firewall =====
{{Reload_Firewall_Whonix-Workstation}}

===== sudoers configuration =====
{{VPN/Setup/sudoers_configuration}}

Add.

<pre>
Defaults:tunnel env_keep += script_type
Defaults:tunnel env_keep += dev
</pre>

Save.

===== VPN Setup =====
====== Introduction ======
{{VPN/Setup/Introduction}}

====== Get VPN Certificate ======
{{VPN/Setup/Get VPN Certificate}}

====== VPN Credentials ======
{{VPN/Setup/VPN Credentials}}

====== VPN IP Address ======
{{VPN/Setup/VPN IP Address}}

====== VPN Configuration File ======
{{Open with root rights|filename=
/etc/openvpn/openvpn.conf
}}

Add.

Note: make sure to adjust the {{Code|remote 198.252.153.226 80}} variable in your config (unless you are using {{Code|nyc.vpn.riseup.net}} as your VPN service). Replace the IP ({{Code|198.252.153.226}}) and port ({{Code|80}}) to match your VPN service.

<pre>
##############################
## VPN provider specific settings ##
##############################
auth-user-pass auth.txt

## using nyc.vpn.riseup.net 80
remote 198.252.153.226 80

ca RiseupCA.pem

remote-cert-tls server

####################################
## TUNNEL_FIREWALL specific settings ##
####################################
client
dev tun0
persist-tun
persist-key

script-security 2
up "/etc/openvpn/update-resolv-conf script_type=up dev=tun0"
down "/etc/openvpn/update-resolv-conf script_type=down dev=tun0"

user tunnel
iproute /usr/bin/ip_unpriv

############################################
## Connecting to Tor before a VPN specific settings #
############################################

proto tcp
</pre>

<ref>
The [https://github.com/Whonix/usability-misc/blob/master/usr/bin/ip_unpriv /usr/bin/ip_unpriv] wrapper script is being provided by the [https://github.com/Whonix/usability-misc usabilty-misc] package.

The [https://github.com/Whonix/usability-misc/blob/master/etc/sudoers.d/tunnel_unpriv /etc/sudoers.d/tunnel_unpriv] wrapper script is being provided by the [https://github.com/Whonix/usability-misc usabilty-misc] package.

The [https://github.com/Whonix/usability-misc/blob/master/lib/systemd/system/openvpn%40openvpn.service.d/50_unpriv.conf /lib/systemd/system/openvpn@openvpn.service.d/50_unpriv.conf] wrapper script is being provided by the [https://github.com/Whonix/usability-misc usabilty-misc] package.
</ref> <ref>We must run OpenVPN as user 'tunnel', because that is the only user besides user {{Code2|clearnet}} that will be allowed to establish external connections when using Whonix Firewall setting VPN_FIREWALL=1.</ref>

Save.

====== install resolvconf ======
{{VPN/Setup/install_resolvconf}}

This will remove several Whonix meta packages. To find out what that is about and what the following command is good for, please read the prerequisite knowledge wiki page [[Whonix Debian Packages]].

<pre>
sudo aptitude keep-all
</pre>

Next time you run [[whonixcheck]] you will get the following warning.

<code>Whonix Meta Packages test Result: Whonix-Workstation detected that the meta package (non-)qubes-whonix-workstation is not installed</code>

The background of this is also explained on the wiki page [[Whonix Debian Packages]].

====== DNS Configuration ======
{{Open with root rights|filename=
/usr/lib/tmpfiles.d/50_openvpn_unpriv.conf
}}

Add. <ref name=Whonix14 />

<pre>
d       /run/resolvconf 0775    root      tunnel    -       -
d       /run/resolvconf/interface         0775      root    tunnel    -    -
</pre>

Save.

Adjust permissions. <ref name=Whonix14>Removeable in Whonix 14 since merged in usablity-misc package.</ref>
<pre>
sudo chown --recursive root:tunnel /run/resolvconf
</pre>

<pre>
sudo chmod --recursive 775 /run/resolvconf
</pre>

{{VPN/Setup/DNS Configuration}}

==== Setup ====
====== Configuration Folder Permissions ======
{{VPN/Setup/Configuration Folder Permissions}}

===== systemd setup =====
{{Template:VPN/Setup/Systemd}}

===== resolvconf adjustments =====
{{VPN/Setup/resolvconf adjustments}}

===== Verify DNS Settings =====
See current /etc/resolv.conf settings.

<pre>
sudo cat /etc/resolv.conf
</pre>

Should not include the following settings.<ref>These is the standard Whonix DNS server.</ref>

<pre>
nameserver 10.152.152.10
</pre>

Should not include the following settings.<ref>These are standard Qubes DNS servers.</ref>

<pre>
nameserver 10.137.3.1
nameserver 10.137.3.254
</pre>

Should include only the DNS server of your DNS provider. For example.

<pre>
nameserver 10.5.0.1
</pre>

===== whonixcheck =====
whonixcheck cannot work in this configuration out of the box. To unbreak it.

{{Open with root rights|filename=
/etc/whonix.d/50_user.conf
}}

<pre>
whonixcheck_skip_functions+=" check_tor_bootstrap "
whonixcheck_skip_functions+=" check_tor_socks_port_reachability "
whonixcheck_skip_functions+=" check_tor_socks_port "
whonixcheck_skip_functions+=" check_tor_trans_port "
whonixcheck_skip_functions+=" check_stream_isolation "
whonixcheck_skip_functions+=" download_whonix_news "

## {{ Alternative to disabling check_tor_trans_port.

## Make the Tor TransPort test work by simulating the Tor SocksPort test succeeded.
#CHECK_TOR_RESULT_SOCKS_PORT=0

## Do not warn if Tor was not detected. (Will be the VPN.)
#WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1

## }}

## {{ Alternative to download_whonix_news.

## Download news through system default.
#CURL_PROXY_WHONIX_NEWS="--fail"

## }}
</pre>

Save.

===== Qubes specific =====
<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
Placeholder. Ignore the Qubes specific chapter for now. TODO
<div class="mw-collapsible-content">

When using a TemplateBasedVM, to persist these changes use the Qubes bind dirs mechanism.

<pre>
sudo mkdir /rw/config/qubes-bind-dirs.d
</pre>

{{Open with root rights|filename=
/rw/config/qubes-bind-dirs.d/50_user.conf
}}

<pre>
binds+=( '/etc/sudoers.d/tunnel_unpriv' )
binds+=( '/etc/openvpn' )
binds+=( '/lib/systemd/system/openvpn@openvpn.service' )
binds+=( '/etc/systemd/system/multi-user.target.wants/openvpn@openvpn.service' )
</pre>

TODO: Does not work yet. Files need to exist first.

<pre>
/usr/lib/qubes/bind-dirs.sh umount
</pre>

<pre>
/usr/lib/qubes/bind-dirs.sh
</pre>
</div>
</div>

===== Test =====
Test ping to IP. Ping some IP. Ping google's DNS server or maybe better some server of your choice.

<pre>
ping 8.8.8.8
</pre>

Test DNS. DNS resolve some domain. Resolve check.torproject.org or maybe better some server of your choice.

<pre>
nslookup check.torproject.org
</pre>

Test DNS and output IP address.

<pre>
whonixcheck_skip_functions="" \
CHECK_TOR_RESULT_SOCKS_PORT=0 \
WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1 \
whonixcheck --function check_tor_trans_port
</pre>

===== Done =====
Done. If you have any issues, see below chapter [[#Troubleshooting]]. Once it is working, it is recommended to run the [[#Leak Tests]].

===== Troubleshooting =====
{{VPN-Firewall/Troubleshooting}}

-----
= Leak Tests =
== Introduction ==
We want to verify, that the traffic always goes {{Code2|User -> Tor -> VPN -> Internet}} and not only {{Code2|User -> Tor -> Internet}}. Therefore you should run the following related leak tests inside Whonix-Workstation. Test Tor Browser, a uwt wrapper deactivated application as well as a regular application for leaks.

== regular application test ==
Same test as above, but use use curl without pre-configured [[Stream Isolation|stream isolation]].

<!-- Cannot use CodeSelect becuase it does not like the pipe |. -->
<code>
{{Curl_Plain}} --silent {{Curl Secure}} https://check.torproject.org | grep IP
</code>

<ref name=nodns>
In case you have no functional system DNS, you could also alternatively just test TCP.

The IP {{Code2|{{Check.torproject.org_IP}}}} might change. You can find out the current one by running the following command inside a VM that has functional system DNS. (Ideally inside a Whonix-Workstation.)

<pre>
nslookup check.torproject.org
</pre>
</ref> <ref>

<code>
{{Curl_Plain}} --silent {{Curl Secure}} -H 'Host: check.torproject.org' -k https://{{Check.torproject.org IP}} | grep IP
</code>
</ref>

Should show something along the lines: {{Code2|Your IP address appears to be: xxx.xxx.xxx.xxx}}<br />
Should show the IP of your VPN.

== uwt wrapped application test ==
Connect to check.torproject.org.

<!-- Cannot use CodeSelect becuase it does not like the pipe |. -->
<pre>
curl --silent {{Curl Secure}} https://check.torproject.org | grep IP
</pre>

<ref name=nodns /> <ref>
<code>
curl --silent {{Curl Secure}} -H 'Host: check.torproject.org' -k https://{{Check.torproject.org IP}} | grep IP
</code>
</ref>

== Browser IP Test ==
You can skip this test if you do not care about using Tor Browser through the VPN.

If you did correctly configure everything, test your setup. Open https://check.torproject.org in Tor Browser. It will tell you then "{{Code2|You are not using Tor.}}" and you'll see your VPN's IP. In fact your VPN was tunneled through Tor first. (Because Whonix-Workstation can not make any non-Tor connections by design, everything is tunneled over Tor.)

== DNS Leak Test ==
{{DNS Leak Tests Online}}

== Other Leak Tests ==
If you are feeling awesome, you could also run more general leak tests that are not related to tunneling. However, these are more difficult to do and target developers rather than users. If you are interested, see [[Dev/Leak_Tests|leak tests]].

-----
= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
