{{Header}}
{{Title|
title=Connecting to Tor before a VPN
}}
{{#seo:
|description=Instructions on how to connect to Tor before a VPN (<code>User</code> &rarr; <code>Tor</code> &rarr; <code>VPN</code> &rarr; <code>Internet</code>)
|image=https://www.{{project_clearnet}}/w/images/1/15/Ball-443853640.jpg
}}
[[image:Ball-443853640.jpg|thumb]]

'''<code>User</code> &rarr; <code>Tor</code> &rarr; <code>VPN</code> &rarr; <code>Internet</code>'''

__TOC__

= Introduction =

{{Tunnels_Introduction}}

By design, a VPN routes all your applications -- those without any proxy settings -- through the VPN. This may be undesirable as explained below; for example, it increases the threat of identity correlation. To circumvent this possibility, only use this {{workstation_product_name}} for particular applications that should be routed through the tunnel-link. Refer to the [[Multiple {{workstation_product_name_short}}|Multiple {{workstation_product_name}}]] wiki chapter for further instructions.

= Security Precautions =

== Prevent Bypassing of the Tunnel-Link ==

{{Prevent_Bypassing_the_Tunnel-Link}}

{{Anchor|Fail_Closed_Mechanism}}

== Use a Fail Closed Mechanism ==

{{Fail_Closed_Mechanism}}

Instructions below include a fail closed mechanism.

== VPN Client Choice ==

It is recommended to utilize OpenVPN. Other VPN clients are [[unsupported]] because we are unaware of any sane VPN client choice besides OpenVPN.

Using [https://bitmask.net/en Bitmask VPN] for this use case is not possible. <ref>https://0xacab.org/leap/bitmask-vpn</ref> In other words, you cannot use <code>user</code> &rarr; <code>Tor</code> &rarr; <code>bitmask</code> &rarr; <code>Internet</code>. <ref>Previously Bitmask did not support Tor. Broken link: https://github.com/leapcode/bitmask_client/issues/1009</ref>

= Set Up Tor before a VPN (User &rarr; Tor &rarr; VPN &rarr; Internet) =

== Introduction ==

Two configurations are available: 

* [[{{q project name short}}|{{q project name}}]] users have the option of a [[#Separate VPN-Gateway|Separate VPN-Gateway]], but could also use [[#Inside {{workstation_product_name}}|Inside {{workstation_product_name}}]] instructions.
* [[{{non q project name short}}|{{non q project name}}]] users should prefer [[#Inside {{workstation_product_name}}|Inside {{workstation_product_name}}]] instructions.

== Separate VPN-Gateway ==

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = [[{{q project name short}}|{{q project name}}]] only; [[{{non q project name short}}|{{non q project name}}]] is [[unsupported]].
}}

This configuration has a separate VPN-Gateway between {{gateway_product_name}} and {{workstation_product_name}}: <code>{{workstation_product_name}}</code> &rarr; <code>VPN-Gateway</code> &rarr; <code>{{gateway_product_name}}</code>.
 
<code>User</code> &rarr; <code>Tor</code> &rarr; <code>VPN</code> &rarr; <code>Internet</code>

{{Box|text=
'''1.''' Clone a Template. For example, clone <code>debian-{{Stable_project_version_based_on_Debian_version_short}}</code> and name the new template clone <code>debian-{{Stable_project_version_based_on_Debian_version_short}}-vpn</code>. <ref>
At the time of writing Debian 11 <code>bullseye</code> was the stable release version.
</ref>

<code>Qube Manager</code> &rarr; <code>debian-{{Stable_project_version_based_on_Debian_version_short}}</code> &rarr; <code><u>C</u>lone qube</code> &rarr; <i><code>Enter name for Qube clone:</i> debian-{{Stable_project_version_based_on_Debian_version_short}}-vpn</code> &rarr; <code>Press: OK</code>

'''2.''' Create a new ProxyVM based on the newly cloned template. 

Name the VM VPN-Gateway and set the {{gateway_product_name}} ProxyVM (<code>{{gateway_product_name_vm}}</code>) as NetVM. Make sure to check [✔] the box for "provides network".

{{Box|text=
<code>Qube Manager</code> &rarr; <code><u>Q</u>ube</code> &rarr; <code>Create <u>n</u>ew qube</code>

* Name and label: <code>VPN-Gateway</code> (Set the preferred color)
* Type: <code>Qube based on a template (AppVM)</code>
* Template: <code>debian-{{Stable_project_version_based_on_Debian_version_short}}-vpn</code>
* Networking: <code>{{gateway_product_name_vm}}</code>
* Advanced:   [<code>✔</code>] Provides network 
* Press: <code><u>O</u>K</code>
}}

'''3.''' Set up the VPN-Gateway as per [https://github.com/Qubes-Community/Contents/blob/master/docs/configuration/vpn.md Qubes VPN Documentation]. 

It is recommended to follow the ''Set up a ProxyVM as a VPN gateway using iptables and CLI scripts'' instructions because this prevents clearnet leaks if/when the VPN breaks down. 

Note:
* Without configuring a fail closed configuration, all traffic originating from the {{workstation_product_name}} App Qube (<code>anon-whonix</code>) would <u>only</u> be forced through Tor if/when the VPN connection breaks down (<code>User</code> &rarr; <code>Tor</code> &rarr; <code>Internet</code>).
* UDP-style VPN connections are incompatible with Tor because it requires the VPN to be configured to use TCP. <ref>See [[Tor#UDP|UDP]].</ref> This requires adding <code>proto tcp</code> to the VPN configuration file <code>/rw/config/vpn/openvpn-client.ovpn</code>. Nearly all VPN providers support this configuration.

'''4'''. Check the VPN-Gateway is fully functional. 

Test connectivity from inside the VPN-Gateway as per [https://github.com/Qubes-Community/Contents/blob/master/docs/configuration/vpn.md Qubes VPN Documentation].

'''5'''. ''Recommended:'' In {{workstation_product_name}} (<code>anon-whonix</code>), apply instructions from the [[#Prevent Bypassing of the Tunnel-Link|Prevent Bypassing of the Tunnel-Link]] section. 

'''6.''' ''Optional:'' It is recommended to run the related [[#Leak_Tests|Leak Tests]].

The VPN-Gateway configuration is complete.
}}

Notes:

* No DNS configuration is required when using a separate VPN Gateway and system DNS should work out of the box. <ref>This is because a properly configured Qubes VPN-Gateway will be able to resolve DNS.</ref>
* For troubleshooting, see footnote. <ref>
* Check the VPN-Gateway is fully functional. Test connectivity from inside the VPN-Gateway.
* When testing the VPN connection <u>do not</u> add any VMs that have been previously used for non-anonymous activities behind the VPN-Gateway. This will burn the VPN, making it unsuitable for use with {{project_name}}! 
* Create a fresh, newly created VM if intending to use a non-{{project_name}} VM behind the VPN-Gateway for testing purposes. 
</ref>
* {{project_name}} user forum discussion: [https://forums.whonix.org/t/setup-a-vpn-in-proxyvm-over-sys-whonix Set up a VPN in ProxyVM over sys-whonix] <ref>
* Qubes users mailing list discussion: https://groups.google.com/d/msgid/qubes-users/5759D76E.8000401%40riseup.net
* Qubes development ticket: https://github.com/QubesOS/qubes-issues/issues/2060</ref>
* The following warning will appear when using [[Tor Browser]] and is expected (see technical footnote): <ref>This is because Tor Browser can no longer access Tor's ControlPort ([[Dev/CPFP|onion-grater]]) on {{gateway_product_name}}.</ref>

<i><pre>
Something Went Wrong!
Tor is not working in this browser.
</pre></i>

== Inside {{workstation_product_name}} ==

Connect to the VPN using your preferred software <u>inside</u> the ({{project_name}}-)Workstation.

{{VPN UDP Tor|/etc/openvpn/openvpn.conf}}

<code>User</code> &rarr; <code>Tor</code> &rarr; <code>VPN</code> &rarr; <code>Internet</code>

=== {{project_name}} TUNNEL_FIREWALL vs standalone VPN-Firewall ===

{{Whonix_TUNNEL_FIREWALL_vs_standalone_VPN-Firewall}}

=== Preparation ===

{{VPN/Setup/Preparation}}

=== Prerequisite Knowledge ===

Before proceeding, it is strongly recommended to read and understand the [[{{project name short}} Debian Packages]] chapter.

=== Firewall Settings ===

{{Firewall Settings Workstation}}

Add the following settings. 

<pre>
WORKSTATION_FIREWALL=1
TUNNEL_FIREWALL_ENABLE=true
</pre>

Save.

=== Reload Firewall ===

{{Reload_Firewall_ws}}

=== sudoers configuration ===

{{VPN/Setup/Tor_Before_VPN/sudoers_configuration}}

=== VPN Setup ===

==== Introduction ====

{{VPN/Setup/Introduction}}

==== Get VPN Certificate ====

{{VPN/Setup/Get VPN Certificate}}

==== VPN Credentials ====

{{VPN/Setup/VPN Credentials}}

==== VPN IP Address ====

{{VPN/Setup/VPN IP Address}}

==== VPN Configuration File ====

{{Open with root rights|filename=
/etc/openvpn/openvpn.conf
}}

Add.

Note: make sure to adjust the {{Code|remote 198.252.153.226 80}} variable in your config (unless you are using {{Code|nyc.vpn.riseup.net}} as your VPN service). Replace the IP ({{Code|198.252.153.226}}) and port ({{Code|80}}) to match your VPN service.

<pre>
##############################
## VPN provider specific settings ##
##############################
auth-user-pass auth.txt

## using nyc.vpn.riseup.net 80
remote 198.252.153.226 80

ca RiseupCA.pem

remote-cert-tls server

####################################
## TUNNEL_FIREWALL specific settings ##
####################################
client
dev tun0
persist-tun
persist-key

script-security 2
up "/etc/openvpn/update-resolv-conf script_type=up dev=tun0"
down "/etc/openvpn/update-resolv-conf script_type=down dev=tun0"

user tunnel
iproute /usr/bin/ip_unpriv

############################################
## Connecting to Tor before a VPN specific settings #
############################################

proto tcp
</pre>

<ref>
* The [https://github.com/{{project_name_short}}/usability-misc/blob/master/usr/bin/ip_unpriv /usr/bin/ip_unpriv] wrapper script is provided by the [https://github.com/{{project_name_short}}/usability-misc usabilty-misc] package.
* The [https://github.com/{{project_name_short}}/usability-misc/blob/master/etc/sudoers.d/tunnel_unpriv /etc/sudoers.d/tunnel_unpriv] wrapper script is provided by the [https://github.com/{{project_name_short}}/usability-misc usabilty-misc] package.
* The [https://github.com/{{project_name_short}}/usability-misc/blob/master/lib/systemd/system/openvpn%40openvpn.service.d/50_unpriv.conf /lib/systemd/system/openvpn@openvpn.service.d/50_unpriv.conf] wrapper script is provided by the [https://github.com/{{project_name_short}}/usability-misc usabilty-misc] package.
</ref> <ref>It is necessary to run OpenVPN as user 'tunnel', because that is the only user besides user {{Code2|clearnet}} that will be allowed to establish external connections when using {{project_name}} Firewall setting VPN_FIREWALL=1.</ref>

Save.

==== Install resolvconf ====

{{VPN/Setup/install_resolvconf}}

==== DNS Configuration ====

{{Open with root rights|filename=
/usr/lib/tmpfiles.d/50_openvpn_unpriv.conf
}}

Add. <ref name=Whonix14 />

<pre>
d       /run/resolvconf 0775    root      tunnel    -       -
d       /run/resolvconf/interface         0775      root    tunnel    -    -
</pre>

Save.

Adjust permissions. <ref name=Whonix14>Removeable in {{project_name}} 14 since merged in usablity-misc package.</ref>

{{CodeSelect|code=
sudo chown --recursive root:tunnel /run/resolvconf
}}

{{CodeSelect|code=
sudo chmod --recursive 775 /run/resolvconf
}}

{{VPN/Setup/DNS Configuration}}

=== Additional Setup ===

==== Configuration Folder Permissions ====

{{VPN/Setup/Configuration Folder Permissions}}

==== systemd Setup ====

{{Template:VPN/Setup/Systemd}}

==== resolvconf Adjustments ====

{{VPN/Setup/resolvconf adjustments}}

==== Verify DNS Settings ====

Check the current <code>/etc/resolv.conf</code> settings.

{{CodeSelect|code=
sudo cat /etc/resolv.conf
}}

It should <u>not</u> include the following settings. <ref>These is the standard {{project_name}} DNS server.</ref>

<pre>
nameserver 10.152.152.10
</pre>

It should <u>not</u> include the following settings. <ref>These are standard Qubes DNS servers.</ref>

<pre>
nameserver 10.137.3.1
nameserver 10.137.3.254
</pre>

It should <u>only</u> include the DNS server of your DNS provider. For example.

<pre>
nameserver 10.5.0.1
</pre>

==== systemcheck ====

systemcheck cannot work in this configuration out of the box. Perform the following steps to unbreak it.

{{Box|text=
'''1.''' {{Open with root rights|filename=
/etc/systemcheck.d/50_user.conf
}}

'''2.''' Add the following text.

<pre>
systemcheck_skip_functions+=" check_tor_bootstrap "
systemcheck_skip_functions+=" check_tor_socks_port_reachability "
systemcheck_skip_functions+=" check_tor_socks_port "
systemcheck_skip_functions+=" check_tor_trans_port "
systemcheck_skip_functions+=" check_stream_isolation "
systemcheck_skip_functions+=" download_whonix_news "

## {{ Alternative to disabling check_tor_trans_port.

## Make the Tor TransPort test work by simulating the Tor SocksPort test succeeded.
#CHECK_TOR_RESULT_SOCKS_PORT=0

## Do not warn if Tor was not detected. (Will be the VPN.)
#SYSTEMCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1

## }}

## {{ Alternative to download_whonix_news.

## Download news through system default.
#CURL_PROXY_WHONIX_NEWS="--fail"

## }}
</pre>

'''3.''' Save the file.
}}

==== Qubes-specific ====

<div class="toccolours mw-collapsible mw-collapsed">
Placeholder. Ignore the Qubes-specific chapter for now. TODO
<div class="mw-collapsible-content">

When using an App Qube, persistent changes require the Qubes bind dirs mechanism.

{{CodeSelect|code=
sudo mkdir /rw/config/qubes-bind-dirs.d
}}

{{Open with root rights|filename=
/rw/config/qubes-bind-dirs.d/50_user.conf
}}

<pre>
binds+=( '/etc/sudoers.d/tunnel_unpriv' )
binds+=( '/etc/openvpn' )
binds+=( '/lib/systemd/system/openvpn@openvpn.service' )
binds+=( '/etc/systemd/system/multi-user.target.wants/openvpn@openvpn.service' )
</pre>

TODO: This does not work yet because the files need to exist first.

<pre>
/usr/lib/qubes/bind-dirs.sh umount
</pre>

<pre>
/usr/lib/qubes/bind-dirs.sh
</pre>
</div>
</div>

==== Test ====

Test the ping functionality with a suitable IP address such as Google's DNS server or an alternative server of your choice.

{{CodeSelect|code=
ping 8.8.8.8
}}

Test DNS to check it correctly resolves a suitable domain like <code>check.torproject.org</code> or an alternative server of your choice.

{{CodeSelect|code=
nslookup check.torproject.org
}}

Test DNS and output IP address.

<pre>
whonixcheck_skip_functions="" \
CHECK_TOR_RESULT_SOCKS_PORT=0 \
WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1 \
whonixcheck --function check_tor_trans_port
</pre>

=== Additional Information ===

The procedure is complete. If you have any issues, refer to the [[#Troubleshooting|Troubleshooting]] section below. Once the setup is functional, it is recommended to perform [[#Leak Tests|Leak Tests]].

= Troubleshooting =

{{VPN-Firewall/Troubleshooting}}

=== How to Submit a Support Request ===

{{VPN/Setup/Support Requests}}

= Leak Tests =

== Introduction ==

We want to verify, that the traffic always goes {{Code2|User &rarr; Tor &rarr; VPN &rarr; Internet}} and not only {{Code2|User &rarr; Tor &rarr; Internet}}. Therefore you should run the following related leak tests inside {{workstation_product_name}}. Test Tor Browser, a uwt wrapper deactivated application as well as a regular application for leaks.

== Regular Application Test ==

Same test as above, but use curl without pre-configured [[Stream Isolation|stream isolation]].

<!-- EDITORS NOTE: '{{!}}' is a magic word for '|'.-->
{{CodeSelect|code=
{{Curl_Plain}} --silent {{Curl Secure}} https://check.torproject.org {{!}} grep IP
}}

<ref name=nodns>
In case you have no functional system DNS, you could also alternatively just test TCP.

The IP {{Code2|{{Check.torproject.org_IP}}}} might change. You can find out the current one by running the following command inside a VM that has functional system DNS. (Ideally inside a {{workstation_product_name}}.)

{{CodeSelect|code=
nslookup check.torproject.org
}}
</ref> <ref>

<!-- EDITORS NOTE: '{{!}}' is a magic word for '|'.-->
{{CodeSelect|code=
{{Curl_Plain}} --silent {{Curl Secure}} -H 'Host: check.torproject.org' -k https://{{Check.torproject.org IP}} {{!}} grep IP
}}
</ref>

Should show something along the lines: {{Code2|Your IP address appears to be: xxx.xxx.xxx.xxx}}<br />
Should show the IP of your VPN.

== uwt wrapped application test ==

Connect to check.torproject.org.

<!-- EDITORS NOTE: '{{!}}' is a magic word for '|'.-->
{{CodeSelect|code=
curl --silent {{Curl Secure}} https://check.torproject.org {{!}} grep IP
}}

<ref name=nodns /> <ref>
<!-- EDITORS NOTE: '{{!}}' is a magic word for '|'.-->
{{CodeSelect|code=
curl --silent {{Curl Secure}} -H 'Host: check.torproject.org' -k https://{{Check.torproject.org IP}} {{!}} grep IP
}}
</ref>

== Browser IP Test ==

You can skip this test if you do not care about using Tor Browser through the VPN.

If you did correctly configure everything, test your setup. Open https://check.torproject.org in Tor Browser. It will tell you then "{{Code2|You are not using Tor.}}" and you'll see your VPN's IP. In fact your VPN was tunneled through Tor first. (Because {{workstation_product_name}} can not make any non-Tor connections by design, everything is tunneled over Tor.)

== DNS Leak Test ==

{{DNS Leak Tests Online}}

== Other Leak Tests ==

If you are feeling awesome, you could also run more general leak tests that are not related to tunneling. However, these are more difficult to do and target developers rather than users. If you are interested, see [[Dev/Leak_Tests|leak tests]].

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
