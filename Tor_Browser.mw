<!--
Copyright:

   Whonix Tor Browser wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   Whonix Tor Browser wiki page Copyright (C) 2012 - 2017 Patrick Schleizer <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/Whonix/Whonix/blob/master/GPLv3>.
-->
<!--
The Whonix Tor Browser wiki page is forked from the Tails Browsing the web with Iceweasel page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/doc/anonymous_internet/iceweasel.mdwn;hb=c65e9614d6df9784072ac1e506e2fc83b062f2b0>.
-->
{{Header}}
{{#seo:
|description=Using Tor Browser in Whonix. Anonymity vs Pseudonymity, HTTPS Everywhere, Torbutton, Protection against dangerous JavaScript, NoScript, Tips, Update Tor Browser, Browser Plugins, Change Language
|image=https://www.whonix.org/w/images/1/19/Torbrowser.png
}}
= Introduction =
Only Tor Browser is recommended for use in Whonix when browsing the Internet. <ref>For a comprehensive list of reasons, readers are encouraged to review some or all of the references in this section.</ref>

[https://www.torproject.org/projects/torbrowser.html.en Tor Browser] <ref>https://tb-manual.torproject.org/linux/en-US/</ref> is a [https://en.wikipedia.org/wiki/Fork_(software_development) fork] of the Mozilla [http://www.mozilla.com/firefox/ Firefox] web browser. It is developed by [https://www.torproject.org/ The Tor Project] and [https://www.torproject.org/projects/torbrowser/design/ optimized] and [https://www.torproject.org/torbutton/en/design/ designed] for anonymity and security. Many users will have browsed with Firefox and be familiar with the user interface that resembles those found in other popular, modern browsers.

Tor Browser features are discussed in further detail below. However, a good overview of the browser component is provided by The Tor Project design document: <ref>https://www.torproject.org/projects/torbrowser/design/#Implementation</ref>
<br />
<blockquote>The Tor Browser is based on Mozilla's Extended Support Release (ESR) Firefox branch. We have a series of patches against this browser to enhance privacy and security. Browser behavior is additionally augmented through the Torbutton extension, though we are in the process of moving this functionality into direct Firefox patches. We also change a number of Firefox preferences from their defaults.
<br />
Tor process management and configuration is accomplished through the Tor Launcher addon, which provides the initial Tor configuration splash screen and bootstrap progress bar. Tor Launcher is also compatible with Thunderbird, Instantbird, and XULRunner.
<br />
<br />
To help protect against potential Tor Exit Node eavesdroppers, we include HTTPS-Everywhere. To provide users with optional defense-in-depth against JavaScript and other potential exploit vectors, we also include NoScript. We also modify several extension preferences from their defaults.
<br />
<br />
To provide censorship circumvention in areas where the public Tor network is blocked either by IP, or by protocol fingerprint, we include several Pluggable Transports in the distribution. As of this writing, we include Obfs3proxy, Obfs4proxy, Scramblesuit, meek, and FTE.</blockquote>

Users are encouraged to read this entire wiki entry so Tor Browser is used effectively and safely on the Whonix platform.

= Anonymity vs Pseudonymity =
If browsers other than Tor Browser are used in Whonix, the user's IP address and Domain Name Service (DNS) requests <ref>{{Code|DNS is a distributed database which keeps track of computer's names and their corresponding IP addresses on the Internet}} https://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm. DNS servers enable the browser to know where resources are located on the Internet, and the corresponding IP address for fetching these.</ref> are still protected. However, users do not profit from Tor Browser's [[Tor_Browser#Torbutton|protocol level cleanup]] in this scenario. Features like proxy obedience, state separation, network isolation, anonymity set preservation and a host of other features are simply unsupported by other browsers. 

Using other browsers is [[DoNot#Do_not_confuse_Anonymity_with_Pseudonymity.|pseudonymous rather than anonymous]]. In stark contrast, Tor Browser is optimized for anonymity and has a plethora of [https://www.torproject.org/projects/torbrowser/design/#firefox-patches privacy-enhancing patches] and add-ons. <ref>See below for a further description of these features.</ref> With Tor Browser, the user "blends in" and shares the [[Fingerprint]] of around [https://metrics.torproject.org/ two million other users], which is advantageous for privacy.

= Tor Browser Adversary Model =

The Tor Browser design has carefully considered the goals, capabilities and types of attacks undertaken by adversaries and planned accordingly. 

The design specifications address: proxy obedience, state separation, disk avoidance, application data isolation, cross-origin identifier unlinkability, cross-origin fingerprinting unlinkability, long-term unlinkability via "New Identity" button, and other security measures to address many of the risks outlined below. <ref>https://www.torproject.org/projects/torbrowser/design/#Implementation</ref> <ref>This has also informed the development of the Torbutton extension.</ref>

Although the term adversary is not defined by The Tor Project, based on disclosures in recent years a list is likely to include: intelligence agencies (NSA, CIA etc.), federal and state police, homeland security and drug enforcement agencies, federal investigatory agencies (like the FBI), private security researchers, academics, undisclosed hacking groups, corporations, and others.

== Adversary Goals ==
Goals of the adversary include: <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#adversary</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#adversary</ref>

* Bypassing proxy settings: Directly compromising and bypassing Tor, or having the user connect to specific IP addresses.
* Correlating Tor and non-Tor activity: If a proxy bypass is not possible, correlation of Tor and non-Tor activity is sought via cookies, cache identifiers, JavaScript events and Cascading Style Sheets (CSS).
* History disclosure: Querying user history for censored search queries or websites.
* Correlating activity across multiple sites: Learning if the user who visited site A is the same user who visited site B, in order to serve targeted advertisements.
* Location information: Seeking timezone and locality information to determine if the user originates from a specific region they are trying to control, or focusing in on dissidents or whistleblowers.
* Anonymity set reduction (fingerprinting): To identify specific individuals, system data like the browser build,  timezone or display resolution is used to track down (or at least track) their activities.
* History records and other on-disk information: Seizing the computers of all Tor users in a given area and extracting history records, cache data, hostnames and disk-logged spoofed MAC address history.

== Adversary Positioning Capabilities == 
Adversary positioning capabilities include: <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#adversary</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#adversary</ref>

* Exit node or upstream router: Running exit nodes or controlling routers upstream of exit nodes. <ref>This has already been observed.</ref>
* Adservers and/or malicious websites: Running websites or contracting ad space from adservers to inject content. Reducing a Tor user's anonymity is also good for marketing purposes. <ref>Partially explaining the unholy alliance between the corporate sector and government.</ref>
* Local Network / ISP / upstream router: Injecting malicious content at the user's upstream router when Tor is disabled in order to correlate Tor and non-Tor activity. Additionally, block Tor or attempt to recognize traffic patterns of specific web pages at the entrance to the Tor network.
* Physical access: Constant or intermittent physical access to computer equipment. This may happen to Internet cafe users or those in jurisdictions where equipment is confiscated due to general suspicion or solely for Tor use.

== Adversary Attack Capabilities == 
Advanced adversaries have a raft of attack capabilities available to them. <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#adversary</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#adversary</ref>

'''Inserting JavaScript'''

* Extracting fingerprinting information like: available fonts, DOM objects to ascertain the user agent, WebGL to reveal the video card in use, and high precision timing information to reveal the CPU and interpreter speed.
* Executing history disclosure attacks to query the history of different attributes of visited links for specific queries, sites, or for profiling of users (gender, interests etc.).
* Querying the user's timezone via the date object and reduce the anonymity set by querying the navigator object for operating system, CPU, location and user agent information.


'''Inserting or Exploiting Plugins'''
* Using plugins to perform network activity that is independent of browser (or its own) proxy settings in order to obtain a user's non-Tor IP address.
* Using active plugin exploits to leak the non-Tor IP address.
* Enumerating the list of plugins to fingerprint the user.
* Gathering information from plugins capable of extracting font lists, interface addresses and other machine information.
* Retrieving unique plugin identifiers.


'''Inserting CSS'''

* Using CSS pop-ups to correlate Tor and non-Tor activity and reveal a user's non-Tor IP address.
* Using CSS and JavaScript to perform CSS-only history disclosure attacks.
* CSS media queries to gather information about desktop size, widget size, display type, DPI, user agent type and other information.


'''Reading and Inserting Identifiers'''

* Storing identifiers such as HTTP auth, DOM storage, cached scripts, other elements with embedded identifiers, client certificates and TLS session IDs.
* Performing a man-in-the-middle (MITM) attack to inject elements to both read and inject cookies for arbitrary domains (affecting even SSL/TLS secured websites).


'''Other Attacks'''

* Creating arbitrary cached content: Reading the browser cache which stores unique identifiers.
* Observing request behaviour: Fingerprinting is aided by observing the user agent, Accept-* headers, pipeline usage, and request ordering. Fingerprinting is worsened by custom filters like AdBlock and UBlock Origin.
* Fingerprinting: Using the large number of browser attributes to reduce the anonymity set, or even uniquely fingerprinting individual users. <ref>For instance, there is an estimated 29 bit-identifier based on the browser and desktop window resolution information alone.</ref>
* Website traffic fingerprinting: Attempts to recognize the encrypted traffic patterns of specific websites, either between the user and the Guard node, or at the Guard node itself. <ref>This attack is somewhat mitigated by the ocean of Tor traffic, which rapidly increases the rate of false positives when larger traffic sets are analyzed.</ref>
* Remotely or locally exploiting the browser and/or OS: Exploit the browser, plugin or OS vulnerabilities to install malware or surveillance software, or physically access the machine to do the same.

= Encryption =
== HTTPS Encryption ==
It is important to understand the difference between HTTP and HTTPS: <ref>https://en.wikipedia.org/wiki/HTTPS</ref>

<blockquote>HTTPS (also called HTTP over Transport Layer Security (TLS), HTTP over SSL, and HTTP Secure) is a communications protocol for secure communication over a computer network which is widely used on the Internet. HTTPS consists of communication over Hypertext Transfer Protocol (HTTP) within a connection encrypted by Transport Layer Security, or its predecessor, Secure Sockets Layer. The main motivation for HTTPS is authentication of the visited website and protection of the privacy and integrity of the exchanged data.</blockquote>

=== HTTPS Advantages ===
HTTPS advantages include: <ref>https://en.wikipedia.org/wiki/HTTPS</ref>
* Authentication of the website and web server the user is communicating with.
* Protection against [[Warning#Man-in-the-middle_attacks|man-in-the-middle attacks]].
* Bidirectional encryption of communications between a client and server. This protects against [[Warning#Tor_exit_nodes_can_eavesdrop_on_communications|eavesdropping]] and tampering with / forging of communication contents.
* A <i>reasonable</i> user expectation that the website being communicated with is genuine. <ref>HTTPS is not foolproof due to reliance on the Certificate Authority (CA) system that issues digital certificates (private keys) for websites. As a trusted third party, this trust can be abused or the CAs can be subject to adversary attacks.</ref>
<br />
In the context of Tor Browser, this means users should prefer HTTPS instead of HTTP so communication is encrypted while browsing the Internet. While traffic is encrypted throughout the Tor network, the exit relay (third of three servers) can see traffic sent into Tor if it is plain HTTP. If HTTPS is used, the exit relay will only know the destination address. <ref>https://www.torproject.org/docs/faq#AmITotallyAnonymous</ref>

As an example, the screenshot below is how the browser looks when visiting the Whonix website. <ref>https://www.whonix.org</ref>

'''Figure:''' ''A Secure Connection to www.whonix.org''

[[File:HTTPS-website-example.png|800px]]

Take notice of the small area on the left-hand side of the address bar. Indicators of an encrypted connection are  <code>www.whonix.org</code> is highlighted with a padlock and "Secure Connection" in green writing, and the URL begins with ''https://'' instead of ''http://''.

Try to only use services providing HTTPS when sensitive information is sent or received. Otherwise, passwords,  financial / personal information or other sensitive data can be easily stolen or intercepted by eavesdroppers. HTTP webpage contents can also be modified on its way to your browser for malicious purposes.

=== HTTP / HTTPS Connections with and without Tor ===

The following figures from EFF provide an overview of HTTP / HTTPS connections with and without Tor, and what information is visible to various third parties. The descriptors are as follows: <ref>https://www.eff.org/pages/tor-and-https</ref>

<blockquote>Potentially visible data includes: the site you are visiting (SITE.COM), your username and password (USER/PW), the data you are transmitting (DATA), your IP address (LOCATION), and whether or not you are using Tor (TOR).</blockquote> 

'''Figure:''' ''Tor and HTTPS''

[[File:tor-with-https.png|800px]]

'''Figure:''' ''Tor and No HTTPS''

[[File:tor-without-https.png|800px]]

'''Figure:''' ''No Tor and HTTPS''

[[File:without-tor-with-https.png|800px]]

'''Figure:''' ''No Tor and No HTTPS''

[[File:without-tor-https.png|800px]]

== Hidden Services Encryption ==
Whenever possible, users are encouraged to stay within the Tor network for communications and web browsing via available <i>.onion</i> addresses. These services are commonly referred to as "hidden services", even when their location is publicly known. <ref>https://riseup.net/en/security/network-security/tor/onionservices-best-practices</ref>

=== Hidden Services Advantages ===
URLs ending in the <i>.onion</i> extension provide a superior level of security and privacy, since the user's connection forms a completely encrypted tunnel that uses a random rendezvous point within the Tor network. These connections also incorporate [https://en.wikipedia.org/wiki/Perfect_forward_secrecy perfect forward secrecy (PFS)]. PFS means the compromise of long-term keys does not compromise past session keys. As a consequence, past encrypted communications and sessions cannot be retrieved and decrypted if long-term secrets keys or passwords are compromised in the future by adversaries. <ref>This does not however defend against improved cryptanalysis that breaks underlying ciphers being used, for example by the emergence of quantum computers. Only post-quantum ciphers resistant to these attacks will prevail.</ref> 

Other primary benefits of hidden services include: <ref>https://www.torproject.org/docs/hidden-services.html.en</ref> 

* Prevention of passive surveillance by network observers and the Tor exit node that is possible when using plain Tor + HTTPS. Adversaries cannot (easily) determine which destination the users are connecting from/to.
* Hidden services establish "rendezvous points" in the Tor network for web services whereby neither the hosting service or the user know each other's network identity.
* Hidden services can be combined with SSL/TLS to provide additional protection. Only a handful of services currently provide this service, including DuckDuckGo: https://3g2upl4pq6kufc4m.onion and ProtonMail: https://protonirockerxow.onion. <ref>Extra layers of encryption are not really necessary, since a completely encrypted tunnel is already formed (but it certainly doesn't hurt). Until recently, these certificates would not validate because of the *.onion hostname.</ref> <ref>https://riseup.net/en/security/network-security/tor/onionservices-best-practices</ref>
* Hidden services do not use the insecure DNS system. Strong authentication comes from the self-authenticating address: the address itself forms a cryptographic proof of the <i>.onion's</i> identity. <ref>https://blog.torproject.org/blog/cooking-onions-names-your-onions</ref> <ref>This is why onion addresses appear absurdly long and random.</ref>

=== How Hidden Services Connections Work ===
To understand how hidden services work, a simple overview of the process is outlined below. <ref>https://www.torproject.org/docs/hidden-services.html.en</ref>

'''Step 1.''' Hidden services advertise their existence in the Tor network. This is done by randomly picking some relays and building circuits, before asking these relays to act as introduction points by providing the service's public key. The hidden server's location (IP address) is shielded.

'''Step 2.''' The hidden service generates a hidden service descriptor containing the public key and a summary of introduction points. This is signed with its private key and then uploaded to a distributed hash table, so users can find the service when searching for a <i>.onion</i> resource.  <ref>This is currently a 16 character name, but will be increased to 54 characters in the near-medium term to upgrade the cryptographic strength of <i>.onion</i> services. See: https://blog.torproject.org/blog/cooking-onions-names-your-onions </ref> This also forms an important verification mechanism for the user to confirm they are talking to the right hidden service.

'''Step 3.''' The user who learnt that the <i>.onion</i> resource exists requests more information from the database, by downloading the descriptor from the distributed hash table. If the descriptor exists, the user now knows the introduction points and the right public key to use. The user also creates a Tor circuit to another randomly picked relay to use as a rendezvous point (with a one-time secret).

'''Step 4.''' If the descriptor is present and the rendezvous point is ready, the user assembles an "introduce message". This is encrypted to the hidden service's public key and includes the rendezvous point address and the one-time secret. The user requests this be delivered to the hidden service (via a Tor circuit) anonymously, so the IP address remains hidden.

'''Step 5.''' The hidden service decrypts the user's introduce message and finds the rendezvous point address and one-time secret in it. The service creates a circuit to the rendezvous point and sends the one-time secret to it in a rendezvous message. The hidden service <i>must</i> use the same set of entry guards when creating circuits, to prevent attackers from forcing hidden services to use corrupt relays as an entry node (and learning the hidden server's IP address via timing analysis).

'''Step 6.''' The rendezvous point notifies the user the successful connection has been established. Both the user and hidden service use their circuits to the rendezvous point for communication. The rendezvous point relays end-to-end encrypted messages from user to service and vice versa.

Use of <i>.onion</i> addresses leads to a 6 relay arrangement: 3 picked by the user (with the third used as a rendezvous point), and 3 picked by the hidden service. The final successful connection between a user and a hidden service is represented in the picture below.

'''Alice (User) and Bob (Hidden Service) Successful Connection'''

''TO DO: Capture and insert this screenshot below.''

https://www.torproject.org/images/THS-6.png

= Tor Browser Add-Ons =
== HTTPS Everywhere ==

[[File:httpseverywhere.png|150px|HTTPS Everywhere logo|thumb]]

[https://www.eff.org/https-everywhere HTTPS Everywhere] is a Firefox extension shipped in Tor Browser and produced as a collaboration between [https://torproject.org/ The Tor Project] and the [https://eff.org/ Electronic Frontier Foundation]. It helps to encrypt user communications with a number of major sites. 

Many sites on the Internet offer some limited support for encryption over HTTPS, but make it difficult to use. For instance, sites may default to unencrypted HTTP or fill encrypted pages with links that return to the unencrypted version of site. The HTTPS Everywhere extension addresses these problems by rewriting all site requests to HTTPS.

To learn more about HTTPS Everywhere, visit:

* The [https://www.eff.org/https-everywhere HTTPS Everywhere homepage].
* The [https://www.eff.org/https-everywhere/faq/ HTTPS Everywhere FAQ].

== NoScript ==

[[Image:noscript.png|NoScript logo|thumb]]

NoScript is a free, open source extension that comes bundled with Tor Browser and other Mozilla-based web browsers. NoScript can provide significant protection for users, depending on its configuration: <ref>https://en.wikipedia.org/wiki/NoScript</ref>

<blockquote>NoScript allows executable web content based on JavaScript, Java, Flash, Silverlight, and other plugins only if the site hosting is considered trusted by its user and has been previously added to a whitelist. NoScript also offers specific countermeasures against security exploits. ... This is based on the assumption that malicious websites can use these technologies in harmful ways.</blockquote>

NoScript protects against [https://en.wikipedia.org/wiki/Cross-site_scripting cross-site scripting], which otherwise enables attackers to inject malicious client-side scripts into web pages being viewed, bypassing the [https://en.wikipedia.org/wiki/Same-origin_policy same-origin policy]. The same-origin policy refers to web browsers usually only allowing scripts in the first web page to access data in a second web page if they have the same origin (URL scheme, hostname and port number).

[https://noscript.net/faq#clearclick Anti-clickjacking] is also available to protect against hidden or disguised user interface elements masquerading as trusted web page buttons, links and so on (this is disabled by default in Tor Browser). Clickjacking can maliciously activate microphones or webcams, or trick users into interacting with hidden elements to steal important financial, personal or other data.

=== Security vs Usability Trade-off ===
In the stock Tor Browser configuration, JavaScript is enabled by default for greater usability. The Tor Project FAQ provides a summary of the reasoning for this decision: <ref>https://www.torproject.org/docs/faq#TBBJavaScriptEnabled</ref>

<blockquote>We configure NoScript to allow JavaScript by default in Tor Browser because many websites will not work with JavaScript disabled. Most users would give up on Tor entirely if a website they want to use requires JavaScript, because they would not know how to allow a website to use JavaScript (or that enabling JavaScript might make a website work).
<br />
There's a trade-off here. On the one hand, we should leave JavaScript enabled by default so websites work the way users expect. On the other hand, we should disable JavaScript by default to better protect against browser vulnerabilities ( not just a theoretical concern!). But there's a third issue: websites can easily determine whether you have allowed JavaScript for them, and if you disable JavaScript by default but then allow a few websites to run scripts (the way most people use NoScript), then your choice of whitelisted websites acts as a sort of cookie that makes you recognizable (and distinguishable), thus harming your anonymity.</blockquote>

The take-home message is disabling all JavaScript with white-list based, pre-emptive script-blocking may better protect against vulnerabilities (many attacks are based on scripting), <ref>Javascript has previously been used in Windows to [http://www.pcworld.com/article/2046013/tor-project-stop-using-windows-disable-javascript.html deanonymize Tor users with a zero-day exploit] which revealed the computer's MAC address to the attackers.</ref> but it reduces usability on many sites and acts as a fingerprinting mechanism based on the select sites where it is enabled. <ref>https://en.wikipedia.org/wiki/NoScript</ref> On the other hand, allowing JavaScript by default increases usability and the risk of exploitation, but the user also has a fingerprint more in common with the larger pool of users. <ref>Having a large user base is important for strong anonymity, as Roger Dingledine explains [http://www.mail-archive.com/liberationtech@lists.stanford.edu/msg00022.html here.]</ref> <ref>Another related discussion justifying JavaScript's enabling by default was held on tor-talk, "Tor Browser disabling Javascript anonymity set reduction". https://lists.torproject.org/pipermail/tor-talk/2012-May/024227.html</ref>

Developers are unaware of any JavaScript that could compromise Whonix anonymity. That said, users should refrain from changing NoScript settings in Tor Browser, unless they are aware of the potential impacts. Users can enable/disable JavaScript, Java and/or plugin execution by left-clicking on the NoScript status bar icon, or via the the contextual menu. <ref>https://noscript.net/</ref> Permissions can be selected either temporarily or on a permanent basis. "Temporarily allow" will only enable scripts for that site until the browser session is closed, or until permission is manually revoked.

For further information, refer to the [http://noscript.net/ NoScript website] and [http://noscript.net/features features overview], or the [https://www.torproject.org/torbutton/en/design/ Torbutton design document].

= Torbutton =

Tor alone is not enough to protect your anonymity and privacy while browsing the Internet. All modern web browsers, such as Firefox, support [https://en.wikipedia.org/wiki/JavaScript JavaScript], [https://en.wikipedia.org/wiki/Adobe_Flash Adobe Flash], [https://en.wikipedia.org/wiki/HTTP_cookie cookies] and other features which are capable of defeating the anonymity <ref>[[DoNot#Do_not_confuse_Anonymity_with_Pseudonymity.]]</ref> provided by the Tor network.

In Tor Browser, these features are handled from inside the browser, because it is a [https://gitweb.torproject.org/tor-browser.git modified (patched) version of Firefox] and it contains an extension called [https://www.torproject.org/torbutton/ Torbutton]: 

<blockquote>Torbutton is the component in Tor Browser that takes care of application-level security and privacy concerns in Firefox. To keep you safe, Torbutton disables many types of active content.</blockquote> <ref>https://www.torproject.org/docs/torbutton/torbutton-faq.html.en</ref>

== Torbutton Design ==

Torbutton's functions in Tor Browser behavior are gradually being moved into direct Firefox patches, <ref>https://www.torproject.org/projects/torbrowser/design/#components</ref> but it is designed to address: <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#requirements</ref> <ref>Some of the design features have been deprecated due to changes in the Tor / Tor Browser design.</ref>

* Proxy obedience: Tor Browser must not bypass Tor proxy settings.
* State separation: Cookies, cache, history, 'DOM storage' and more accumulated in one Tor state must not be accessible via the network in another Tor state.
* Disk avoidance: Tor Browser should not write any Tor-related state to disk, or store it in memory beyond one Tor toggle.
* Location neutrality: Tor Browser should not leak location-specific information, like the timezone or locale via Tor.
* Anonymity set preservation: Tor Browser should not leak any other anonymity set reducing or fingerprinting information (such as user agent, extension presence, and resolution information) automatically via Tor. 
* Update safety: Tor Browser should not perform unauthenticated updates or upgrades via Tor.
* Interoperability: Torbutton should inter-operate with third-party proxy switchers that enable the user to switch between a number of different proxies, with full Tor protection.


Tor Browser patches and the Torbutton extension can potentially disable some functionality or interfere with the proper operation of some Internet sites, but the vast majority of websites work well. To learn more about Torbutton, see:

* [https://www.torproject.org/torbutton/ The Torbutton homepage]
* [https://www.torproject.org/torbutton/torbutton-faq.html.en The Torbutton FAQ]
* [https://www.torproject.org/docs/torbutton/en/design/index.html.en Torbutton Design Documentation]
* The [[Torbutton Functions]] section below.


Users are also recommended to learn more about [[Fingerprint|fingerprinting]] and [[Data Collection Techniques|data collection techniques]].

== Torbutton Functions ==

=== New Identity Function ===
The "New Identity" menu option clears the browser state, closes tabs, and obtains a fresh Tor circuit for future requests. <ref>https://blog.torproject.org/blog/torbutton-141-released</ref> 

The Tor Browser design document describes the full features provided by this extension: <ref>https://trac.torproject.org/projects/tor/ticket/523</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#new-identity</ref>

* Disables Javascript and plugins on all tabs and windows.
* Stops all page activity for each tab.
* Clears the Tor Browser state:
** OCSP state.
** Content and image cache.
** Site-specific zoom.
** Cookies and DOM storage.
** The safe browsing key.
** Google Wi-Fi geolocation token.
** Last opened URL preference (if it exists).
** Searchbox and findbox text.
** Purge session history.
** HTTP authentication.
** SSL session IDs.
** Crypto tokens.
** Site-specific content preferences.
** Undo tab history.
** Offline storage.
** Domain isolator state.
** NoScript's site and temporary permissions.
** All other browser site permissions.
* Closes all remaining HTTP keep-alive connections.
* Sends Tor the "newnym" signal to issue a new Tor circuit.


After this process above, a fresh browser window is opened and the current browser window is closed (this does not spawn a new Firefox process, only a new window). When the final window is closed, any blob:UUID URLs that were created by websites are purged. <ref>https://www.torproject.org/projects/torbrowser/design/#new-identity</ref>

'''Warning:''' Users should understand that this feature sends the protocol command "signal newnym" to Tor's ControlPort. Users will likely receive a new Tor exit relay and a new IP address, but this is not guaranteed. Tor may only have replaced the middle relay while using the same Tor exit relay. This is by design and the Tor default. Further, "signal newnym" won't interfere with long-lived connections like an IRC connection.

New Identity is not yet perfect and there are open bugs; this is not a Whonix-specific issue. {{Browser_Fingerprinting_Footnote}}
For greater security, it is better to completely close Tor Browser and restart it. In [[Qubes-Whonix]], the safest option is using a Whonix-WS DisposableVM and closing it and recreating a new one after critical activities.

This is how to use the New Identity feature in Torbutton.

<code> Click Torbutton</code> -> <code>Click "New Identity"</code>

Please read and understand [[FAQ#New_Identity_and_Tor_circuits|New Identity and Tor circuits]] to learn more about this option and its limitations.

=== New Tor Circuit ===
The "New Tor Circuit for this Site" Torbutton feature sends the "newnym" signal to the Tor control port to cause a new circuit to be created for the <i>current</i> Tor Browser tab. <ref>https://trac.torproject.org/projects/tor/ticket/9442</ref>

Potential use cases for this feature include: <ref>https://tails.boum.org/doc/anonymous_internet/Tor_Browser/index.en.html</ref>

* The Tor exit relay is located in a country which negatively affects the presentation of the website due to language localization.
* The site is censored due to the current Tor exit relay in use (caused by Tor IP address blacklisting).
* To bypass Google [https://en.wikipedia.org/wiki/CAPTCHA CAPTCHA] or [https://www.google.com/recaptcha/intro/index.html reCAPTHA] systems protecting sites from abuse.
* Connections to websites become unresponsive or slow.
* To change the Tor exit relay IP address without losing all open tabs.


'''Warning:''' This feature does not attempt to clear Tor browsing session data, unlike the "New Identity" feature. If that action is really necessary to separate contextual identities, it is always safer to restart Tor Browser.

To use it:

<code>Click Torbutton</code> -> <code>Click "New Tor Circuit for this Site"</code>

=== Security Slider ===
Tor Browser includes a “Security Slider” that lets the user increase their security by disabling certain web features that can be used to attack security and anonymity. Currently there are three levels: "High", "Medium" and "Low (default)". Users have to make a trade-off between security and usability: at the higher levels, the slider will prevent some sites from working properly. <ref>https://tb-manual.torproject.org/en-US/security-slider.html</ref>

The Tor Project manual describes the exact effect of each level and which features are disabled or partially disabled: <ref>https://tb-manual.torproject.org/en-US/security-slider.html</ref>

<blockquote>High
At this level, HTML5 video and audio media become click-to-play via NoScript; all JavaScript performance optimizations are disabled; some mathematical equations may not display properly; some font rendering features are disabled; some types of image are disabled; Javascript is disabled by default on all sites; most video and audio formats are disabled; and some fonts and icons may not display correctly. 
<br />
<br />
Medium <br />
At this level, HTML5 video and audio media become click-to-play via NoScript; all JavaScript performance optimizations are disabled; some mathematical equations may not display properly; some font rendering features are disabled; some types of image are disabled; and JavaScript is disabled by default on all non-HTTPS sites. 
<br />
<br />
Low
At this level, all browser features are enabled. This is the most usable option.</blockquote>

Whonix recommends users use the slider in either the "High" or "Medium" setting to increase security. To use this feature:

<code>Click Torbutton</code> -> <code>Click "Security Settings..."</code> -> <code>Select desired security level</code>

=== Check for Tor Browser Update ===

Torbutton will notify the user if a Tor Browser update is available. See [[Tor_Browser#Tor_Browser_Internal_Updater|Tor Browser Internal Updater]] for further information and screenshots of this process. Note that there are multiple other methods of updating Tor Browser. To use the Torbutton menu option:

<code>Click Torbutton</code> -> <code>Click "Check for Tor Browser Update...</code>"

=== Disabled Torbutton Functions ===

'''Open Network Settings'''

Whonix has modified environment variables to prevent visibility of the "Open Network Settings..." menu item. The regular Tor Browser Bundle from The Tor Project (without Whonix) allows networking settings to changed inside Tor via the Open Network Settings menu option. It has the same effect as editing Tor's config file torrc. 

In Whonix, the environment variable export <code>TOR_NO_DISPLAY_NETWORK_SETTINGS=1</code> has been [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh set] to disable the <code>TorButton</code> -> <code>Open Network Settings...</code> menu item. It is not useful and confusing to have in the Whonix-Workstation because: <ref>https://trac.torproject.org/projects/tor/ticket/19652</ref> <ref>https://trac.torproject.org/projects/tor/ticket/14100</ref>

* In Whonix, there is only limited access to Tor's control port (see [[Dev/CPFP]] for more information).
* For security reasons, Tor must be manually configured in ''/etc/tor/torrc'' on the Whonix-Gateway, and not from the Whonix-Workstation (see [[Features#VPN_.2F_Tunnel_support|VPN/Tunnel support]] for more information). 


'''Tor Circuit View'''

Whonix has removed the [[Tor_Browser#Tor_Circuit_View|Tor Circuit View]] for security reasons. Normally, Torbutton shows the three Tor relays used for the website in the current tab. This includes the IP addresses of each and the countries they are located in, with the node immediately above the "Internet" node reflecting the Tor exit relay. <ref>https://tails.boum.org/doc/anonymous_internet/Tor_Browser/index.en.html</ref>

= Tor Browser: How-To =
== Start Tor Browser ==
{{Tor_Browser_Start}}

If Tor Browser successfully launches and connects to the Tor network, <code>check.torproject.org</code> should show the following message.

'''Figure:''' ''Successful Tor Browser Connection''

[[File:This-Browser-is-Using-Tor.png|700px]]

== File Downloads ==
=== Warnings ===

Whonix protects against these threats outlined below, such as files that inadvertently or maliciously attempt to reveal the real IP address of the user, or third-party, external applications that can leak information outside of Tor. However, users should always engage in best safety practices.

'''Do not Open Documents Downloaded via Tor while Online''' 

The Tor Project provides an explicit warning: <ref>https://www.torproject.org/download/download</ref>

<blockquote>Tor Browser will warn you before automatically opening documents that are handled by external applications. DO NOT IGNORE THIS WARNING. You should be very careful when downloading documents via Tor (especially DOC and PDF files, unless you use the PDF viewer that's built into Tor Browser) as these documents can contain Internet resources that will be downloaded outside of Tor by the application that opens them. This will reveal your non-Tor IP address. If you must work with DOC and/or PDF files, we strongly recommend either using a disconnected computer, downloading the free VirtualBox and using it with a virtual machine image with networking disabled, or using Tails. Under no circumstances is it safe to use BitTorrent and Tor together, however.</blockquote>

'''Do not Torrent Over Tor'''

The Tor Project also warns against torrenting: <ref>https://www.torproject.org/download/download</ref>

<blockquote>Torrent file-sharing applications have been observed to ignore proxy settings and make direct connections even when they are told to use Tor. Even if your torrent application connects only through Tor, you will often send out your real IP address in the tracker GET request, because that's how torrents work. Not only do you deanonymize your torrent traffic and your other simultaneous Tor web traffic this way, you also slow down the entire Tor network for everyone else.</blockquote>

=== Navigating Tor Browser Downloads ===
For users who regularly download Internet files, Tor Browser's default download folder is inconvenient. For example, if the user downloaded the sample image below using Tor Browser, by default the download path is <i>/home/user/.tb/tor-browser/Browser/Downloads</i>. It is time-consuming to have to navigate to this folder so far down the directory tree.

'''Figure:''' ''Default Tor Browser Download Folder''

[[File:tbbd.png|600px|]]

To make things simpler, users can change Tor Browser preferences so files are saved directly inside <i>/home/user/Downloads</i>. To do this, follow these steps.

'''1. Navigate to Tor Browser Preferences'''

Choose one of the following three methods:

* <code>Click the "hamburger" symbol</code> -> <code>Click Preferences</code>
* <code>Navigate to the <u>E</u>dit menu</code> -> <code>click Preferences</code> -> <code>click General tab</code> -> <code>click Sa<u>v</u>e files to</code> 
* Enter <code>about:preferences</code> in the Tor Browser address bar.


'''Figure:''' ''Tor Browser Preferences''

[[File:tbbd6.png|600px]]

'''2. Select the <code>Save files to</code> Download Option'''

'''Figure:''' ''Custom Download Path Option''

[[File:tbbd8.png|600px]]

'''3. Change the Default Download Folder Location.'''

Users are recommended to set the custom path as <i>/home/user/Downloads</i>

'''Figure:''' ''A Custom Download Path is Set''

[[File:tbbd7.png|600px]]

User files will now be downloaded to <i>/home/user/Downloads</i>. You can navigate to this folder using either dolphin or konsole.

<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
If a user has stored files inside the "wrong" download folder and needs to access them, please press Expand on the right.
<div class="mw-collapsible-content">
'''1. Start Dolphin'''

'''2. Enable Hidden Files View'''

To show hidden files:

<code>Navigate to the <u>V</u>iew menu</code> -> <code>click Show <u>H</u>idden Files</code> 

'''Figure:''' ''Hidden Files in Dolphin''

[[File:tbbd2.png|600px]]

'''3. Navigate to the Downloaded Files'''

<code>Double-click the <i>.tb</i> folder</code>

'''Figure:''' ''Hidden Tor Browser Folder''

[[File:tbbd3.png|600px]]

Navigate to the following path: <code>tor-browser</code> -> <code>Browser</code> -> <code>Downloads</code>

'''Figure:''' ''Default Tor Browser Download Folder''

[[File:tbbd4.png|600px]]

Now the user can review what has been downloaded.

'''Figure:''' ''Downloaded Files''

[[File:tbbd5.png|600px]]
</div>
</div>

== Browser Language ==
If you want the browser interface in a different language than English, see [[Language]].

== Local Connections ==
'''Note:''' Accessing local application interfaces on 127.0.0.1 it is no longer possible due to a [https://trac.torproject.org/projects/tor/ticket/10419 change] in Tor Browser by The Tor Project. The configured exception means a small trade-off in privacy but is much safer than using another browser. (See [[#Local Connections Exception Threat Analysis]].)

To configure an exception for local connections in Tor Browser:

<pre>
Preferences -> Advanced -> Network | Connection Settings... -> No Proxy for: "127.0.0.1". Then, click on "OK" 
</pre>

<ref>
Alternatively, can could [[#Remove_Proxy_Settings|remove Tor Browser's proxy settings]], but then you would be vulnerable to the same fingerprinting issues (see [[#Local Connections Exception Threat Analysis]]). Additionally, you would be vulnerable to the fingerprinting issues that are opened up by [[#Remove_Proxy_Settings|remove Tor Browser's proxy settings]].
</ref>

Web HTTP(S)/SOCKS proxies have different instructions and will not work with these steps, see [[#Tor Browser Proxy Configuration|Tor Browser Proxy Configuration]].

'''Recommendations'''

For better anonymity.

* Surf with <u>J</u>ava<u>S</u>cript (JS) disabled in Tor Browser and enable only when needed - mitigates these browser fingerprinting issues completely.
* Set passwords for WebGUIs listening on localhost.
* Run sensitive daemons with local WebGUIs on a separate dedicated Whonix-Workstation + virtual network instance.

== Harden Tor Browser ==
=== Tor Browser Series and Settings ===

TO DO: Reference Security Guide entry and link to sandboxed Tor Browser section

=== AppArmor Confinement ===
To protect the system and your data from some types of attack against Tor Browser, you could consider to install Whonix's Tor Browser [[AppArmor]] profile.

As a consequence, it can only read and write to a limited number of folders. This is why you might face Permission denied errors, for example if you try to download files to the {{Code2|home}} folder. You can save files from Tor Browser to the {{Code2|~/Downloads}} folder that is located in the {{Code2|home}} folder. If you want to upload files with Tor Browser, copy them to that folder first.

{{Update}}

{{CodeSelect|code=
sudo apt-get update
}}

Install the {{Code2|apparmor-profile-torbrowser}} package.

{{CodeSelect|code=
sudo apt-get install apparmor-profile-torbrowser
}}

= Tor Browser: Updating =
== Introduction ==
[[#Tor Browser Internal Updater|Tor Browser's Internal Updater, built in stock update notification mechanism]] also works in Whonix. Use it.

[[#Tor_Browser#Tor_Browser_Updater_.28Whonix.29|Tor Browser Downloader (Whonix)]] does [https://phabricator.whonix.org/T400 not] notice upgrades done by Tor Browser's Internal Updater.

The Tor Project configured Tor Browser since version 5.0 to update itself. <ref>
https://blog.torproject.org/blog/tor-browser-50-released
<blockquote>
Starting with this release, Tor Browser will now also download and apply upgrades in the background, to ensure that users upgrade quicker and with less interaction. This behavior is governed by the about:config pref app.update.auto, but we do not recommend disabling it unless you really know what you're doing.
</blockquote>
</ref>

Additionally it might also be wise to subscribe to blog of the creators of Tor Browser https://blog.torproject.org for news.

== Updating ==
{{Anchor|Tor Browser Updater (Whonix)}}
=== Tor Browser Downloader by Whonix ===
==== Introduction ====
{{Code2|Tor Browser Downloader (Whonix)}} is really just a downloader, not a updater. Meaning, it is incapable of keeping user data, for example bookmarks and passwords. If you would like to keep your user data, use [[Tor_Browser#Tor_Browser_Internal_Updater|Tor Browser Internal Updater]] instead.

Here are some Tor Browser Downloader (Whonix) Screenshots.

'''Figure:''' ''Checking for Updates''

[[File:Tor Browser Downloader(Whonix) checking for updates.png|400px|Tor Browser Downloader (Whonix) checking for updates.]] <br />


'''Figure:''' ''Download Confirmation''

[[File:Tor Browser Downloader(Whonix).png|800px|Tor Browser Downloader (Whonix) Download Confirmation]] <br />


'''Figure:''' ''Downloading Tor Browser''

[[File:Tor Browser Downloader(Whonix) downloading.png|400px|Tor Browser Downloader (Whonix) Downloading Tor Browser.]] <br />


'''Figure:''' ''Tor Browser Installation Confirmation''

[[File:Tor Browser Downloader(Whonix) installation confirmation.png|600px|Tor Browser Downloader (Whonix) Installation Confirmation.]] <br />


'''Figure:''' ''Extracting Tor Browser''

[[File:Tor Browser Downloader(Whonix) Extracting.png|400px|Tor Browser Downloader (Whonix) Extracting.]] <br />


'''Figure:''' ''Finalized Tor Browser Installation''

[[File:Tor Browser Downloader(Whonix)FInished2.png|600px|Tor Browser Downloader (Whonix) Finished Installing Tor Browser.]] <br />


<font size=-3>(Also available as [https://www.whonix.org/w/images/f/f2/Tor_Browser_Update_Check_005.png CLI version].)</font>

Tor Browser version check and download (after confirmation) in Whonix can be done with:

{{Box|text=
<u>If you are using [[Qubes|Qubes-Whonix]]</u>, complete the following steps:

<code>Qubes App Launcher (blue/grey "Q")</code> -> <code>Whonix-Workstation AppVM (commonly named anon-whonix)</code> -> <code>Tor Browser Downloader (Whonix)</code>

<u>If you are using a graphical Whonix-Workstation</u>, complete the following steps:

<code>Start Menu</code> -> <code>Applications</code> -> <code>System</code> -> <code>Tor Browser Downloader (Whonix)</code>

<u>If you are using a terminal-only Whonix-Gateway</u>, complete the following steps:
{{CodeSelect|code=
update-torbrowser
}}
}}

==== Download Confirmation Screen ====
Helps to keep you safe.

There is currently no reliable way for a program to securely determine the latest stable version of Tor Browser with reasonable certainty. <ref>[https://trac.torproject.org/projects/tor/ticket/14383 finalize RecommendedTBBVersions format]</ref> <ref>[https://trac.torproject.org/projects/tor/ticket/13065 counter downgrade / stale mirror attacks on RecommendedTBBVersions - sign / verify tbb versions file]</ref> When the version format changes, the automated parser of version information could falsely suggest, a still considered secure, stable version that is not the latest stable version, an alpha, beta or rc (release candidate) version. Rather, you could be the target of a denial of service, indefinite freeze or rollback (downgrade) attack. <ref>
For a definition of these attacks, see
[http://theupdateframework.com TUF] ([https://github.com/theupdateframework/tuf The Update Framework])'s
[https://github.com/theupdateframework/tuf/blob/develop/SECURITY.md threat model] ([http://www.webcitation.org/6F7Io2ncN w]).
</ref>
<ref>
An adversary capable of breaking [[SSL]] could mount such an attacks by replacing [https://www.torproject.org/projects/torbrowser/RecommendedTBBVersions RecommendedTBBVersions] with invalid, frozen or outdated version information.
</ref>

Therefore the intelligence of the user is utilized as a sanity check. The Download Confirmation Screen enables users to detect such situations and abort.

Version numbers you see under {{Code2|Online versions}} come from the Tor Browser online [https://www.torproject.org/projects/torbrowser/RecommendedTBBVersions RecommendedTBBVersions] versions file that is provided by The Tor Project and parsed by Whonix's Tor Browser Downloader. All versions listed in that file are considered up to date, by The Tor Project, which means that no upgrade is required.

TODO: expand

==== Installation Confirmation Screen ====
Helps to keep you safe.

There is currently no reliable way for a program to securely determine if your download of Tor Browser was a target of an indefinite freeze or rollback attack with reasonable certainty. <ref>This is because Tor Browser signatures do not provide expiration dates yet. (Similar to Debian's [http://blog.ganneff.de/blog/2008/09/23/valid-until-field-in-release-f.html valid-until] field.</ref> <ref>This is because the user's computer clock could be wrong, so there is no rock solid basis for comparison.</ref>

When verifying cryptographic signatures there are multiple important aspects.

* For one, the signature should be made by a trusted key.
* Naturally, trusted keys have signed other files in past as well. So one must make sure to have also received the right file and not just some file that was signed by a trusted key.
* Finally, even when having received the right type of file <ref>i.e. for example, a browser, not a messenger</ref> it should be made sure, that a current signature has been used and not a historic one to counter indefinite freeze and rollback attacks.

By the time you see the Installation Confirmation Screen, the verification of the signature <ref>and hash</ref> already succeeded, but again the intelligence of the user has to be utilized to make sure there the user is not target of an indefinite freeze or downgrade attack.

{{Code2|Previous Signature Creation Date}}: When Tor Browser was previously installed by tb-updater, then tb-updater will have stored the creation date of the accompanying signature the signed Tor Browser. The {{Code2|Previous Signature Creation Date}} field shows you that date.

{{Code2|Last Signature Creation Date}}: This field shows you the date of the creation of the signature that was just downloaded.

Here is a screenshot:<br />

'''Figure:''' ''Tor Browser Installation Confirmation''

[[File:Tor Browser Downloader(Whonix) installation confirmation.png|600px|torbrowser-updater_signature_verification_screen.]] <br />

<ref>[[OpenPGP#Common_Misconceptions|gnupg (OpenPGP) common misconceptions]]</ref>
<ref>The name of the file is stored in the hash file and verified to match the downloaded name of the file and hash.</ref>

Tor Browser local version number detection is [https://phabricator.whonix.org/T400 not implemented].

TODO: Expand.

=== Tor Browser Manual Update ===
A future update of Tor Browser by The Tor Project might make Whonix's Tor Browser Updater or Tor Browser running in Whonix-Workstation unusable. In case Tor Browser (Updater) inside Whonix-Workstation breaks, a news with instructions on how to fix the issue will be posted within a few days. If not, the Whonix developers are not aware of the issue.

If the Tor Browser update script is ever broken, you are advised to update manually, see [[Manually Downloading Tor Browser]].

=== Tor Browser Internal Updater ===
Tor Browser's Internal Updater Popup Screenshot: <br />
[[File:Tor Browser Internal Updater Popup.png]]

Tor Browser's Internal Updater Wizard Screenshot: <br />
[[File:Tor Browser Internal Updater Wizard.png]]

Here you can see a screenshot of Tor Browser's menu bar that contains Tor Browser's Internal Updater Update Symbol: <br />
[[File:Tor Browser Tor Button Update Symbol.png]]

Tor Browser's Internal Updater Update Symbol: <br />
The following symbol is quite useful. It indicates, that [[#Torbutton|Torbutton]] has found out, that there is an update. <br />
[[File:Tor Browser Tor Button Update Notification.png]]

A screenshot of about:tor, that is as useful as the above symbol:  <br />
[[File:Tor Browser Internal Updater About Tor.png]]

= Safely Using Tor Browser =
== Unsafe Behavior ==

To Do: Paraphrase wiki "do not" warnings and Tor Project warnings

== Maximizing Browser Window ==
It [https://trac.torproject.org/projects/tor/ticket/7255 is] better for privacy and anonymity not to maximize the Tor Browser window. <ref>
http://forums.whonix.org/t/should-still-recommend-against-maximizing-tor-browser-window
</ref>

== Browser Plugins / Flash / Java ==

See [[Browser Plugins]].

= Whonix Tor Browser Differences =
== Introduction ==
The regular Tor Browser and Tor Browser in Whonix slightly differ. The environment Tor Browser is running in has been adjusted by Whonix to work behind the Whonix-Gateway. The network and browser fingerprint however, is the same.

Tor Browser's internal update check mechanism is untouched and works fine. Default homepage is

== Whonix Proxy Settings ==
'''Short''':
You don't need to change any proxy settings in Tor Browser.

'''Long''': <ref>
{{Anchor|Whonix Proxy Setting Footnote}}
([[#Whonix Proxy Setting Footnote|permalink]])<br />
There is no Tor over Tor in Whonix, which would be [[DoNot#Prevent_Tor_over_Tor_scenarios.|recommended against]], due to Whonix's environment. Whonix does not modify Tor Browser's startup script, defaults, etc. In Whonix-Workstation rinetd listens on {{Code2|127.0.0.1}} {{Code2|9150}} and {{Code2|9151}} (Tor Browser's default ports) and forwards them to Whonix-Gateway {{Code2|10.152.152.10 9150}} (where a Tor SocksPort is listening) and {{Code2|9151}} (where [[Dev/CPFP|Control Port Filter Proxy]] is listening). Tor does not get started by the {{Code2|[https://gitweb.torproject.org/tor-launcher.git tor-launcher]}} Firefox add-on because the {{Code2|[https://trac.torproject.org/projects/tor/ticket/6009 TOR_SKIP_LAUNCH]}} environment variable has been set set to {{Code2|1}}. See also [[Dev/anon-ws-disable-stacked-tor]].
</ref>

(If you want to change or remove proxy settings, see [[#Change / Remove Proxy Setting]].)

== More than One Tor Browser in Whonix ==
For better isolation of different identities. For advanced users. Moved to the [[Advanced_Security_Guide#More_than_one_Tor_Browser_in_Whonix|Advanced Security Guide]].

== Not Installed by Default ==
Reasons why Tor Browser is installed by default in Whonix-Workstation in [[Qubes|Qubes-Whonix]], but not in [[Non-Qubes-Whonix]]. If you are interested in the reasons why, see footnote. <ref>
{{Anchor|Not_installed_by_Default_Footnote}}

<u>Reasons why Tor Browser is installed by default in Whonix-Workstation in [[Qubes|Qubes-Whonix]], but not in [[Non-Qubes-Whonix]]</u>. ([[#Not_installed_by_Default_Footnote|link]])<br />
<br />
{{Anchor|Licensing reasons}}
<u>Licensing reasons</u>:

* Mozilla trademark: https://trac.torproject.org/projects/tor/ticket/10888
* The Tor Project trademark: https://www.whonix.org/wiki/Dev/TPO_Trademark
* [https://phabricator.whonix.org/T337 Tor Browser gets installed default since Qubes-Whonix 12], because Qubes-Whonix is built and distributed by the maintainers of Qubes OS, not Whonix. Different laws apply. They are not concerned about the legal implications.
</ref>

This will change in Whonix 14. <ref>
* [https://trac.torproject.org/projects/tor/ticket/19652 permission to install Tor Browser by default in Whonix]
* [https://trac.torproject.org/projects/tor/ticket/19911 Whonix project official licensee of The trademarks]
</ref>

== Unsupported Tor Browser Features ==
=== Tor Circuit View ===
([https://trac.torproject.org/projects/tor/ticket/8641#comment:12 screenshot])

This is [[unsupported]] for security reasons. <ref>
We do not want Whonix-Workstation to have access to the information, which Tor middle relay or Tor entry guard [or bridge] are being used.
See also: [[Dev/Control_Port_Filter_Proxy#Indicator_for_current_Circuit_Status_and_Exit_IP]]
</ref>

=== Miscellaneous ===
* See also [[#Forget_about_Tor_Button.27s_Open_Network_Settings|Forget about Tor Button's Open Network Settings]].

= Advanced Topics =
== Sandboxed Tor Browser ==
=== Introduction ===
Note: This is only available for 64-bit Linux users currently.

The "hardened" Tor Browser has been deprecated and major features like Selfrando memory randomization are now part of the alpha series and planned for eventual mainline adoption. Consequently, The Tor Project recommends users seeking a higher security solution should default to the sandboxed Tor Browser: <ref>https://blog.torproject.org/blog/discontinuing-hardened-tor-browser-series</ref> <ref>Special debug builds will now be used instead of shipping ASan in regular builds. This is beneficial because ASan has a debugging, rather than a security focus, and is extremely resource intensive.</ref>

<blockquote>While the Sandboxed Tor Browser is currently in an experimental state itself, we feel that it provides much better safeguards against exploitation than the features we shipped in the hardened series.</blockquote>

A sandbox is a secure environment for running Tor Browser which mitigates exploit vectors which would otherwise deanonymize the user or infect their computer. For instance, sandboxing reduces the opportunities for an attacker to easily identify real IP and MAC addresses, install malware, or browse user files.<ref>https://blog.torproject.org/blog/q-and-yawning-angel</ref> In simple terms, Tor Browser runs in a limited awareness container that is prevented from interacting with the rest of the user's computer. The spate of recent attacks on Tor Browser in the wild suggest this is a sensible approach for cautious users or those facing significant risks.

The Tor Browser sandbox is compatible with either the stable or alpha Tor Browser series, but it is incompatible with grsec kernels. <ref>https://blog.torproject.org/blog/tor-browser-65a6-hardened-released</ref>

=== Sandboxing Effects on Tor Browser Functionality ===

Sandboxing improves security, but some functionality is lost inadvertently or by design. Also, some functions like sound must be optionally configured. In early 2017, broken items include:<ref>https://trac.torproject.org/projects/tor/wiki/doc/TorBrowser/Sandbox/Linux</ref>

* Foreign language support.
* The meek pluggable transport.
* Manual checks for Tor Browser updates.


The Tor Browser sandbox is unlikely to ever support:

* The FTE pluggable transport.
* Hardware-accelerated 3D rendering.
* Printing, except to a file.
* Connections outside of the Tor network.
* Compatibility of Tor Browser with a grsec kernel (due to ASAN/Pax conflicts).


Manual configuration changes are required for: audio support, the Tor ciruit display (already disabled in Whonix), and installs/updates of Tor Browser add-ons. By design: fonts are limited to a minimal set, plug-ins like Flash or Silverlight will not work, users will not be able to see downloaded files, and further add-ons cannot be enabled without sandbox configuration changes.

=== Sandboxing Tor Browser in Non-Qubes-Whonix ===

'''Warning:''' These instructions are extremely alpha and require a 64-bit version of Whonix (Whonix 14) to work. Testers or advanced users only!

==== Tor Browser Sandbox Dependencies ====

Several dependencies are required in order to install and run the sandbox:

* Bubblewrap from Debian Jessie backports.
* A newer (Whonix-14-developers-only) version of the control-port-filter-python for Tor cookie control protocol authentification. <ref>https://forums.whonix.org/t/tor-browser-sandbox-linux-alpha-coming-soon/3060</ref>
* ''Optional:'' Libnotify4 for desktop notifications about events.


'''1. Boot Whonix-Workstation'''

'''2. Add jessie-backports to sources.list'''

{{CodeSelect|code=
sudo su -c "echo -e 'deb http://http.debian.net/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"
}}

Or to use the .onion mirror.

{{CodeSelect|code=
sudo su -c "echo -e 'deb http://vwakviie2ienjx6t.onion/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"
}}

'''3. Use Apt-pinning Before Installing Dependencies'''

{{Apt-Pinning}}

'''4. Update the Package Lists and Install Bubblewrap'''

{{CodeSelect|code=
sudo apt-get update
}}

{{CodeSelect|code=
sudo apt-get -t jessie-backports install bubblewrap
}}

Note: golang is not needed unless manually building the sandbox from source. lib-seccomp dependencies are no longer required since v0.0.3 of the sandbox.

'''5. ''Optional:'' Install Libnotify4 for Desktop Notifications'''

{{CodeSelect|code=
sudo apt-get install libnotify4
}}

Note: The Adwaita Gtk+-2.0 theme is already installed in the Whonix template.

==== Download the Tor Browser Sandbox ====

'''1. Download the Sandbox Binary and Key File'''

For later releases, the Tor Project sandbox binaries and key files can be found [https://www.torproject.org/projects/torbrowser.html.en#downloads-alpha here].

In the Whonix-Workstation, open a terminal and run.

{{CodeSelect|code=
wget https://www.torproject.org/dist/torbrowser/7.0a3/sandbox-0.0.6-linux64.zip
}}

{{CodeSelect|code=
wget https://www.torproject.org/dist/torbrowser/7.0a3/sandbox-0.0.6-linux64.zip.asc
}}

'''2. Download the Tor Project Signing Key and Verify the Zip File'''

In the terminal, run.

{{CodeSelect|code=
gpg --recv-keys "EF6E 286D DA85 EA2A 4BA7 DE68 4E2C 6E87 9329 8290"
}}

{{CodeSelect|code=
gpg --verify sandbox-0.0.6-linux64.zip.asc
}}

The output should show a good signature from the Tor developers and be similar to this.

<pre>
gpg: Signature made Tue 24 Jan 2015 09:29:09 AM CET using RSA key ID D40814E0
gpg: Good signature from "Tor Browser Developers (signing key) "
gpg: WARNING: This key is not certified with a trusted signature!
gpg: There is no indication that the signature belongs to the owner.
Primary key fingerprint: EF6E 286D DA85 EA2A 4BA7  DE68 4E2C 6E87 9329 8290
</pre>

If a bad signature warning is received, delete the files, rotate the Tor circuits, and download them again.

'''3. Unzip the Sandbox'''

In the terminal, run.

{{CodeSelect|code=
unzip sandbox-0.0.6-linux64.zip
}}

==== Launching Sandboxed Tor Browser ====

To start the sandbox, open a terminal and run.

{{CodeSelect|code=
cd sandbox
}}

{{CodeSelect|code=
./sandboxed-tor-browser
}}

When prompted, select the preferred Tor Browser version to use in Whonix-Workstation. To check the sandboxed-tor-browser is correctly using the system Tor process run.

{{CodeSelect|code=
env | grep TOR
}}

The output should show.

<pre>
TOR_CONTROL_PORT=9151
</pre>

Is set as an environment variable.

Important notes:

* sandboxed-tor-browser is also a Tor Browser downloader similar to tb-updated / torbrowser-launcher.
* Whonix network settings are auto-detected as system Tor. There is no need to manually configure settings.
* 32-bit support has been deprecated since version 0.0.2 of the sandbox.
* 64-bit only support since sandbox version 0.0.3 means it is only compatible with Whonix 14 (the next Whonix release).

=== Sandboxing Tor Browser in Qubes-Whonix ===

The Tor Browser alpha sandbox is currently blocked in [[Qubes-Whonix]] due to problems in upgrading to the Whonix-14-developers-only version of the control-port-filter-python. This issue is expected to be resolved with the official release of Whonix 14. 

A recommended interim solution is to use [[Security_Guide#Firejail|Firejail]] to better contain the Tor Browser application.

== Custom Homepage ==
'''This is an advanced topic.'''

As [https://www.whonix.org/old-forum/index.php/topic,1573.0.html reported], setting a custom homepage in Tor Browser settings might not work.

Technical background: <ref>
The [https://github.com/Whonix/whonix-welcome-page whonix-welcome-page] package's file [https://github.com/Whonix/whonix-welcome-page/blob/master/usr/lib/whonix-welcome-page/env_var.sh /usr/lib/whonix-welcome-page/env_var.sh] sets [https://trac.torproject.org/projects/tor/ticket/13835 environment variable to set TorBrowser homepage] {{Code2|TOR_DEFAULT_HOMEPAGE}} to {{Code2|/usr/share/homepage/whonix-welcome-page/whonix.html}}.

Perhaps it could be seen as a bug if Tor Browser if a user set custom homepage does not overrule the {{Code2|TOR_DEFAULT_HOMEPAGE}} environment variable? TODO: No bug has been reported at trac.torproject.org yet.
</ref>

To set a custom homepage, you could try to purge the whonix-welcome-page package. <ref>{{Code|sudo apt-get purge whonix-welcome-page}}.</ref> But this is difficult due to technical limitations as explained on the [[Whonix_Debian_Packages|Whonix Debian Packages]] page.

Alternatively, you could modify {{Code2|/usr/lib/whonix-welcome-page/env_var.sh}}, but these changes would be reverted after upgrade. <ref>
{{CodeSelect|code=
kdesudo kate /usr/lib/whonix-welcome-page/env_var.sh
}}
</ref>

Or you could set environment variable {{Code2|TOR_DEFAULT_HOMEPAGE}} to a custom value. Doing so would be similar setting environment variables as explained in [[#Transparent Torification - No Proxy - System Default]].

== Verify New Identity ==
'''This is an advanced topic. You most likely only need it in custom configurations, such as when using a [[Other Operating Systems|Whonix-Custom-Workstation]].'''

First of all, should it have failed, TorButton should notice, that it could not connect to Tor's ControlPort and should report, that giving a new identity failed. If you don't get such an error popup, it is a good indication, that there are no issues.

After the browser restarted, on the about:tor page, click "Test Tor Network Settings". It will lead to https://check.torproject.org (check.tpo) (or manually visit check.tpo, it doesn't matter.). In most cases (Not all! <ref>Getting a new circuit, doesn't guarantee getting a new exit relay. This is normal. See also [[Stream_Isolation]].</ref>) you should have a new exit relay. Check.tpo should report different IP.

On Whonix-Gateway, watch [[Dev/CPFP|Control Port Filter Proxy]]'s log while using TorButton's New Identity feature.

{{CodeSelect|code=
tail -f /var/log/control-port-filter-python.log
}}

If you see something like this.

<pre>
2015-12-12 23:59:41,276 - CPFP log - DEBUG - Request: signal newnym
2015-12-12 23:59:41,284 - CPFP log - DEBUG - Answer: 250 OK
</pre>

Then Control Port Filter Proxy received the request from Tor Browser and got Tor's okay, that it worked.

== Get New Identity without Tor ControlPort Access ==
'''This is an advanced topic. You most likely only need it in custom configurations, such as when not using [[Dev/CPFP|Control Port Filter Proxy]].'''

Simulate, what TorButton would do.

1. Close Tor Browser. <br />
2. Get new identity on Whonix-Gateway using [[Tor Controller|arm]]. <br />
3. Start Tor Browser again. <br />
4. Done.

{{Anchor|Change/Remove Proxy Setting}}
{{Anchor|Change / Remove Proxy Setting}}
== Remove Proxy Settings ==
'''This is an advanced topic. You most likely only need it for advanced tunneling scenarios.'''

To remove Tor Browser proxy settings, i.e setting it to no proxy, apply the following instructions.
{{Tor_Browser_Remove_Proxy_Settings}}

{{Anchor|Tor Browser Proxy Configuration}}

== Change Proxy Settings ==
'''This is an advanced topic. You most likely only need it for advanced tunneling scenarios.'''

'''Note that these instructions do not apply to accessing [[Tor_Browser#Local_Connections|local web-interfaces]].'''

{{Template:TorBrowser_Proxy_Configuration}}

== Local Connections Exception Threat Analysis ==
This applies to [[#Local_Connections|allowing local connections in Tor Browser]].

'''Threat Details'''

According to [https://bugzilla.mozilla.org/show_bug.cgi?id=354493 this] Firefox ticket, JavaScript can be abused to scan internal networks, fingerprint devices, and make malicious commands to those devices if they have a web interface. The configured exception means a small trade-off in privacy but is much safer than using another browser. <ref>https://trac.torproject.org/projects/tor/ticket/10419#comment:37</ref> Read on about steps to further minimize the risks.

'''Analysis'''

There are no embedded devices attached to a Whonix internal network, it is isolated and untrusted. However malicious <u>J</u>ava<u>S</u>cript (JS) will be able to tell an attacker that a service is running on a localhost port. This can reduce your anonymity set.

Malicious misconfiguration of daemons listening on localhost is possible but with limited impact because traffic is still forced through Whonix-Gateway.

'''Misc'''

* [https://forums.whonix.org/t/workaround-available-i2p-no-longer-works-with-the-latest-tor-browser/182/14 Related Whonix Forum Topic]
* [https://trac.torproject.org/projects/tor/ticket/11493 Tor Browser Bug Report]

== tor-launcher vs torbrowser-launcher ==
Two totally different things with similar names.

* [https://lists.torproject.org/pipermail/tor-dev/2013-May/004761.html tor-launcher] ([http://trial.pearlcrescent.com/tor/torlauncher/2013-05-03/SetupWizard/wizard-all.png screenshots] ([http://www.webcitation.org/6RVFMxzEf w])) is a Tor Controller, a [https://dist.torproject.org/vidalia-bundles Vidalia] replacement, an add-on that is included in TBB by default.
* [https://micahflee.com/torbrowser-launcher/ torbrowser-launcher] ([https://micahflee.com/wp-content/uploads/2013/04/tbl.png screenshot]) is an application to download Tor Browser, an alternative to [[#Tor_Browser_Updater_.28Whonix.29|Tor Browser Updater (Whonix)]] ([https://github.com/Whonix/tb-updater tb-updater]).

== tor-launcher ==
In case you are wondering if tor-launcher will result in [[DoNot#Prevent_Tor_over_Tor_scenarios.|Tor over Tor]]... No, because Tor Browser and Whonix [[Tor_Browser#Whonix_Proxy_Settings|play well together]]. tor-launcher is disabled by default in Whonix-Workstation.

Can or should you remove tor-launcher from TBB? In theory it makes no difference. In practice, it is untested and seems to provide no advantages. Just leave it enabled to have the same tested setup as everyone else.

tor-launcher is not (yet) available for usage in Whonix-Gateway. <ref>https://phabricator.whonix.org/T118</ref>

== torbrowser-launcher ==
[[#Tor_Browser_Updater_.28Whonix.29|Tor Browser Updater (Whonix)]] ([https://github.com/Whonix/tb-updater tb-updater]) (installed by default in Whonix) is specifically designed to be co-installable with torbrowser-launcher. Maybe one day Whonix will deprecate tb-updater and install torbrowser-launcher by default, see [https://www.whonix.org/old-forum/index.php/topic,404.0.html forum development discussion] if that is of interest to you.

== Terminology ==
=== Tor vs Tor Browser ===
[[Tor]] is an anonymizer developed by The Tor Project. Tor Browser is a web browser developed by the Tor Project optimized for privacy. Please don't substitute writing {{Code2|Tor}} when you mean {{Code2|Tor Browser}} or the confusion will be perfect.

=== Tor Browser Transparent Proxying ===
This Tor Browser "transparent proxying" feature and/or the environment variable <code>TOR_TRANSPROXY=1</code> causes lots of confusion. It was a bad decision by TPO to call it "transparent proxying". What it actually does, is "[[Tor_Browser#Remove_Proxy_Settings|set to no proxy settings]]", i.e "set to system default". Then Tor Browser works network wise just as a unconfigured Firefox / Iceweasel. If the person using this Tor Browser "transparent proxying" feature, happens to not use a gateway with transparent torification features such as Whonix-Gateway, traffic would go through clearnet. If the person using this Tor Browser "transparent proxying" feature, happens to use a torifying gateway such as Whonix-Gateway, traffic happens to go through Tor. If the person using this Tor Browser "transparent proxying" feature, happens to have a JonDo-Gateway, traffic happens to go through JonDo.

Not to be confused with Tor's setting <code>TransPort [address:]port|auto [isolation flags]</code> setting. Not to be confused with [https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxy TransparentProxy], which is different from an [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/IsolatingProxy IsolatingProxy].

{{Anchor|tb-updater postinst}}
== Qubes specific ==
=== Running Tor Browser in Qubes TemplateVM ===
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Don't start Tor Browser in the whonix-ws TemplateVM or whonix-ws-dvm DisposableVM-TemplateVM. It is not expected to be done that way and wrong.
}}

<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
If you want to know why, please press on expand on the right.
<div class="mw-collapsible-content">
* You are expected to use Tor Browser as stock as possible with as few modifications as per upstream recommendations by The Tor Project.
* You risk connecting to the internet with the browser (open issue: https://phabricator.whonix.org/T372 ) thereby compromising the TemplateVM and thereby all TemplateBasedVMs based on that TemplateVM.
* By starting Tor Browser it creates various files. Although it should not, one or another file might make you [[DoNot#Do_not_confuse_Anonymity_with_Pseudonymity|pseudonymous rather than anonymous]]. You do not want all TemplateBasedVMs based on that TemplateVM be linked to the same pseudonym. You are a lot better of starting Tor Browser for the first time in the TemplateBasedVM rather than TemplateVM. Otherwise you are expecting Tor Browser to be perfect and to no such bug be revealed later. If you look at current and past Tor Browser issues, this seems like a very bad idea:
** https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_information&status=needs_review&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-linkability
** https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_review&status=needs_revision&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-fingerprinting
</div>
</div>

=== tb-updater in Qubes TemplateVM ===
Tor Browser is installed by default in Whonix-Workstation in [[Qubes|Qubes-Whonix]], but not in [[Non-Qubes-Whonix]]. If you are interested in the reasons why, see [[#Not installed by Default Footnote]].

Beginning from Whonix 13 by default during Qubes-Whonix-Workstation builds, during the initial installation of [[#Tor Browser Downloader by Whonix]] ({{Code2|tb-updater}} package) ({{Code2|update-torbrowser}}) within chroot, it will be automatically run. If that fails, it will fail closed by default. This means, the package will fail to install. Therefore this could throw and error while building Whonix images from source code or when [[Dev/Installation_from_Repository|installing Whonix from repository]]. This is not great, but it has been decided to install Tor Browser by default in Qubes-Whonix-Workstation. The only way to ensure it really gets installed by default, is to fail closed by default.

Beginning from Whonix 13 by default in Qubes-Whonix-Workstation TemplateVMs, during upgrades of [[#Tor Browser Downloader by Whonix]] ({{Code2|tb-updater}} package) ({{Code2|update-torbrowser}}) it will be automatically run. If that fails, it will fail open by default. This means, you will be informed in the terminal, that no new Tor Browser could be downloaded but apt-get will terminate normally. This is required to implement the Qubes-Whonix feature [https://phabricator.whonix.org/T417 up to date versions of Tor Browsers in newly created AppVMs inherited from updated TemplateVMs].

What should you do if it failed? If you can still update Tor Browser using [[#Tor Browser Internal Updater]] or [[#Tor_Browser_Manual_Update|manually re-download Tor Browser]], then there is no need for concern and this is only a small inconvenience. 

All of this can be configured, if you want to do so...

{{Open with root rights|filename=
/etc/torbrowser.d/50_user.conf
}}

When the tb-updater package is upgraded, by default in the Qubes-Whonix-Workstation TemplateVM a hardcoded<ref>In the tb-updater package.</ref> version Tor Browser tarball and signature is automatically downloaded. If you want to disable this, add.

{{CodeSelect|code=
tb_install_follow=false
}}

Save.

Technical details:

By default in Qubes-Whonix-Workstation TemplateVMs during Debian maintainer postinst script, folders /var/cache/tb-binary/.cache/tb/ and /var/cache/tb-binary/.tb/tor-browser will be deleted if existing. tb-updater will then download files to /var/cache/tb-binary/.cache/tb/.

<pre>
find /var/cache/tb-binary/.cache/tb/
</pre>

<pre>
/var/cache/tb-binary/.cache/
/var/cache/tb-binary/.cache/tb
/var/cache/tb-binary/.cache/tb/files
/var/cache/tb-binary/.cache/tb/files/sha256sums.txt.asc
/var/cache/tb-binary/.cache/tb/files/tor-browser-linux64-5.5.4_en-US.tar.xz
/var/cache/tb-binary/.cache/tb/files/sha256sums.txt
/var/cache/tb-binary/.cache/tb/temp
/var/cache/tb-binary/.cache/tb/temp/tar_fifo
/var/cache/tb-binary/.cache/tb/temp/tor_check_bootstrap_helper_bootstrap_file
/var/cache/tb-binary/.cache/tb/temp/sha256_output
/var/cache/tb-binary/.cache/tb/temp/pv_wrapper_fifo
/var/cache/tb-binary/.cache/tb/temp/tbb_remote_folder
/var/cache/tb-binary/.cache/tb/gpgtmpdir
/var/cache/tb-binary/.cache/tb/gpgtmpdir/secring.gpg
/var/cache/tb-binary/.cache/tb/gpgtmpdir/pubring.gpg~
/var/cache/tb-binary/.cache/tb/gpgtmpdir/pubring.gpg
/var/cache/tb-binary/.cache/tb/gpgtmpdir/gpg_bash_lib_internal_gpg_verify_status_fd_file
/var/cache/tb-binary/.cache/tb/gpgtmpdir/trustdb.gpg
/var/cache/tb-binary/.cache/tb/gpgtmpdir/gpg_bash_lib_internal_gpg_verify_output_file
</pre>

After gpg verification, tb-updater will extract the Tor Browser archive to /var/cache/tb-binary/.tb.

<pre>
find /var/cache/tb-binary/.tb
</pre>

<pre>
/var/cache/tb-binary/.tb/tor-browser/...
</pre>

When a Qubes-Whonix-Workstation AppVM is booted for the first time, in essence, the systemd unit file [https://github.com/Whonix/tb-updater/blob/master/lib/systemd/system/tb-updater-first-boot.service /lib/systemd/system/tb-updater-first-boot.service] runs [https://github.com/Whonix/tb-updater/blob/master/usr/lib/tb-updater/first-boot-home-population /usr/lib/tb-updater/first-boot-home-population]. That script copies /var/cache/tb-binary to /home/user. This results in...

<pre>
ls -la /home/user/.tb
</pre>

<pre>
output... TODO
</pre>

<pre>
ls -la /home/user/.cache/tb
</pre>

<pre>
output... TODO
</pre>

Informations for users creating Whonix using the build script.

If you are building Qubes-Whonix using the build script and want to fail open generally, a file /etc/torbrowser.d/50_user.conf has to be created inside chroot before the build with the following content.

{{CodeSelect|code=
anon_shared_inst_tb=open
}}

If you are building Qubes-Whonix using the build script and want to skip initial download of Tor Browser during build of Whonix in chroot, a file /etc/torbrowser.d/50_user.conf has to be created inside chroot before the build with the following content.

{{CodeSelect|code=
tb_install_in_chroot=false
}}

== Whonix-Custom-Linux-Workstation specific ==
These instructions are new and you will be an early tester. There could be some connectivity issues.

Please [[contribute]] by testing and finishing these instructions!

These instructions were tested using Tor Browser version 6.0.1. Connectivity might break in later Tor Browser versions in case the developers of Tor Browser modify things related to how networking in Tor Browser gets configured. <ref>
Once Tor Browser moves to SocksSocket, this will certainly no longer work. References:

* https://trac.torproject.org/projects/tor/ticket/14270
* https://phabricator.whonix.org/T192
</ref>

1) [[Manually_Downloading_Tor_Browser|Manually download and install Tor Browser]].

2) You have to set multiple environment variables.

{{Qubes persistence note}}

{{Open with root rights|filename=
/etc/environment
}}

Add.

<pre>
## Deactivate tor-launcher,
## a Vidalia replacement as browser extension,
## to prevent running Tor over Tor.
## https://trac.torproject.org/projects/tor/ticket/6009
## https://gitweb.torproject.org/tor-launcher.git
TOR_SKIP_LAUNCH=1

## Environment variable to disable the "TorButton" ->
## "Open Network Settings..." menu item. It is not useful and confusing to have
## on a workstation, because this is forbidden for security reasons. Tor must be
## configured on the gateway.
TOR_NO_DISPLAY_NETWORK_SETTINGS=1

## environment variable to skip TorButton control port verification
## https://trac.torproject.org/projects/tor/ticket/13079
TOR_SKIP_CONTROLPORTTEST=1
</pre>

Save.

Reboot.

From now on, only the browser component of Tor Browser will be started.

3) Verify environment variables.

<pre>
env | grep -i tor
</pre>

Should show.

<pre>
TOR_NO_DISPLAY_NETWORK_SETTINGS=1
TOR_SKIP_CONTROLPORTTEST=1
TOR_SKIP_LAUNCH=1
</pre>

4) Configure network settings. <ref>
Learn about network settings.

{{Tor Browser Manual Proxy Configuration}}

<pre>
## The following TOR_SOCKS_HOST and TOR_SOCKS_PORT variables
## do not work flawlessly, due to an upstream bug in Tor Button:
##    "TOR_SOCKS_HOST, TOR_SOCKS_PORT regression"
##    https://trac.torproject.org/projects/tor/ticket/8336
TOR_SOCKS_HOST="10.152.152.10"
TOR_SOCKS_PORT="9150"
</pre>
</ref>

Now you have to create {{Code2|~/.tb/tor-browser/Browser/TorBrowser/Data/Browser/profile.default/user.js}}. This supposes you installed Tor Browser as per step 1). It supposes you have a folder {{Code2|~/.tb/tor-browser}}. If you installed Tor Browser to another folder of your own choice, you need to adjust the path.

{{Open File|filename=
~/.tb/tor-browser/Browser/TorBrowser/Data/Browser/profile.default/user.js
}}

Add.

<pre>
user_pref("extensions.torbutton.use_privoxy", false);
user_pref("extensions.torbutton.settings_method", "custom");
user_pref("extensions.torbutton.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.socks_port", 9100);
user_pref("network.proxy.socks", "10.152.152.10");
user_pref("network.proxy.socks_port", 9100);
user_pref("extensions.torbutton.custom.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.custom.socks_port", 9100);
user_pref("extensions.torlauncher.control_host", "10.152.152.10");
user_pref("extensions.torlauncher.control_port", 9052);
</pre>

Save.

5) Done.

== Windows specific ==
'''UNTESTED'''<br />
'''UNFINISHED'''<br />
Please [[contribute]] by testing and finishing these instructions!

When you are using a [[Other_Operating_Systems|Custom-Whonix-Workstation]], specifically a Windows-Whonix-Workstation and want to use Tor Browser...

1) Install Tor Browser.

* Download [https://www.torproject.org/projects/torbrowser.html.en Tor Browser from torproject.org].
* Verify the download.
* Extract it.

2) Use Tor Browser without bundled Tor.

In the folder where you extracted Tor Browser, create a new text file. For example, you could give it the following name.

<pre>
Start TB without Tor.bat
</pre>

Add the following content to that file.

<pre>
SET TOR_SKIP_LAUNCH=1

"Start Tor Browser.lnk"
</pre>

Save.

<ref>
We just have to set the **SET TOR_SKIP_LAUNCH=1** environment variable, then start Tor Browser. The Tor Browser Launcher add-on will detect this, skip the connection wizard and skip launching Tor.
</ref>

3) Configure network settings.

Start Tor Browser. The following links for removing and changing proxy settings do not apply one to one to Windows! [[#Remove Proxy Settings|removing]] of proxy settings should be better avoided. [[#Change Proxy Settings|changing]] proxy settings would be better. How to do this on Windows is currently undocumented but you might figure out.

{{Tor Browser Manual Proxy Configuration}}

4) Figure out missing instructions. Port them from Linux specific to Windows specific.

[[Tor_Browser#Whonix-Custom-Linux-Workstation_specific]]

5) Done.

== Start from Command Line ==
{{Open a Whonix-Workstation Terminal}}

Change into Tor Browser folder.

<pre>
cd ~/.tb/torbrowser
</pre>

Start Tor Browser.

<pre>
./start-tor-browser --debug
</pre>

== Debugging ==
{{Open a Whonix-Workstation Terminal}}

Change into Tor Browser folder.

<pre>
cd ~/.tb/torbrowser
</pre>

Start Tor Browser from command line in debug mode.

<pre>
./start-tor-browser --debug
</pre>

Type into th address bar.

<pre>
about:config
</pre>

search for ___ and set to ___

<pre>
extensions.torbutton.loglevel | 1
extensions.torlauncher.loglevel | 1

extensions.torbutton.logmethod | 0
extensions.torlauncher.logmethod | 0
</pre>

Close Tor Browser.

Restart Tor Browser.

<pre>
./start-tor-browser --debug
</pre>

<ref>
https://www.torproject.org/docs/torbutton/en/design/
</ref>

= Footnotes / References =
<references/>

= License =

<pre>Whonix Tor Browser wiki page Copyright (C) Amnesia <amnesia at boum dot org>
Whonix Tor Browser wiki page Copyright (C) 2012 - 2017 Patrick Schleizer <adrelanos@riseup.net>

This program comes with ABSOLUTELY NO WARRANTY; for details see the wiki source code.
This is free software, and you are welcome to redistribute it
under certain conditions; see the wiki source code for details.</pre>

{{Footer}}

[[Category:Documentation]]
