{{Header}}

= Security Overview =

All methods:

* Risk of transferring [[Metadata]] or other sensitive information into Whonix-Workstation.
* Whonix is about isolation. If you import data from the host or other media into Whonix-Workstation you weaken isolation and must be very careful.

Shared Folder:

* Using filesharing built into VirtualBox (Shared Folder) isn't very secure.
* It requires installing [[VirtualBox Guest Additions]] and therefore weakens security.

SSH:

* Works with ssh, scp, sshfs. Instructions below.

ISO Images, Host -> Whonix-Gateway/Workstation:

* Safest method of getting files into Whonix-Workstation.

USB devices plugged into VirtualBox:

* Hardware serials of the USB controller and/or USB device could leak into Whonix-Workstation.
* Requires closed source VirtualBox extensions.

Mounting Virtual Machine images:

* No idea if and if yes, what could leak into the Virtual Machine image.
* See also [[Dev/Build Anonymity]].

= Transfer files from the Host into Whonix-Gateway or Whonix-Workstation through ISO images =

On the host...

Install genisoimage:

<pre>sudo apt-get install genisoimage</pre>

To create an iso "files.iso" containing the content of "folder":

<pre>mkisofs -o files.iso /path/to/folder</pre>

Use the VirtualBox graphical user interface to mount your newly created iso a virtual VM CD/DVD drive.

Inside Whonix-Workstation...

Create the folder /media/cdrom.

<pre>sudo mkdir -p /media/cdrom</pre>

Now attach the iso to the VM. Mount it with

<pre>sudo mount /dev/sr0 /media/cdrom</pre>

Get into that folder.

<pre>cd /media/cdrom</pre>

See your files.

<pre>dir</pre>

This is intentionally one-way as the Whonix-Workstation is inherently untrusted and should remain isolated to prevent side-channel attacks and covert channel leaks.

= Adding USB device to VirtualBox =

This is not recommended for security reasons.

Does '''not''' require VirtualBox Guest Additions.

Please read the chapter [[About#Whonix_is_based_on_Debian.2C_VirtualBox_and_Tor | Whonix is based on Debian]].

Means, you can change your search terms from "How to get USB in Whonix-Workstation?" to "How to get USB in VirtualBox?".

Anyway, VirtualBox does not support USB out of the box. There are closed source additional extensions for usb support. You can download them from the [https://www.virtualbox.org/wiki/Downloads VirtualBox download page].

Install them on the host.

I don't know if reboot is required. Then you can plug USB devices into Virtual Machines through the device menu in VirtualBox.

Note that automount of USB devices is disabled in Whonix by default. Try, Start menu -> System Settings -> Removable Media or manually mount. [https://sourceforge.net/p/whonix/discussion/general/thread/3b4b67c2/ Please share your results.]

Note, if you USB device is formatted with NTFS, you need to install the ntfs-3g package, and a special mount command, see <ref>http://sourceforge.net/p/whonix/discussion/general/thread/c2429909/</ref>.

= Shared Folder =

See [[VirtualBox Guest Additions]] chapter.

= SSH into Whonix-Gateway =
'''Developers / experts only! Only for debugging!''' <br />
'''Untested in Whonix 6 (will probably work)'''

On Whonix-Gateway.

Look at the {{Code|/etc/whonix_firewall.d/30_default}} config file.

Set GATEWAY_ALLOW_INCOMING_SSH to 1.

<pre>GATEWAY_ALLOW_INCOMING_SSH=1</pre>

Restart firewall.

<pre>
## On Whonix-Gateway!

sudo /usr/bin/whonix_firewall
</pre>

Inside Whonix-Gateway:

<pre>
## On Whonix-Gateway!

## Run once.
sudo apt-get install openssh-server
</pre>

On the host: Add port forwarding from host into Virtual Machine.

<pre>
## On the host!
## Open a terminal.
## Run once.
## This forwards connection from the host to 127.0.0.1:2200 to
## the SSH server running inside Whonix-Gateway on port 22.
VBoxManage modifyvm "Whonix-Gateway" --natpf1 "ssh",tcp,127.0.0.1,2200,,22

## If you ever want to undo this...
#VBoxManage modifyvm "Whonix-Gateway" --natpf1 delete "ssh"
</pre>

On the host: Open a ssh session.

<pre>
## On the host!

## as user
ssh user@127.0.0.1 -p 2200
## or as root
ssh root@127.0.0.1 -p 2200
</pre>

On the host: Or mount Whonix-Gateway as a folder.

Create a folder which will be used to mount the image. It needs to exist before trying to mount.

<pre>
mkdir ~/mountgateway
</pre>

<pre>
## On the host!

## as user
sshfs user@127.0.0.1:/ -p 2200 ~/mountgateway
## or as root
sshfs root@127.0.0.1:/ -p 2200 ~/mountgateway
</pre>

= SSH into Whonix-Workstation =
'''Developers / experts only! Only for debugging!'''

You can not directly SSH into Whonix-Workstation, because Whonix-Workstation has only an internal network interface and no NAT interface. Adding one would defeat the purpose of Whonix. (See [[Security Guide]] for details why.)

Required: You mastered the steps "SSH into Whonix-Gateway" above.

Connection will look like this: host -> ssh -> Whonix-Gateway -> ssh -> Whonix-Workstation.

On Whonix-Workstation:

<pre>
## On Whonix-Workstation!
sudo apt-get install openssh-server
</pre>

On the Whonix-Gateway:

<pre>
## On Whonix-Gateway!

## or user@
/usr/bin/ssh.real root@192.168.0.11
</pre>

Then SSH from the host into Whonix-Gateway (host -> Whonix-Gateway). From there, SSH into Whonix-Workstation (Whonix-Gateway -> Whonix-Workstation). You can also do that with one command (called SSH hopping).

<pre>
## On the host!

## or root@
ssh -t user@127.0.0.1 -p 2200 "ssh.real user@192.168.0.11"
</pre>

You can also mount the filesystem of Whonix-Workstation with two commands. SSH hopping is also possible for sshfs (a website [http://www.larkinweb.co.uk/computing/mounting_file_systems_over_two_ssh_hops.html told] ([http://www.webcitation.org/6FDYtApEP w]) me).

<pre>
mkdir ~/mountworkstation
</pre>

<pre>
## On the host!

## or root@

## SSH into Whonix-Workstation and map to localhost:2222.
ssh -f user@127.0.0.1 -p 2200 -L 2222:192.168.0.11:22 -N

## Mount Whonix-Workstation folder on the host.
sshfs -p 2222 user@localhost:/ ~/mountworkstation
</pre>

= Mount and inspect images =
== Introduction ==
'''Developers / experts only! Only for debugging!'''

Required knowledge:

* You don't have to use this method. Standard ''vdi'' (or ''img'') images are used. Feel free to mount them using any other way you like.
* Mount and inspect images has been researched for only for Linux hosts. Not saying it's impossible on Windows, but it's not documented.
* You must understand understand for what ''img'' and for what ''vdi'' images are used, that's explained on the [[Dev/Source Code Intro]] page.
* You need the Whonix source code, see chapter [[Dev/BuildDocumentation_7#Get_Whonix_Source_Code|Get the Whonix source code]].
* Verify the Whonix source code with OpenPGP is not required, but recommended.
* You need some dependencies, you can install them using the {{Code|build-steps.d/1100_prepare-build-machine}} script.

== VDI ==
=== Mount Whonix-Gateway ''vdi'' images. ===
<pre>sudo ./help-steps/mount-vdi -tg

cd "/home/user/whonix_binary/whonix-Gateway_image"
## inspect
cd ~

sudo ./help-steps/unmount-vdi -tg
</pre>

=== Mount Whonix-Workstation ''vdi'' images. ===
<pre>
sudo ./help-steps/mount-vdi -tw

cd "/home/user/whonix_binary/whonix-Gateway_image"
## inspect
cd ~

sudo ./help-steps/unmount-vdi -tw
</pre>
== IMG ==

=== Mount Whonix-Gateway ''img'' images. ===
<pre>
sudo ./help-steps/mount-img -tg

cd "/home/user/whonix_binary/whonix-Gateway_image"
## inspect
cd ~

sudo ./help-steps/unmount-img -tg
</pre>

=== Mount Whonix-Workstation ''img'' images. ===
<pre>
sudo ./help-steps/mount-img -tw

cd "/home/user/whonix_binary/whonix-Gateway_image"
## inspect
cd ~

sudo ./help-steps/unmount-img -tw
</pre>

== VMDK ==
=== Mount Whonix-Workstation ''vmdk'' images. ===
Use this method to mount any VirtualBox file type (VMDK, VDI, VHD, or raw) on a Linux host.

This method uses a VirtualBox utility named "vdfuse" ([http://packages.debian.org/wheezy/virtualbox-fuse virtualbox-fuse package]). It uses the VirtualBox access library to open a VirtualBox supported image file and mount it as a Fuse file system.

This step is optional. You can skip this step and come back to it if the next step fails.
<pre>
sudo apt-get update
</pre>

Install the VirtualBox vdfuse utility. Note: this only works up to Debian Wheezy. '''TODO: How to do it on Debian Testing/Jessie? [http://packages.debian.org/sid/libguestfs0 libguestfs0] could work. But it is not in Debian Testing/Jessie yet.'''
<pre>
sudo apt-get install virtualbox-fuse
</pre>

Edit the /etc/fuse.conf file and uncomment the line #user_allow_other and then save the file. Then, set the permissions on /etc/fuse.conf.
<pre>
sudo vi /etc/fuse.conf (Uncomment #user_allow_other and then save)
sudo chmod 644 /etc/fuse.conf
</pre>

Create a mount point and mount the Whonix Workstation image. This example shows a .vmdk file type, but any VirtualBox file type should work (VMDK, VDI, VHD, or raw).
<pre>
mkdir /mnt/whonix
vdfuse -f /path/to/Whonix-Workstation/Whonix-Workstation-disk1.vmdk /mnt/whonix
</pre>

The path /mnt/whonix/ will now contains files like EntireDisk, Partition1, etc. Last, mount Partition1 at a second mount point.
<pre>
mkdir /mnt/workstation
sudo mount -o loop /mnt/whonix/Partition1 /mnt/workstation
</pre>

Now, you can copy files to/from the Whonix workstation disk image.

When you are finished, unmount each of the mount points.
<pre>
sudo umount /mnt/workstation
sudo umount /mnt/whonix
</pre>

== Related ==
* [[Dev/Source Code Intro]]

= Footnotes =
<references/>

{{Footer}}

[[Category:Documentation]] [[Category:Development]]
