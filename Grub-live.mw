{{Header}}
{{Title|
title=grub live boot menu entry
}}
{{#seo:
|description=Boot your Debian installation into Live Mode. Read-only mode. Make all writes go to RAM instead of the hard disk. This is NOT - YET - an anti-forensics feature! Maybe soon?
}}
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = 
grub-live should not yet considered amnesic! [[FAQ#Anti-forensic_Claims|Anti-forensics testing]] has yet to be done!
}}


== Introduction ==
https://github.com/Whonix/grub-live

One of primary objectives of grub-live is preventing malware from gaining persistence and having an unchanged system after reboot. It would require [[Malware#Targeted_Malware_vs_Off-The-Shelf_Malware|targeted]] <ref>
Re-mounting the disk for write access is not yet a default feature of off-the-shelf malware. No such reports are known to us.
</ref> [[Malware|malware]] which gains super user (root) access to re-mount the disk for write access.

It is also recommended to regularly boot into persistent mode for installation of [[Update|updates]].

== Installation ==

As per [[Whonix Packages for Debian Hosts]].

=== Anti-Forensics Precautions ===

Whonix 15 includes grub-live by default. When using this feature in Whonix VMs, some precautions need to be taken even on trusted systems like GNU/Linux hosts to prevent leaving traces. This section is a non-exhaustive list of measures.


* Dealing with swap:

Tails documentation comments that host swapping may be the biggest threat to anti-forensics on Linux when running in a VM <ref>https://tails.boum.org/doc/advanced_topics/virtualization/index.en.html#security</ref>

Linux does use swapping despite having apparent "free" memory. The kernel tends to swap out long-inactive and memory-consuming processes. This frees up RAM for caches, thus improves responsiveness.


'''Disabling swap for entire system'''

Turning off for the whole system may cause a system instability/crashes if the RAM hard limit is hit. However the ample RAM in new systems makes it unlikely  and it is worth the tradeoff.<ref>https://superuser.com/questions/243357/how-to-prevent-a-specific-program-from-swapping</ref>


To disable swap in a persistent way:

{{CodeSelect|code=
sudo nano /etc/rc.local
}}

Add this line above the '''exit 0'''
{{CodeSelect|code=
sudo swapoff -a
}}

Save and reboot.

Note that the swap file will be briefly present during boot before it is deleted, but it will be gone well before you can start VMs.


'''Disabling swapping selectively for KVM VMs'''

An alternative KVM only solution is to set guest memory pages to being locked<ref>https://serverfault.com/questions/561446/how-can-i-keep-important-vms-in-memory-without-disabling-swap</ref><ref>https://libvirt.org/formatdomain.html#elementsMemoryBacking</ref>

<pre>
<memoryBacking><locked/></memoryBacking>
</pre>


This option is not without disadvantages however and can be abused by malicious guests DoSing the host through RAM exhaustion.<ref>When set and supported by the hypervisor, memory pages belonging to the domain will be locked in host's memory and the host will not be allowed to swap them out, which might be required for some workloads such as real-time. For QEMU/KVM guests, the memory used by the QEMU process itself will be locked too: unlike guest memory, this is an amount libvirt has no way of figuring out in advance, so it has to remove the limit on locked memory altogether. Thus, enabling this option opens up to a potential security risk: the host will be unable to reclaim the locked memory back from the guest when it's running out of memory, which means a malicious guest allocating large amounts of locked memory could cause a denial-of-service attack on the host. Because of this, using this option is discouraged unless your workload demands it; even then, it's highly recommended to set a `hard_limit` (see [memory tuning](https://libvirt.org/formatdomain.html#elementsMemoryTuning)) on memory allocation suitable for the specific environment at the same time to mitigate the risks described above.</ref>


N.B. Setting <code>vm.swappiness = 0</code> does not completely prevent swapping.<ref>https://superuser.com/questions/760102/why-do-i-get-swapping-even-if-i-set-vm-swappiness-to-0</ref>


* Enable grub-live on Whonix Gateway too:

It is recommended users run the live package on Whonix Gateway too after initial Tor start when a guard has been set. This should eliminate any Tor related cached data like DNS requests that could leave traces about web activity. However be warned that it may make your Tor behavior distinguishable from regular Tor users when it comes to redownloading consensus files more frequently or when switching to a new guard after some months have passed. <ref>http://forums.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/t/whonix-live-mode-amnesia-amnesic-non-persistent-anti-forensics/3894/127?u=hulahoop</ref>

{{Anchor|Forensic Comparison}}

== Comparison ==

'''Table:''' ''Comparison of grub-live and Tails''

{| class="wikitable" style="text-align: center; background-color: #fff"
|- style="background-color: #f9f9f9"

| style="height: 35px"| '''Thing'''
| '''grub-live on the host''' <ref>Meaning, grub-live not in a virtual machine. For grub-live in a VM, see [[Whonix Live]].</ref> /<br />'''grub-default-live on the host'''
| '''Tails DVD only'''
| '''Tails USB / DVD, with persistent USB'''
| '''Tails read-only medium all other writable disks unplugged''' <ref>Assuming Tails on a DVD which can only be written to once, not DVD-RW.</ref> <ref>Or Using Tails USB with physical, active and effective (non-circumventable by software) write protection switch enabled.</ref>
|-

| common <ref>As in a substantial user group willing and able to do this.</ref> mode of operation
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}} <ref>This would be a prudent approach but search engines indicate that no or very few users run this configuration.</ref>
|-

| amnesic / protects against disk modifications <ref>excluding malware compromise</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-

| protects against malware persistence on hard drive after malware compromise
| {{No}} <ref name=targeted_persistent_malware>Once targeted malware got active it can circumvent read-only settings, mount harddrive, add malware which gets active after next boot.</ref>
| {{No}} <ref name=targeted_persistent_malware />
| {{No}} <ref name=targeted_persistent_malware />
| {{Yes}} <ref name=targeted_persistent_malware />
|-

| protects against [[Malware_and_Firmware_Trojans#Firmware_Trojans|firmware trojans]] after malware compromise
| {{No}} <ref name=targeted_persistent_malware>Once targeted malware got active it can circumvent read-only settings, mount harddrive, add malware which gets active after next boot.</ref>
| {{No}} <ref name=targeted_persistent_malware />
| {{No}} <ref name=targeted_persistent_malware />
| {{No}} <ref name=targeted_persistent_malware />
|-

| avoid writing to any host disks
| ?
| {{Yes}} <ref name=tails-avoid-host-disk-usage>
Quote https://tails.boum.org/contribute/design/

<blockquote>
Tails takes care not to use any filesystem that might exist on the host machine hard drive, unless explicitly told to do so by the user. The Debian Live persistence feature is disabled by passing <code>nopersistence</code> over the kernel command line to live-boot.
</blockquote>
</ref>
| {{Yes}} <ref name=tails-avoid-host-disk-usage />
| {{Yes}} <ref name=tails-avoid-host-disk-usage />
|-

| disables removable drives auto-mounting
| {{No}}
| {{Yes}} <ref name=tails-disables-removable-drives-auto-mounting>
Quote https://tails.boum.org/contribute/design/

<blockquote>
Removable drives auto-mounting is disabled in Tails 0.7 and newer.

https://git-tails.immerda.ch/tails/plain/config/chroot_local-includes/etc/dconf/db/local.d/00_Tails_defaults
</blockquote>

https://git-tails.immerda.ch/tails/plain/config/chroot_local-includes/etc/dconf/db/local.d/00_Tails_defaults contains config for GNOME only, which is OK in context of Tails since Tails' default desktop is GNOME and others are unsupported.
</ref>
| {{Yes}} <ref name=tails-disables-removable-drives-auto-mounting />
| {{Yes}} <ref name=tails-disables-removable-drives-auto-mounting />
|-

| disables swap
| ?
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-

| wipe RAM on shutdown
| {{No}} <ref>
It might be possible to create a separate package <code>wiperam</code>.

* https://forums.whonix.org/t/is-ram-wipe-possible-inside-whonix/5596
* https://github.com/QubesOS/qubes-issues/issues/1562

Then some meta package <code>amnesia</code> could depend on both, <code>grub-live</code> and <code>wiperam</code>, to simplify live boot for users.
</ref>
| Yes but with limitations. <ref name=tails_wipe_ram>https://tails.boum.org/contribute/design/memory_erasure/</ref>
| Yes but with limitations. <ref name=tails_wipe_ram />
| Yes but with limitations. <ref name=tails_wipe_ram />
|-

| wipe video RAM on shutdown
| {{No}} <ref>
https://github.com/QubesOS/qubes-issues/issues/1563
</ref>
| {{No}} <ref name=tails-wipe-video-ram>https://redmine.tails.boum.org/code/issues/5356</ref>
| {{No}} <ref name=tails-wipe-video-ram />
| {{No}} <ref name=tails-wipe-video-ram />
|-

| Live Mode Usability <ref>The user being aware of currently running in live mode vs persistent mode.</ref>
| style="background-color: {{Yellow}}"| Not great. <ref>
Without Live Mode Indicator (see below) it is not obvious to the user if the user booted into persistent or live mode. The user could easily make a mistake by not choosing live boot at grub boot menu and confuse having booted into live mode while the user actually booted into persistent mode.
</ref>
| style="background-color: {{Green}}"| Good <ref name=tails-amnesia-usability>Always good because amnesia always has been a core feature of Tails. It is always obvious to the user that everything is non-persistent except folders for which the user enabled selective persistence.</ref>
| style="background-color: {{Green}}"| Good <ref name=tails-amnesia-usability />
| style="background-color: {{Green}}"| Good <ref name=tails-amnesia-usability />
|-

| Live Mode Indicator
| style="background-color: {{Yellow}}"| For XFCE only. Not yet documented. <ref>
https://github.com/Whonix/whonix-xfce-desktop-config
</ref>
| style="background-color: {{Green}}"| Not needed.
| style="background-color: {{Green}}"| Not needed.
| style="background-color: {{Green}}"| Not needed.
|-

| Unified Amnesic + Anonymous User Experience
| {{No}} <ref>Whonix is primarily run inside virtualizers. grub-live is an extra configuration step on the user's host.</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-

| easy standard ("everyday") upgrades <ref name=using-apt>Using standard package managers such as <code>apt</code>.</ref>
| {{Yes}}
| ?
| ?
| ?
|-

| [[Release Upgrade|release upgrades]] <ref>Such as from Debian stretch to Debian buster.</ref> possible anytime  <ref name=using-apt />
| {{Yes}}
| {{No}} <ref name=tails-release-upgrade>Release upgrade of Tails from lets say Debian stretch to Debian buster is a non-trivial development effort. See also: https://tails.boum.org/doc/first_steps/upgrade/index.en.html</ref>
| {{No}} <ref name=tails-release-upgrade />
| {{No}} <ref name=tails-release-upgrade />
|-

| live boot by default
|
* grub-live: No <ref name=grub-live-persistent-default>Persistent boot is the default option in grub boot menu</ref>
* grub-default-live: Yes
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-

| persistent boot by default
|
* grub-live: Yes <ref name=grub-live-persistent-default>Persistent boot is the default option in grub boot menu</ref>
* grub-default-live: No
| {{No}}
| {{No}}
| {{No}}
|-

|}

= Forum Discussion =
https://forums.whonix.org/t/whonix-live-mode/3894/123

= Footnotes =
{{reflist|close=1}}
[[Category:Documentation]]
{{Footer}}
