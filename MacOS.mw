<!--
The format of the macOS wiki is based on the {{project name}} VirtualBox wiki page.
-->
{{Title|title={{project_name}} for macOS: Download and Installation}}
{{Header}}
{{#seo:
|description={{project_name}} for macOS: Download and Installation
|image=https://www.{{project_clearnet}}/w/images/3/3e/Macos_by_ego.png
}}

{{project_name}} [[File:{{project_name_short}}_old_logo.png|25px]] for '''Apple macOS''' [[File:rsz_osx.png|15px]] inside VirtualBox [[File:Virtualbox_logo.png|25px]] (Intel Macs only, for Apple Silicon support please read section [[#M1|M1]] below).

{{Box|text=
'''1. Install VirtualBox'''

<u>[[VirtualBox/Recommended_Version|Recommended VirtualBox version]]: '''{{VirtualBox_Version}}'''</u>

[https://www.virtualbox.org/wiki/Downloads Download VirtualBox] by clicking on 'OS X hosts' and when prompted decide to either open or save the Apple disk image file (e.g. VirtualBox-5.2.22-126460-OSX.dmg). After it mounts, install it by double-clicking on the blue VirtualBox logo.
}}

{{Box|text=
{{Anchor|Landing}}
'''2. Download {{project name}} [[File:{{project_name_short}}_old_logo.png|25px]] XFCE for <u>macOS</u> [[File:rsz_osx.png|15px]]''' {{#widget:Free}}

<div class="toccolours mw-collapsible mw-collapsed">
<div class="mw-collapsible-content">
{{DownloadTableUnified
|url=https://download.{{project_clearnet}}
|project={{Project name short}}
|flavor=XFCE
|after_slash=ova
|extension=ova
|version={{VersionNew}}
|appendix=
|signing=Verify images using this [[Signing Key|Signing Key]]
}}

'''Verify the {{project name}} Images'''
{{Verify the Project images}}
{{Anchor|Mac}}
</div>
</div>

{{#widget:Download_Link_Unified
|param1=
|param2=https://download.{{project_clearnet}}
|param3={{VersionNew}}
|param4=Whonix
|param5=ova
|param6=Download {{project name}} XFCE
|param7=XFCE
|param8=ova
}}
}}

{{Box|text=
'''3. Import {{project name}} [[File:{{project_name_short}}_old_logo.png|25px]] into VirtualBox [[File:Virtualbox_logo.png|25px]]'''
<div class="toccolours mw-collapsible mw-collapsed">
For {{project name}} VirtualBox import instructions, please press on expand on the right.
<div class="mw-collapsible-content">
'''Start VirtualBox'''<br />
[[File:open The virtualbox1.png|1200px]]

'''Click on <u>File</u>then choose <u>Import Appliance...</u>'''<br />
[[File:select Import Applience2.png|1200px]]

'''Navigate and select the {{project name}} image and press <u>next</u>'''<br />
[[File:select whonix image and press next3.png|1200px]]

'''Do NOT change anything! Just click on <u>Import</u>'''<br />
[[File:press import4.png|1200px]]

'''Then press <u>Agree</u>'''<br />
[[File:press agree5.png|1200px]]

'''Wait until {{gateway_product_name_short}}.ova has been imported'''<br />
[[File:wait for importing6.png|1200px]]

'''Repeat the import step for {{workstation_product_name_short}}.ova'''<br />
[[File:do the same for whonix workstation7.png|1200px]]

'''Miscellaneous'''

[[Videos|Video Tutorials]] are also available.

If you still need help, please check the [[Support|Support]] page.

After the {{project name}} .ova files are imported they can be removed. VirtualBox will make a new directory with the live virtual machines {{gateway_product_name_short}}.vbox and {{workstation_product_name_short}}.vbox, and they are contained in directories of the same name. By default this is ''/Users/(yourusername)/VirtualBox VMs''
</div>
</div>
}}

{{Box|text=
'''4. Start Whonix'''

Starting {{project name}} is simple. Start VirtualBox, and then double-click on {{gateway_product_name}} and {{workstation_product_name}}.

'''Start both {{gateway_product_name}} and {{workstation_product_name}}'''<br />
[[File:start both of them8.png|1200px]]
}}

{{Box|text=
'''First time user?'''
{{Default_Passwords}}
{{First_Time_User}}
}}

{{Box|text=
'''Miscellaneous macOS Advice'''
<div class="mw-collapsible-content">
If the same VMs will be used on multiple systems like Boot Camp or even two different physical machines, then they can be moved to a shared or external hard drive:

# Copy the VirtualBox VMs folder mentioned earlier to the new location. 
# Select the VMs you moved and then click remove.
# When prompted, select "Delete files". 
# Re-add the VMs from their new location by selecting <code>Machine=>Add</code>, then navigating to the new folder.

[https://en.wikipedia.org/wiki/ExFAT exFAT] is the easiest format for cross platform file sharing with Windows and Linux. exFAT is an option built into Apple's "Disk Utility.app" when initializing or reformatting a storage device. Select exFAT from the drop down menu that appears when you click "Erase". The default option is HFS+ on 10.13 "High Sierra" and earlier and APFS on 10.14 "Mojave".

Note that with its [https://en.wikipedia.org/wiki/POSIX POSIX] kernel and BSD roots, many issues that arise on macOS hosts can be addressed using strategies similar to other Unix-like OSes.
}}

</div>
</div>

{{Box|text=
'''Virtualization on non-Apple Hardware'''
<div class="mw-collapsible-content">
Virtualization on osx86 aka "Hackintosh" machines with unmodified "vanilla" kernels works well, but some additional BIOS/UEFI settings need to be confirmed to ensure system stability. As of November 2018 [https://en.wikipedia.org/wiki/VT-d Intel VT-d] is not recommended, although some systems may function if it is enabled. Later BIOS revisions from American Megatrends Inc. (AMI) seem to have improved support compared to earlier releases. 

[https://en.wikipedia.org/wiki/AMD-V#I/O_MMU_virtualization_(AMD-Vi_and_Intel_VT-d) AMD-Vi] is not supported, since kernel modifications violating Apple Inc.'s End User License Agreement (EULA) are required to run macOS on platforms other than Intel. It is also recommended to disable the Integrated Graphics Processing Unit (IGPU) if [https://en.wikipedia.org/wiki/PCI_Express PCIe graphics] are in use, as well as disabling any SuperIO/Serial Port options if listed in BIOS. If virtualization problems related to unsupported architectures or features are encountered, please first consult appropriate community forums and wikis available on the Internet.
}}

</div>
</div>

{{anchor|M1}}
{{Box|text=
'''Running {{project name}} [[File:{{project_name_short}}_old_logo.png|25px]] on Apple Silicon (WIP)'''

{{Contributor|
|status=Testing, advanced users only!
|about=About this For {{project name}} on Apple Silicon Chapter
|difficulty=hard
|contributor=[https://github.com/GavinPacini Gavin Pacini]
|support=[https://forums.whonix.org/t/whonix-on-mac-m1-arm/11310 {{project_name}} on Mac M1 (ARM)]
}}

'''First things first'''<br />
* This is in active development. Right now, you need to build {{project_name}} to get it running on Apple Silicon. 
* This can be improved in the future. If you want to help, please visit [https://forums.whonix.org/t/whonix-on-mac-with-arm-m1/11310 this forum thread].
* Please understand that this is only for advanced users for now!

'''1. Environment Setup'''<br />
* Git
* Homebrew
* QEMU ([https://lore.kernel.org/qemu-devel/20210120224444.71840-1-agraf@csgraf.de/ with latest macOS HVF patches], still not upstream)

The below has only been tested on Debian <code>buster</code> running under [https://www.qemu.org/ QEMU] on a Mac M1. Firstly, we need to use patches on top of QEMU. [https://github.com/knazarov/homebrew-qemu-virgl This Brew repository ] has those patches baked in thus it is advisable to use that.

'''Note:''' getting Debian running on Apple Silicon is a bit out of scope of this documentation, however we have referenced below some helpful links.<ref>
* https://gist.github.com/akihikodaki/87df4149e7ca87f18dc56807ec5a1bc5
* https://gist.github.com/GavinPacini/99e30904b039a34acefce0195d34c9cd
</ref>

'''2. Initial Build'''<br />

Follow the [[Dev/Build_Documentation/VM| build documentation here]] and be sure to set <code>--arch arm64</code> when running the build script as part of the [[Dev/Build_Documentation/VM#VM_Creation]] step. This means your build commands should look as follows:

{{CodeSelect|code=
sudo ./whonix_build --target raw --flavor whonix-workstation-xfce --build --arch arm64
}}
{{CodeSelect|code=
sudo ./whonix_build --target raw --flavor whonix-gateway-xfce --build --arch arm64
}}

'''Notes''' on the above:
* For now, you will need to build from master which means running <code>git checkout master</code> after cloning the repo and adding <code>--allow-untagged true</code> to the end of the build command. Once arm64 support is in a new git tag, this will not be necessary. 

Thus, much more sensible build commands for macOS on Apple Silicon are as follows:

{{CodeSelect|code=
sudo ./whonix_build --target raw --flavor whonix-workstation-xfce --build --arch arm64 --allow-untagged true
}}
{{CodeSelect|code=
sudo ./whonix_build --target raw --flavor whonix-gateway-xfce --build --arch arm64 --allow-untagged true
}}

Provided you have built correctly, you will now have two <code>.raw</code> files in the <code>~/whonix_binary</code> (they will look something like <code>Whonix-<flavour>-XFCE-15.0.1.7.3-XX-<git commit hash>.raw</code>), one for the Workstation and one for the Gateway.

You'll need to get these files onto your host Mac. It is recommended to tar them with the <code>S</code> option, this means that [https://eclecticlight.co/2019/04/09/the-quest-for-sparse-files-in-apfs-do-they-exist/ sparse files will be archived correctly]. You can run:
{{CodeSelect|code=
tar -zcvSf whonix.workstation.tar.gz Whonix-Workstation-XFCE-15.0.1.7.3-XX-<git commit hash>.raw
tar -zcvSf whonix.gateway.tar.gz Whonix-Gateway-XFCE-15.0.1.7.3-XX-<git commit hash>.raw
}}
to do this (your files may have slightly different file names, but should follow the same format).


'''3. Running the VM'''<br />

1. Copy the two tar files into some directory on your host Mac.<br/>
2. Run the below to extract them (notice the <code>S</code> flag again which respects sparse files and thus doesn't count the [https://www.halolinux.us/kernel-reference/file-holes.html holes in the files towards your disk usage]).
{{CodeSelect|code=
tar -zxvSf whonix.workstation.tar.gz
tar -zxvSf whonix.gateway.tar.gz
}}
3. Run the below command to run the gateway:
{{CodeSelect|code=
qemu-system-aarch64 \
         -machine virt,accel=hvf,highmem=off \
         -cpu cortex-a72 -smp 4 -m 2G \
         -device intel-hda -device hda-output \
         -device virtio-gpu-pci \
         -device usb-ehci \
         -device usb-kbd \
         -device usb-tablet \
         -device virtio-net-pci,netdev=external \
         -device virtio-net-pci,netdev=internal \
         -netdev user,id=external,ipv6=off,net=10.0.2.0/24 \
         -netdev socket,id=internal,listen=:8010 \
         -display cocoa \
         -drive "if=pflash,format=raw,file=./edk2-aarch64-code.fd,readonly=on" \
         -drive "if=virtio,format=raw,file=./Whonix-Gateway-XFCE.raw,discard=on"
}}


4. In another terminal, run the below command to run the workstation:

{{CodeSelect|code=
qemu-system-aarch64 \
         -machine virt,accel=hvf,highmem=off \
         -cpu cortex-a72 -smp 8 -m 4G \
         -device intel-hda -device hda-output \
         -device virtio-gpu-pci \
         -device usb-ehci \
         -device usb-kbd \
         -device usb-tablet \
         -device virtio-net-pci,netdev=internal \
         -netdev socket,id=internal,connect=:8010 \
         -display cocoa \
         -drive "if=pflash,format=raw,file=./edk2-aarch64-code.fd,readonly=on" \
         -drive "if=virtio,format=raw,file=./Whonix-Workstation-XFCE.raw,discard=on"
}}


'''Notes on QEMU:'''
* The <code>edk2-aarch64-code.fd</code> file in the QEMU commands is a BIOS file. It's packaged with QEMU, so you can easily copy it into your directory with <code>cp $(dirname $(which qemu-img))/../share/qemu/edk2-aarch64-code.fd .</code>.
* <code>-smp X -m YG</code> controls CPU count (X) and RAM amount (Y in gigabytes). You can change these to better suit your needs.
* Currently we are using the default <code>cocoa</code> display type for QEMU. This has issues such as no copy and paste and poor HDPI scaling. It is possible to connect via VNC or Spice which solves those issues. Active development is occuring here and we hope this wiki can be updated with those details soon.

At this point two QEMU windows should open up which lead you into the wonderful world of Whonix. 

}}

{{Box|text=
'''See Also'''
* [[Documentation|Documentation]]
* [[Stay Tuned|Stay Tuned]]
}}

</div>
</div>

{{reflist|close=1}}

</div>
</div>

{{Footer}}

[[Category:Documentation]]

'''Footnotes'''
