{{Header}}
{{#seo:
|description=Computer Security Guide for Whonix Linux for Users, Whonix Hardening
|image=https://www.whonix.org/w/images/1/19/Padlock-597495-640.jpg
}}

{{Maintainer|
|about=About this {{Code2|{{PAGENAME}}}} Page
|status=stable
|difficulty=medium
|maintainer=[[Authorship|Whonix team]]
|support=[[Support]]
}}

= Basics =

* [[Warning|Warnings]]
* [[DoNot|Do Not - Non technical steps staying anonymous]]
* [[Computer Security Education]]
* [[Post Install Advice]]
* [[Surfing Posting Blogging]]
* Read the [[Documentation]] in general

= Motivation =
You may skip this Motivation chapter.

If you need motivation to secure your computer, refer to these articles:

* [https://krebsonsecurity.com/2012/10/the-scrap-value-of-a-hacked-pc-revisited/ The Scrap Value of a Hacked PC, Revisited (blog post)]
* [https://krebsonsecurity.com/2013/06/the-value-of-a-hacked-email-account/ The Value of a Hacked Email Account (blog post)]


If that's too much to read, then just take a glimpse at the graphics:

* [https://krebsonsecurity.com/wp-content/uploads/2012/10/HackedPC2012.png The Scrap Value of a Hacked PC, Revisited (picture)]
* [https://krebsonsecurity.com/wp-content/uploads/2013/06/HE-1-600x333.jpg The Value of a Hacked Email Account (picture)]

= Operating System =

{{Anchor|Recommendation to install latest security updates on all systems}}
== Updates ==
'''Important! All packages must stay up-to-date for security purposes.'''

* '''For [[Qubes|Qubes Whonix]] update directions, go to the [[Qubes/Update|Qubes-Whonix Update Guide]]'''
* '''For all other Whonix OS builds, follow the [[Security_Guide#Updates|update directions below]]'''

'''<u>Make sure you know about [[CVE-2016-1252|CVE-2016-1252 secure apt-get upgrading]].</u>'''

{{Operating_System_Updates}}

= Whonix-Gateway Security =
== General ==
You should never use Whonix-Gateway for anything other than running Tor on it!

If the Whonix-Gateway VM is ever compromised, the identity (public IP address), all destinations visited, and the entirety of clear-text (and hidden service) communication over Tor becomes available to the attacker.

Before installing any extra packages on the Whonix-Gateway, please first consult the developers to ask whether that is really necessary and wise.

== Warning: Bridged Networking ==
You shouldn't change the Whonix-Gateway's first or second network interface to a bridged network. This is untested and should not be necessary. If you feel it is necessary in your circumstances, please get in [[contact]].

If you are interested, here is a [https://sourceforge.net/p/whonix/discussion/general/thread/1e6a8675/ discussion thread], and [https://sourceforge.net/p/whonix/discussion/general/thread/3a0b673a/ another one], debating whether NAT or a bridged network is more secure.

= Host Security =

== Basics ==

Please read the [[Computer Security Education#Host Security|Computer Security Education about Host Security]].

== Power Saving Considerations ==
Upon system suspend/standby, Full Disk Encryption keys are still kept in RAM. Avoid leaving a system in this state if you are at high-risk or traveling. Instead, the recommended power mode to use is hibernation. This will lock all system partitions to a safe state, though there is a small trade-off in startup time.

On GNU/Linux hosts, standby will not always result in having LUKS keys retained in memory. Some experimental projects<ref>https://github.com/jonasmalacofilho/ubuntu-luks-suspend</ref> and custom setups with systemd+scripting are able to erase the keys before system suspend to avoid mistakes.

Following a system standby period, the network fingerprint for Tor on the Whonix-Gateway is identical to a standard Tor instance on the host that has gone through the same procedure. There are some old connections that go stale and need renewal, but nothing is seen by a network adversary because time leak identifiers have been stripped out of Tor's protocol/OpenSSL and TCP Timestamps are gone. 

[[Non-Qubes-Whonix]] only:<br />
In order to reconnect, manual time adjustment is required or the VM can simply be powered off and then powered on again. This step will not be necessary once hypervisor specific post resume hooks are used, because guest clocks will be seamlessly updated upon power state changes from the host.

[[Qubes-Whonix]] only:<br />
Has automatic seamless time adjustment after resume. <ref>
https://github.com/Whonix/sdwdate/blob/master/etc/qubes/suspend-pre.d/30_sdwdate.sh

https://github.com/Whonix/sdwdate/blob/master/etc/qubes/suspend-post.d/30_sdwdate.sh
</ref>

== Hardware Component Risks ==

In the default configuration, Whonix provides significant protection against [[Comparison_with_Others#Circumventing_Proxy_Obedience_Design|circumvention of the proxy obedience design]]. This includes:

* Applications not honoring proxy settings (proxy bypass IP leaks);
* Applications disclosing the user's real IP (protocol IP leaks);
* Remote code execution exploits with user-only rights (exploit + unsafe browser); and
* Remote code execution exploits with root rights (exploit + root exploit + unsafe browser).


However, if a second exploit is used to break out of the VM, the default Whonix installation is broken and the user's real IP address will be identified. Only Whonix run with [[Physical_Isolation|physical isolation]] will defeat this attack. This is because the Whonix-Workstation host does not know the real IP address, only the Whonix-Gateway which is running on another machine. Consequently, to successfully deanonymize the user, the attacker must also: exploit the physically isolated Whonix-Gateway; subvert the Tor process; or attack the Tor network at large.

Nevertheless, physically-isolated users should be aware that if an adversary manages to break out of the Whonix-Workstation VM using an exploit, then additional risks are posed by the hardware components that are built-in or have been additionally installed. This includes CPU and hdd/ssd temperature sensors, microphones and cameras.

In the case of Whonix with physical isolation:

* The user's IP address is still safe, but the temperature sensors can be used for anonymity set reduction;
* Different CPU,  ssd and hdd models will report different sensor information, depending on climate and weather. If you can, you are advised to remove or to obfuscate the sensor results; and
* Cameras and microphones can be covertly activated by the adversary. Remove external hardware and/or disable them in BIOS if possible. At a minimum, cover them or ideally remove them.


In the case of a default Whonix installation, the same general recommendations apply, although it does not really matter since the user will have been deanonymized successfully.

== Anonymous Mobile Modems ==
Mobile modems refers to portable broadband modems which allow your computer to connect to the internet via the cellular network. These devices support use of the 2G, 3G and 4G networks. 

For activities necessitating the best possible anonymity, it is theoretically safer to use an anonymous mobile modem far away from one's normal location, rather than use a local internet connection. The reason is your dial up or broadband provider normally knows your name, postal address and non-anonymous payment method. This is problematic if Tor or Whonix is compromised, since an adversary could pressure your service provider and very easily confirm your identity. However, if a mobile modem user is successfully attacked, the IP address leaked will not immediately lead back to the postal address of the user.

'''Warning:''' the technique outlined below may be ineffective against intelligence agencies who can:

* [https://theintercept.com/2014/12/04/nsa-auroragold-hack-cellphones/ Subvert cellular networks];
* Conduct downgrade attacks on [https://www.schneier.com/blog/archives/2015/04/the_further_dem_1.html network functioning] from 4G to 3G, from 3G to 2G and so on; and
* [https://www.schneier.com/blog/archives/2014/12/nsa_hacking_of_.html Attack all ciphers] used in cellular networks, including A5/1, A5/2 and A5/3.


It is prudent to assume that identification and location information can be discovered if specifically targeted, alongside potential eavesdropping of activities and communications. Always conduct a threat assessment of your activities before following any course of action!

'''Default Configuration Whonix Users'''

Either:

* Plug or integrate the mobile modem into the host operating system as its internet connection replacement (easy); or
* Plug the mobile modem into the Whonix-Gateway and only route Whonix-Gateway's traffic through it, not the host traffic (difficult; undocumented and therefore not recommended).


'''Physically-Isolated Whonix Users'''

Use the second method outlined above. There is no host in the sense that the Whonix-Gateway is running bare-metal on a second computer.

'''Safe Purchase of a Mobile Modem and SIM Card'''

Recommendations:

* Buy the mobile modem anonymously. This may be in a store, second-hand, or on the street. Be sure to leave no personal data during the purchase;
* Be aware of cameras and potential witnesses to your purchases;
* Do not use the modem for any non-anonymous activity prior to using it for Whonix  purposes; and
* Telecommunication companies routinely log the serial numbers of phones (IMEI) and SIM cards, as well as the phone number for network logins. Therefore you must also: 
** Buy the SIM card anonymously (prepaid is better)
** Buy cash codes in different stores anonymously 
** Never use the anonymous SIM card with a non-anonymous phone or mobile modem beforehand


'''Mobile Modem Warnings'''

* Many devices are manufactured by a handful of countries that have run [http://www.macworld.com.au/news/3g-and-4g-usb-modems-are-a-security-threat-researcher-says-89533/ insecure software] in the recent past; and
* Devices often show critical [https://www.helpnetsecurity.com/2015/12/03/3g4g-cellular-usb-modems-are-full-of-critical-security-flaws-many-0-days/ zero days], for example remote code executive flaws, exploitable firmware, vulnerability to cross-site scripting and CSRF vulnerabilities.


Carefully choose your hardware and do your manufacturer research beforehand!

'''Mobile Modem Operation'''

When using cellular networks, users often only get a shared external IP address due to scarcity of IPv4 IPs. This can lead to thousands of users sharing one IPv4 address at the same time. Also, some providers do not yet log the users' (NAT) ports. Consequently, they can not pinpoint users when they are given an IP address and time stamp. This is a nice feature, but do not rely on it for strong anonymity!

Some providers assign additional and unique IPv6 IP addresses to their users. This is not a concern for your intended Tor usage, as it does not yet utilize IPv6. For greater security, prefer using a new, distant, random, non-circular spot when conducting on-line activities.

== Anonymous WiFi Adapters ==

Normally your dial up or broadband provider knows your name, postal address and non-anonymous payment method. If Tor or Whonix is compromised, then an adversary only needs to pressure your service provider to confirm your identity. This is not the case if using an anonymous WiFi adapter plugged or integrated into the Whonix-Gateway.

For safe use, it is recommended:

* To buy the WiFi adapter anonymously in a store, second-hand or on the street;
* Never provide personal data during your purchase;
* Do not use the adapter for prior, non-anonymous activity - some providers or hotspots log MAC addresses and the username (if paid);
* Use only free hotspots or pay them anonymously if possible, otherwise abstain from paid hotspots;
* For greater security, always use a new, distant, random, non-circular hotspot; and
* Check for cameras and witnesses during your activity.

== Hardening ==
Whonix does not yet improve host security. You are advised to use a secure host operating system like [[Computer_Security_Education#Host_Operating_System|Debian]] [[Computer_Security_Education#Which_GNU.2FLinux_Distribution_do_you_recommend.3F|GNU/Linux]] and manually [[Advanced_Security_Guide#Harden_Debian|harden]] it. Also follow relevant steps in the [[Security_Guide#General_Hardening_Checklist|general hardening checklist]] for greater security.

== Mandatory Access Control ==
=== AppArmor ===
According to Debian.org:<ref>https://wiki.debian.org/AppArmor</ref>

<pre>AppArmor is a Mandatory Access Control framework. When enabled, AppArmor confines programs according to a set of rules that specify what files a given program can access. This proactive approach helps protect the system against both known and unknown vulnerabilities.</pre>

AppArmor provides a number of advantages:<ref>http://wiki.apparmor.net/index.php/Main_Page</ref>

* It protects the operating system and applications from external or internal threats, including zero-day attacks;
* 'Good behavior' is enforced and it mitigates exploits via unknown application flaws; and
* AppArmor security policies define the system resources that individual applications can access, and with what privileges. For instance:
** Network access 
** Raw socket access
** Read, write or execute file permissions on specific paths


Strongly consider using the available [[AppArmor|Whonix AppArmor profiles]] which are available for Tor Browser, Icedove and a number of other programs. The profiles are easy to apply and provide a considerable security benefit.

=== Seccomp ===
According to Mozilla:<ref>https://wiki.mozilla.org/Security/Sandbox/Seccomp</ref>

<pre>Seccomp stands for secure computing mode. It's a simple sandboxing tool in the Linux kernel, available since Linux version 2.6.12. When enabling seccomp, the process enters a "secure mode" where a very small number of system calls are available (exit(), read(), write(), sigreturn()). Writing code to work in this environment is difficult; for example, dynamic memory allocation (using brk() or mmap(), either directly or to implement malloc()) is not possible.</pre>

Strongly consider enabling seccomp, since it is easy to apply and affords additional sandboxing protection for the Tor process.

{{Open /etc/tor/torrc}}

Add:

<pre>
Sandbox 1
</pre>

Save and exit.

=== Firejail ===
==== Introduction ====
According to the Firejail project page:<ref>https://firejail.wordpress.com/</ref>

<pre>Firejail is a SUID program that reduces the risk of security breaches by restricting the running environment of untrusted applications using Linux namespaces and seccomp-bpf. It allows a process and all its descendants to have their own private view of the globally shared kernel resources, such as the network stack, process table, mount table.

Written in C with virtually no dependencies, the software runs on any Linux computer with a 3.x kernel version or newer. The sandbox is lightweight, the overhead is low. There are no complicated configuration files to edit, no socket connections open, no daemons running in the background. All security features are implemented directly in Linux kernel and available on any Linux computer. The program is released under GPL v2 license.</pre>

Firejail has built-in profiles for a large number of popular Linux programs - many of which are used in Whonix. A small sample of the 100+ profiles includes: Chromium, CryptoCat, Dolphin, Evince, Firefox, HexChat, Icedove, LibreOffice, Okular, Thunderbird, Transmission, VirtualBox, VLC and wget.<ref>https://github.com/netblue30/firejail/tree/master/etc</ref>

====Installing Firejail====
Works in both [[Qubes-Whonix]] as well as [[Non-Qubes-Whonix]].

'''1. Boot the Whonix-Workstation ({{Code2|whonix-ws}}) TemplateVM'''

'''2. Add jessie-backports to sources.list'''

    sudo su -c "echo -e 'deb http://http.debian.net/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"

Or alternatively use the .onion mirror:

    sudo su -c "echo -e 'deb http://vwakviie2ienjx6t.onion/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"

'''3. Use Apt-pinning Before Installing Dependencies'''

{{Apt-Pinning}}

'''4. [[Update]] the Package Lists'''

    sudo apt-get update

'''5. Install Firejail'''

    sudo apt-get -t jessie-backports install firejail

'''6. Launch Firejail'''

To run sandboxed applications, simply prefix your program command with "firejail" in a terminal, for example: 

    firejail evince

    firejail vlc

There is no secure and reliable way to create start menu entries / desktop shortcuts using Firejail. In the meanwhile, you are better off starting firejailed applications from the command line. 

For a further technical discussion of Firejail, see: https://forums.whonix.org/t/firejail-seccomp-more-options-for-program-containment

====Sandboxing Tor Browser====
[[Non-Qubes-Whonix]]:<br />
'''Note: The instructions linked below are now blocked until the release of Whonix 14 due to current problems with the Whonix developers repository. Stay tuned.'''

The instructions to use the recently released alpha Tor sandbox, which was previously successfully tested in Whonix 13 prior to developer repository changes, are [[Tor_Browser#Tor_Browser_Sandboxed|here]]. Consider Firejail as an interim sandboxing measure. 

[[Qubes-Whonix]]:<br />
Due to current problems with upgrading to the Whonix-14-developers-only version of the control-port-filter-python, sandboxed Tor Browser will currently fail to launch in [[Qubes-Whonix]]. This issue is expected to be resolved with the official release of Whonix 14. 

In the meantime, users can consider restricting the Tor Browser process with Firejail. Mitigating the risk of Tor Browser security breaches makes sense, because it is an untrusted application with a huge attack surface; it is frequently and successfully attacked in the wild.

Note: consider cloning your Whonix-Workstation-TemplateVM prior to installing Firejail. It requires a number of dependencies which you may not want in your default template.

'''1. Boot the Whonix-Workstation TemplateVM'''

'''2. Follow the Steps to [[Security_Guide#Installing_Firejail|Install Firejail]] from jessie-backports'''

'''3. ''Optional Step (Untested):'' Create a Customized Firejail Profile for Tor Browser'''

Follow [https://firejail.wordpress.com/documentation-2/building-custom-profiles/ these steps] to build a custom profile. 

'''4. Create a New Whonix-Workstation-AppVM Based on the Modified Template'''

{{Qubes Create Workstation AppVMs}}

'''5. Launch the Sandboxed Tor Browser'''

Open a terminal and run:

    firejail torbrowser

'''6. Confirm Tor Browser is Sandboxed'''

Launch Tor Browser in the anon-whonix AppVM. Then open a terminal and run:

    firejail --tree

The output should show Tor Browser is now running in a Firejail container:

    XXXX:user:firejail torbrowser
    XXXX:user:/bin/bash /usr/bin/torbrowser
    XXXX:user:bash /home/user/.tb/tor-browser/Browser/start-tor-browser --all
    XXXX:user:./firefox --class Tor Browser -profile TorBrowser/Data/Browse

====Running Firefox-ESR in a Firejail Sandbox (Qubes Debian-8 Template Only)====
Note: preferably clone your Debian-8 TemplateVM prior to taking these steps, as some dependencies are required. 

'''Warning:''' do not use Firefox-ESR in a Whonix template! It is easily fingerprinted and less secure than the Tor Browser.

'''1. Boot the Debian-8 TemplateVM'''

'''2. Follow the [[Security_Guide#Installing_Firejail|Steps]] to Install Firejail from jessie-backports'''

'''3. Create a New Debian-8 AppVM Based on the Modified Template'''

'''4. Launch the Sandboxed Firefox-ESR'''

In a terminal, run:

    firejail firefox

'''5. Confirm Firefox-ESR is Sandboxed'''

Open another terminal and run:

    firejail --tree

The output should confirm Firefox-ESR is now running in a firejail container:

    XXXX:user:firejail /usr/lib/firefox-esr/firefox-esr

= Virtualization Platform =
== Type 1 vs Type 2 Hypervisors ==

According to Qubes-os.org:<ref>https://www.qubes-os.org/intro/</ref>

<pre>Not all virtual machine software is equal when it comes to security. You may have used or heard of VMs in relation to software like VirtualBox or VMware Workstation. These are known as “Type 2” or “hosted” hypervisors. (The hypervisor is the software, firmware, or hardware that creates and runs virtual machines.) These programs are popular because they’re designed primarily to be easy to use and run under popular OSes like Windows (which is called the host OS, since it “hosts” the VMs). However, the fact that Type 2 hypervisors run under the host OS means that they’re really only as secure as the host OS itself. If the host OS is ever compromised, then any VMs it hosts are also effectively compromised.

By contrast, Qubes uses a “Type 1” or “bare metal” hypervisor called Xen. Instead of running inside an OS, Type 1 hypervisors run directly on the “bare metal” of the hardware. This means that an attacker must be capable of subverting the hypervisor itself in order to compromise the entire system, which is vastly more difficult.</pre>

The take-home message is that [[Qubes-Whonix|Qubes-Whonix]] is more secure than the default Whonix configuration using a Type 2 hypervisor like VirtualBox. Therefore, it is recommended you install this platform if you have suitably [https://www.qubes-os.org/doc/system-requirements/ modern hardware]. 

== Qubes-Whonix vs Physically-Isolated Non-Qubes-Whonix ==

In non-Qubes-Whoninx, using a separate computer for [[Dev/Build_Documentation/Physical_Isolation|physical isolation]] is certainly more secure than using the same computer for everything in the standard host OS/Type 2 hypervisor configuration. However, it is not clear this is superior to Qubes' [http://invisiblethingslab.com/resources/2014/Software_compartmentalization_vs_physical_separation.pdf compartmentalized software approach].

Consider the pros and cons of physical isolation relative to Qubes:<ref>https://www.qubes-os.org/intro/</ref>

<pre>Pros

* Physical separation doesn’t rely on a hypervisor. (It’s very unlikely that an attacker will break out of Qubes’ hypervisor, but if one were to manage to do so, one could potentially gain control over the entire system).
* Physical separation can be a natural complement to physical security. (For example, you might find it natural to lock your secure laptop in a safe when you take your unsecure laptop out with you).

Cons

* Physical separation can be cumbersome and expensive, since we may have to obtain and set up a separate physical machine for each security level we need.
* There’s generally no secure way to transfer data between physically separate computers running conventional OSes. (Qubes has a secure inter-VM file transfer system to handle this).
* Physically separate computers running conventional OSes are still independently vulnerable to most conventional attacks due to their monolithic nature.
* Malware which can bridge air gaps has existed for several years now and is becoming increasingly common.</pre>

In summary, the relative merits of physical isolation do not necessarily provide any more protection than Qubes' approach. Physical isolation is relatively difficult, still experimental, inconvenient, and requires a significant time investment. On the other hand, Qubes is relatively easy to install, has fully integrated Whonix, and is convenient for most activities. Further, Qubes supports features unavailable in the physically-isolated model, such as disposable VMs, USB qubes, secure copy/paste operations between VMs, secure copying and transferring of files between VMs, and sanitization of PDFs and images.

For these reasons, [[Qubes-Whonix|Qubes-Whonix]] is recommended for the majority of users seeking a higher-security solution.

== Qubes-Whonix Hardware Requirements ==
To determine compatibility of your hardware with Qubes, see [https://www.qubes-os.org/doc/system-requirements/ here]. Before purchasing any hardware specifically for Qubes, first check the [https://www.qubes-os.org/hcl/ hardware compatibility list] for suitable models.

For the best security, functionality and future compatibility with Qubes 4.X releases, ensure your system supports all of the following:

* '''HVM:''' Intel VT-x or AMD-V technology is required for running HVM domains, such as Windows-based AppVMs;
* '''IOMMU:''' Intel VT-d or AMD-Vi (IOMMU technology) is required for effective isolation of network VMs and PCI passthrough;
* '''SLAT for Qubes 4.X:''' Second Level Address Translation is needed. Either Intel VT-x support for Extended Page Tables (EPT) or AMD-V support for Rapid Virtualization Indexing (RVI);
* '''TPM (Optional):''' Trusted Platform Module with proper BIOS support (required for Anti Evil Maid);
* '''An Intel Integrated Graphics Processing (IGP) unit:''' Nvidia GPUs may require troubleshooting and ATI GPUs have not been formally tested;
* '''8 - 16 GB RAM:''' users report problems with the 4 GB minimum e.g. Disposable VM creation and running multiple VMs in parallel;
* '''A non-USB keyboard or multiple USB controllers:''' to enable creation of a USB qube and prevent malicious compromise of dom0; and
* '''A fast SSD:''' strongly recommended to ensure a responsive Qubes system.


Note: "Qubes can be installed on systems which do not meet the recommended requirements. Such systems will still offer significant security improvements over traditional operating systems, since things like GUI isolation and kernel protection do not require special hardware."<ref>https://www.qubes-os.org/doc/system-requirements/</ref>

== VirtualBox Hardening ==

For an overview on VM security risks in general, see: [http://security.stackexchange.com/questions/3056/how-secure-are-virtual-machines-really-false-sense-of-security How secure are Virtual Machines really?]

The less features enabled, the smaller the [http://en.wikipedia.org/wiki/Attack_surface attack surface]. The following features can be removed or disabled without impacting core functionality:

* Disable Audio;
* Do not enable Shared Folders;
* Do not enable video acceleration;
* Do not enable 3D acceleration; <ref>
Quote http://www.virtualbox.org/manual/ch04.html#guestadd-3d
<blockquote>
Untrusted guest systems should not be allowed to use VirtualBox's 3D acceleration features, just as untrusted host software should not be allowed to use 3D acceleration. Drivers for 3D hardware are generally too complex to be made properly secure and any software which is allowed to access them may be able to compromise the operating system running them. In addition, enabling 3D acceleration gives the guest direct access to a large body of additional program code in the VirtualBox host process which it might conceivably be able to use to crash the virtual machine.
</blockquote>
</ref> <ref>
Quote https://hsmr.cc/palinopsia/
<blockquote>
If the "3D-Acceleration" feature of VirtualBox is activated, running the proof-of-concept code from inside the VM provides the ability to read framebuffers from the host system. 
</blockquote>
</ref>
* Do not enable the Serial Port;
* Remove the Floppy drive;
* Remove the CD/DVD drive;
* Do not attach USB devices;
* Disable the USB controller which is enabled by default - set the Pointing Device to "PS/2 Mouse" or changes will revert;
* Do not enable the Remote Display server; and 
* Enable PAE/NX (NX is a security feature).


Not enabling IO APIC, EFI may also provide some protection, but this requires further investigation.

= Whonix-Workstation Security =

== Introduction ==

Note: Whonix implementation examples are based on Debian. To use a customized Whonix-Workstation VM based on other operating systems, see [[Other_Operating_Systems|here]]. For technical design notes, see [[Operating_System|here]].

If the Whonix-Workstation VM is ever compromised, the attacker has access to the data it contains, including all credentials, browser data and passwords. The IP address is never leaked, since this requires a compromise of the Whonix-Gateway VM, but this information may still result in identity disclosure.

In [[Non-Qubes-Whonix|non-Qubes-Whonix]]:

The best practice is to keep a clean master copy of the Whonix-Workstation VM, make snapshots/clones of the master, and then only use these for internet activity. The user can then 'rollback' (use a new clean clone/snapshot VM) after risky activity, or if they suspect the integrity of the system has been compromised. See the [[Security_Guide#VM_Snapshots|multiple VM snapshots recommendation]] below.

In [[Qubes-Whonix|Qubes-Whonix]]:

The best practice is to use [[Qubes/Disposable_VM|Disposable VMs]] for all your internet activity. Alternatively, periodically delete your Whonix-Workstation AppVM(s) and create fresh instances from the Whonix-Workstation TemplateVM.

{{Anchor|Recommendation to use multiple VM Snapshots}}

== VM Snapshots ==
'''Note:''' the following advice refers to [[Non-Qubes-Whonix|Non-Qubes-Whonix]] users.

Apart from offering protection against hardware serial leaks, VMs have got another major advantage: the ability to quickly discard and restore a system. This process is easy in [[Qubes-Whonix|Qubes-Whonix]], since every template-based AppVM used for activities is based on a TemplateVM which is only used for software installation and updates, and nothing else. AppVMs are easily discarded and recreated in a clean state whenever the user requires it.<ref>https://www.qubes-os.org/doc/templates/</ref> In [[Non-Qubes-Whonix|Non-Qubes-Whonix]], greater precaution is required. 

It is ''strongly recommended'' the user keep a master copy of the Whonix-Workstation VM which is:

* Kept updated;
* Does not have any additional software installed;
* Does not have any default settings changed; and
* Is not used directly for any activities.


Regular "clean" snapshots or clones of the master VM should be made for activities that require anonymity. Particular care must be taken that clean and unclean states are never mixed up!

The correct method for the safest operation of Non-Qubes-Whonix is as follows:
# Import both VMs into the virtualizer;
# Start both the Whonix-Gateway and Whonix-Workstation VMs;
# [[Update|Securely update both VMs]];
# After the updates have finished, shut down both VMs. '''Do not''' browse anywhere or open any unauthenticated communication channels to the internet;
# Create snapshots of both VMs in their clean state; and
# Only use the snapshots for browsing or initiating any external connections.


Note: The only exception made is running apt, since it has a guaranteed way to securely download and verify packages.

<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
<u>For important [[VirtualBox]] information</u>, please press on expand on the right.
<div class="mw-collapsible-content">
'''Warning to VirtualBox users''': VirtualBox's VM Snapshot feature is recommended against, because [https://www.whonix.org/old-forum/index.php/topic,97.msg1586.html#msg1586 we have experienced] data loss with it. Instead, use clones or other methods outlined in the "Reliable Alternative To VirtualBox VM Snapshots" section below.
{{Anchor|Reliable Alternative To Virtualbox VM Snapshots}}
{{Anchor|Reliable Alternative To VirtualBox VM Snapshots}}

Although VirtualBox's snapshot feature is useful when making interim snapshots of live running systems, it is not recommended as a reliable method for backing up VMs. The user risks possible data loss, primarily in the form of corrupted virtual hard drives (VHDs). Reverting can be very painful, or even impossible, following VHD corruption. Alternative methods are copy/paste, cloning, and exporting/importing. These methods reliably provide VM backups, but disk resources are used inefficiently and manual versioning is required.

'''SubVersioN (SVN) Backup Tool'''

[http://en.wikipedia.org/wiki/Subversion_(software) SubVersioN] is considered the best alternative tool for backing up VM operating environments. It is similar to VirtualBox's snapshot feature, but is much more reliable and efficient. Prior to using it, familiarize yourself with the tool's [https://subversion.apache.org/docs/ documentation] and design. SVN [http://en.wikipedia.org/wiki/Comparison_of_Subversion_clients clients] are available for various platforms.

SVN is a tool typically used by software developers to: conduct collaborative configuration management, version control, and backup/restore of file sets under development by many people over extended period of time. Basic functionality of versioning, backing up and restoring changes to sets of files is available. However, SVN is considered superior to CVS, GIT and other options for VM backups, because it does not have any file size limitations by design.  Regardless of how big or small the files are, SVN handles them reliably and efficiently. See the following section: [http://svn.apache.org/repos/asf/subversion/trunk/doc/user/svn-best-practices.html "Be patient with large files"]. 

When versioning file sets, SVN employs [http://en.wikipedia.org/wiki/Atomic_commit "atomic commits"]. By way of comparison, [http://en.wikipedia.org/wiki/Concurrent_Versions_System Concurrent Versions System (CVS)] does not employ [http://en.wikipedia.org/wiki/Atomic_commit atomic commits]. Manual backup procedures are inherently not [http://en.wikipedia.org/wiki/Atomic_commit atomic functions]. Additionally, SVN also handles [http://en.wikipedia.org/wiki/Sparse_file sparse (dynamic)] virtual hard disk files, an option VirtualBox offers when [http://www.virtualbox.org/manual/ch01.html#gui-createvm instantiating new virtual disk drives].

Similar to VirtualBox's snapshot capability, SVN also takes into consideration differences in files - both textual and binary - from version to version. For instance, if a 50 GB virtual hard drive grows by an additional 60 GB over the course of a week, SVN's repository will not necessarily increase by an additional 60 GB when a new back up is performed. The outcome depends on how much of the original file changed since the previous backup. SVN will analyze differences between newer files against older files in its repository and only save the differences. Therefore, the repository may only grow as little as 10 GB+, making more efficient use of system resources.

VirtualBox's snapshot feature provides [http://forums.virtualbox.org/viewtopic.php?f=3&p=123806 'branching'] capability. This means, one can revert to an earlier version of your VM and start a new branch/version of your VM from where you left off earlier. SVN also provides similar [http://svnbook.red-bean.com/en/1.7/svn.branchmerge.html branching] capability. 

'''Note:''' For backups and restores, configuration management tools like SVN require significant additional disk space over and above the size of the file. For instance, a 50 GB file typically requires approximately 150 GB of disk space to manage that instance of the VM because you require: 50 GB for the original source file, 50 GB in SVN's database [http://en.wikipedia.org/wiki/Apache_Subversion#Repository_types repository], and another 50 GB for SVN's [http://svnbook.red-bean.com/en/1.6/svn.tour.initial.html local workspace] working folder ('./.svn'). Although this overhead may seem inefficient, it is not when you consider SVN's functionality and reliability in comparison to manual backup methods outlined earlier.

'''Other Issues'''

In addition to backing up the Whonix-Gateway and Whonix-Workstation(s) virtual hard drive files, it is also possible to back up the whole of the VirtualBox application and Whonix environment for a completely restoreable solution.  Cloning is another possible option, but that requires more advanced technical skills.

Typically, the VirtualBox application installed is the one provided by [http://www.virtualbox.org Virtualbox.org]. However, a [http://en.wikipedia.org/wiki/Portable_application portable application] version of VirtualBox is available via a tool provided by [http://www.vbox.me VBox.me]. This application converts VirtualBox's 'install application' into a 'portable application', thereby providing the option to port VMs to other computers via external USB hard drives and/or sticks. By instantiating VMs under portable VirtualBox's '~/data/.VirtualBox/Machines' folder, it is possible to backup and restore the complete operating environment of not only Whonix, but also specific instances of VirtualBox and SVN for complete portability. This method captures the entire Whonix operating environment under one parent folder, rather than distributing it across various user and system folders:
<br /><br />
[[File:2014-05-11 09_42_19.png|400px]]
<br /><br />
[[File:2014-05-11 09_46_43.png|400px]]
<br /><br />
[[File:2014-05-11 09_54_39.png|400px]]
</div>
</div>

== Adding a NAT Adapter to Whonix-Workstation / Updates without Tor ==
Your anonymity will be compromised if you add another NAT network adapter to the Whonix-Workstation. If you disregard this advice, then in the case of infection it would leak your identity. Therefore, it is strongly recommended to always update over the Tor network. Although it is slow by comparison, it will prevent inadvertent leaks.

== Adding a Host-Only Networking Adapter to Whonix-Workstation / SSH into Whonix-Workstation ==
If accessing the Whonix-Workstation via SSH, some users may consider something dangerous - adding a second network adapter with [http://www.virtualbox.org/manual/ch06.html#network_hostonly host-only networking].

'''Warning:''' never add another network adapter in this manner! It is also  potentially dangerous if any other VMs are running except the Whonix-Workstation! The reason is that it would expose the MAC address of your host to the Whonix-Workstation.

The VMware host-only warning regarding routing and connection sharing may equally apply to Whonix:<ref>https://www.vmware.com/support/ws4/doc/network_host_ws.html</ref>

<pre>If you install the proper routing or proxy software on your host computer, you can establish a connection between the host virtual Ethernet adapter and a physical network adapter on the host computer. This allows you, for example, to connect the virtual machine to a Token Ring or other non-Ethernet network.

On a Windows 2000, Windows XP or Windows Server 2003 host computer, you can use host-only networking in combination with the Internet connection sharing feature in Windows to allow a virtual machine to use the host's dial-up networking adapter or other connection to the Internet. See your Windows documentation for details on configuring Internet connection sharing.</pre>

If you want to SSH or VNC into your Whonix-Workstation, then:

* Safest is to do it from another Whonix-Workstation. When using VMs, they can see each other if they are within the same virtual LAN. When using [[Physical Isolation]], they can see each other if they are within the same LAN; 
* Alternatively run the services using [[Hidden Services]] and access them through another Whonix-Workstation;
* Another alternative is to run the services using [[Hidden Services]] and access them from the host using ordinary torification methods; or
* A final method is to SSH from the host into Whonix-Gateway (see [[File Transfer]] for instructions) and then SSH from there [[File_Transfer#SSH_into_Whonix-Workstation|into the Whonix-Workstation]].


Note: the last two methods are not recommended since they risk weakening isolation between the host and Whonix-Workstation.

= Installing Additional Software =

See [[Install Software]].

= Updating with Extra Care =

See [[Install Software#How to install or update with most caution?|How to install or update with most caution?]].

= Onionizing Repositories =
When Whonix, Debian and Qubes packages are installed or updated, default settings point to repositories with a http:// URI.<ref>https://www.whonix.org/wiki/Whonix-APT-Repository#Repository_Location_URI</ref> However, experimental .onion support is already available for the Whonix, Debian and Qubes packages.

There are several security and privacy benefits of using .onions:<ref>https://blog.torproject.org/blog/tor-heart-apt-transport-tor-and-debian-onions</ref>

* The user cannot be uniquely targeted for malicious updates (attackers are forced to attack everyone requesting the update);
* The package repository, or observers watching it, can't track what programs you've installed;
* The ISP cannot easily learn what packages you fetch; and
* End-to-end authentication and encryption provides protection against man-in-the-middle attacks e.g. version downgrade attacks.

==Whonix and Debian Packages==
Whonix 14 will prefer Tor Hidden Services (.onion repositories) by default, even when adding third-party resources. Until then, in order to install or update with the utmost caution, users may consider manually editing their sources.list to point to the Whonix and Debian .onion mirrors. 

The whonix.list and debian.list files in the /etc/apt/sources.list.d directory should be changed in ''both'' the Whonix-Workstation and Whonix-Gateway. [[Qubes-Whonix]] users note: You should do this in the whonix-gw and whonix-ws TemplateVMs.

'''1. Edit sources.list'''

In the Whonix-Gateway, edit the debian.list file using an editor with root rights.

If you are using a graphical Whonix or Qubes-Whonix, run:

        kdesudo kwrite /etc/apt/sources.list.d/debian.list

If you are using a terminal-only Whonix, run:

        sudo nano /etc/apt/sources.list.d/debian.list

'''2. Reference the Onionized Debian Repositories'''

Cut and paste the following .onion mirrors and comment out (#) the corresponding http repositories:

        #deb http://ftp.debian.org/debian jessie main contrib non-free
        deb http://vwakviie2ienjx6t.onion/debian jessie main contrib non-free

        #deb http://security.debian.org jessie/updates main contrib non-free
        deb http://sgvtcaew4bxjd7ln.onion jessie/updates main contrib non-free

        #Optional Backports
        #deb http://ftp.debian.org/debian jessie-backports main contrib non-free
        deb http://vwakviie2ienjx6t.onion/debian jessie-backports main contrib non-free

Save and exit.

'''3. Reference the Onionized Whonix APT Repository'''

        sudo whonix_repository --baseuri http://deb.kkkkkkkkkk63ava6.onion --enable --repository stable

Note: Whonix users have four package preferences available: stable, stable-proposed-updates, testers and developers. Change the entry above to reflect this preference.<ref>https://www.whonix.org/wiki/Whonix-APT-Repository#Whonix_APT_Repository_Overview</ref>

'''4. Confirm the Onionized Repositories are Functional'''

        sudo apt-get update && sudo apt-get dist-upgrade

'''5. Repeat Steps 1 to 4 for the Whonix-Workstation'''

Note: Qubes users can repeat these steps in the Debian-8 TemplateVM to onionize future installations and updates.

'''6. ''Optional:'' Onionize Tor Project Updates'''

In the Whonix-Workstation, create a torproject.list file using an editor with root rights. [[Qubes-Whonix]] users note: You should do this in the whonix-ws TemplateVM.

If you are using a graphical Whonix or Qubes-Whonix, run:

        kdesudo kwrite /etc/apt/sources.list.d/torproject.list

If you are using a terminal-only Whonix, run:

        sudo nano /etc/apt/sources.list.d/torproject.list

Cut and paste the following text and comment out (#) the corresponding http repository:

        #Tor Project Mirror
        #deb http://deb.torproject.org/torproject.org jessie main
        deb http://sdscoq7snqtznauu.onion/torproject.org jessie main

Save and exit.

==Qubes Packages==

All the following commands must be run in dom0 in order to use Qubes’ Tor hidden service repositories for each type of VM.<ref>https://www.qubes-os.org/doc/hidden-service-repos/</ref>

Note: The cat commands are optional, for confirmation only. Also, the downside of this approach is that repository definitions are managed by a Qubes package, meaning you'll need to apply further manual updates in the future when it changes.

'''Dom0'''

In dom0, run:

    sudo sed -i 's/yum.qubes-os.org/yum.qubesos4rrrrz6n4.onion/' /etc/yum.repos.d/qubes-dom0.repo && cat /etc/yum.repos.d/qubes-dom0.repo

    sudo sed -i 's/yum.qubes-os.org/yum.qubesos4rrrrz6n4.onion/' /etc/yum.repos.d/qubes-templates.repo && cat /etc/yum.repos.d/qubes-templates.repo

'''Fedora Template'''

In dom0, run:

    qvm-run -a --nogui -p -u root $FedoraTemplateVM 'sed -i "s/yum.qubes-os.org/yum.qubesos4rrrrz6n4.onion/" /etc/yum.repos.d/qubes-r3.repo && cat /etc/yum.repos.d/qubes-r3.repo'

'''Debian and Whonix Templates'''

In dom0, run:

    qvm-run -a --nogui -p -u root $DebianTemplateVM 'sed -i "s/deb.qubes-os.org/deb.qubesos4rrrrz6n4.onion/" /etc/apt/sources.list.d/qubes-r3.list && cat /etc/apt/sources.list.d/qubes-r3.list'

= Other Anonymizing Networks over Tor (UDP Tunnels) =

First read the [https://trac.torproject.org/projects/tor/wiki/doc/TorPlusVPN Tor Plus VPN or Proxy] section and the [[Whonix:General_disclaimer#Whonix_VPN_disclaimer|Whonix VPN disclaimer]].

'''Warning:''' you should be aware that VPNs by themselves are incapable of preventing intelligence agencies from monitoring your activities. A [http://www.spiegel.de/media/media-35515.pdf host of tools] are already in long-term use which: 

* Attack and exploit VPN protocols;
* Decrypt traffic;
* Extract VPN metadata;
* Extract router information; 
* Record full-take VPN collection for later analysis; and
* Fingerprint users in the XKEYSCORE system.


Notably, the IPSec and PPTP protocols have already been completely subverted, with SSL and SSH also actively targeted for recovery of relevant data e.g. user names and passwords. In intelligence agency parlance: "Happy Dance!!" For further analysis of global adversary capabilities, see [http://www.spiegel.de/international/world/nsa-documents-attacks-on-vpn-ssl-tls-ssh-tor-a-1010525.html here].

'''Risks of Tunneling Through Tor'''

Please note: '''adding a second connection does not automatically add security, but will add significant complexity.''' It is ''not'' commonly accepted that a combination of Tor and a VPN will increase your security and anonymity. In fact, due to its complexity and the distinct possibility of misconfiguration, the risk may actually be increased. The Tor Project notes:<ref>https://trac.torproject.org/projects/tor/wiki/doc/TorPlusVPN</ref>

<pre>You can also route VPN/SSH services through Tor. That hides and secures your Internet activity from Tor exit nodes. Although you are exposed to VPN/SSH exit nodes, you at least get to choose them. If you're using VPN/SSHs in this way, you'll want to pay for them anonymously (cash in the mail [beware of your fingerprint and printer fingerprint], Liberty Reserve, well-laundered Bitcoin, etc).

However, you can't readily do this without using virtual machines. And you'll need to use TCP mode for the VPNs (to route through Tor). In our experience, establishing VPN connections through Tor is chancy, and requires much tweaking.

Even if you pay for them anonymously, you're making a bottleneck where all your traffic goes -- the VPN/SSH can build a profile of everything you do, and over time that will probably be really dangerous.</pre>

As well as the difficulty in anonymously paying for a VPN and the bottleneck with the provider, installation of secure tunneling software (OpenVPN, not PPTP/IPSec) also enlarges the attack surface of your system. Attackers could potentially use undiscovered software bugs for exploits. Other [[Tunnels/Introduction#Connecting_to_Tor_before_a_tunnel-link_.28proxy.2FVPN.2FSSH.29|downsides of this approach]] are:

* Fingerprinting could be worsened in some configurations;
* Tor hidden services (.onion) will be unavailable;
* Various software installed in Whonix will not be able to take advantage of stream isolation; 
* The Tor Browser tab stream isolation feature will be non-functional;
* Using a limited number of shared VPN IP addresses can reduce your anonymity set;
* End-to-end correlation attacks are possible if you use the same operator/network in your connection chain; and
* The VPN provider can discover if an additional anonymizing network is used in the tunneling chain (although the usefulness of the information is minimal).


Perhaps most importantly, the Tor Project thinks this is a really poor plan:<ref>https://trac.torproject.org/projects/tor/wiki/doc/TorPlusVPN</ref>

<pre>Normally Tor switches frequently its path through the network. When you choose a permanent destination X, you give away this advantage, which may have serious repercussions for your anonymity.</pre>

On the upside, properly configured and secure tunneling software:

* Allows connections to internet servers who ban Tor exit nodes;
* There is additional protection against de-anonymizing attacks conducted against the Tor network; 
* The VPN provider won't know who you are, but can find out that someone is connecting over Tor; and
* The Tor exit relay is prevented from analyzing your communication with a VPN provider, since it will only see an encrypted connection.


If you still wish to pursue this option despite the significant risks, first review the Whonix [[Tunnels/Introduction#Comparison_Table|tunneling comparison table]] and read the associated footnotes.

A dedicated virtual machine is recommended for this activity, see: [[Multiple Whonix-Workstations]].

= Time Attacks =
See [[Time Attacks]].

= General Hardening Checklist =

It is possible to significantly harden your platform and improve the chances of successful anonymous activity. This depends upon a user's skill level, motivation and available hardware. This checklist is intended to provide a quick overview of some of the most important issues, categorized by difficulty level (easy, moderate, difficult and expert).

Note: Recommendations specific to Qubes-Whonix or non-Qubes-Whonix have been marked accordingly.
== Easy ==

=== Anonymous Blogging, Posting, Chat, Email and File Sending ===

* To remain anonymous, follow all the [[Surfing_Posting_Blogging|Whonix recommendations]] to minimize threats of keyboard/mouse biometrics, stylometry analysis and other covert channels.

=== Disabling and Minimizing Hardware Risks ===

* In Qubes-Whonix, only use a mouse and keyboard utilizing PS/2 ports (not USB ports) to prevent [https://theinvisiblethings.blogspot.fr/2011/06/usb-security-challenges.html malicious compromise] of dom0 (PS/2 adapters and available controllers are required);
* Do not enable audio input to any VM unless strictly required and consider [[Computer_Security_Education#Microphone|disabling microphones]] where possible (muting on the host) or unplugging external devices;
* Preferably [[Computer_Security_Education#Webcam|detach or cover webcams]] unless they are in use;
* Avoid using [[Computer_Security_Education#Wireless_Input_Devices|wireless devices]], since they are insecure; and
* Disable or remove [[Advanced_Security_Guide#Problematic_Interfaces|problematic devices]] like ExpressCard, PMCIA, FireWire or Thunderbolt which may allow attackers with physical access to read RAM.

=== File Handling ===

'''Qubes-Whonix-Only'''

* In File Manager, disable previews of files from untrusted sources. Change file preferences in the TemplateVM's File Manager so future AppVMs inherit this feature;
* Files received or downloaded from untrusted sources (the internet, via email etc.) should not be opened in a trusted VM. Instead, open them in a DisposableVM (right click); and
* Untrusted PDFs should be opened in a DisposableVM or converted into a [https://github.com/QubesOS/qubes-app-linux-pdf-converter trusted (sanitized) PDF] to prevent exploitation of the PDF reader and potential infection of the VM.

=== Mandatory Access Control ===

* Enable all available [[Security_Guide#AppArmor|apparmor profiles]] in the Whonix-Workstation and Whonix-Gateway TemplateVMs; and
* Enable [[Security_Guide#Seccomp|seccomp]] on the Whonix-Gateway AppVM.

=== Passwords and Logins ===

* In Qubes-Whonix, store all login credentials and passwords in an offline vault VM (preferably with KeypassX) and securely cut and paste into the Tor Browser. Copy something else into the clipboard after pasting so the password is purged and cannot be accidentally pasted elsewhere; and
* Use unique and random [https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases Diceware passphrases] of 6-7 words in length for all on-line accounts, system logins and encryption/decryption purposes to prevent the feasibility of brute-forcing attacks.

=== Tor Browser Series and Settings ===

* Consider using the [https://blog.torproject.org/blog/tor-browser-55a4-hardened-released hardened Tor Browser] series for additional ALSR memory protections;
* Default search settings to the [https://3g2upl4pq6kufc4m.onion/privacy DuckDuckGo] .onion hidden service;
* Select [https://noscript.net/faq#qa7_1 ClearClick protections] in NoScript;
* Run the [https://tb-manual.torproject.org/en-US/security-slider.html Tor Browser Security Slider] in the highest position;
* [https://www.torproject.org/docs/faq.html.en#TBBJavaScriptEnabled Disable Javascript] by default and only allow sparingly for trusted sites;
* Use [https://www.torproject.org/docs/hidden-services.html.en .onion hidden services] where possible to stay within the Tor network; and
* Follow all other Whonix recommendations for safe use of the [[Tor_Browser|Tor Browser]].

=== VirtualBox ===

'''Non-Qubes-Whonix Only'''

* Remove a host of [[Security_Guide#VirtualBox_Hardening|VirtualBox features]] to reduce the attack surface;
* Take regular, clean [[Security_Guide#VM_Snapshots|VM snapshots]] that are not used for any activities; and
* Spoof the initial [[Advanced_Security_Guide#Spoof_the_Initial_Virtual_Hardware_Clock_Offset|virtual hardware clock offset]].

=== Whonix Updates ===

* Install [[Whonix-APT-Repository#Change_Whonix_APT_Repository|newer Tor versions]] via the jessie-proposed-updates repository.

== Moderate ==

=== Create a USB Qube ===

'''Qubes-Whonix Only'''

* Prepare and utilize a [https://www.qubes-os.org/doc/usb/ USB qube]. USB keyboards and mice expose dom0 to attacks, and all USB devices are potential [https://en.wikipedia.org/wiki/Side-channel_attack side channel attack vectors].

=== Host Operating System Distribution ===

'''Non-Qubes-Whonix Only'''

* [[Computer_Security_Education#Host_Operating_System|Install GNU/Linux]] as the only serious option for a private host operating system. [https://www.gnu.org/proprietary/malware-microsoft.html Windows] and [https://www.gnu.org/proprietary/malware-apple.en.html Mac OS-X] are surveillance platforms that do not respect user freedom or privacy; and
* The [[Computer_Security_Education#Which_GNU.2FLinux_Distribution_do_you_recommend.3F|Debian distribution]] is recommended by Whonix as providing a reasonable balance of security and usability. 

=== Host Operating System Hardening ===

'''Non-Qubes-Whonix Only'''

* [[Advanced_Security_Guide#Harden_Debian|Harden]] your host Debian Linux OS.
* Use [[Advanced_Security_Guide#Full_Disk_Encryption|Full Disk Encryption (FDE)]] on the host;
* Apply a [[Advanced_Security_Guide#BIOS_password|BIOS password]] for BIOS setup and boot;
* [[Advanced_Security_Guide#torify_apt-get_traffic|Torrify apt-get traffic]] on the host to prevent fingerprinting and leakage of sensitive security information; and
* Follow all other Whonix recommendations to [[Advanced_Security_Guide#Host_Security|further harden your host OS]] against [[Advanced_Security_Guide#Physical_Attacks|physical attacks]].

=== Networking ===

* If possible, use a [[Advanced_Security_Guide#Dedicated_connection|dedicated network connection]] (LAN, WiFi etc.) that is not shared with other potentially compromised computers;
* If you must use a shared network via a common cable modem/router or ADSL router, configure a [[Advanced_Security_Guide#DMZ|de-militarized zone]] (perimeter network) to restrict Whonix-Gateway accessibility to/from other nodes on the network e.g. printers, phones and laptops;
* Test your [[Advanced_Security_Guide#Port_Scan|LAN's router/firewall]] with either an internet port scanning service or preferably a port scanning application from an external IP address;
* Change the default administration password on your router to a unique, random, and suitably long [https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases Diceware passphrase] to prevent bruteforcing;
* WiFi users should default to the [https://en.wikipedia.org/wiki/Wi-Fi_Protected_Access WPA2-AES standard] which provides the safest protocol and strongest encryption. Do not rely on WiFi Protected Set-up (WPS), which has [https://en.wikipedia.org/wiki/Wi-Fi_Protected_Setup major security flaws]; and
* In Qubes-Whonix, use the Debian-8 Template for networking (sys-net and sys-firewall) since it is [https://github.com/QubesOS/qubes-issues/issues/1781 minimal in nature] and does not 'ping home', unlike the Fedora Template.<ref>https://forums.whonix.org/t/disable-sys-net-pings-to-fedoraproject-org/1952</ref>

=== Newer Kernels ===

'''Qubes-Whonix Only'''

* [https://www.qubes-os.org/doc/software-update-dom0/ Install newer kernels] to benefit from additional protections (including grsec elements) being mainlined by the kernel hardening project.

=== Onionizing Repositories ===

* Default the Debian, Whonix and Qubes package updates to [[Security_Guide#Onionizing_Repositories|Tor hidden service repositories]].

=== Sandboxing ===

* Use the [[Tor_Browser#Tor_Browser_Sandboxed|alpha sandbox]] to restrict the Tor Browser; and
* Use [[Security_Guide#Firejail|Firejail]] to restrict Firefox-ESR, VLC and other regularly used applications.

=== Secure Back-ups ===

'''Qubes-Whonix Only'''

* [https://github.com/QubesOS/qubes-issues/issues/971 Store encrypted back-ups] on a separate back-up disk that is already encrypted with LUKS.

=== Spoof MAC Addresses ===

* This is only necessary if you expect to travel with your laptop or PC and is not required for home PCs not changing locations;
* In Qubes-Whonix, [https://www.qubes-os.org/doc/anonymizing-your-mac-address/ follow these steps] to spoof the MAC address on the Debian or Fedora TemplateVM used for network connections; and
* In non-Qubes-Whonix, follow [[Computer_Security_Education#For_Linux_Hosts|these steps]] to spoof the MAC address of your network card on a Linux host.

=== Time Stamps and NTP Clients ===

'''Non-Qubes-Whonix Only'''

* [[Computer_Security_Education#Disable_ICMP_Timestamps|Disable ICMP timestamps]] and [[Computer_Security_Education#Disable_TCP_Timestamps|TCP timestamps]] on your host operating system to prevent leakage of: system information, host time, system uptime, and fingerprinting of devices behind a router; and
* [[Time_Attacks#Clock-Leak_Vectors|Uninstall the NTP client]] on the host operating system and disable systemd's timdatectl NTP synchronization feature. This prevents time-related attack vectors which rely on leakage of the host time.

== Difficult ==

=== Anti-Evil Maid ===

'''Qubes-Whonix Only'''

* If you have a Trusted Platform Module, use [https://www.qubes-os.org/doc/anti-evil-maid/ AEM protection] to attest that only desired (trusted) components have been loaded and executed during the system boot. Unauthorized modifications to BIOS or the boot partition will be notified.

=== Chaining Anonymizing Tunnels ===

* Avoid this course of action. The [[Tunnels/Introduction|anonymity benefits are unproven]] and it may actually hurt your anonymity and security goals.

=== Disposable VMs ===

'''Qubes-Whonix Only'''

* Run all instances of the Tor Browser in a [[Qubes/Disposable_VM|Disposable VM]] which is preferably uncustomized to resist fingerprinting.

=== Email ===

In Qubes-Whonix:
* Use [https://www.qubes-os.org/doc/split-gpg/ split-GPG] for email to reduce the risk of key theft used for encryption/decryption and signing;
* Create an AppVM that is exclusively used for email and  change the VM's firewall settings to only allow network connections to the email server and nothing else ('Deny network access except...'); and
* Only open [https://micahflee.com/2016/07/how-qubes-makes-handling-pdfs-way-safer/ untrusted email attachments] in a DispVM to prevent possible infection.


On both platforms:
* Follow the [[E-Mail#Anonymity_Friendly_E-Mail_Provider_List|Whonix recommendations]] to select an email provider compatible with privacy and anonymity;
* Refuse to use [http://marketingland.com/yahoo-email-scan-microsoft-scroogled-46416 Yahoo] and [https://www.theguardian.com/technology/2014/apr/15/gmail-scans-all-emails-new-google-terms-clarify Gmail], which use automated software to scan emails for keywords to tailor advertising and sell products. Do not rely on [https://www.nytimes.com/2014/03/21/technology/microsofts-software-leak-case-raises-privacy-issues.html?_r=0 Hotmail], which has a history of reading private emails and messages; and
* Prefer email providers that are: free, support GPG encryption and key management, have encrypted inboxes by default, are outside [https://en.wikipedia.org/wiki/Five_Eyes Five Eyes] jurisdictions, and have desktop email compatibility with [[E-Mail#Icedove_.28Mozilla_Thunderbird.29_with_Enigmail_.2B_TorBirdy|Icedove]] (Mozilla Thunderbird).

=== Grsec Templates ===

* In Qubes-Whonix, use dom0, Debian, Fedora and Whonix [[Grsecurity#How-To:_Qubes-Whonix|grsec templates]] to provide significant kernel exploit protections; and
* In non-Qubes-Whonix, install the latest Grsecurity kernel on your [[Grsecurity#How-To:_Non-Qubes-Whonix|host or KVM Whonix guest]].

=== Whitelisting Tor Traffic ===

'''Qubes-Whonix Only'''

* Configure sys-whonix to use [[Corridor|corridor]] as a filtering gateway to ensure only connections to Tor relays pass through. This provides an additional fail-safe to protect from accidental clearnet leaks that might arise from hypothetical Whonix bugs, but does not address potential Qubes ProxyVM leaks.<ref>https://github.com/rustybird/corridor</ref>

== Expert ==

=== Disable Intel ME Blobs ===

* It is possible to [http://hardenedlinux.org/firmware/2016/11/17/neutralize_ME_firmware_on_sandybridge_and_ivybridge.html partially deblob] Intel's despicable ME firmware image by [https://github.com/corna/me_cleaner/blob/master/me_cleaner.py removing unnecessary partitions] from it. '''Warning:''' high risk of bricking your computer!

=== Flash the Router with Opensource Firmware ===

* Flash the insecure, limited-utility, proprietary firmware on your router with a [https://www.dd-wrt.com/site/ powerful open-source Linux alternative]. '''Warning:''' risk of bricking your router!

=== Install Libreboot ===

* [https://libreboot.org/ Libreboot] is a free, opensource BIOS or UEFI replacement (firmware) that initializes the hardware and starts the bootloader for your OS. '''Warning:''' incompatible with newer architectures - risk of bricking your computer!

=== Physical Isolation ===

'''Non-Qubes-Whonix Only'''

* If you have the available hardware, consider [[Dev/Build_Documentation/Physical_Isolation|physical isolation]] in non-Qubes-Whonix. Using two different computers and virtualization is the most secure configuration available, but may be less secure than [http://invisiblethingslab.com/resources/2014/Software_compartmentalization_vs_physical_separation.pdf Qubes' approach] (software compartmentalization).

= Stay Tuned =
[[Stay Tuned]]

= Advanced Security Guide =
For even more security advice, see the [[Advanced Security Guide]].

= Footnotes =
<references/>

{{Footer}}

[[Category:Documentation]]
