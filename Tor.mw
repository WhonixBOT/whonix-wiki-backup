{{Header}}
{{#seo:
|description=Tor
}}

= See Also =
<translate>
* [[<tvar|36>Why_does_Whonix_use_Tor|</> Why does Whonix use Tor?]]
* [[<tvar|37>Why is Tor slow|</> Why is Tor slow?]]
* [[<tvar|64>Bridges|</> Tor Bridge Mode, using (private) (obfuscated) bridges]]
* [[<tvar|164>Hide Tor and Whonix from your ISP|</> Hide the fact that you are using Tor/Whonix]] 
* [[<tvar|76>Tor Controller|</> Controlling Tor]]
* [[<tvar|88>Hidden Services|</> Hosting Tor Hidden Services, ANY, Hidden Webserver]]
</translate>

= Advanced Topics =
== Additional SocksPorts ==
This is kinda non-intuitive. <ref>https://trac.torproject.org/projects/tor/ticket/15261</ref>

Quote man page.
<blockquote>
By default, an option on the command line overrides an option found in the configuration file, and an option in a configuration file overrides one in the defaults file.
</blockquote>

<blockquote>
This rule is simple for options that take a single value, but it can become complicated for options that are allowed to occur more than once: if you specify four SOCKSPorts in your configuration file, and one more SOCKSPort on the command line, the option on the command line will replace __all__ of the SOCKSPorts in the configuration file.  If this isn't what you want, prefix the option name with a plus sign, and it will be appended to the previous set of options instead.
</blockquote>

Quote Nick Mathewson <ref>https://trac.torproject.org/projects/tor/ticket/15261#comment:1</ref>:
<blockquote>
So to make sure that the SocksPort in the torrc does what you want, write it as <code>+SocksPort</code>.
</blockquote>

== Non-Persistent Entry Guards ==
=== Introduction ===
[https://www.torproject.org/docs/faq.html.en#EntryGuards What are Entry Guards?]

Persistent Tor entry guards are beneficial for security, however in some situations it is safer to not use your usual guard relay.

The guard relays picked by your Tor client can make your Tor use fingerprintable across different physical locations and access points, potentially deanonymizing you in some corner cases such as the one described below. This attack is less severe that now upstream Tor Project is moving from using three relays to a single one.

Consider this scenario: You run Tor from home. Then there is some prominent event or protest in your city that you attend and anonymously blog about it from there. The fact that your client is using the same entry guard from this other location gives network adversaries a high certainty that the anonymous posts came from the same person that was connected to that specific guard relay from their home. The relative uncommoness of Tor usage already exasperates the problem even more.

=== Always Non-Persistent Entry Guards ===
You could consider to always use non-persistent entry guards. In most cases, this is something to avoid because persistent entry guards is a security feature as explained in the [[#Introduction|introduction]]. A more secure, but more time expensive approach would be [[#Alternating Bridges|Alternating Bridges]].

On your Whonix-Gateway.

1. Adjust whonixcheck settings (applies until Whonix 12):
Create a file:
<pre>
sudo nano /etc/whonix.d/50_user 
</pre>

Add line:
<pre>
whonixcheck_skip_functions+=" check_tor_pid "
</pre>

2. Disable Tor using whonixsetup / whonix-setup-wizard (safest option)

{{whonixsetup}}

3. Add torrc setting:
<pre>
DataDirectory /var/run/tor
</pre>

4. Enable Tor using whonixsetup / whonix-setup-wizard at your new location.

5. Before you leave this location, disable Tor and repeat the above steps if going to a different place. To go back to your usual guard nodes at home, remove the torrc setting before you enable the network or rollback to a vm snapshot you created there.

=== Fresh Tor Entry Guards by regenerating Tor State File ===
Usually something to avoid unless you know what you are doing (see [[#Introduction|Introduction]]). This is a method you could use if you just once wanted to change your Tor entry guards, such as before you permanently relocate to a new location.

On your Whonix-Gateway.

1. Disable Tor using whonixsetup / whonix-setup-wizard (safest option) 

2. Delete Tor's state file.

<pre>
sudo rm /var/lib/tor/state
</pre>

3. Enable Tor using whonixsetup / whonix-setup-wizard at your new location.

=== Alternating Bridges ===
If you are using [[bridges|bridges]] already, use different bridges for different locations. Or if you are not a bridge user, you could consider to sometimes use alternate bridges in different locations and entry guards in your main location or so.

On your Whonix-Gateway.

1.  Disable Tor using whonixsetup / whonix-setup-wizard (safest option)

{{whonixsetup}}

2. Configure Tor to use bridges. Refer to the [[Bridges|Bridges]] documentation.

3. Enable Tor using whonixsetup / whonix-setup-wizard at your new location.

4. Before you leave this location, disable Tor and add a different bridge address if going to a different place. To go back to your usual guard nodes at home, remove the torrc bridge settings before you enable the network or rollback to a vm snapshot you created there.

=== Notes ===

* The proposed TAILS solutions towards AdvGoalTracking have disadvantages<ref>https://tails.boum.org/blueprint/persistent_Tor_state/</ref><ref>https://blog.torproject.org/blog/tor-weekly-news-%E2%80%94-june-17th-2015#A_persistent_Tor_state_for_Tails</ref> and are not options for Whonix because we don't connect directly to a user's internet LAN anyway, so trying to remember a network based on its SSID will not work. Unlike wireless access points, wired networks (physical or virtual) lack SSIDs and cannot be "remembered" that way.

* Even if it were possible, it is best to avoid letting adversaries influence guard changes in any way. Spoofing MAC addresses or SSIDs would trigger use of the other entry guard recorded for another "location profile". Also global networks have generic characteristics that cannot be differentiated from the point of view of a connecting device leading to the same guards being used on different networks.

* Developers/Auditors-only: Development discussion related to this documentation chapter: [https://phabricator.whonix.org/T94 research non-persistent entry guards]

== Blacklist Certain Hidden Services from Connecting ==
'''Experimental'''

Example.

Add to {{Code2|/etc/tor/torrc}}. Replace {{Code2|bbbbbb6qtmqg65g6.onion}} with the actual hidden service you want to blacklist.

<pre>
MapAddress bbbbbb6qtmqg65g6.onion 127.0.0.1
</pre>

Reload Tor.

<pre>
sudo service tor reload
</pre>

= Footnotes / References =
<references />

{{Footer}}

[[Category:Documentation]]
