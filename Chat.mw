{{Header}}
<!--
Copyright:

   Whonix Chat wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   Whonix Chat wiki page Copyright (C) 2012 -2014 Patrick Schleizer <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/Whonix/Whonix/blob/master/GPLv3>.
-->
<!--
This Chat page is a fork of the Tails Pidgin page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/doc/anonymous_internet/pidgin.mdwn;hb=96c45f5ed786f3d24c51e1a2ef8ecedf5f2644d8>.
-->
{{#seo:
|description=Anonymous Chat, IRC, XMPP. Pidgin/TorChat in Whonix without Tor over Tor.
}}
= General Safety Advice =

Recommended knowledge: [[DoNot#Do_not_mix_Modes_of_Anonymity.21|Modes of Anonymity]].

'''Note: Most existing instant messenger protocols are unsafe from a privacy point of view. This is not a Whonix specific problem. It is a general problem with instant messengers.'''

[[Chat#Pidgin|Pidgin]] supports most protocols.

[[Warning#Tor_exit_nodes_can_eavesdrop_on_communications|Tor Exit Node eavesdropping]] can happen if no encryption to the server is enabled. Some protocols have encryption disabled by default, some do not support encryption at all. See also [https://tails.boum.org/todo/Pidgin_Protocol_Review/ Overview about Pidgin protocols and their encryption features]<ref>http://archive.is/8w0Zf</ref>. If encryption to the server is enabled, the Tor Exit Node can no longer eavesdrop. This fixes one problem, however it also leaves another problem unresolved.

Even with encryption to the server enabled, the server could still gather interesting information.
For example:
* Account names
* Buddy list (list of contacts)
* Log login dates and times
* Timestamp of messages
* Who communicates with whom
** If the recipient knows the sender and the recipient uses a non-anonymous account or the recipient ever logged in without Tor, this can be used as a hint for determining who the sender is.
* Content of messages - Can be prevented using end-to-end encryption. This is covered in [[Chat#OTR_encryption|OTR encryption]] below.

Jabber/XMPP is a server-federation-based protocol designed with openness in mind. Its security depends on you making good use of OTR as you can never be sure if servers are properly encrypted between each other. Privacy with Jabber is limited, as it is visible to various kinds of attackers who your account is talking to. Tor only helps to pseudonymize your account and hide your current location, but your social graph may still expose your identity.

Systems which do not require a server by design, i.e. serverless instant messengers are likely better from a privacy point of view. Such systems are [[Chat#TorChat|TorChat]] and [[Chat#RetroShare|RetroShare]].

For IRC inside Whonix-Workstation, the [https://en.wikipedia.org/wiki/Ident Ident Protocol] is automatically blocked because Whonix-Workstation is firewalled.
The [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/IrcSilc TorifyHOWTO/IrcSilc] contains general IRC safety techniques and other tips.

[https://www.whonix.org/forum/index.php/topic,1241.0.html Why prefer open protocols such as Jabber/XMPP over proprietary ones such as ICQ?]

= Tor Messenger =
https://forums.whonix.org/t/tor-messenger-on-whonix/1565/3

= TorChat =

== General ==
The concept of having a serverless and fully encrypted instant messenger based on Tor hidden services is marvelous.

Unfortunately, at this time (September 2015) TorChat can not be recommended. This is because the TorChat developer currently does not respond to other people, see [https://github.com/prof7bit/TorChat/issues TorChat issues]. Communication and support is crucial for anonymity related projects.

TorChat ships it's own copy of Tor, sets up a hidden service and the messenger on the host. Whonix runs Tor and applications on different machines. Tor on Whonix-Gateway and applications on Whonix-Workstation. Since it's recommended to [[DoNot#Prevent_Tor_over_Tor_scenarios.|prevent Tor over Tor scenarios]], the autostart of Tor within TorChat has been disabled in /etc/default/tor in Whonix 7 and above. (When you install TorChat in Whonix-Workstation, it will also pull Tor as a dependency, but Tor won't be started.)

== HowTo ==

=== Installation ===
'''EXPERIMENTAL'''<br />
Experimental in that it is difficult to install. Only use it in case you trust TorChat. There shouldn't be any anonymity leaks and it should be as safe as other hidden services in general and in Whonix.

Learn about [[Hidden Services]] in Whonix first and learn how to set up the hidden webserver. This will ease following this guide.

==== On Whonix-Gateway ====
===== Step 1: open /etc/tor/torrc =====
{{Open_/etc/tor/torrc}}

===== Step 2: edit /etc/tor/torrc =====
(all Whonix platforms)

Once inside {{Code2|/etc/tor/torrc}}, scroll all the way to the bottom, and copy-paste the following text:

[[Qubes|Qubes-Whonix]]: 

{{IP-of-Qubes-Whonix-Workstation-AppVM}}

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/torchat/
HiddenServicePort 11009 IP-of-Qubes-Whonix-Workstation-AppVM:11009
}}

[[Non-Qubes-Whonix]]:

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/torchat/
HiddenServicePort 11009 10.152.152.11:11009
}}

(all Whonix platforms) 

Save.

===== Step 3: make changes to /etc/tor/torrc take effect =====
{{Reload Tor}}

===== Step 4: get your onion hostname =====
Find out your .onion hostname.

{{CodeSelect|code=
sudo cat /var/lib/tor/torchat/hostname
}}

===== Step 5: backup your Tor hidden service private key =====
{{
Backups_Tor_Hidden_Service_private_key
|private_key_file=/var/lib/tor/torchat/private_key
}}

==== On Whonix-Workstation ====
{{mbox
| type       = notice
| image      = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = No worries, this won't result in [[DoNot#Prevent_Tor_over_Tor_scenarios.|Tor over Tor]] thanks to Whonix's [[Dev/anon-ws-disable-stacked-tor|anon-ws-disable-stacked-tor]] package on Whonix-Workstation which prevents this.
}}

===== Step 1: Install TorChat =====
Update your package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install TorChat.

{{CodeSelect|code=
sudo apt-get install torchat python-socksipy
}}

===== Step 2: Configure TorChat =====
Open the {{Code2|torchat.ini}} which is in the hidden folder {{Code2|/home/user/.torchat/torchat.ini}}. The folder {{Code2|~/.torchat/Tor}} can be ignored.

{{CodeSelect|code=
kwrite /home/user/.torchat/torchat.ini
}}

Look for the following line.

<pre>
own_hostname = <your onion hostname without the .onion ending>
</pre>

Replace it with your onion hostname. For example if your onion hostname is {{Code2|idnxcnkne4qt76tg.onion}} replace it enter {{Code2|idnxcnkne4qt76tg}}, so it looks like this:

<pre>
own_hostname = idnxcnkne4qt76tg
</pre>

Save.

===== Step 3: Qubers users only =====
{{
Qubes_Tor_Hidden_Service_Firewall_Exception
|port=11009
}}

===== Step 4: Final Notes =====
Done.

<u>Note</u>, that it may take up to 30 minutes (or so?) until a fresh .onion domain gets reachable.

=== Starting ===
{{mbox
| type       = notice
| image    = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = It can take a while until a Tor hidden service becomes reachable for the first time. Wait at least a few minutes before you believe it doesn't work.
}}

[[Qubes|Qubes-Whonix]]:<br />
Qubes App Launcher (blue/grey "Q") -> Whonix-Workstation AppVM (commonly named {{Code2|whonix}}) -> TorChat Instant Messenger

[[Non-Qubes-Whonix]]:<br />
Start menu -> Applications -> Internet -> TorChat Instant Messenger

=== Uninstall ===

If you want to remove it. On Whonix-Workstation.

{{CodeSelect|code=
sudo apt-get remove torchat
}}

And undo the changes in {{Code2|/etc/tor/torrc}} on Whonix-Gateway.

{{CodeSelect|code=
kdesudo kwrite /etc/tor/torrc
}}

Reload Tor.

{{CodeSelect|code=
sudo service tor reload
}}

=== Debugging ===

In case it won't work for you.

Test if Tor is reachable on 10.152.152.10:9119.

{{CodeSelect|code=
/usr/bin/wget.anondist-orig 10.152.152.10:9119
}}

If it says.

<pre>
--2013-02-13 13:49:47--  http://10.152.152.10:9119/
Connecting to 10.152.152.10:9119... connected.
HTTP request sent, awaiting response... 501 Tor is not an HTTP Proxy
2013-02-13 13:49:47 ERROR 501: Tor is not an HTTP Proxy.
</pre>

It means, it's fine and the port is reachable.

Run torchat in a Terminal.

{{CodeSelect|code=
torchat
}}

The following output is an example, how it looks when everything is fine.

<pre>
~ $ torchat
(0) [config,470,main] python version 2.7.3 (default, Jan  2 2013, 16:53:07) [GCC 4.7.2]
(0) [config,477,main] script directory is /usr/share/torchat
(0) [config,478,main] data directory is /home/user/.torchat
./tor.sh: 6: ./tor.sh: tor: not found
(0) [tc_client,2083,startPortableTor] very strange: portable tor started but hostname could not be read
(0) [tc_client,2084,startPortableTor] will use section [tor] and not [tor_portable]
</pre>

If you are using [[Multiple Whonix-Workstations]], where the Workstation has another IP than {{Code|10.152.152.11}} you must edit the following line in torchat.ini.

<pre>
listen_interface = 10.152.152.11
</pre>

Did the hidden webserver example from the [[Hidden Services]] page work for you? Try that first.

You also could try using the TorChat source package, which is still documented on the [[Deprecated]] page.

=== Technical Design ===

The [[Dev/anon-ws-disable-stacked-tor]] package prevents Tor over Tor.

=== Credits ===

Thanks to scarp for helping with the TorChat instructions!

= RetroShare =

In fact [http://retroshare.sourceforge.net RetroShare] is not an [https://en.wikipedia.org/wiki/Anonymizer anonymizing network], it is a [https://en.wikipedia.org/wiki/Friend-to-friend friend-to-friend] (F2F) network, or optionally a [https://en.wikipedia.org/wiki/Darknet darknet]. RetroShare has a very different audience and threat model.

RetroShare is in active development. Users can operate servers for themselves, but the architecture doesn't depend on them. Communications are encrypted end-to-end and provide for messaging, mail, forums, pubsub, file exchange and even telephony. The problems with RetroShare are the confused user interface, the necessity to have it run most of the time and contribute to the distributed hashtable (DHT, causing continuous CPU usage) and three relevant privacy aspects: You expose your social graph to a global passive adversary because friends connect to friends directly. Your public IP is available in the DHT, allowing to track your physical locations. And your visible user name is exposed in the TLS certificate when somebody connects to your RetroShare node.

Several of these problems can be solved by disabling the built-in DHT and hiding RetroShare behind a Tor hidden service. People who scan Tor hidden services will however still be able to connect the service and see the RetroShare user name in the self-signed certificate. This will hopefully be fixed someday by both RetroShare (the certs) and Tor (the discoverability of hidden services).

Although google search results and many people may claim otherwise, it is possible to run RetroShare through Tor, due to transparent proxying. '''Still experimental. Feel free to experiment and please share your results. Can two people, using RetroShare inside Whonix-Workstation, who only added each other, connect to each other?'''

Running RetroShare through Tor enables you, to do things, which are normally potentially dangerous, such as adding random people (from a forum), while staying anonymous. (For example, to join a RetroShare forum.) This is '''not''' a recommendation, just stating a possibility.

After adding tons of random "friends" from a public forum, connection to a very few people over TCP. <ref>Chance of working better ('''untested'''): [[Tunnel UDP over Tor]].</ref> <ref>Note, in case you are using the previous footnote, [[Security_Guide#Other_Anonymizing_Networks_over_Tor_UDP_Tunnel|Other Anonymizing Networks over Tor UDP Tunnel]] applies.</ref> Approximately only 5% were online. Although probably only a very small portion of the network could be seen, the content of the network looked pretty interesting.

RetroShare reports Right click -> DHT Details: NET WARNING No DHT; Behind NAT UNKNOWN NAT STATE MANUAL FORWARD

There still may be some privacy caveats left with RetroShare trying to communicate outside of Tor, but that doesn't matter if Whonix makes any non-Tor traffic impossible.

= Pidgin =
For instant messaging in Whonix you can install the Pidgin<ref>http://pidgin.im/</ref> Instant Messenger. It is a multi-protocol client, so you could run MSN, ICQ, IRC, AIM, XMPP/Jabber and many other protocols at the same time, even with several instances of the same protocol.

All of these chat systems are unsafe if not used together with [[Chat#OTR_encryption|OTR]]. Even when used with OTR, expect to be exposing your social graph. Privacy hackers isolate parts of the social graph by running several accounts for groups of people on each popular server, thus avoiding the insecure XMPP federation (adding people on servers that isn't your own).

For more detailed documentation refer to the [http://developer.pidgin.im/wiki/Using%20Pidgin official Pidgin user guide].

You can install it using Start menu -> Applications -> System -> Terminal.

{{CodeSelect|code=
sudo apt-get update
}}
{{CodeSelect|code=
sudo apt-get install pidgin
}}

There is also a Torchat plugin available for pidgin [https://github.com/prof7bit/TorChat/downloads official libpurple-torchat pidgin plugin], which could be implemented to allow p2p encrypted end-to-end communications although there is no known documentation on getting this done specifically in Whonix. It works seamless on standard pidgin/linux distro's with tor, the code is over a year without any changes/updates, hopefully because it simply works without any need for changes.

Some protocols that are problematic in context of privacy/anonymity are disabled by default. <ref>By the https://github.com/Whonix/pidgin-improved-privacy package.</ref>

To get a list of those, you could run.

{{CodeSelect|code=
sudo dpkg-divert --list | grep pidgin
}}

To re-enable all of them, you could run.

{{CodeSelect|code=
sudo /var/lib/dpkg/info/pidgin-improved-privacy.prerm remove
}}

After a restart of Pidgin, the protocols will be available.

= OTR encryption =

Of course the issue of end-to-end encryption arises again. As we mentioned earlier, we have Off-the-record messaging<ref>https://otr.cypherpunks.ca/</ref> (commonly called OTR) for instant messaging, and Pidgin and many other instant messengers have support for that. There are several resources on how it works and how to use it on their web site. Basically all you need to do is choose "Start private conversation" in the OTR menu and a key will be generated automatically if you do not have one already. After that OTR will establish a private conversation if the other end's instant messenger supports it.

If you didn't authenticate your partner with something like a shared secret there can be a man in the middle recording your chat, even if you are using the same server (the server or the TLS connection to the server may be corrupted).

OTR and other Pidgin plugins are enabled in the "Tools menu -> Plug-ins" section. Simply check the appropriate box for enabling any plugin you want, and possibly you might also want to configure it by pressing the "Configure Plug-in" button. When this is done for the OTR plugin a window that can be used to manage your keys will open. The use of OTR is recommended as many instant messaging protocols normally sends your messages in plaintext. Force your friends to migrate to clients with support for OTR!

'''NOTE''': <code>/me</code> is '''not''' encrypted when used in a OTR private conversation! Also <code>/msg</code> in XMPP chatrooms isn't – it goes through the chatroom server!

Read also those [http://www.cypherpunks.ca/otr/index.php#docs various other resources about OTR].

You can install it using Start menu -> Applications -> System -> Terminal.

{{CodeSelect|code=
sudo apt-get update
}}
{{CodeSelect|code=
sudo apt-get install pidgin-otr
}}

= IRC Client XChat =

See [[XChat]].

= Footnotes / References =

<references/>

= License =

<pre>
Whonix Chat wiki page Copyright (C) Amnesia <amnesia at boum dot org>
Whonix Chat wiki page Copyright (C) 2012 -2014 Patrick Schleizer <adrelanos@riseup.net>

This program comes with ABSOLUTELY NO WARRANTY; for details see the wiki source code.
This is free software, and you are welcome to redistribute it
under certain conditions; see the wiki source code for details.
</pre>

{{Footer}}

[[Category:Documentation]]
