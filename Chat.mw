{{Header}}
<!--
Copyright:

   {{project name}} Chat wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   {{project name}} Chat wiki page Copyright (C) 2012 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in {{project name}} virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/{{project_name_short}}/{{project_name_short}}/blob/master/GPLv3>.
-->
<!--
This Chat page is a fork of the Tails Pidgin page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/doc/anonymous_internet/pidgin.mdwn;hb=96c45f5ed786f3d24c51e1a2ef8ecedf5f2644d8>.
-->
{{Title|title=Instant Messenger Chat}}
{{#seo:
|description=Anonymous Chat, IRC, XMPP in {{project name}} without Tor over Tor.
|image=https://www.whonix.org/w/images/9/92/Balloons-874841640.jpg
}}
= General Safety Advice =
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = '''Tip:''' Most existing instant messenger protocols are unsafe from a privacy point of view. This is not a {{project_name}}-specific problem, but a general problem with instant messengers.
}}
{{PQCrypto}}

It is recommended to review the [[DoNot#Mix_Anonymity_Modes|Do not Mix Anonymity Modes]] section in conjunction with this entry. For a comprehensive comparison of instant messengers, [https://en.wikipedia.org/wiki/Comparison_of_instant_messaging_clients see here].

== Encryption ==

[[Warning#Tor_Exit_Relays_can_Eavesdrop_on_Communications|Tor exit relays can eavesdrop]] on communications if encryption to the server is disabled. Depending on the protocol, encryption might be disabled by default or not even supported. Tails has noted that without encryption, the exit relay can see the contact list, all messages, file transfers, and audio/video. <ref>See: https://tails.boum.org/todo/Pidgin_Protocol_Review/ for an overview of Pidgin protocols and associated encryption features.</ref> While encryption to the server prevents exit relay eavesdropping, it still leaves one problem unresolved: server logging.

High-risk users should also bear in mind that even in the event that strong and secure end-to-end encryption is used -- for example encrypted chat using .onion connections only (staying within the Tor network) -- sophisticated attackers (nation state actors) are capable of compromising the trusted computing base (TCB) <ref>"... the trusted computing base or TCB comprises the set of all hardware, software, and firmware components that are critical to establishing and maintaining its security. Typically, the TCB consists of an operating system with all its in-built security controls, individual system hardware, network hardware and software, defined security procedures and protocols, and the actual physical location of the system itself." [https://blog.finjan.com/trusted-computing-base/ Trusted Computing Base or "TCB"]</ref> of nearly all platforms: <ref>https://github.com/maqp/tfc/wiki/Security-design#the-issue-of-endpoint-security</ref>
<blockquote>
All proper end-to-end encrypted (E2EE) messaging systems store private key(s) exclusively on user's device (endpoint). The holy grail of attacks against E2EE systems is called exfiltration where the sensitive data, namely the private keys or plaintext messages, are stolen from the endpoint. The attack is directed against the trusted computing base (TCB) of the target system. The overwhelming majority of TCBs are connected to the network and compromising them with polished malware that exploits a zero-day vulnerability, is trivial and undetectable.
</blockquote>

== Server Logging ==

Encrypted server connections do not prevent the server gathering interesting information about users, such as common contacts and the regularity of communications. An example list includes: 

* Account names.
* Buddy list (list of contacts).
* The exact date and time of logins.
* Message timestamps.
* Communication patterns like common contacts.
** If the recipient knows the sender and has ever used a non-anonymous account or logged in without Tor, this information can be used to try and determine the sender's identity.

The content of messages will only be protected by using end-to-end encryption, for example [https://en.wikipedia.org/wiki/OMEMO OMEMO]. The threat of server logging can be completely removed with decentralized (server-less) instant messengers like [[#Ricochet_IM|Ricochet IM]], but unfortunately it is non-functional in {{project_name}} at present.

== Jabber / XMPP ==

[https://xmpp.org/ Jabber/XMPP] is a libre server-federation protocol designed with openness in mind: "''... All of the existing XMPP servers, clients, and programming libraries support the key features of an IM system, such as one-to-one and multi-party messaging, presence subscriptions and notifications, and contact lists.''" 

The system is decentralized because there is no central authoritative server; anyone can run a server. Some users are confused on this point because there are a number of large and popular public XMPP servers (like jabber.org), to which many have subscribed. <ref>Other popular public servers are listed [https://xmpp.org/getting-started/ here].</ref> Each network user has a unique XMPP address called a JID (Jabber ID). The JID is similar to an email address insofar as it has a username and domain name like username@example.com <ref name=Xmpp>https://en.wikipedia.org/wiki/Xmpp</ref> 

Safely using the protocol requires proper use of encryption (such as OMEMO), because it is unwise to trust server connections are properly encrypted between each other. Jabber privacy is also limited, as various adversaries are capable of observing which accounts are communicating. Jabber and Tor combined only guarantee pseudonymous communications, as while the user's current location is hidden, the social graph can still expose their true identity. For tips on operational security when chatting anonymously, see this [https://archive.is/n116i article] by [https://theintercept.com/2015/07/14/communicating-secret-watched/ The Intercept]. Also see: [https://forums.whonix.org/t/why-is-icq-considered-unsafe-through-tor/1096 Why prefer open protocols such as Jabber/XMPP over proprietary ones such as ICQ?]

== IRC ==

When using IRC inside {{workstation_product_name}}, the [https://en.wikipedia.org/wiki/Ident_protocol Ident Protocol] is automatically blocked because {{workstation_product_name}} is firewalled. Therefore the associated daemon will not identify the username which is linked with a particular TCP connection, as is normally the case.

The Tor Project [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/IRC Internet Relay Chat] page contains a number of important recommendations and tips for safe IRC use:
<div style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
* Use onion services when available.
** Check self-signed certificates have the correct SSL/TLS certificate.
* Cycle Tor circuits to evade censorship bans.
* Chain VPNs and Tor for registration.
* Use OTR (or OMEMO if available) for end-to-end encryption.
* Distrust users and servers in general.
* Avoid personally identifiable information in chats.
* Check the user fingerprint before using IRC.
* Harden the IRC client.
* And more.
</div>

= Recommendation =

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = <u>Notice</u>: [[#Ricochet IM|Ricochet IM]] is no longer recommended as a decentralized (server-less) option because it is not functional in {{project_name}}. <ref>
Ricochet 'only' uses onion encryption and is difficult to set up and use. OTR or OMEMO-grade encryption is not yet available and offline messages are not supported.
</ref> <ref>
https://github.com/ricochet-im/ricochet/issues/72
</ref> <ref>
https://github.com/ricochet-im/ricochet/issues/405
</ref> 
}}

Applications discussed in this chapter are listed in order of best usability and compatibility with {{project_name}}, based on the opinion and experience of {{project name}} developers.

It should be noted that no single application listed here has a superior feature set. Users must make a choice based on personal preferences and their self-assessed threat model:

# Dino IM is the best option currently. It provides the best UX, a modern and clean look and OMEMO support. 
# [[#Gajim|Gajim]] has more Jabber users, is written in memory-safe python, supports offline messages, and can provide OMEMO-grade encryption. On the downside, it requires a Jabber server which weakens anonymity.
# [[#HexChat:_IRC_Client|HexChat]] is an open source IRC client based on XChat (therefore not technically an instant messenger). It has better usability and supports encrypted plugins like OTR, but on the downside it relies on centralized IRC servers.
# [[#Tox|Tox]] is also a fully-featured, decentralized (server-less) option which employs strong encryption, but the software is in alpha status. <ref>
Tox has not yet been formally audited by security professionals, but this is the case for most software. Further, passing a formal audit does not guarantee that the software is in fact safe.
</ref> Tox developers warn in their wiki: ''"... Keep in mind that these clients are alpha software under heavy development, and are probably not ready for day-to-day use. ..."'' <ref>
https://wiki.tox.chat/binaries
</ref>
# Nheko is a libre Matrix desktop client that can be used for Telegram and IRC channels.

= Dino IM =
[https://dino.im/ Dino IM] is a modern XMPP ("Jabber") Chat Client written in GTK+/Vala for GNU/Linux and available in Debian. OMEMO is supported, but needs to be toggled in the chat window. Additonaly OpenPGP Is supported too.

A Tor compatible version is currently available from Buster Backports repo.

{{Install Backport|
package=dino-im
}}

It's planned for inclusion by default in Whonix 16. Other issues currently is broken OMEMO compatibility with Gajim users.<ref>
https://forums.whonix.org/t/dino-im-messenger/7773/22
</ref>

= Gajim =

[[File:gajim234234.png|100px]]

== Overview ==

Ubuntu provides a succinct overview of Gajim: <ref>https://help.ubuntu.com/community/Gajim</ref>

<blockquote>Gajim is a free software, instant messaging client for the Jabber (XMPP) protocol which uses the GTK+ toolkit. It runs on GNU/Linux, BSD and Windows. The name Gajim is a recursive acronym for Gajim (is) a jabber instant messenger.

The goal of Gajim is to provide a full featured and easy to use Jabber client. Gajim works nicely with GNOME, but does not require it to run. It is released under the GNU General Public License. </blockquote>

Gajim has various features, including: <ref>https://gajim.org/</ref>
* Chat client synchronization.
* Group chats.
* Sending of pictures, videos and other files to friends or groups.
* Secure end-to-end encryption via OMEMO or PGP.
* The option to keep and manage all chat history.
* Connection compatibility with other messengers via transports, such as IRC.
* Various other features are available via plugins.

In late-2018, audio/video is reportedly not functional in Gajim. Further, OTR support was dropped in Gajim release 1.0, but the [https://dev.gajim.org/gajim/gajim-plugins/wikis/OmemoGajimPlugin OMEMO plugin] is an encryption alternative. <ref>https://dev.gajim.org/gajim/gajim/wikis/help/gajimfaq</ref>

'''Figure:''' ''Gajim Client in {{project name}}''

[[File:Gajim.png|1600px]]

== Installation ==

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = '''Tip:''' Gajim dependencies and Debian instructions are always available [https://dev.gajim.org/gajim/gajim/blob/master/README.md here].
}}
The steps below install Gajim, along with the OMEMO encryption plugin and [https://dev.gajim.org/gajim/gajim-plugins/wikis/HttpUploadPlugin HTTP Upload plugin] (which is required for file transfers). <ref>Note this feature can be combined with OMEMO for encrypted file transfers.</ref> The latter plugin is fully integrated into the core Gajim software as of v1.0. Upon first launch of the program, users can use an existing [[#Jabber_.2F_XMPP|XMPP account]] or create a new one. 

{{Update}}

{{CodeSelect|code=
sudo apt-get update
}}

Install gajim, gajim-omemo and gajim-httpupload.

{{CodeSelect|code=
sudo apt-get install gajim gajim-omemo gajim-httpupload
}}

Start Gajim from the start menu or type in konsole.

{{CodeSelect|code=
gajim
}}

<ref>
[https://github.com/{{project_name_short}}/anon-apps-config anon-apps-config] which is installed by default will [https://github.com/{{project_name_short}}/anon-apps-config/blob/master/debian/anon-apps-config.hide deactivate gajim plugin installer / updater] because it is not secure.
</ref>

== Configuration ==

=== Account ===

On first launch, an Account Creation Wizard Dialog will appear. Use the wizard to either create a new account to connect to the jabber network or use an existing account. For new accounts, there are multiple jabber servers available and only a username and password is required to join. <ref>A new account can always be added with: <code>Edit</code> &rarr; <code>Accounts</code> &rarr; <code>New</code></ref>

=== Gajim Settings ===

The following changes are recommended for better security and privacy.
{{Box|text=
<u>Logs:</u> 
* <code>Edit</code> &rarr; <code>Accounts</code> &rarr; <u>'''un'''check</u> <code>Save conversation logs for all contacts</code> <br />
<u>Activity settings:</u>
* <code>Preferences</code> &rarr; <code>Status</code> &rarr; <u>'''un'''check</u> <code>Away after</code> <ref>To prevent needlessly leaking your activity to the server.</ref>
* <code>Preferences</code> &rarr; <code>Status</code> &rarr; <u>'''un'''check</u> <code>Not available after</code>
<u>Privacy settings:</u>
* <code>Preferences</code> &rarr; <code>Advanced</code> &rarr; <code>Privacy</code> &rarr; <u>'''un'''check</u>
** <code>Allow client / OS information to be sent</code>
** <code>Allow local system time information to be sent</code>
** <code>Log encrypted chat session</code>
** <code>Allow my idle time to be sent</code>
<u>Prevent auto-start:</u>
* <code>Preferences</code> &rarr; <code>Advanced</code>&rarr; <code>applications</code> &rarr; <code>Custom</code> &rarr; <u>clear fields</u> for: <ref>For better security, this prevents the automatic start of these applications from the chat client.</ref>
** <code>Browser</code>
** <code>Mail Client</code>
** <code>File Browser</code> 
<u>Network settings:</u> <ref>To set use of the Tor network, along with [[Stream Isolation]].</ref>
* <code>Preferences</code> &rarr; <code>Advanced</code> &rarr; <code>global proxy</code> &rarr; <code>Tor</code>
* <code>Preferences</code> &rarr; <code>Advanced</code> &rarr; <code>global proxy</code> &rarr; <code>mange</code> &rarr; <code>Tor</code> &rarr; <u>check</u> <code>Use proxy authentication</code> &rarr; <u>set</u> <code>username</code> to <code>gajim</code> &rarr; <u>set</u> <code>password</code> to <code>gajim</code>
}}
Gajim cannot be installed by default in {{project name}} yet, as there is more development work TODO; see [[Dev/Gajim]].

= HexChat: IRC Client =

See [[HexChat]].

= Tox =
{{Template:Tox}}

= Nheko =
To connect to other Matrix users and/or our Telegram channel without dealing with Telegram Desktop, you can create an account on the [https://riot.privacytools.io/#/welcome privacytools.io] home server for a more private experience (it doesn't collect as much data about users as the matrix.org home server). The privacy issues are inherent in the synapse server side software itself, check this [https://github.com/privacytools/services/issues/17 list] for a full write-up. Besides federating with other Matrix instances, it supports bridging to IRC and Telegram channels.

Available on Debian:
{{CodeSelect|code=
sudo apt install nheko
}}

= Web Browser / JavaScript Clients =
Strongly not recommended because they rely on the server not attacking the user and stealing their encryption keys from the browser. Malicious third party sites may be able to exploit browser security holes and sniff keys as well.

Also the stateless design of Tor Browser will erase any keys created and approved by communicating parties causing confusion about trusting their contacts in subsequent sessions - a workaround is to use a dedicated install of Firefox for that purpose.

== Riot Web == 
[https://riot.im/app/#/welcome Riot Web App] is a browser based Matrix client.

== Converse.js ==
[https://chat.jabber.de/ OMEMO browser client]. Provided by some XMPP hosting services. Chat encryption only available on "Trusted Devices".

= Deprecated Chat Clients =
== CoyIM ==
No longer included in Whonix due to technical issues. Namely, currently not available from Debian stable or backports package sources packages.debian.org. <ref>
https://forums.whonix.org/t/coyim-in-whonix-development-discussion/5901/16
</ref> Chances are it gets reintroduced when Whonix 16 (based on Debian <code>bullseye</code>) gets released. Manual software installation might be possible, see [[Install Software]] but it is [[undocumented]] by Whonix developers.

== Pidgin ==

Pidgin supports most protocols and OTR end-to-end encrypted chat. However, it is not recommended because it has a [http://pidgin.im/news/security/ very poor security record] with many remotely exploitable bugs. Security researcher and developer Micah Lee notes this is the result of reliance on legacy protocols and the libpurple, libotr and libxml libraries which are: ''"... massive, written in C/C++, and are littered with memory corruption bugs. ..."'' <ref>https://micahflee.com/2013/02/using-gajim-instead-of-pidgin-for-more-secure-otr-chat/</ref> 

== RetroShare ==
{{project_name}} developers no longer list RetroShare, which is a [https://en.wikipedia.org/wiki/Friend-to-friend friend-to-friend] (peer-to-peer), decentralized network and not an anonymizing network. Encrypted RetroShare  connections support chat, voice and video, mail, file-sharing, forums and Tor. <ref>Unlike other private P2P options, the F2F network can grow in size without compromising their users' identities. Also, passwords or digital signatures are required for authentication.</ref> Although RetroShare is [https://github.com/RetroShare/RetroShare under active development], <ref>See also: https://retroshareteam.wordpress.com/2018/03/13/release-notes-for-v0-6-4/</ref> there are several serious concerns which disqualify a recommendation:

* The RetroShare package is signed with [[RetroShare#Installation|weak 1024-bit keys]] (in late-2018).
* A 2016 code review which focused on implementation vulnerabilities discovered multiple security issues: <ref>https://www.elttam.com.au/blog/a-review-of-the-eff-secure-messaging-scorecard-pt1/</ref>
** The attack surface is high due to the feature-rich codebase.
** Systemic "insecure coding practice" was identified, particularly ''"...inconsistent return value checking and error handling, poor usage of explicit and implicit typecasting, and relaxed handling of adverse security edge-cases."''
** Within a 24-hour period, auditors had developed proof of concept exploits for web-like vulnerabilities, weak binary protections, and out of bound memory reads and remote memory corruption (promptly rectified by developers).
* A coverity scan of the RetroShare code shows a large number of outstanding defects, along with a relatively high defect density. <ref>https://scan.coverity.com/projects/retroshare-retroshare</ref> <ref>For example, compare this result with the low number of defects and defect density of the [https://scan.coverity.com/projects/tor Tor] codebase.</ref>

== Ricochet IM ==

Ricochet IM is [[Unsupported|unsupported]] since it is broken in {{project_name}} 15 [https://forums.whonix.org/t/ricochet-support/7174) despite all efforts to fix it].

Interested readers are most welcome to experiment with Ricochet IM to try and fix the problem -- refer to the archived documentation [[Deprecated/Ricochet IM|here]].

== TorChat ==

TorChat has not been recommended by {{project name}} developers since late-2015. The reason is [https://github.com/prof7bit/TorChat/issues development has been at a standstill] since 2013 and the TorChat developer does not respond to other people, suggesting the project has been abandoned. TorChat is also an unofficial project and unaffiliated with The Tor Project. Since communication, support, active development and security fixes are essential for anonymity-related projects, modern software alternatives are recommended. <ref>Ricochet IM was previously recommended in this section, since it passed a recent (2016) security audit with flying colors.</ref>

Another reason to avoid TorChat is the findings of a 2015 security analysis <ref>[http://kodu.ut.ee/~arnis/torchat_thesis.pdf Security Analysis of Instant Messenger TorChat]</ref> which inspected the protocol and Python implementation: <ref>https://en.wikipedia.org/wiki/TorChat#Security</ref>

<blockquote>It was found that although the design of TorChat is sound, its implementation has several flaws, which make TorChat users vulnerable to impersonation, communication confirmation and denial-of-service attacks.</blockquote>

== Tor Messenger ==

Do <u>not</u> use Tor Messenger! It was deprecated by upstream developers in early-2018. <ref>
* https://blog.torproject.org/sunsetting-tor-messenger
* [[Deprecated#Tor_Messenger]]
* http://forums.whonix.org/t/tor-messenger-is-no-longer-maintained-as-of-march-2018
</ref>

= Other Software =

For anonymous Voice over IP (VoIP) or encrypted, anonymous phone calls using the Tor anonymity network, see: [[VoIP]].

If a messenger program is not listed in this chapter, it is for now recommended against. If readers feel any privacy-respecting chat clients are missing on this page, first search the [https://forums.whonix.org/ {{project name}} forums] to see if that application has been discussed in the recent past. Any additions to this page will be based on an objective analysis of the software's underlying strength and compatibility with {{project_name}}. <ref>Also see: https://forums.whonix.org/t/client-server-instant-messengers-im-oct-2016</ref>

= Footnotes / References =

{{reflist|close=1}}

= License =

{{License_Amnesia|{{FULLPAGENAME}}}}

{{Footer}}

[[Category:Documentation]]
