= 7.7.8.7 Build Documentation (short) =

This is a short set of instructions for building 7.7.8.7 testers-only version of Whonix (later to be modified for Whonix 8) inside VirtualBox (as opposed to the traditional process of running these commands on a system that is installed directly on the hardware).

Advantages of this approach are that you can build Whonix on any OS that can run VirtualBox (you need Debian Stable for hardware type build) and that any potential system damage is limited to the VM. Using shapshots you can quickly revert a faulty state or a failed build and start again.

The focus here is to show the simplest way to build Whonix from source. Various security precautions such as GPG key verification are omitted.

Please read the full [[Dev/BuildDocumentation_8#Build_Documentation.|documentation]] in order to understand the process better.

== Get and prepare Debian and VirtualBox ==
[[Debian#Download_and_Verification|Download and verify]] Debian Stable/Wheezy 32 bit network install (netinst) ISO.

[https://www.virtualbox.org/wiki/Downloads Download] the latest version of VirtualBox and verify the downloaded packages by [http://dlc.sun.com.edgesuite.net/virtualbox/4.3.6/SHA256SUMS comparing SHA256 checksums].

After you install VirtualBox create a new virtual machine with the following specifics:

<pre>
Name: Debian
Type: Linux
Version: Debian
Memory size: (go with recommended memory size) / Next
Hard Drive: Create a virtual hard drive now / Create
Hard drive file type: VDI (VirtualBox Disk Image) / Next
Storage on physical hard drive: Dynamically allocated / Next
File location and size: 50 GB / Create
</pre>

Start the newly created virtual machine, select the ISO of Debian 7.4 stable (debian-7.4.0-i386-netinst.iso) and click Start.

<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
'''OPTIONAL.'''

If you are interested in seeing a visual walk-through of the Virtual Machine preparation, click on Expand on the right.

<div class="mw-collapsible-content">


Create a new virtual machine by clicking "New".

[[File:1a.png|400px]]


Click "Next".

[[File:2a.png|400px]]


Set name to "Debian".

[[File:3a.png|400px]]


Leave the memory as recommended.

[[File:4aa.png|400px]]


New hard disk.

[[File:5a.png|400px]]


"VDI".

[[File:6a.png|400px]]


Choose "Dynamically allocated"

[[File:7a.png|400px]]


Set the size to 50GB. You won't use all of it.

[[File:8aa.png|400px]]


Check if all is correct.

[[File:9aa.png|400px]]


Create the virtual machine.

[[File:10aa.png|400px]]


Start the VM.

[[File:11aa.png|400px]]


Capture notification.

[[File:12a.png|400px]]


Welcome screen.

[[File:13a.png|400px]]


Locate Wheezy netinst ISO. 

[[File:13aa.png|400px]]


Check if all is correct.

[[File:14aa.png|400px]]

</div>
</div>

== Install Debian ==
In the installer boot menu of Debian Stable (Wheezy) press "Install" and choose following settings:

<pre>
Select a language: English
Select your location: United Kingdom
Configure the keyboard: American English
Hostname: host
Domain name: (empty)
Root password: (set up a strong password)
Full name for the new user: user
Username for your account: user
Password for the new user: (choose a good password, different from root password)
Partitioning method: Guided - use entire disk
Partitioning scheme: All files in one partition (select the listed device in the next step)
Partition disks/overview: Finish partitioning
Write changes to disk: Yes

Debian archive mirror country: Go back
Continue without a network mirror: Yes

Use a network mirror: No
Participate in the package usage survey: No
Software selection: None; deselect all options (using Space)
Install the GRUB boot loader: Yes (select the listed device in the next step)
Finish the installation: Continue
</pre>

 <div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
'''OPTIONAL.'''

If you are interested in seeing a visual walk-through of the minimal installation of Debian Stable Wheezy, click on Expand on the right.

<div class="mw-collapsible-content">
In the menu select "Install"

[[Image:20.png|400px]]


Set language as English.

[[File:21.png|400px]]


Set location as United Kingdom.

[[File:22.png|400px]]


Set keyboard as American English.

[[File:23.png|400px]]


Installing additional content.

[[File:53.png|400px]]


Network will auto-configure (hopefully).

[[File:24.png|400px]]


Set the hostname to "host".

[[File:25.png|400px]]


Leave the domain name empty.

[[File:26.png|400px]]


Pick a strong root password.

[[File:27.png|400px]]


Reenter the password.

[[File:28.png|400px]]


Full name should should be "user".

[[File:29.png|400px]]


Username should also be "user".

[[File:30.png|400px]]


Enter a strong user password.

[[File:31.png|400px]]


Reenter the password.

[[File:32.png|400px]]


Network time procedure.

[[File:33.png|400px]]


Use a guided partitioning method with the whole disk (FDE is a good idea).

[[File:34.png|400px]]


Select the suggested disk.

[[File:35.png|400px]]


Partition all files in one partition.

[[File:36.png|400px]]


Finish partitioning.

[[File:37.png|400px]]


Confirm the changes.

[[File:38.png|400px]]


It takes a few minutes to get the base system installed.

[[File:39.png|400px]]
[[File:40.png|400px]]


We don't need any extra packages so don't select a mirror, "Go back".

[[File:41.png|400px]]


Confirm that you want to continue without a mirror.

[[File:42.png|400px]]


Configuring apt.

[[File:43.png|400px]]


"No thanks" to survey participation.

[[File:44.png|400px]]


Deselect (no star) the given option (using Space).

[[File:45.png|400px]]
[[File:46.png|400px]]


Install GRUB.

[[File:47.png|400px]]


Select your disk.

[[File:48.png|400px]]


Finishing the installation.

[[File:49.png|400px]]


Done! The system will reboot.

[[File:50.png|400px]]


OS screen.

[[File:51.png|400px]]


Login screen.

[[File:52a.png|400px]]
</div>
</div>

== Preparing the system for build ==

<pre>
## (host) login with "root"
root

## Take an image of your installation in case the build script fails in the middle. "Machine / Take snapshot".

## Add a new repository source. 
echo "deb http://ftp.us.debian.org/debian/ wheezy main" >> /etc/apt/sources.list

## Refresh package lists and upgrade
apt-get update && apt-get dist-upgrade -y

## Install "sudo" and git.
apt-get install sudo git -y

## Add "user" to "sudo" group
addgroup user sudo

## Reboot the system to apply the changes
shutdown -r now
</pre>

 <div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
'''OPTIONAL.'''

If you are interested in seeing a visual walk-through of the system preparation, click on Expand on the right.

<div class="mw-collapsible-content">

Logging as root.

[[File:1b.png|400px]]


Taking a snapshot of the VM.

[[File:2b.png|400px]]

[[File:2bb.png|200px]]


Adding repository to sources and running update & upgrade.

[[File:3b.png|400px]]
[[File:4b.png|400px]]


Installing git and sudo.

[[File:5b.png|400px]]
[[File:6b.png|400px]]
[[File:7b.png|400px]]


Adding "user to "sudo" group

[[File:8b.png|400px]]


Rebooting.

[[File:9b.png|400px]]
</div>
</div>

== Building from source ==

<pre>
## (host) login with "user"
user

## Here you can take another snapshot to avoiding doing system preparation again next time when you build. "Machine / Take snapshot".

#Get source code.
git clone https://github.com/Whonix/Whonix

## Go into the git directory
cd Whonix

## Get a list of available git tags.
git tag

## Choose which version you want to build.
git checkout 7.7.8.7
</pre>

 <div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
'''OPTIONAL.'''

If you are interested in seeing a visual walk-through of the build from source, click on Expand on the right. Pictures are shown using the tag 7.7.6.4 but you must use 7.7.8.7

<div class="mw-collapsible-content">
Logging as user.

[[File:10b.png|400px]]


Taking a snapshot of the VM.

[[File:2b.png|400px]]

[[File:12bbb.png|200px]]


Cloning the git source.

[[File:12b.png|400px]]


Entering the git directory and getting git tags.

[[File:13b.png|400px]]


All available tags displayed.

[[File:14b.png|400px]]


Checkout out 7.7.8.7

[[File:15b.png|400px]]
</div>
</div>

== VM Creation ==

Build a Whonix-Gateway virtual machine image.

<pre>
sudo ./whonix_build --build --tor-gateway 
</pre>


Build a Whonix-Workstation virtual machine image.

<pre>
sudo ./whonix_build --build --tor-workstation
</pre>

The resulting {{Code2|.ova}} images can be found in {{Code|~/whonix_binary}} folder.


If you want to create a log of the build process (very useful for debugging) use the following commands but be aware that all output will be redirected to a file, meaning nothing will appear on the screen. This will create a text log in /home/user/log. 


For Workstation

<pre>
sudo ./nothing-to-see/whonix_build --build --tor-workstation >> /home/user/log-workstation 2>> /home/user/log-workstation
</pre>

For Gateway

<pre>
sudo ./nothing-to-see/whonix_build --build --tor-gateway >> /home/user/log-gateway 2>> /home/user/log-gateway
</pre>
 <div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
'''OPTIONAL.'''

If you are interested in seeing a visual walk-through of the VM creation, click on Expand on the right.

<div class="mw-collapsible-content">

Enter the Gateway build command

[[File:16b.png|400px]]


Provide sudo password

[[File:18b.png|400px]]
</div>
</div>

== VM image export == 

After a few hours (depending on your disk speed, CPU clock rate, available download bandwidth, ...) the image (either Workstation or Gateway) will be created in {{Code|~/whonix_binary}} directory. This will take from 3 to 7 hours per image.

You need to export the OVA image and then [[Install  |use it in VirtualBox]].

To transfer the images you can use VirtualBox's Shared Folders Functionality or USB transfer.  

==== Export to a shared folder ====   

To use shared folder functionality you must have [[VirtualBox_Guest_Additions|Guest Additions]] installed.

Before installing Guest Additions read the [https://www.virtualbox.org/manual/ch04.html official manual page] and Whonix's [[VirtualBox_Guest_Additions|wiki page]].

If you still want to use it, [http://download.virtualbox.org/virtualbox/4.3.6/ download the ISO] (VBoxGuestAdditions_4.3.6.iso).

==== Export via USB ====

Unless you install VirtualBox Extension Pack, USB 2.0 won't be supported, making the image transfer really slow.

Before installing the extension pack read the [https://www.virtualbox.org/manual/ch01.html#intro-installing official manual page].

To proceed, [https://www.virtualbox.org/wiki/Downloads download] the vbox file (Oracle_VM_VirtualBox_Extension_Pack-4.3.6-91406.vbox-extpack). Import the file in VirtualBox (File/Preferences/Extensions then locate the file). After installing, "Oracle VM VirtualBOx Extension Pack" entry will appear as "Active", resulting in a green arrow icon in front of the name.
