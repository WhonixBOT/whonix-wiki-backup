{{Header}}
{{#seo:
|description={{project_name}} Security Check Application. Connectivity Test. Sanity Test. Leak Test. Update Check.
|image=https://www.whonix.org/w/images/7/72/Whonixchecknotification.png
}}

[[Image:whonixchecknotification.png|thumb|systemcheck completion]]

[[Image:Whonixcheck_GUI.png|thumb|systemcheck progress meter]]

[[Image:whonixcheck_cli.png|thumb|systemcheck in Konsole]]

[[Image:writing to tty1 by adrelanos.png|thumb|

[[Desktop#whonixcheck.2Ftimesync_writing_to_tty1|Automatically started systemcheck writing to tty1.]]]]
= Introduction =
{{Code2|systemcheck}} (previously called {{Code2|whonixcheck}}) is a script which checks numerous, important system variables. systemcheck can be run in a CLI environment (such as in terminal emulator xfce4-terminal) or via the GUI option, which has an in-built progress meter and summary notification popup of the results. The script is stored in the {{Code|/usr/bin/systemcheck}} and {{Code|/usr/lib/whonix/systemcheck/}} directories. {{project_name}} is functional without the systemcheck script since it only checks the system status; it is not responsible for core settings. Nothing is compiled, and the script can be easily inspected in the source code.

The systemcheck script was inspired by https://check.torproject.org. In the past this was an important check when people were still recommended to use proxy settings to torify web browsers. Tor Browser is now securely pre-configured upon release, which means manual torification of web browsers is now recommended against. As an additional protection the default Tor Browser visits <code>check.torproject.org</code> to confirm everything is working as expected. <ref>Tor Browser in {{project_name}} is configured to load a local {{project_name}} resource after launch -- the familiar landing page.</ref> This site also checks whether Tor Browser is up-to-date by having Tor Button perform a local check after downloading version information.

<code>check.torproject.org</code> is useful for a browser check, but {{project_name}} is a complete operating system. This means certain checks must be performed before the browser starts, otherwise a user's anonymity or security might be compromised. whonicheck's design allows the entire {{project_name}} community to stay informed about important updates or advice, and this is particularly important for users who might not start the browser or visit the {{project_name}} website regularly. For these reasons, systemcheck is automatically started after boot/login if it has not been completed within the last 24 hours. This behavior holds true even if the system is not restarted, thereby keeping any long-running systems (like [[Onion_Services|Onion Services]]) safely informed.

If it is necessary to hide Tor and {{project_name}} use from an ISP, see [[Hide_Tor_and_{{project_name_short}}_from_your_ISP|here]]. While only a small minority of users configure their system to hide Tor, it is still desirable to hide any obvious {{project_name}} signature. {{project_name}} users are better off if adversaries cannot distinguish them from vanilla Tor Browser users, as the {{project_name}} user pool is far smaller. 

When systemcheck auto-starts, it first waits for a randomized period of time ranging between 60 and 500 seconds. This obfuscation feature is intended to further stymie traffic analysis, while Tor is still responsible for basic defenses against traffic volume and pattern signatures. Without waiting for a randomized period traffic flows would be more distinguishable, since a spike in systemcheck traffic would always occur immediately after bootstrapping.

{{Running_Whonixcheck}}

== Tor Bootstrap ==
Tor bootstrap refers to the process of attempting to connect to the Tor network (successfully or unsuccessfully). Familiar output related to this process includes: "Tor connecting xx percent...", "Tor not connected", "Tor connected" and so on. Bootstrapping does not refer to related concepts, such as whether connections are "secure", "not secure", "anonymous" or "not anonymous".

= System Checks =

In all the checks below, systemcheck warnings appear if a problem is detected. Conversely, systemcheck output is otherwise quiet unless using the <code>--verbose</code> option. Any operating system updates, downloads or other network activity are [[Stream_Isolation|stream-isolated]] by default.

'''Table:''' ''System Checks run by systemcheck''

{| class="wikitable"
|-
! scope="col"| '''Check'''
! scope="col"| '''Description'''
|-

! scope="row"| Canary
| TODO: document. Meanwhile, see [[#Warrant Canary Check|Warrant Canary Check]].
|-

! scope="row"| Clock Source
| Check if the clock source is KVMClock and warn if that is the case. <ref>This is only expected to affect those following the [[KVM]] instructions.</ref>
|-

! scope="row"| Control Port Filter Proxy
| Check if [[Dev/CPFP|Control Port Filter Proxy]] is running.
|-

! scope="row"| Entropy Test
| An entropy availability check confirms {{Code|/proc/sys/kernel/random/entropy_avail}} contains no less than 112 bytes.
|-

! scope="row"| Hostname
| Check if:
* {{Code|hostname --fqdn}} outputs {{Code|host.localdomain}}.
* {{Code|hostname }} outputs {{Code|host}}.
* {{Code|hostname --ip-address }} outputs {{Code|127.0.0.1}}.
* {{Code|hostname --domain }} outputs {{Code|localdomain}}.
Also inform if [[Project-APT-Repository]] is enabled, and if so, which repository has been selected.
|-

! scope="row"| IP Address Routing
| Check if IP forwarding is disabled on {{gateway_product_name}} (<code>sys-whonix</code>).
|-

! scope="row"| Leak Tests
| When using <code>--leak-tests</code>, [[Dev/Leak Tests]]:

# Download https://check.torproject.org with curl through an extra SocksPort.
# Download https://check.torproject.org with curl through TransPort.

checks if <code>check.torproject.org</code> reports the IP to be a Tor IP address.
|-

! scope="row"| Log Inspection
| When using the <code>--verbose</code> option, check if {{Code|~/.whonix/msgdispatcher-error.log}} or {{Code|~/.whonix/whonix_torbrowser_updater_error.log}} exist and report this if confirmed.
|-

! scope="row"| Meta-package Check
| Check if the relevant meta-packages <ref>These capture packages which depend on all other recommended / default-installed packages.</ref> are installed on {{gateway_product_name}} (<code>sys-whonix</code>) or {{workstation_product_name}} (<code>anon-whonix</code>). Also see: [[{{project name short}}_Debian_Packages|{{project_name}} Debian Packages]].
|-

! scope="row"| Network Connection
| Check whonixsetup has properly configured networking.
|-

! scope="row"| Operating System Updates
| ''apt-get update'' is run through a separate apt-get SocksPort for stream isolation. A notification is provided whether the system is up-to-date or requires updating.
|-

! scope="row"| Package Manager
| Check if a package manager is currently running and wait until the process is finished. <ref>Otherwise, eventually the system is locked or the package manager is left in a broken state. Advice is provided on what to do in such circumstances.</ref> This prevents connection failures during concurrent upgrades of the Tor or [[Dev/CPFP|Control Port Filter Proxy]] packages.
|-

! scope="row"| Tor
| Check: 
* If Tor has been enabled by inspecting if {{Code|DisableNetwork 1}} has been commented out from {{Code|/usr/local/etc/torrc.d/50_user.conf}} either manually or via whonixsetup.
* If the Tor process (pid) is running on {{gateway_product_name}} (<code>sys-whonix</code>).
* The validity of Tor configuration files in {{gateway_product_name}} (<code>sys-whonix</code>) by using {{Code|sudo tor --verify-config}}.
Notify about the Tor connection / IP address. <ref>Some users may wonder why it is necessary to check the IP address if the {{project_name}} design ensures that the real IP cannot be leaked. Sometimes <code>check.torproject.org</code> reports false positives and fails to detect Tor exit nodes, so it is better to provide information about that possibility. This also reduces support requests and bad press. Users are welcome to investigate a Tor exit node that could not be detected, but it can be stated with high confidence that the IP address will be associated with a known Tor exit node.</ref> <ref>Another reason to perform this check is because some users set up dangerous and/or unsupported configurations, such as:
* Changing the {{workstation_product_name}} (<code>anon-whonix</code>) network interface from {{Code|internal}} network {{Code|"{{project_name_short}}"}} to {{Code|bridged}} or {{Code|NAT}}.
* Using virtualizers which are entirely unsupported and untested by {{project_name}} developers.
* Installing arbitrary packages on {{workstation_product_name}} (<code>{{whonix-ws}}</code>). This could theoretically create leak vectors, and systemcheck is the last layer of defense against such leaks.</ref>
|-

! scope="row"| Repository Notification
| Notifies whether [[Project-APT-Repository|{{project name}} APT Repository]] is enabled or not.
|-

! scope="row"| Stream Isolation
| When using <code>--leak-tests</code>,

# Download https://check.torproject.org with curl through an extra SocksPort.
# Download https://check.torproject.org with curl through TransPort.

on {{workstation_product_name}} (<code>anon-whonix</code>), a [[Stream Isolation]] test checks the IP addresses from (1) and (2) differ.
|-

! scope="row"| Tor Bootstrap
| Tor Bootstrap Status:

* TODO: document
* anondate
|-

! scope="row"| Misc
|

* TODO: document
* control port filter proxy running
* remarkable kernel messages
* timedatectl check
* timezone
|-

! scope="row"| Virtualization Platform
| Check {{project_name}} is being run on one of the supported virtualizer platforms, including bare metal ([[Physical Isolation]]), [[VirtualBox]], [[KVM]] or [[Qubes]].
|-

|}

= Version Numbers =
{{Anchor|Whonix Build Version}}
== {{project_name}} Build Version ==

The version number of the {{project_name}} build never changes. This is acceptable because at build time <ref>The time at which the image was created.</ref> the current {{project_name}} version number is added to the image itself. <ref>
The [https://github.com/{{project_name_short}}/anon-shared-build-log-build-version anon-shared-build-log-build-version] package, [https://github.com/{{project_name_short}}/anon-shared-build-log-build-version/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/70_log_build_version 70_log_build_version] [[Dev/Source_Code_Intro#Chroot_Scripts|chroot script]] in essence runs:
<pre>
echo "$anon_dist_build_version" > "/var/lib/anon-dist/build_version"
</pre>
</ref> 
This information is made available so systemcheck can determine which build script version was used to create that particular image. 

This version number should remain static and be unaffected by updating or other issues, since it only applies to specific (usually older) versions of the build script. This is useful for diagnostic purposes and means specific build versions can be deprecated if they are too difficult or expensive to upgrade. In this case,  systemcheck's [[#System_Checks|{{project_name}} News]] function would inform users about the change.

== Check Version ==

To check the current {{project_name}} version, run the following command.

{{CodeSelect|code=
systemcheck --verbose --function show_versions
}}

Should show something like the following.

<blockquote>[INFO] [systemcheck] disp766 | Whonix-Workstation | whonix-ws-15-dvm DispVM AppVM | Sun 25 Apr 2021 07:13:17 AM UTC
[INFO] [systemcheck] Input Detection: INPUT_AUTO=true CLI=true GUI=false
stdin connected to terminal. Using cli output. Not using gui output.
Alternatively, if want to run from command line, but still use the graphical user interface for input, you could add to command line: --gui
[INFO] [systemcheck] Root Check Result: Ok, not running as root.
[INFO] [systemcheck] whonix_build_version: 3:3.4-1
[INFO] [systemcheck] whonix-workstation-packages-dependencies-cli: 21.2-1
[INFO] [systemcheck] /etc/whonix_version: 15
</blockquote>

= Warrant Canary Check =
== Introduction ==
Currently in {{project name}} testers repository. Will flow to other repositories as usual.

Prerequisite knowledge: [[Trust#{{project name short}}_.E2.84.A2_Warrant_Canary|{{project name}} warrant canary]]

Rationale for Automated Warrant Canary Check:

* {{project name}} warrant canary is of little use if it gets forgotten over time and not regularly verified
* Likelihood of {{project name}} warrant canary being regularly verified by the community is probably low.
* Even if a community member verified {{project name}} warrant canary and noticed that verification failed, there would be no effective way to notify all users of {{project name}}.

Automated Warrant Canary Check:

* Similar to an update check but to establish if {{project name}} warrant canary is still valid.

Security:

* Downloads over Tor from <code>.onion</code> link [http://download.{{project_onion}}/whonixdevelopermetafiles/canary/canary.txt.embed.sig <code>canary.txt.embed.sig</code>]. <ref>
clearnet link for convenience, preview, not used by systemcheck: https://download.{{project_clearnet}}/whonixdevelopermetafiles/canary/canary.txt.embed.sig
</ref>
* The downloader [https://gitlab.com/whonix/systemcheck/-/blob/master/usr/lib/systemcheck/canary-download.py <code>canary-download.py</code>] is written in memory-safe language python (python3-requests) and running under a dedicated limited linux user account <code>canary</code>.
* <code>canary.txt.embed.sig</code> is verified using <code>signify-openbsd</code> <ref>
{{CodeSelect|code=
sudo -u canary signify-openbsd -V -e -p /usr/share/repository-dist/derivative-distribution-signify-key.pub -x /var/lib/canary/canary.txt.embed.sig -m /var/lib/canary/canary-unembed.txt
}}
</ref>
* [https://gitlab.com/whonix/systemcheck/-/blob/master/etc/apparmor.d/usr.lib.systemcheck.canary AppArmor profile]
* [https://gitlab.com/whonix/systemcheck/-/blob/master/lib/systemd/system/canary.service systemd hardening (seccomp)]
* Similar to [[sdwdate]] fetching time from onions time sources.

More implementation details:

* minimal [https://gitlab.com/whonix/systemcheck/-/blob/master/usr/lib/systemcheck/canary-daemon <code>canary-daemon</code>] (with systemd-notify)
* [https://gitlab.com/whonix/systemcheck/-/blob/master/usr/lib/systemcheck/canary <code>canary</code>] (wrapper including logic when to run <code>canary-download.py</code>)
** Runs on {{Gateway product name}} only. This is to reduce server load.
* systemcheck module [https://gitlab.com/whonix/systemcheck/-/blob/master/usr/lib/systemcheck/check_warrant_canary.bsh <code>check_warrant_canary.bsh</code>]

For now, during initial deployment phase of this new feature, systemcheck will only shown information about canary status when using systemcheck with parameter <code>--verbose</code>. That is because there might be non-security related potential bugs to be ironed out:

* File location might change on server.
* File on server might become unreadable due to linux file access permissions.
* Onion connectivity issues.
* Serving stale copy due to server caching issues.
* General warrant canary improvements.

In case of issues, manually verify {{project name}} warrant canary.

[https://forums.whonix.org/t/whonix-warrant-canary/3208/24 Whonix Warrant Canary Forum Discussion]

== Disable Warrant Canary Check ==
{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = {{gateway_product_name}} only.
}}

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = This disables automated verification of {{project name}} warrant canary when running systemcheck.
}}

This will prevent the anonymous, daily {{project_name}} census.

{{Open with root rights|filename=
/etc/whonix.d/50_user.conf
}}

Add the following content.

{{CodeSelect|code=
systemcheck_skip_functions+=" download_whonix_news "
}}

= Related = 
* [[System Audit]]

= See Also =
* [[Dev/systemcheck]]

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]] [[Category:Design]]
