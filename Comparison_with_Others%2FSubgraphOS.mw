




This writeup is meant to analyze upcoming Subgraph features from a neutral POV as much as possible:

* A non-private clearnet mode for programs - contradicts the mission of a privacy OS.

* A (optional) log collecion system that sends subgraph devs any grsec denied messages on a system. Anonymizing data collected from systems never worked - could leak all kinds of info about what software a user is running. Can be weaken the system if the code is vulnerable.

* GUI popups when mprotect stops a program - Is a terrible UX decision because most users will have no
idea what these messages mean and they'll be alarmed by a massive amount of false positives.

* Captive portal authenticator uses webkit which makes it a massive security hole. Webkit security patching is a disaster on Linux because the engine development/patching is fragmented. Only Gecko has a sane policy. Other options on the TAILS page were written in python and didn't use browser engines at all.

* with lock screen the grsec sysctl for deny_usb is enforced. Sounds good in theory but it won't stop someone resourceful enough from connecting to the hardware memory bus and sniffing encryption keys.

* Per-app sandbox outgoing connection control (restricting what IPs accessible by guest: Not really useful with a nation-state listening on the backbone. They never have to send exfiltrated data to a specific IP. Leaking it anywhere will get it picked up by their sensors which makes it a silent process.

** SSL cert pinning as another feature of application sandboxes. Pointless since CA SSL system is subverted by nation-states.

* The outgoing firewall is of questionable usefulness since an attacker with root can easily bypass that and if not, can exfiltrate via an allowed application instead.
