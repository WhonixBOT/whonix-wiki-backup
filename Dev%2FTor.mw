{{Header}}
{{#seo:
|description=Development Notes about Tor.
}}
{{forkme}}

= Tor Config Files =
== Current Implementation ==
The implementation is as it follows.

* {{Code2|/etc/tor/torrc}} holds minimal content, so we don't have to update it ever again
* Instructions in {{Code2|/etc/tor/torrc}} say "copy and paste from {{Code2|/etc/tor/torrc.examples}}".
* We should never update {{Code2|/etc/tor/torrc}} because that would lead to an {{Code2|interactive dpkg conflict resolution dialog}} <ref name=dpkg-conflict-resolution-dialog>
{{Code2|interactive dpkg conflict resolution dialog}} exampleÀê
<pre>
Configuration file `/etc/tor/torrc'
 ==> Modified (by you or by a script) since installation.
 ==> Package distributor has shipped an updated version.
   What would you like to do about it ?  Your options are:
    Y or I  : install the package maintainer's version
    N or O  : keep your currently-installed version
      D     : show the differences between the versions
      Z     : background this process to examine the situation
 The default action is to keep your current version.
*** interfaces (Y/I/N/O/D/Z) [default=N] ? N
</pre>
</ref> <ref>
Because, {{Code2|/etc/tor/torrc}} comes with an out commented {{Code2|#DisableNetwork 0}} which gets commented in by {{Code2|whonixsetup}}, i.e. {{Code2|whonixsetup}} changes that line to {{Code2|DisableNetwork 0}}, which dpkg will consider as user modification.</ref>, because that would be bad from an usability perspective. Such an {{Code2|interactive dpkg conflict resolution dialog}} confuses quite some users. Also from a security perspective, if the user chooses {{Code2|Y or I}} (install the package maintainer's version), the user may lose its (security) settings such for example its proxy and/or obfuscated bridges settings.
* {{Code2|/etc/tor/torrc.examples}} contains configuration examples.
* Whonix's Tor settings go into {{Code2|/usr/share/tor/tor-service-defaults-torrc}}.
* Users will ignore {{Code2|/usr/share/tor/tor-service-defaults-torrc}}, because this file is barely advertised and barely popular.
* {{Code2|/usr/share/tor/tor-service-defaults-torrc}} can be updated without any conflicts with user modifications.
* https://github.com/Whonix/anon-gw-anonymizer-config

== Rejected Alternatives ==
=== Only Two Config Files ===
* Using only {{Code2|/usr/share/tor/tor-service-defaults-torrc}} and {{Code2|/etc/tor/torrc}}, not using {{Code2|/etc/tor/torrc.examples}}.
* And having configuration examples (instructions) in {{Code2|/usr/share/tor/tor-service-defaults-torrc}}. Using a minimal {{Code2|/etc/tor/torrc}} to tell them to look into {{Code2|/usr/share/tor/tor-service-defaults-torrc}} for configuration examples.
* This is a bad idea, because users get tempted comment in things in {{Code2|/usr/share/tor/tor-service-defaults-torrc}}.
* When they do this, they settings would get lost and overwritten without asking next time they update [https://github.com/Whonix/anon-gw-anonymizer-config anon-gw-anonymizer-config], because {{Code2|/usr/share/tor/tor-service-defaults-torrc}} is not a configuration file (since in {{Code2|/usr}}, not {{Code2|/etc}} folder).

=== Only One Config File ===
* Using only {{Code2|/etc/tor/torrc}}, leaving {{Code2|/usr/share/tor/tor-service-defaults-torrc}} with defaults (from Debian), not using {{Code2|/etc/tor/torrc.examples}}.
* Using {{Code2|/etc/tor/torrc}} for user examples, user's own modifications and Whonix's Tor settings.
* This is bad, because when users have edited {{Code2|/etc/tor/torrc}} and anon-gw-anonymizer-config gets updated, it will throw an {{Code2|interactive dpkg conflict resolution dialog}}<ref name=dpkg-conflict-resolution-dialog />. Users might decide to keep their old config file and will miss (security) improvements.

= Missing /etc/tor.d/ Feature =
Upstream feature request: <br />
[https://trac.torproject.org/projects/tor/ticket/1922  torrc.d-style configuration directories ]

Not having an {{Code|/etc/tor.d/}} style folder (similar to [[Whonix Configuration Files|Whonix modular flexible .d style configuration folders]]) makes implementation of additional features that require additional Tor ({{Code2|/etc/tor/torrc}}) settings much harder. For example it would improve usability to provide a {{Code2|whonix-gw-hidden-webserver}} package, that automates the Whonix-Gateway specific instructions for [[Hidden Services]]. If there was a {{Code|/etc/tor.d/}} style folder, we could just drop the configuration snippet there, and if the feature gets disabled or the package installed, that configuration snippet gets purged. Adding additions to {{Code2|/etc/tor/torrc}} with a script is problematic, because those additions cannot be removed by a script if the user slightly modified those lines.

Maybe clearly marking the configuration snippet would help.

<pre>
### BEGIN whonix-gw-hidden-webserver ###
##
## DO NOT EDIT THIS SECTION
##
## Add your modifications on top of BEGIN or below END.
## It is automatically generated by whonix-gw-hidden-webserver with settings
## from /etc/whonix.d folder. If you edit this section, removal by
## whonix-gw-hidden-webserver will fail. To remove this section, run:
## sudo whonix-hw
##
HiddenServiceDir /var/lib/tor/hidden_service/
HiddenServicePort 80 10.152.152.11:80
##
## DO NOT EDIT THIS SECTION
##
### END whonix-gw-hidden-webserver ###
</pre>

= Footnotes =
<references />

{{Footer}}

[[Category:Development]]
