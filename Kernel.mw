{{Title|title=Install Newer Kernels}}
{{Header}}
{{#seo:
|description=Newer Kernel Versions for Better Security Hardening
|image=https://www.whonix.org/w/images/f/f2/Newerlinux161108640.png
}}
[[image:Newerlinux161108640.png|thumb]]
{{Testers-only}}

= Introduction =

== Kernel Options ==

GNU/Linux provides a wide variety of possible [https://www.kernel.org/ kernel options] for individual users. Active kernel releases fall into several main categories: <ref>https://www.kernel.org/category/releases.html</ref>

* <u>Prepatch (RC) kernels</u>: these "release candidate" kernels are pre-releases of the mainline kernel that are intended for developers and Linux enthusiasts. <ref>These must be compiled from source.</ref> They contain new features and must be tested before they are put into a stable release.
* <u>Mainline</u>: the mainline tree is where all new features are introduced and where new development occurs. Every 2-3 months, a new mainline kernel is released.
* <u>Stable</u>: After a mainline kernel is released, it is classified as stable. Bug fixes for the stable kernel are backported from the mainline tree. On approximately a weekly basis, stable kernel updates are released. Normally only a few bug fix kernel releases are available before the next mainline kernel is released.
* <u>Long-term (LTS)</u>: At any time there are usually several "long-term maintenance" kernel releases available. Bug fixes are backported for older kernels, but these are focused on the most important issues and releases are not very frequent (particularly for older trees).
* <u>Distribution kernels</u>: A number of Linux distributions provide long-term maintenance kernels, which are sometimes not based on those maintained by kernel developers. This is the case for Debian upon which {{project name}} is based. <ref>To tell if you are running a distribution kernel, in a terminal run: <code>uname -r</code>. If anything appears after the dash, then a distribution kernel is in use. At the time of writing, Debian is utilizing the [https://packages.debian.org/source/buster/linux following distribution kernel]: <code>4.19.98-1+deb10u1</code>.</ref>

Interested readers can refer to [https://www.kernel.org/ The Linux Kernel Archives] to see the prepatch, mainline, stable and long-term kernels that are currently available.

== Recommended Kernel ==

For the vast majority of {{project name}} users, there is simply no reason to change from the distribution kernel that is in use. 

The general expert consensus is that while LTS kernels have less hardening features and not all bug fixes are backported, they have less attack surface and potentially less chance of having new bugs. In comparison, stable kernels have more hardening features and all known bug fixes to date, but a higher attack surface and a greater potential for new bugs. <ref>https://forums.whonix.org/t/kernel-recompilation-for-better-hardening/7598?page=11</ref> The grsecurity development team has also noted that the majority of Linux kernel vulnerabilities are those that have most recently been introduced (released) in newer versions. <ref>https://www.grsecurity.net/the_truth_about_linux_4_6</ref> <ref>See also: [https://wiki.debian.org/KernelFAQ Debian wiki Kernel FAQ].</ref>

The developer who is responsible for stable Linux kernel releases (Greg Kroah-Hartman), has also confirmed this viewpoint. His recommendation of what kernel should be used (ranked from best to worst) is as follows: <ref>http://kroah.com/log/blog/2018/08/24/what-stable-kernel-should-i-use/</ref> <ref>He also notes that an unmaintained kernel release should never be used.</ref>

# Supported kernel from your favorite Linux distribution.
# Latest stable release.
# Latest LTS release.
# Older LTS release that is still being maintained.

In Debian's case, it is noted that the distribution kernel is not based on the latest stable upstream kernel release, but they still ensure that any necessary bug fixes are applied on a regular basis. 

{{project name}} developers have also noted there is a [[Dev/APT_Pinning#backports_by_default|risk of instability and breakage]] when utilizing kernels from Debian backports. <ref>http://forums.whonix.org/t/kernel-versions-and-security-debian-backports/5791</ref> For instance, this had previously resulted in Qubes breakage <ref>See: https://github.com/QubesOS/qubes-issues/issues/4443</ref> and caused mismatches in the kernel image versus kernel headers.

One possible exception to the recommendation in this section concerns {{Q project name short}} users, since the <code>dom0</code> kernel applies to all qubes by default. To benefit from a number of recent security developments (such as [[Linux_Kernel_Runtime_Guard_LKRG|Linux Kernel Runtime Guard (LKRG)]]), the use of [https://github.com/QubesOS/qubes-issues/issues/5212 in-VM kernels] is a prerequisite. 

= Preparation =

== {{non_q_project_name}} ==
[[{{non_q_project_name_short}}|{{non_q_project_name}}]]: No preparation is required.

== {{Q project name}} ==
[[{{Q project name short}}|{{Q project name}}]]: A Qubes VM kernel is required.

{{Qubes VM Kernel}}

= Installation =
Debian issue: [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=951315 linux-image-amd64 vs linux-headers-amd64 Debian buster-backports version mismatch bpo.2 vs bpo.3]

{{Install Backport
|package_name=A newer Linux kernel
|package=linux-image-$(dpkg --print-architecture) linux-headers-$(dpkg --print-architecture)
}}

Because of Debian issue [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=951315 linux-image-amd64 vs linux-headers-amd64 Debian buster-backports version mismatch bpo.2 vs bpo.3] the following is required as well. (Only package installation command required.)

{{Install Backport
|package_name=A newer Linux kernel
|package=sudo apt install linux-headers-5.4.0-0.bpo.2-amd64 linux-image-5.4.0-0.bpo.2-amd64
}}

= See Also =
* [[Linux_Kernel_Runtime_Guard_LKRG|Linux Kernel Runtime Guard (LKRG)]]
* [https://github.com/Whonix/tirdad tirdad - TCP ISN CPU Information Leak Protection]

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
