{{Header}}
{{#seo:
|description=Comparison and Consideration of various Operating Systems as base for the {{project name}} Anonymous Operating System. Design Documentation.
}}

== Introduction ==
This chapter applies to the host(s), {{gateway_product_name}} and {{workstation_product_name}}.

''{{project_name}} Example Implementation'' is currently based on Debian. There were development discussions about switching to BSD, Alpine Linux or other secure operating systems.

{{project_name}} can't protect against malicious code inserted into upstream operating system infrastructure. Debian ensures some chain of trust as it requires contributors to sign commits.

== Why not Use a Live CD/DVD as the {{workstation_product_name}} Operating System? ==

This option was previously discussed in depth and it was decided that Live CD/DVDs are not suitable for {{workstation_product_name}}.

Advantages:

* Often actively maintained.
* Stabilized.
* Hardened GNU/Linux distribution.
* Advanced features.

Disadvantages:

* No timely security updates.
* Limited persistence.
* Inflexible design.

Another serious disadvantage of Live CD/DVDs in the context of an anonymity-oriented OS is that they often have their own method of Tor enforcement included. In {{project_name}}, this would result in a [[DoNot#Allow_Tor_over_Tor_Scenarios|Tor over Tor]] scenario.

== Why don't you use <your favorite most secure operating system> for {{project_name}}? ==
==== Generally ====
Why do you use Debian, and not...

The operating system must have

* acceptable usability
* must be somewhat popular, because only that leads to sufficient public scrutiny and enough available documentation.
* For redistribution of {{project_name}}, there are no legal/trademark issues such as with Ubuntu, see [[#Ubuntu Legal Issues]] chapter below for details.
* Must have a secure operating system updater (package manager), i.e. must not fall through the [https://www.updateframework.com/wiki/Docs/Security#AttacksandWeaknesses TUF Threat Model] ([http://www.webcitation.org/6F7Io2ncN w]). Not having a secure updater is [https://krebsonsecurity.com/2011/11/apple-took-3-years-to-fix-finfisher-trojan-hole/ very dangerous] ([http://www.webcitation.org/6FULk4z8t w]).
* Source based distributions take a long time for upgrading and installation of packages, which users complain about. The same or even better security characteristics can be reached with deterministic (reproducible) builds.

Debian is a good compromise of security and usability.

By the way, this chapter won't only include examples which fall through {{project name}} threat model.

==== Ubuntu ====
===== Ubuntu Introduction =====
Ubuntu is not used as {{gateway_product_name}}/Workstation operating system for legal reasons (see below) and was lately negatively perceived due to {{Code2|privacy issues}}<ref>[https://www.eff.org/deeplinks/2012/10/privacy-ubuntu-1210-amazon-ads-and-data-leaks Privacy in Ubuntu 12.10: Amazon Ads and Data Leaks]</ref>, so it is recommended against to use it as host operating system as well.

{{project_name}} 0.4.4 and above based on Debian. Previously {{project name}} was based on Ubuntu. From technical perspective, Ubuntu was a good choice, see [[Ubuntu Tips#About_Ubuntu|About Ubuntu]] if you are interested. The switch was due to Ubuntu Trademark issues, see below.

{{Anchor|Switch from Ubuntu to Debian}}
===== Ubuntu Legal Issues =====
[http://www.ubuntu.com/aboutus/trademarkpolicy About Ubuntu Trademark] and [https://www.ubuntu.com/legal Ubuntu terms] generally are complicated. Since {{project name}} changes are beyond a ''remix'' (as defined by Ubuntu Licensing), {{project name}} would either to have to ask for a license, which they reserve to revoke. Such a legally insecure state is not acceptable. Or {{project name}} would have to rebrand Ubuntu. It would be possible in theory, but in practice it would require a lot work to remove all Ubuntu strings. [https://lists.ubuntu.com/archives/ubuntu-users/2012-September/263760.html Even new apt mirrors would be required], which is much beyond the manpower of the {{project name}} project.

References:

* https://mjg59.dreamwidth.org/37113.html
* https://www.fsf.org/news/canonical-updated-licensing-terms
* <blockquote>[https://www.cio.com/article/2949217/canonical-changes-licensing-terms-to-comply-with-gpl.html Later], the Linux Mint team ended up signing a deal with Canonical to use binaries for an undisclosed fee (if any).</blockquote>
* https://www.infoworld.com/article/2703648/will-canonical-force-linux-mint-to-license-ubuntu-binary-packages.html

Debian is much more Libre without any legal issues. According to Debian project leader Stefano Zacchiroli (in private mail), there are no trademark issues as long as the derivative does not claim to be Debian. This is also clarified in [https://www.debian.org/trademark Debian trademark policy] which is easy to comply with.

Derivatives of Debian are even encouraged to use Debian infrastructure, see [http://wiki.debian.org/Derivatives/Guidelines Derivatives/Guidelines]. Debian even supports derivatives. There is a lot documentation, see [http://wiki.debian.org/Derivatives Derivatives] and even a [http://lists.debian.org/debian-derivatives/ debian-derivatives mailing list].

==== Mac OS X ====
Mac OS X can not be used for legal reasons. Even if that were not a problem, it is still a proprietary, closed source operating system, We don't like their attitude and how they (not) communicate with the security community. Also see: [https://krebsonsecurity.com/2011/11/apple-took-3-years-to-fix-finfisher-trojan-hole/ Apple Took 3+ Years to Fix FinFisher Trojan Hole].

==== Fedora ====
Fedora yet did '''not''' fall through {{project name}} threat model and could be considered as host and future or alternative {{gateway_product_name}}/Workstation operating system. Also Qubes OS, an operating system focusing on security by isolation, is based on Fedora. Started considering it, help welcome, see [[Dev/Fedora]].

phone home issue (says closed but is unfixed):

https://github.com/QubesOS/qubes-issues/issues/1814

==== Qubes ====
Implemented as [[{{q project name short}}|{{q project name}}]].

==== Gentoo / Hardened Gentoo ====
Insecure package manager. Back then bug reports got closed down without much regard.

* https://github.com/{{project_name_short}}/Gentoo-Port/issues/19 - https://bugs.gentoo.org/show_bug.cgi?id=539954
* https://github.com/{{project_name_short}}/Gentoo-Port/issues/10 - https://archives.gentoo.org/gentoo-portage-dev/message/94425239fcaedcee6c49ef398f12aa85
* https://phabricator.whonix.org/T212#5691
* [gentoo-portage-dev] Security and Comparison of Portage with other Package Managers: https://archives.gentoo.org/gentoo-portage-dev/message/bda425ee6c676ec7a6b3c9500a9b00bf
* [gentoo-portage-dev] Portage and Update Security: https://archives.gentoo.org/gentoo-portage-dev/message/94425239fcaedcee6c49ef398f12aa85

In this regard, Hardened Gentoo does not differ from Gentoo.

Due to the way these bug reports were handled, Gentoo was removed from the candidates of secure base operating systems.

Why not use a minimal Linux distribution? See [[FAQ#Why_are_the_{{project_name}}_images_so_big.3F|Why are the {{project name}} images so big?]]
There might be more secure operating systems, such as [http://wiki.gentoo.org/wiki/Hardened_Gentoo Hardenend] [http://www.gentoo.org/proj/en/hardened/ Gentoo], but in Patrick's opinion mortal users are unlikely to learn how to use them. More paranoids (and others) are welcome to use them for example as host operating system and leave feedback. Patches/ports welcome! <ref>
Examples of usability issues.

<pre>
emerge firefox
* There is NOT at least 4 GiB disk space at "/var/tmp/portage/www-client/firefox-31.5.0/temp"
</pre>
What to do? Increase tmpfs size as per http://wiki.gentoo.org/wiki/Portage_TMPDIR_on_tmpfs.
</ref>

==== Alpine Linux ====
Quote https://www.alpinelinux.org/about/

<blockquote>
Alpine Linux was designed with security in mind. All userland binaries are compiled as Position Independent Executables (PIE) with stack smashing protection. These proactive security features prevent exploitation of entire classes of zero-day and other vulnerabilities.
</blockquote>

That doesn't sound super secure since other distributions do that too. Any other security features?

At first sight it looks like alpine's package manager suffers from the same issues as gentoo's. (Being vulnerable to indefinite freeze and downgrade attacks.) [https://phabricator.whonix.org/T212 TODO research]

The question to ask is "Does the package manager pass the TUF Threat Model?"

The Update Framework (TUF) - Attacks and Weaknesses:

* https://theupdateframework.io/security/
* http://www.webcitation.org/6F7Io2ncN

(Made by similar people who created this research:<br />
http://www.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html<br />
which resulted as far as I understand in greatly improved package manager security in many distributions.)

One can ask the TUF people, who are in my experience very friendly and helpful, for their opinion on their mailing list:<br />
https://groups.google.com/forum/#!forum/theupdateframework

==== Arch Linux ====
TODO: Check its package manager security. (See above.)

==== SubgraphOS ====

There are several reasons why {{project_name}} has decided not to use the [https://subgraph.com/ Subgraph project] platform.

'''Table:''' ''{{project_name}} Rationale''

{| class="wikitable"
|-
! scope="col"| '''Domain'''
! scope="col"| '''Reasoning'''
|-
! scope="row"| Development
| 
* <u>Future Roadmap:</u> Basing {{project name}} on Subgraph would tie our future to the viability of another project. It is not ideal to rely on an OS in alpha status, particularly when the Debian alternative is rock solid and has decades of development behind it. <br />
* <u>Features:</u> Subgraph has some [[Comparison_with_Others/SubgraphOS|undesirable feature additions]] that add no value. {{project name}} cannot benefit from Subgraph's manpower if the goals for the development roadmap are fundamentally different.<br />
* <u>Bugs:</u> The plentiful [https://github.com/subgraph/subgraph-os-issues/issues Subgraph bugs] would become {{project name}} bugs and developers would depend on them for fixes.<br />
* <u>Programming Language:</u> Subgraph chose different programming languages (like Golang) that are unfamiliar to lead {{project name}} developers, making customization or modification very difficult.<br />
* <u>Desktop Environment:</u> {{project name}} Developer HulaHoop has noted that Subgraph features completely rely on the GNOME desktop environment. This is undesirable because it is visually unappealing, has an over-simplified interface and would require any "cloud integration" elements to be removed. Configuring GNOME to approach the specifications already achieved in {{project name}} would require a lot of effort. <ref>Previously, the future availability of Wayland and Flatpak in KDE was listed as a {{project name}} advantage, however XFCE is now the default desktop environment.</ref>
|-
! scope="row"| Source Code / Software
| 
* <u>Code Availability:</u> No full source code release to date (mid-2019). <ref>https://github.com/subgraph/subgraph-os-issues/issues/153</ref> <ref>https://github.com/subgraph/subgraph-os-issues/issues/250</ref><br />
* <u>Packaging:</u> The publicly available software exists in a form that is not easily packaged. This would pose a significant maintenance burden for the {{project name}} team.<br />
* <u>Constraints:</u> Arbitrary limitations are in place, such as repository choices. This can of course be changed, but it is an example of wasted effort in patching the base OS to adapt to our vision.<br />
* <u>Meta-packages:</u> There is no Subgraph meta package that can be installed using [https://github.com/subgraph/subgraph-os-issues/issues/239 "<code>sudo apt-get install subgraph-os</code>" / "<code>debootstrap</code> Subgraph OS"] in order to convert vanilla Debian into Subgraph OS. <ref>Subgraph is a Debian derivative.</ref>
|-
! scope="row"| Collaboration
| To date, there has been no cooperation from the Subgraph project developers to correct any of the issues outlined in this section.
|}

{{Anchor|Why aren't you using OpenBSD, it is the most secure OS ever!!!1!}}

==== OpenBSD ====

This FAQ entry addresses the suggestion that {{project name}} should be based on OpenBSD rather than Debian. The opinion provided below is based on the perspective of {{project name}} developers. <ref>Last updated in 2019.</ref>

The OpenBSD FAQ states: [https://www.openbsd.org/faq/faq1.html#WhyUse source] ([http://www.webcitation.org/6RNq1f996 w])
<blockquote>
OpenBSD is thought of by many security professionals as the most secure UNIX-like operating system, as the result of a never-ending comprehensive source code security audit. 
</blockquote>

The landing page for OpenBSD also notes: <ref>https://www.openbsd.org/</ref>

<blockquote>Only two remote holes in the default install, in a heck of a long time!</blockquote>

To OpenBSD's credit, they have a solid reputation for taking security seriously. For example, the development team has adopted these principles: <ref>https://www.openbsd.org/security.html</ref>

* A strong focus on cryptographic approaches towards fixing security problems.
* Full disclosure of security bugs and speedy fixes.
* An auditing team of 6-12 members (including ex-corporate security researchers) continuously searches for and fixes security holes; a process underway since 1996. <ref>This has resulted in the discovery of entire new classes of security problems.</ref>
* Development of new technologies, such as additional memory protections.
* Shipping the OS in a "Secure by Default" mode with all non-essential services disabled.
* Contributing to research -- a number of security papers have been written by OpenBSD team members.

Despite these strengths, the primary downside to adopting OpenBSD relates to the estimated size of the user base:

* [http://www.bsdstats.org/ bsdstats.org] ([http://www.webcitation.org/6F4tFWwNy w]), suggests OpenBSD has  few users. While bsdstats is not representative of the total population of OpenBSD users due to the opt-in data collection program, 9 systems at the time of writing is a very small figure. By comparison, TrueOS has over 15,000 users in 2019.
* Although unscientific, [https://distrowatch.com/dwres.php?resource=popularity DistroWatch] also shows OpenBSD attracts far less interest than popular Linux distributions.
* OpenBSD is estimated to have less than 10 percent of total BSD market share. <ref>https://en.wikipedia.org/wiki/Comparison_of_BSD_operating_systems#Popularity</ref>
* Estimates of BSD market share across all categories (desktops, servers etc.) is [https://en.wikipedia.org/wiki/OS_market_share tiny].

One valid concern is that if a critical mass of users does not gravitate to OpenBSD, then naturally less human resources ("eyeballs") in the population will be searching for, identifying, and remedying security flaws. While the audit team is skilled, a relatively small number of people must inspect code across an entire operating system. As a result, this could ''potentially'' aid targeted attacks or other exploits. 
<ref>One example previously cited is this years old bug which remains unfixed: [http://thread.gmane.org/gmane.os.openbsd.bugs/18754 security vulnerability - NTP not authenticated]. Possibly limited human resources has impacted this bug which affects everyone using the distribution.</ref> <ref>This bug would also impact {{project name}} -- the suggested solution was to authenticate the connection to the NTP server, but this would not be possible for several reasons:
* The {{project name}} design focuses on distributing trust and not using only one NTP server. 
* Further, {{project name}} depends on free services which are available to anyone, ruling out  a solution that requires a personal server. 
* Even if {{project name}} used authenticated NTP, it has been [https://twitter.com/feldpos/status/493426189282054144 pointed out] that the clock could not be moved more than 600 seconds. This is better than nothing, but still inadequate for adversaries who are capable of moving the clock more than 600 seconds, harming anonymity/privacy in the process (see [[Dev/TimeSync]] for further details).</ref>

In comparison, alternatives like Debian have a large user/contributor base, a similar [https://www.debian.org/security/ focus on security], renowned stability, and a solid reputation in security-critical environments such as web servers. <ref>In fact, Debian's popularity and large contributor base has resulted in its adoption in around [https://en.wikipedia.org/wiki/OS_market_share#Market_share_by_category one-third of all Linux web servers] and led to an expansive software library of over 50,000 packages.</ref> It is also strongly contested that BSD variants have [https://www.openbsd.org/innovations.html innovative security improvements] that provide greater protection than modern platforms like Qubes OS; see [[Qubes/Why_use_Qubes_over_other_Virtualizers#Security|Qubes Security]].

* https://isopenbsdsecu.re/
* https://isopenbsdsecu.re/mitigations/
* https://isopenbsdsecu.re/quotes/

==== FreeBSD ====

This FAQ entry addresses the suggestion that {{project name}} should be based on FreeBSD rather than Debian. The opinion provided below is based on the perspective of {{project name}} developers. <ref>Last updated in January 2018.</ref>

It is difficult and time consuming to try and list all the disadvantages of using FreeBSD, such as highlighting non-existent security features. The onus is on FreeBSD proponents to manually search for relevant features (or  lack thereof) and present an objective case for its adoption.

To avoid presenting information that will quickly become out-of-date or that may insult FreeBSD adherents, it is better to avoid definitive security statements and instead ask appropriate questions which might affect the usability, security, anonymity and wide-scale adoption of {{project_name}}. For instance:

* Does FreeBSD have a secure-by-default update mechanism? 
* By default, will every (new) user download come from an existing ''signed'' repository?
** If not, what special settings are required?
** Are users expected to run their own repository?
* Does FreeBSD defend against outdated metadata; for example, can a man-in-the-middle use a roll back or freeze attack against the repository? 
* Does FreeBSD defend against [https://www.cs.arizona.edu/stork/packagemanagersecurity/ various attacks on package managers?] ([http://www.webcitation.org/6Ev4smCoD w]) 
* Does FreeBSD defend against attacks on the software update process by using the [https://theupdateframework.github.io TUF threat model] ([http://www.webcitation.org/6Ev4owhEP w])?

Research which might provide a strong case for FreeBSD does not exclude the possibility of weaknesses or missing security features. The best way to determine the strength of the platform and its relative resilience is to directly ask the developers of that project. Honest replies can reasonably be expected from vibrant, open source communities.The only problem is, the Linux/BSD ecosystems have hundreds of distributions and it is a daunting prospect to rank their merits in this way.

Ultimately, the burden of proof falls on FreeBSD advocates (and not {{project name}} developers) to prove that it is the most secure distribution available. Properly researched contributions that answer the questions above would be a good start, along with possibly approaching FreeBSD developers directly. Alternatively, research into why various aforementioned protections are not necessary to improve security would also be welcomed. Until claims about FreeBSD are substantiated, one should not take offense that it has not already been adopted.

At time of writing FreeBSD had not even Address Space Layout Randomization (ASLR), see https://wiki.freebsd.org/ASLR

==== OpenWRT ====

[https://openwrt.org/ OpenWRT] is not used for the same reasons outlined above. Further, in early 2018 OpenWRT [https://wiki.openwrt.org/doc/packages does not have signed packages].

==== Tails ====
===== How is {{project name}} Different from Tails? =====

See [[Comparison with Others]].

===== Why not Merge with Tails and Collaborate? =====

The following is a ''subjective'' opinion by lead {{project name}} developer Patrick Schleizer. <ref>Last updated in September 2018.</ref> Feedback, corrections and suggested improvements are welcome.

[https://tails.boum.org/ Tails] is a respected project with similar goals to {{project name}} - improved anonymity, privacy and security. Tails has existed for many years and has multiple developers, significant experience and a complete working infrastructure. {{project name}} and Tails developers already cooperate to some degree and discuss things of mutual interest to both projects on various developers mailing lists like whonix-devel, tails-devel and secure-os. 

===== {{project name}} and Tails Collaboration =====

Several parts of {{project name}} are based on Tails. For example, the development of [[sdwdate]] in {{project name}} was reliant  upon Tail's invention of tails_htp. {{project name}} also profits from Tails' previous efforts to upstream packaging and other changes in Debian, current and historical discussions in various forums, Tails research, design documents, experience, feedback and so on.

Other examples of Tails and {{project name}} cooperation include:

* [[Dev/Control_Port_Filter_Proxy#onion-grater_by_Tails|onion-grater]] - a whitelisting filter for dangerous Tor control protocol commands - was developed by Tails developer {{Code2|anonym}} with {{project name}} in mind. {{project name}} then [[Dev/Control_Port_Filter_Proxy#onion-grater_by_Tails_forked_by_{{project_name}}|forked the Python code]] to add a few necessary improvements. <ref>https://github.com/{{project_name_short}}/onion-grater</ref>
* Tails has expressed interest in using [[Anon Connection Wizard]] in the future.

===== Why {{project name}} is a Separate Project =====

Even though Tails is highly valued by {{project name}} developers, it may not be clear to the reader why {{project name}} remains a separate project and not just a contributor to Tails. There are several reasons for this decision: {{project name}} cannot be merged into Tails by the {{project name}} team on technical, skill and political grounds; implementing features or changes in Tails is an unfamiliar process; and it is unknown when/if {{project name}} priorities will be implemented in Tails -- but it is known how to solve these in a separate project (at least with appropriate user documentation).

Further examples are outlined in the table below. Note that some of these items are partially or nearly solved in Tails, but it is has been kept to justify the prior decision not to merge projects.

'''Table:''' ''{{project_name}} and Tails Design and Functionality Comparison''

{|   class="wikitable"
!  align="left" | <b>Tails Issue Tracker (TODO)</b>
!  align="left" | <b>{{project_name}} Design / Instructions</b>
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/remember_installed_packages/ Remember installed packages]
|  align="left" | By design, everything persists <ref>This is actually a disadvantage for anonymity because it is the opposite of an amnesic system, which many users prefer.</ref>
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/applications_audit/ Applications Audit]
|  align="left" | By design, protocol leaks cannot lead to deanonymization
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/Two-layered_virtualized_system/ Two-layered, virtualized system]
|  align="left" | By design, this is achieved by either software compartmentalization (VMs) or [[Physical Isolation]]
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/vpn_support/ VPN support]
|  align="left" | [[Features#VPN / Tunnel support|VPN / Tunnel support]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/Include_JonDo_Software/ JonDo] over Tor
|  align="left" | [[JonDonym]]
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/freenet_project/ Freenet] over Tor
|  align="left" | [[Freenet]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/doc/first_steps/startup_options/bridge_mode/index.en.html obfsproxy] <ref>Bridges were not natively supported by Tails when {{project name}} was founded.</ref>
|  align="left" | [[Bridges]]
|-  class="even"
|  align="left" | [https://tails.boum.org/doc/about/fingerprint/index.en.html Can I hide the fact that I am using Tails?]
|  align="left" | [[Hide Tor and {{project name short}} from your ISP|Hide Tor and {{project name}} from your ISP]]
|-  class="odd"
|  align="left" | [https://labs.riseup.net/code/issues/12264 I2P over Tor] <ref>The I2P feature was [https://tails.boum.org/news/version_2.11/index.en.html removed in Tails 2.11] due to the developer effort required.</ref>
|  align="left" | [[I2P]]
|-  class="even"
|  align="left" | [https://tails.boum.org/contribute/design/Tor_enforcement/ Transparent Proxy as a fallback mechanism]
|  align="left" | By design, everything not configured to use a SocksPort will automatically use Tor's TransPort
|-  class="odd"
|  align="left" | [https://tails.boum.org/doc/anonymous_internet/Tor_Browser/index.en.html Use Tor Browser]
|  align="left" | [[Tor Browser]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/contribute/design/stream_isolation/ Stream Isolation] <ref>Tails has basic stream isolation functionality compared to {{project_name}}.</ref>
|  align="left" | [[Stream Isolation]]
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/evaluate_web_fingerprint/ Evaluate web fingerprint] <ref>See also:  https://tails.boum.org/doc/about/fingerprint/ The bundling of uncommon extensions in Tor Browser like ''uBlock Origin'' increase the likelihood of fingerprinting Tails users specifically.</ref>
|  align="left" | Same as Tor Browser
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/improve_fingerprint_of_the_Unsafe_Browser/ Unsafe browser fingerprint]
|  align="left" | [[Logging in to captive portals]]
|-  class="even"
|  align="left" | [https://tails.boum.org/blueprint/tails_server/ Location Hidden/IP Hidden Servers]
|  align="left" | [[Hosting Location Hidden Services|Location/IP Hidden Servers]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/VoIP_support/ VoIP]
|  align="left" | [[Voip|VoIP]]
|-  class="even"
|  align="left" | ...
|  align="left" | ...
|}

===== Political and Design Considerations =====

There are also significant differences in political and design decisions which prohibit a merger:

* As a code contributor to Tails, Patrick Schleizer would need to accept decisions made via internal Tails decision-making processes. {{project name}} would lose the autonomy to simply modify anything in line with personal preferences or favored solutions. <ref>One major advantage of free software is developers are free to disagree about a project's direction, leading to the creation of a fork.</ref> At the time {{project name}} was created, Schleizer did not favor a Live DVD/USB approach and personally found improving Tails to be far more difficult than starting a fresh project.
* Source Code Merge Policy:
** <u>Whonix:</u> A comprehensive merge policy has not yet been developed. This would be ideal, but it is not compulsory to formulate such a design or associated documentation.
** <u>Tails:</u> In Schleizer's opinion, the [https://tails.boum.org/contribute/merge_policy/ Tails merge policy] is too strict. This is not a complaint or critique. No doubt there are good reasons for that decision and it should be noted that Tails is still a popular and effective solution for many users. Anyone who does not agree has the freedom to contribute to another project or to start a new project, leading Schleizer to make use of that freedom.
* Another major design difference is Tails' reliance on a Live DVD/USB which inherits some restrictions and limitations. Tails must fit on a DVD/USB, while {{project name}} does not have this requirement. {{project name}} also has higher hardware requirements, but therefore more space to implement features. As a consequence, initially fewer people are able to use {{project_name}}, but this situation will improve in the future as available hardware improves. The {{project name}} design is fluid and new designs (both theoretical and practical) are being discovered over time. Depending on user feedback and general interest, eventually a Live DVD or Blu-ray might be created in {{project_name}}.
* Schleizer has found it easier to cooperate with the security by isolation focused operating system [https://www.qubes-os.org Qubes OS], which resulted in [[{{q project name short}}|{{q project name}}]].

==== Minimal Distribution Disadvantages ====

The primary reason for the large size of the images is that small/er distributions do not meet {{project name}} requirements; namely the upstream distribution must have a proactive security policy. In addition:

* Most minimal distributions are small projects. Consequently, there is no dedicated security team that audits packages and quickly releases security patches.
* {{project name}} requires a distribution that cryptographically signs all updates. <ref>This is always desirable, particularly when updating over untrusted exit relays.</ref>
* The security of minimal distributions is premised on reducing the potential attack surface and not much else. {{project name}} also has a small attack surface, due to only installing a few select applications and not having any network listening services by default. However, on the upside a full distribution supports MAC, kernel patches, IDS and much more.
* Large, established projects have many users and developers - the many eyeballs on the code implies greater trustworthiness.
* Debian has a significant number of [https://wiki.debian.org/Security/Features security features] that are unavailable in smaller distributions.
* For further reading on this topic, see [[Dev/Operating_System|Operating System]].

==== Maintenance and Usability Concerns ====

Since {{project name}} is based on Debian, it is a complete, anonymity-oriented, general purpose operating system. This greatly improves [[Design|usability]] in comparison to minimal systems which lack a host of [[Features|features]]. 

There are several other benefits of relying on Debian, rather than a minimal distribution:

* A wider range of use cases is supported, such as hosting onion services. In contrast, small distributions usually have limited repositories.
* Debian has comprehensive documentation about topics like security and hardening, unlike many small distributions.
* Creating a slim system increases the maintenance burden, because it is difficult and requires significant development time. This is not and should not be the primary focus of the {{project name}} team. 
* Minimal projects do not usually focus on anonymity, privacy and security-related matters; the core competence of the {{project name}} project.
* Attempts to slim down systems inevitably results in numerous "strange bugs". Users who are familiar with Debian or Ubuntu would then question why {{project name}} is broken or lacks full functionality.

It should be noted that by increasing usability, {{project name}} actually improves security over time. This stems from a larger user pool, a more prominent profile in the press, increased development activity and additional security audits and research. On the contrary, a slimmed down system would only attract specialists or experts. <ref>This does not mean {{project name}} cannot be significantly hardened, customized or reduced in size by those with specialist knowledge.</ref> 

An interesting analogy is [https://www.mixminion.net/ Mixminion], which was once touted as an alternative to Tor. <ref>Consider this interesting statement from Tor developer Roger Dingledine: [http://www.mail-archive.com/liberationtech@lists.stanford.edu/msg00022.html Mixminion vs Tor].</ref> Due to Mixminion being a high latency remailer, with cover traffic and protection against traffic confirmation (end-to-end correlation attacks), it should ''theoretically'' have been more secure than Tor. The only problem was that Mixminion did not attract a critical mass of users. Without a sizable population to help disguise traffic, the putative anonymity benefits were seriously degraded - making it no more or less (in)secure than Tor. <ref>This is also the reason development was discontinued.</ref>

== Debian ==
=== General ===
{{project_name}} is based on Debian.

Reasons for being based on Debian:

* stable distribution
* exists for years
* will likely still be around in 10 years
* attempts to sow dissent failed <ref>Debian is Free. Imagine how much money that must cost proprietary competiors from whom not all of them necessarily play by the law.</ref>
* massive architecture support <ref>Not just i386, amd64 and perhaps arm. Should any platform become "evil", Debian as the universal operating system offers options and is most likely to port to new platforms.</ref>
* secure package manager
* As per {{Code2|[http://www.trapkit.de/tools/checksec.html checksec.sh] --kernel}}, reports good kernel protection: GCC stack protector support, enforce read-only kernel data, restrict /dev/mem and /dev/kmem access are all enabled.
* http://snapshot.debian.org, hosted and signed by a trusted third party (Debian) <ref>From perspective of {{project_name}}.</ref>, allows implementation of robust build scripts <ref>Build script won't break due to upstream repository changes.</ref> and [[Verifiable_Builds|Verifiable Builds]]
* [https://packages.debian.org/jessie/config-package-dev config-package-dev] allows creation of robust configuration packages
* [https://packages.debian.org/jessie/grml-debootstrap grml-debootstrap] is a tool that allows creation of bootable raw images
* Debian is working on [https://wiki.debian.org/ReproducibleBuilds ReproducibleBuilds]
* huge knowledgeable community of Debian and their derivative users (stackexchange, debian forums, askubuntu and many more)
* Debian Developers are very approachable at conferences
* Tor has ties to Debian.
* [[#Switch_from_Ubuntu_to_Debian|No legal/trademark issues.]]

Related statements from the FAQ reasoning why Debian is the base for {{project name}} Example Implementation:

* [[FAQ#Why_are_the_{{project_name}}_images_so_big.3F|Why are the {{project name}} images so big?]]
* [[FAQ#Why_not_Use_a_Live_CD.2FDVD_as_the_{{workstation_product_name}}_operating_system.3F|Why not use a Live CDs as {{workstation_product_name}} operating system?]]
* [[FAQ#Why_is_KDE_.28big.29_the_default_desktop_environment.3F_Why_not_use_a_minimal_DE.3F|Why is KDE (big) the default desktop environment? Why not use a minimal DE?]]
* [[FAQ#Why_aren.27t_you_using_OpenBSD.2C_it.27s_the_most_secure_OS_ever.21.21.211.21|Why aren't you using OpenBSD, it is the most secure OS ever!!!1!]]

General explanation, why so many distributions are based on Debian:

* [http://upsilon.cc/~zack/blog/posts/2011/09/why_there_are_so_many_debian_derivatives/ why there are so many debian derivatives]

Also interesting:

* [http://lists.debian.org/debian-security/2013/10/msg00065.html Debian APT Key Revocation Procedure]
* [http://lists.debian.org/debian-security/2013/11/msg00019.html How (un)safe would Debian be when only using the security.debian.org repository?]

Related:

* [http://wiki.debian.org/Derivatives/Census/{{project_name_short}} Derivatives Census {{project_name}}]
* [[Dev/Relationship With Upstream]]

{{Anchor|Why is {{project name}} 8 based on Debian Stable, not Debian Testing?}}

=== Debian Security ===
Debian isn't (a | the most) security-focused Linux distribution. Under some threat models, Debian is judged insecure. Issues with Debian then would have to be considered deeper than technical, i.e. architectural, organizational, ideological issues. To put it another way (a lot | many | most) (?) Debian Developers don't prioritize security over everything else readily compromising other things such as package availability, features, usability, etc. That shouldn't come to a surprise. Debian slogan is "the universal operating system". Not "attempting to be the most secure operating system" and therefore Debian didn't attract that mindset. Debian consists of mostly volunteers that need to attend to day jobs which might arguably not be the best for security either.

=== Why is {{project name}} based on Debian Stable, not Debian Testing? ===
* Sometimes severe bugs are introduced in Debian testing, such as the AppArmor [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=732578 bug], which prevented Tor from starting for everyone until a workaround was applied.
* Sometimes bugs are introduced which break {{project name}} build script, such as [http://ml.grml.org/pipermail/grml/2014-January/011546.html this] bug related to mount, which breaks grml-debootstrap and therefore {{project name}} build script or [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734794 this] kpartx bug.
* Often other disturbing bugs are introduced, such as the grub bug (not able to reproduce and report upstream yet), non-functional VirtualBox Guest Additions or [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=728399 issues] with shared folders.
* Sometimes packages get entirely removed from Debian testing, such as enigmail wasn't available for a while in Debian testing. This is confusing and constantly creating support requests.
* Too often, too many packages are upgraded (not just security fixes) (costs lots of time to keep up, bandwidth, system load).
* Quote, [https://www.debian.org/security/faq.html#testing Debian Security FAQ]:
<blockquote>
If you want to have a secure (and stable) server you are strongly encouraged to stay with stable.
</blockquote>
* Debian stable receives security fixes faster than Debian testing. For example, by 12/15/2016 Debian jessie was Debian stable and Debian stretch was Debian testing. [https://lists.debian.org/debian-security-announce/2016/msg00316.html CVE-2016-1252] was fixed in Debian stable but not in Debian testing, see [http://www.webcitation.org/6mmY2AWVF Debian security tracker by 12/15/2016].

=== Popularity Contest ===
The Debian ''popularity-contest'' (popcon) package does not get installed on {{project_name}}. Installing it gets prevented by the [https://github.com/{{project_name_short}}/anon-meta-packages/blob/master/debian/control#L324 anon-banned-packages] package.

[http://popcon.debian.org/README popcon readme] | [http://popcon.debian.org/FAQ popcon faq] | [http://bugs.debian.org/cgi-bin/pkgreport.cgi?pkg=popularity-contest popcon bugs] | [http://lists.alioth.debian.org/cgi-bin/mailman/listinfo/popcon-developers popularity contest mailing list] | [http://lists.alioth.debian.org/pipermail/popcon-developers/2012-October/002172.html popularity contest mailing list: Drop atime and ctime for privacy reasons possible?]

Some privacy considerations and reasons why it is not installed:

* The connection would obviously need to go over its own Tor circuit (stream isolation). At the moment popcon tries to go through http and if it fails (no internet connectivity) it goes into the mail queue. (sendmail) Sendmail probably works though TransPort, but we don't know if it can be torified for proper stream isolation.
* (From the popcon readme) "''Each popularity-contest host is identified by a random 128bit uuid (MY_HOSTID in /etc/popularity-contest.conf).''" - This would allow to enumerate a quite good guess about the amount number of {{project name}} users. We are not sure if sourceforge could already have an insight about that (due to {{project name}} News File downloads, see whonixcheck) or about any other negative implications.
* MY_HOSTID would probably get created at {{project name}} build time and all {{project name}} users would have the same MY_HOSTID, which would make it useless. A new MY_HOSTID would have to be created at first boot of {{project_name}}.
* Popcon runs at a random day. Good.
* If the machine is powered on: it runs at 6:47, which is bad, because a local adversary (ISP or hotspot) could guess popcon runs over Tor which would likely be a {{project name}} user.
* If the machine is powered off at 6:47, it sends the report later, only if anachron is installed. It shouldn't run instantly after powering on, also for fingerprinting reasons. The time would have to be truly randomized.
* <s>The transmission is not encrypted, see [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=480860 popularity-contest should encrypt contents] and it is not planned to encrypt it. Malicious Tor exit relays could modify the transmission, but this is only a minor issue. Such malicious Tor exit relays could send fake transmissions on their own.</s>
* It is questionable if and if yes, how long Debian will accept popularity contest transmissions from Tor exit relays. There is potential for electoral fraud.

For these reasons it is not a good idea to add popcon to {{project_name}}. If you have suggestions or a different view, please get in contact.

== Criteria for Choosing a Base Distribution ==
Please add a comparison table.

* Init system.
* musl vs glibc
* hardened malloc
* monolithic kernel vs microkernel
* linux-hardened
* Compile time hardening flags.
* Clang CFI
* rolling release vs stable release
* VirtualBox available
* KVM available
* EFI booting available
* SecureBoot supported (for usability / hardware compatibility, not necessarily as a security feature)
* Tor available
* [[vanguards]] available
* onionbalance 
* LibreSSL available
* Wayland available
* services enabled by default or not <ref>
https://forums.whonix.org/t/disable-newly-all-installed-services-by-default/9381
</ref>
* List non-exhaustive. What else?

{| class="wikitable" style="background-color: #fff;text-align: center; .Systemd: red;"

! 
! Debian Linux
! Devuan Linux (based on Debian)
! Void Linux

|-
! Non-systemd Init
| {{No}}
| {{Yes}}
| {{Yes}}

|-
! Musl Libc
| {{No}}
| {{No}}
| {{Yes}}

|-
! Hardened Memory Allocator
| {{No}}
| {{No}}
| {{No}}

|-
! Hardened Kernel
| {{No}}
| {{No}}
| {{No}}

|-
! Microkernel
| {{No}}
| {{No}}
| {{No}}

|-
! Clang CFI
| {{No}}
| {{No}}
| {{No}}

|-
! Rolling Release
| {{No}}
| {{No}}
| {{Yes}}

|-
! Virtualbox Available
| {{Yes}}
| {{Yes}}
| {{Yes}}

|-
! KVM Available
| {{Yes}}
| {{Yes}}
| {{Yes}}

|-
! EFI Booting Available
| {{Yes}}
| {{Yes}}
| {{Yes}}

|-
! LibreSSL
| {{No}}
| {{No}}
| {{Yes}}

|-
! Wayland Available
| {{Yes}}
| {{Yes}}
| {{Yes}}

|}

== ToDo List for Porting to another Base Distribution ==
Depending on base distribution:

* make deprecation of Debian base clear to all Whonix users
* porting deb packages to another package format
* rewrite systemd unit files for another init system, possibly including using Bubblewrap to sandbox these
* List non-exhaustive. What else?

== Comparison of Hardening Compile Flags ==

Debian jessie:

<pre style="white-space: pre-wrap; 
white-space: -moz-pre-wrap; 
white-space: -pre-wrap; 
white-space: -o-pre-wrap; 
word-wrap: break-word;">
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/curl

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /usr/bin/gpg

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/gpg2

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /bin/sed

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /bin/grep

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/tor

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /bin/bash

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /usr/bin/gwenview

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
No RELRO        Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/lib/iceweasel/iceweasel

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /usr/lib/icedove/icedove
</pre>

Securix (a derivative of Hardened Gentoo):

<pre style="white-space: pre-wrap; 
white-space: -moz-pre-wrap; 
white-space: -pre-wrap; 
white-space: -o-pre-wrap; 
word-wrap: break-word;">
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/curl

Error: Not an ELF file: /usr/bin/gpg: symbolic link to gpg2

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/gpg2

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /bin/sed

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /bin/grep

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/tor

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /bin/bash

TODO
  /usr/bin/gwenview

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/lib64/firefox/firefox

RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/lib64/thunderbird/thunderbird
</pre>

= See Also =
* [[Deprecated/grsecurity|About grsecurity]]
* [[Operating System Hardening]]
* [[Dev/Default_Application_Policy|{{project name}} Default Application Policy]]
* See also [[Linux User Experience versus Commercial Operating Systems]] to learn about organizational issues in the Open Source ecosystem.

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Design]]
