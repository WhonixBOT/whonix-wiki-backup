{{Header}}
{{#seo:
|description=Development Notes for adding KVM support to Whonix.
}}

= Links =
* <s>[[Special:AWCforum/st/id306/]]</s>
* [[KVM|KVM instructions work in progress]]
* [https://github.com/Whonix/Whonix/issues/121 KVM Support github ticket]

= Blockers =
== Instructions include how to set clock to UTC? ==
As per http://libvirt.org/formatdomain.html#elementsTime

The '''clock''' setting.

Quote:
<blockquote>
The offset attribute takes four possible values, allowing fine grained control over how the guest clock is synchronized to the host. NB, not all hypervisors support all modes.
</blockquote>

How to check, that it is set to '''utc'''?

== How to use -rtc clock=vm ? ==
KVM's '''-rtc''' option as per https://doc.opensuse.org/products/draft/SLES/SLES-kvm_sd_draft/cha.qemu.running.html#cha.qemu.running.gen_opts.rtc

This is the original qemu patchset that implements clock=vm in the timer back-ends: https://www.redhat.com/archives/libvir-list/2010-March/msg01293.html 

<blockquote>
If you need to isolate the VM Guest clock from the host one, specify clock=vm instead of the default clock=host. 
</blockquote>

How to use '''-rtc clock=vm''' ?

How to check, that KVM '''-rtc''' is set to '''clock=vm''' ?

== Weaker warning against KVM in whonixcheck ==
As soon as all blockers have been sorted out. We could recommend using [[KVM]] instructions.

= Non-Blockers =
== Document: how to leave KVM when no X is running? ==
Situation... User is in terminal in a VM... No X is running ("sudo service kdn stop"). User wants to switch back to the host... How to do this?

== SPICE security implications ==
http://lists.freedesktop.org/archives/spice-devel/2013-December/015810.html

http://lists.freedesktop.org/archives/spice-devel/2014-January/015815.html

== Enable virtio by default? ==
Probably yes?

https://wiki.debian.org/DebianKVMGuests

== Do KVM instructions need changes to activate virtio? ==
Probably needs to be scripted in the build process for the KVM version in particular. The corresponding setting for it should be included outside in the xml file too.

== How to get virtio running for storage? ==

Virtio-blk now works

Here are the steps, which I'll throw altogether here before the server downtime. Will move into the wiki later:

http://www.linux-kvm.org/page/Boot_from_virtio_block_device        < Original steps that needed to be changed so it can apply to Debian.

Quote

    in guest os, change /boot/grub/device.map from "(hd0) /dev/sda" to "(hd0) /dev/vda"
    in guest os, change /boot/grub/grub.cfg from "root=/dev/sda1" to "root=/dev/vda1", if you are using UUID, then no need to do this step. 


I changed all mention of sda1 to vda1 in the grub file. I changed the disk controller type from virtmanager to virtio which takes care of this at the libvirt xml level. Now the vm boots normally with no hangups and I feel a little faster.

 A bit of advice, that I'll add so you can decide:


Quote

    <iggy> bancfc: the better option would be using LABELs and UUIDs and such in the source image
    <iggy> unless this is a one time conversion kind of thing



Not really important but is interesting:

http://www.linux-kvm.org/page/Virtio/Block/Latency

== Boot from virtio block device? ==
What is http://www.linux-kvm.org/page/Boot_from_virtio_block_device good for? Required?

== How to check if virtio storage access is in use or an eventually existing fallback driver? ==
How to check if virtio storage access '''virtio_blk''' really is in use or an eventually existing fallback driver?

http://www.linux-kvm.org/page/Boot_from_virtio_block_device <br />
http://wiki.libvirt.org/page/Virtio

The following.

<pre>
lsmod | grep virtio
</pre>

Only shows, that the virtio kernel module is loaded. It isn't hard to load arbitrary kernel modules for hardware that you don't have installed. The question remains, is this kernel module actually in use or an eventually existing fallback driver?

== How to check if virtio network is really in use or an eventually existing fallback driver? ==
How to check, that '''virtio_pci''' is really being used and not some fallback driver?

/sys/devices/virtio-pci/0/net/eth0/statistics/rx_bytes seems not to exist on Debian Wheezy.

== How to enable AppArmor / SELinux for KVM on Debian? ==

Details on how to install, configure and enable SELinux enforcing mode:
https://wiki.debian.org/SELinux/Setup#Steps_to_setup_SELinux <-- This is a start, but incomplete. When following these instructions it gets difficult at the "audit2why -al" step, because it shows a ton of policy violations which are non-trivial to fix without learning a lot about SELinux.

== How to add a random time offset? ==
Having a small random offset (similar to [[Advanced_Security_Guide#Network_Time_Synchronization]]) would be a good thing.

== Script/automate creation of VM description files? ==
So not following manual instructions is required anymore, but copy/paste some commands end up with the correct VM configuration.

Once the necessary commands are documented, Patrick will be happy to automate the steps with a script.

== Script/automate creation and upload of raw images? ==
Because raw images have better performance than raw images? http://www.linux-kvm.org/page/Qcow2

True that performance is better, but I don't think it supports snapshots AFAIK.
For something that supports snapshots and good performance lets stick with qcow2.

== Set cluster_size 512 - 2MB for better performance? ==
HulaHoop1 wrote: The qcow2 defaults seem fine to me, however the one parameter of interest we should play with is image's : 'cluster_size' 512 - 2MB the larger the size the better performance but the size is bigger. I think we should try the largest and see if the image size stays reasonable.

Patrick wrote:

When using (Whonix 7.7.8.0):
      qemu-img \
         convert \
            -p \
            -O qcow2 \
            -o preallocation=metadata \
            "$WHONIX_BINARY/$VMNAME.img" \
            "$WHONIX_BINARY/$VMNAME-$whonix_build_whonix_version_new.qcow2"

du -h --apparent-size file.img <br />
100 GB

du -h file.img <br />
2,5 GB

When using (Whonix 7.7.8.0):
      qemu-img \
         convert \
            -p \
            -O qcow2 \
            -o cluster_size=2M \
            -o preallocation=metadata \
            "$WHONIX_BINARY/$VMNAME.img" \
            "$WHONIX_BINARY/$VMNAME-$whonix_build_whonix_version_new.qcow2"

du -h --apparent-size file.img <br />
2,9 GB

du -h file.img <br />
2,9 GB

File size grew a bit. Not too much. We could use this.

It remains to be tested, if the images work well using these settings. (The apparent size should be shown as 100 GB, but is only 2,9 GB. Needs testing if 100 GB can be used after the image is in use.)

"qemu-img info file.img" however, shows 2,9 GB actual size and 100 GB virtual size.

git tag 7.8.0.1 and above will be using the "-o cluster_size=2M" option.


I am yet to document this in the KVM page lets do this at the end. Is there any tangible speed gains?

== Qemu Support ==
To change existing kvm guest to use plain qemu: as per not available in virt-manager. do 'sudo virsh edit $vmname' and change <domain type='kvm'> to <domain type='qemu'> (source: #virt channel on irc.oftc.net).

== Shared Folder ==
We should add instructions on how to use shared folders.
http://www.linux-kvm.org/page/9p_virtio

== Run virt-xml-validate during build process ==
We should use.
<pre>
virt-xml-validate libvirt.xml
</pre>

Patrick will be happy to add this command to the build process when using --kvm (or --qemu?) switch. Scripting this should be simple and the build process could fail early and closed (break).

= Answered Questions =
== Leak Tests? ==
[[HulaHoop1]] sorted that out in [[Special:AWCforum/st/id306/]].

== Hardware serials? ==
[[HulaHoop1]] sorted that out in [[Special:AWCforum/st/id306/]].

==How to Edit in nano with virsh?==
su
# EDITOR=nano virsh edit ''GuestMachineName''

== whonixcheck KVMClock ==
Whonixcheck should check if /sys/devices/system/clocksource/clocksource0/current_clocksource is kvm-clock and warn if it does.

Implemented: https://github.com/Whonix/Whonix/commit/2584c3bdcd9a98181c7535f963a615d257e0fefd

== Is it possible to add 64, 128 or even more MB to the virtual graphics card using the command line to boost graphics performance? ==

Yes. Can be realised by virsh command as per the steps in here:
http://serverfault.com/questions/346301/how-to-increase-video-memory-in-libvirt-kvm-gui

== KVM Instructions recommend to use a no cache policy? ==
As per [http://www.ilsistemista.net/index.php/virtualization/11-kvm-io-slowness-on-rhel-6.html?start=7 blog post] it is recommended to use a no cache policy. Do our KVM instructions need changes to incorporate this?

Yes if its recommended then lets do this, Its easily done through the GUI by going to: disk -> Cache policy: set to none

== Script/automate creation and upload of qcow2 images? ==
Done.

== Verifiable Builds for qcow2 images==
The https://github.com/Whonix/Whonix/blob/master/help-steps/analyze_image requires supports raw, vdi, vmdk, qcow and qcow2 images as well as .ova appliances.

== metadata preallocated images ==
For better performance. (As per [http://www.ilsistemista.net/index.php/virtualization/11-kvm-io-slowness-on-rhel-6.html blog post].) Done in 7.7.8.0.

== qcow2 compression ==
When uncompressed, upload would take ~250 hours per image. Now compressing.

== How to disable KVMClock? ==
How to adjust KVM to have clock=vm on host.

See http://www.linux-kvm.org/page/KVMClock

http://libvirt.org/formatdomain.html#elementsTime

https://www.redhat.com/archives/libvir-list/2010-March/msg01293.html

https://doc.opensuse.org/products/draft/SLES/SLES-kvm_sd_draft/cha.qemu.running.html#cha.qemu.running.gen_opts.rtc

ls /sys/devices/system/clocksource/clocksource0/current_clocksource

To ensure that you have successfully isolated the vm clock form the host's you must run this in the vm:

sudo chmod -x /etc/init.d/sdwdate

You should verify that kvmclock is indeed disabled by running this command as root:
cat /sys/devices/system/clocksource/clocksource0/current_clocksource

Make sure kvmclock is not listed as a response any longer.

Documented for reference but is irrelevant as of now since this problem is solved.


https://bugzilla.redhat.com/show_bug.cgi?id=783921#c6 < This link provides the solution to disabling kvmclock and verifying that it's so.

whonixcheck (since Whonix 8) would tell you if kvmclock is enabled. whonixcheck --verbose will tell you, that it isn't enabled.

= Archived Discussions =
* [https://www.whonix.org/forum/index.php/topic,202.0/topicseen.html qcow2 with metadata preallocation file sizes]

= Archived IRC Logs =
<pre>
* Now talking on #kvm
* Topic for #kvm is: KVM wiki website is http://www.linux-kvm.org - try status and faq pages, no really, read them! || you can also check the qemu manual at http://wiki.qemu.org/download/qemu-doc.html || don't paste on chan, use http://pastebin.com/ instead || libvirt/virt-manager support is #virt on irc.oftc.net
* Topic for #kvm set by aliguori at Wed Mar 30 13:38:24 2011
<bancfc> Hi How do I check if virtio storage is in use or an existing fallback driver for an emulated device?
<iggy> there's no fallback in kvm like in xen
<bancfc> so a simple grep should verify if a virtio device is used then - not merely attached I mean?
<iggy> well... if you really want to check, it's going to be /dev/vdX
<iggy> and lspci will show virtio block device
<bancfc> Thanks iggy I have a few more questions that I'd really appreciate your help with
<iggy> ask away
<bancfc> I am trying to isolate the vm clock so no changes on the host can affect it. This is currently possible with -rtc clock=vm afaik,
<bancfc> but it would be much more helpful for my project's purpose if this can be done through something like libvirt
<bancfc> is this possible with libvirt?
<iggy> that I don't know
<bancfc> the appealing part of using libvirt is the xml settings file it creates, but I think something similar can be done with qemu-kvm cfgfiles option
* iggy hates xml
<bancfc> But that means all settings would have to be imitated but directly for the qemu-kvm utility which is fine if I can get it to do the same things
<bancfc> namely the functionality of isoalted internal networking between two vms
<bancfc> is that possible with qemu-kvm directly?
<iggy> libvirt has an option to pass options directly to qemu-kvm
<bancfc> please tell me how this is done :-)
<bancfc> or where I can know this.
<bancfc> ok nevermind, I just want to know if this means that a setting in the xml file is passed directly to qemu-kvm then?
<iggy> ... You might try asking in the libvirt channel
<bancfc> I did but no one seems to reply...
<iggy> I know it's possible, I don't remember it off the top of my head
<bancfc> Thank you so far for your replies. I am actually working on a project that uses virtualization to route all of a vm's traffic through a TOR instance running on another network facing gateway vm.
<bancfc> Its known as Whonix
<bancfc> Just letting you know that I'd appreciate any help on getting the main issues with porting it to KVM solved
<bancfc> so we can prepare this for a greater good.
<bancfc> This is the bugtracker page I am working on resolving: https://www.whonix.org/wiki/Dev/KVM#How_to_get_virtio_running_for_storage.3F
<bancfc> iggy do you mind if I post the contents of this thread on our forum?
<iggy> no...
</pre>

<pre>
<ancfc> Is there any security drawbacks from using a raw image file?
<iggy> bancfc: security drawbacks? like what?
<bancfc> iggy: are its contents directly interpreted by the host or is that when lvm is used only?
<iggy> I'm not sure what you mean by "contents directly interpreted", but raw devices/files just means there's a 1:1 correlation between guest request and host request
<bancfc> like a virus or advanced persistent threat running in the vm
<iggy> the host doesn't "interpret" what it's reading/writing... it just becomes a read/write in the host
<bancfc> ok good just checking. iAnother question is raw snapshotting possible albeit not directly?
<bancfc> I saw something about a differencing image applied in qcow format, yes?
<iggy> only if there's something underlying the files that supports it (btrfs, lvm, zfs, etc)
<bancfc> so not at the "block" level I guess?
<bancfc> iggy: just a question or two about storage if thats ok, becuase we are trying to see which can give maximum performance
<iggy> lvm > raw files > qcow2 > everything else
<bancfc> Is qcow2 the standard? Is qed recommended instead? When is the qcow"3" changes included into the present format?
<bancfc> didn't mean to send this as you had already responded
<bancfc> but anyhow qed seems to have been designed as a speedier replacement for qcow2. But qcow2 were adding changes to become more competitive again
<bancfc> I wanted to know what you think about this and thats all. thanks
<iggy> bancfc: qed is deprecated (as all of it's performance improvements that actually ended up helping were backported to qcow2)
<iggy> the features are handled by feature flags in the qcow2 format, so there's technically no need for a "qcow3" format
<iggy> as long as you don't use the features that qed didn't support (i.e. snapshots, etc.), qcow2 should be as fast
<bancfc> iggy: thanks alot for your help
<iggy> np
</pre>

= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
