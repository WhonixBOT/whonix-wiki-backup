{{Header}}
{{#seo:
|description=Development Notes for adding KVM support to Whonix.
}}

= Links =
* <s>[[Special:AWCforum/st/id306/]]</s>
* [[KVM|KVM instructions work in progress]]
* [https://github.com/Whonix/Whonix/issues/121 KVM Support github ticket]

= Blockers =
== xml does not validate ==
<pre>
virt-xml-validate whonix_gateway.xml
Relax-NG validity error : Extra element clock in interleave
whonix_gateway.xml:15: element clock: Relax-NG validity error : Element domain failed to validate content
whonix_gateway.xml fails to validate
</pre>

<pre>
virt-xml-validate whonix_workstation.xml 
Relax-NG validity error : Extra element clock in interleave
whonix_workstation.xml:15: element clock: Relax-NG validity error : Element domain failed to validate content
whonix_workstation.xml fails to validate
</pre>

<pre>
virt-xml-validate whonix_network.xml 
whonix_network.xml:1: element network: Relax-NG validity error : Invalid attribute connections for element network
whonix_network.xml fails to validate
</pre>

== What is timer pit? ==
What is timer pit?

We are using.
<pre>
    <timer name='kvmclock' present='no'/>
    <timer name='hpet' present='no'/>
</pre>

But why are we using?
<pre>
    <timer name='pit' tickpolicy='no'/>
</pre>

Why are we not using?
<pre>
    <timer name='pit' present='no'/>
</pre>

== Fix subnet range in KVM instructions ==
As found out by zweeble in https://www.whonix.org/forum/index.php/topic,328.0.html, subnet range must be adjusted to make KVM work.

HulaHoop: I think until we can be sure that this is a problem it shouldn't be considered a blocker

= Non-Blockers =
== virt-image ==
=== Users Expected Scenario ===
<font size=-3>[https://fedoraproject.org/wiki/Features/ApplianceTools#Users_Expected_Scenario source]</font>

<pre>
sudo apt-get install virt-manager
</pre>

Extract Whonix-Gateway-8.3.qcow2.xz.

Import.

<pre>
virt-image Whonix-Gateway-8.3.xml
</pre>

Start Whonix-Gateway in virt-manager.

=== xml creation ===
How can we create an xml file, that can be imported using virt-image?

Possible help: <br />
https://fedoraproject.org/wiki/Features/ApplianceTools#Release_Engineering

Maybe we need to learn from their fedora-aos.xml to structure whonix xml.

== Exporting/Cloning of virtual machines ==

Important links:

http://libvirt.org/sources/virshcmdref/html-single/

https://unix.stackexchange.com/questions/8351/how-to-create-a-dupe-of-a-kvm-libvirt-virt-manager-vm

Archived thread SE

<pre>

I'm a bit lost with virt-manager / libvirt / KVM.

I've got a working KVM VM (Windows XP) which works nicely.

The VM is backed by a 4GB file or so (a .img).

Now I want to do something very simple: I want to duplicate my VM.

I thought "OK, no problem, let's copy the 4GB file and copy the XML" file.

But then the libvirt FAQ states in all uppercase: "you SHOULD NOT CARE WHERE THE XML IS STORED"

http://wiki.libvirt.org/page/FAQ

OK fine, I shouldn't care. But then how do I duplicate my VM?

I want to create a new VM that is a copy of that VM.
</pre>

<pre>

The most convenient is simply:

# virt-clone --connect=qemu://example.com/system -o this-vm -n that-vm --auto-clone

Which will make a copy of this-vm, named that-vm, and takes care of duplicating storage devices. Nothing new here except detail.

More to the point, What the FAQ is saying is that the XML domain descriptions are not directly editable, you need to go through libvirt. To complete the steps taken by the virt-clone command, you could:

# You cannot "clone" a running vm, stop it.  suspend and destroy
# are also valid options for less graceful cloning
virsh shutdown this.vm

# copy the storage.
cp /var/lib/libvirt/images/{this-vm,that-vm}.img

# dump the xml for the original
virsh dumpxml this-vm > /tmp/that-vm.xml

# hardware addresses need to be removed, libvirt will assign
# new addresses automatically
sed -i /uuid/d /tmp/that-vm.xml
sed -i '/mac address/d' /tmp/that-vm.xml

# and actually rename the vm: (this also updates the storage path)
sed -i s/this-vm/that-vm /tmp/that-vm.xml

# finally, create the new vm
virsh define /tmp/that-vm.xml
virsh start this-vm
virsh start that-vm

</pre>

<pre># dump the xml for the virtual isolated network
virsh net-dumpxml whonix > /tmp/whonix.xml

# hardware addresses need to be removed, libvirt will assign
# new addresses automatically
sed -i /uuid/d /tmp/whonix.xml
sed -i '/mac address/d' /whonix.xml
</pre>

http://linux.die.net/man/1/virt-clone

== Document: how to leave KVM when no X is running? ==
Situation... User is in terminal in a VM... No X is running ("sudo service kdm stop"). User wants to switch back to the host... How to do this?

== SPICE security implications ==
http://lists.freedesktop.org/archives/spice-devel/2013-December/015810.html

http://lists.freedesktop.org/archives/spice-devel/2014-January/015815.html

== Enable virtio by default? ==
Probably yes?

https://wiki.debian.org/DebianKVMGuests

== Do KVM instructions need changes to activate virtio? ==
Probably needs to be scripted in the build process for the KVM version in particular. The corresponding setting for it should be included outside in the xml file too.

== How to get virtio running for storage? ==
=== Blocked by ===
Before [[Dev/KVM#How_to_check_if_virtio_storage_access_is_in_use_or_an_eventually_existing_fallback_driver.3F|How to check if virtio storage access is in use or an eventually existing fallback driver?]] is not answered, working on this makes little sense.

=== Initial Instructions ===
Virtio-blk now works

Here are the steps, which I'll throw altogether here before the server downtime. Will move into the wiki later:

http://www.linux-kvm.org/page/Boot_from_virtio_block_device        < Original steps that needed to be changed so it can apply to Debian.

Quote

    in guest os, change /boot/grub/device.map from "(hd0) /dev/sda" to "(hd0) /dev/vda"
    in guest os, change /boot/grub/grub.cfg from "root=/dev/sda1" to "root=/dev/vda1", if you are using UUID, then no need to do this step. 


I changed all mention of sda1 to vda1 in the grub file. I changed the disk controller type from virtmanager to virtio which takes care of this at the libvirt xml level. Now the vm boots normally with no hangups and I feel a little faster.

 A bit of advice, that I'll add so you can decide:


Quote

    <iggy> bancfc: the better option would be using LABELs and UUIDs and such in the source image
    <iggy> unless this is a one time conversion kind of thing

=== Using LABELs ===
Patrick asks: How to use LABELs?

=== /boot/grub/grub.cfg issue ===
Patrick comments: I think /boot/grub/grub.cfg is a unstable solution. That file says on top.

<pre>
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
</pre>

So when there is a kernel upgrade, /boot/grub/grub.cfg will be regenerated and the changes will be lost.

Patrick asks: How do we apply these settings in a way, so they do survive an "sudo update-grub" (which is automatically run on every kernel upgrade).

=== System gets unbootable? ===
Patrick comments: After editing /boot/grub/grub.cfg, in worst case, maybe, the system will be no longer bootable then. You can test/simulate this case by running "sudo update-grub". Please try.

HulaHoop comments: I found a solution, one that survives kernel and grub upgrades: http://grumpymole.blogspot.nl/2007/05/ubuntu-how-to-edit-grub-boot-parameters.html

<pre>2.2 Making a change survive upgrades

Depending on how frequently you upgrade your system, you might find that when a new kernel is installed, or grub is upgraded (there may be other scenarios), the /boot/grub/menu.lst file may be replaced by a newer version, or a new line might be added for the new kernel. In this case, your "permanent" changes might be as permanent as you thought.

The best way to address this is to change the "#kopt..." line in /boot/grub/menu.lst. Note that the line is not commented out, even though it starts with a "#". See the excerpt below.

    ### BEGIN AUTOMAGIC KERNELS LIST
    ## lines between the AUTOMAGIC KERNELS LIST markers will be modified
    ## by the debian update-grub script except for the default options below

    ## DO NOT UNCOMMENT THEM, Just edit them to your needs

    ## ## Start Default Options ##
    ## default kernel options
    ## default kernel options for automagic boot options
    ## If you want special options for specific kernels use kopt_x_y_z
    ## where x.y.z is kernel version. Minor versions can be omitted.
    ## e.g. kopt=root=/dev/hda1 ro
    ## kopt_2_6_8=root=/dev/hdc1 ro
    ## kopt_2_6_8_2_686=root=/dev/hdc2 ro
    # kopt=root=UUID=fccafcc7-d7cc-4594-9459-a8f0db7b9f7f ro

Add the parameter changes to the end of the line "#kopt...". These parameters will then be automatically added to any new kernel entries and should also survive an upgrade of grub</pre>

Patrick comments: Have you tested this?

Patrick comments: I am not sure editing /boot/grub/grub.cfg is a robust solution. We cannot directly ship a /boot/grub/grub.cfg in a deb, because it is an auto generated file by grub-mkconfig. (When that deb was updated, /boot/grub/grub.cfg would be outdated, system unbootable, you know?) Maybe a package could be created, that appends /boot/grub/grub.cfg, but still, any solution not touching /boot/grub/grub.cfg should be preferred. If we could edit/extend /etc/default/grub, /etc/default/grub.d or /etc/grub.d, that would be much more robust. What is the official suggestion by kvm devs to solve this as a distro?

=== Virtio Block Latency ===
Not really important but is interesting: <br />
http://www.linux-kvm.org/page/Virtio/Block/Latency

HulaHoop: Yes it could have been the situation that there is latency as the data shows, but I'm sure this was improved by now.

== Boot from virtio block device? ==
What is http://www.linux-kvm.org/page/Boot_from_virtio_block_device good for? Required?

== How to check if virtio storage access is in use or an eventually existing fallback driver? ==
How to check if virtio storage access '''virtio_blk''' really is in use or an eventually existing fallback driver?

http://www.linux-kvm.org/page/Boot_from_virtio_block_device <br />
http://wiki.libvirt.org/page/Virtio

The following.

<pre>
lsmod | grep virtio
</pre>

Only shows, that the virtio kernel module is loaded. It isn't hard to load arbitrary kernel modules for hardware that you don't have installed. The question remains, is this kernel module actually in use or an eventually existing fallback driver?

== How to check if virtio network is really in use or an eventually existing fallback driver? ==
How to check, that '''virtio_pci''' is really being used and not some fallback driver?

/sys/devices/virtio-pci/0/net/eth0/statistics/rx_bytes seems not to exist on Debian Wheezy.

== How to enable AppArmor / SELinux for KVM on Debian? ==

Details on how to install, configure and enable SELinux enforcing mode:
https://wiki.debian.org/SELinux/Setup#Steps_to_setup_SELinux <-- This is a start, but incomplete. When following these instructions it gets difficult at the "audit2why -al" step, because it shows a ton of policy violations which are non-trivial to fix without learning a lot about SELinux.

For Debian hosts, AppArmor makes more sense.

http://libvirt.org/drvqemu.html#securitysvirtaa

AppArmor profiles for Ubuntu could be ported to Debian:
http://bazaar.launchpad.net/~ubuntu-branches/ubuntu/utopic/libvirt/utopic/files/head:/debian/apparmor/

== How to add a random time offset? ==
Having a small random offset (similar to [[Advanced_Security_Guide#Network_Time_Synchronization]]) would be a good thing.

== Script/automate creation of VM description files? ==
So not following manual instructions is required anymore, but copy/paste some commands end up with the correct VM configuration.

Once the necessary commands are documented, Patrick will be happy to automate the steps with a script.

== Script/automate creation and upload of raw images? ==
Because raw images have better performance than raw images? http://www.linux-kvm.org/page/Qcow2

True that performance is better, but I don't think it supports snapshots AFAIK.
For something that supports snapshots and good performance lets stick with qcow2.

== Set cluster_size 512 - 2MB for better performance? ==
HulaHoop1 wrote: The qcow2 defaults seem fine to me, however the one parameter of interest we should play with is image's : 'cluster_size' 512 - 2MB the larger the size the better performance but the size is bigger. I think we should try the largest and see if the image size stays reasonable.

Patrick wrote:

When using (Whonix 7.7.8.0):
      qemu-img \
         convert \
            -p \
            -O qcow2 \
            -o preallocation=metadata \
            "$WHONIX_BINARY/$VMNAME.img" \
            "$WHONIX_BINARY/$VMNAME-$whonix_build_whonix_version_new.qcow2"

du -h --apparent-size file.img <br />
100 GB

du -h file.img <br />
2,5 GB

When using (Whonix 7.7.8.0):
      qemu-img \
         convert \
            -p \
            -O qcow2 \
            -o cluster_size=2M \
            -o preallocation=metadata \
            "$WHONIX_BINARY/$VMNAME.img" \
            "$WHONIX_BINARY/$VMNAME-$whonix_build_whonix_version_new.qcow2"

du -h --apparent-size file.img <br />
2,9 GB

du -h file.img <br />
2,9 GB

File size grew a bit. Not too much. We could use this.

It remains to be tested, if the images work well using these settings. (The apparent size should be shown as 100 GB, but is only 2,9 GB. Needs testing if 100 GB can be used after the image is in use.)

"qemu-img info file.img" however, shows 2,9 GB actual size and 100 GB virtual size.

git tag 7.8.0.1 and above will be using the "-o cluster_size=2M" option.


I am yet to document this in the KVM page lets do this at the end. Is there any tangible speed gains?

== Qemu Support ==
To change existing kvm guest to use plain qemu, because this can not be done yet with the virt-manager GUI.

<pre>
sudo virsh edit Whonix-Gateway
</pre>

And change.

<pre>
<domain type='kvm'>
</pre>

To.

<pre>
 <domain type='qemu'>
</pre>

== Shared Folder ==
We should add instructions on how to use shared folders.
http://www.linux-kvm.org/page/9p_virtio

== Run virt-xml-validate during build process ==
We should use.
<pre>
virt-xml-validate libvirt.xml
</pre>

Patrick will be happy to add this command to the build process when using --kvm (or --qemu?) switch. Scripting this should be simple and the build process could fail early and closed (break).

== virt-v2v ==
=== How to install virt-v2v on Debian? ===
virt-v2v is not yet in Debian. [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=743261 wishlist request]

=== Can we copy and paste virt-v2v in meanwhile? ===
Since virt2v2 is not yet in Debian, maybe it is a single script that can replace the [https://github.com/Whonix/Whonix/blob/master/libvirt/whonix_libvirt_import whonix_libvirt_import] script?

HulaHoop: It is my opinion that we shelve the automated script idea completely and use virt-v2v when its possible/available. If virt-v2v does not work out, we should instead do the following: 1) ship multiple templates according to containment systems we want to support 2) A readme file with instructions on 
[a] how to copy the sparse file properly to any location a user wants if they wish
[b] how to introduce the sparse file into priviledged dirs like /var/lib..
[c] how to import xml for machines
[d] how to autostart the isolated network
[e] how to edit xml files in the case that they want to use non-default paths

The absence of an easy way to import a machine is too big of an issue. We cannot compensate for a shortcoming as big as this coming from upstream. It would take tremendous effort as we have seen and some people might not be happy that it doesn't do X. So I say we leave it as described above.

=== How to export a VM using virt-v2v? ===
This is what probably must be done in the build script. We got qcow2 files and xml. What command must be used to export a VM?

=== How to export a VM using virt-v2v? ===
This is probably what users have to do to import. What command must be used to import a VM?

== libguestfs import/export feature request ==
Let's together write a feature request for an import/export feature for libguestfs, similar to VirtualBox's import/export feature. Then post in [https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization%20Tools libguestfs's bug tracker].

== virt-manager import/export feature request ==
Let's together write a feature request for an import/export feature for virt-manager, similar to VirtualBox's import/export feature. Then post in [https://bugzilla.redhat.com/buglist.cgi?product=Virtualization%20Tools&classification=Community&component=virt-manager&bug_status=NEW&bug_status=ASSIGNED virt-manager's bug tracker].

== write generic import script ==
Maybe write generic import script as per: <br />
https://www.whonix.org/forum/index.php/topic,159.msg2412.html#msg2412

== management tools ==
There are quote some [http://www.linux-kvm.org/page/Management_Tools management tools]. Are any of these useful for Whonix's use case?

= Answered Questions =
== Weaker warning against KVM in whonixcheck ==
As soon as all blockers have been sorted out. We could recommend using [[KVM]] instructions.

Done.

== Leak Tests? ==
[[HulaHoop1]] sorted that out in [[Special:AWCforum/st/id306/]].

== Hardware serials? ==
[[HulaHoop1]] sorted that out in [[Special:AWCforum/st/id306/]].

==How to Edit in nano with virsh?==
su
# EDITOR=nano virsh edit ''GuestMachineName''

== whonixcheck KVMClock ==
Whonixcheck should check if /sys/devices/system/clocksource/clocksource0/current_clocksource is kvm-clock and warn if it does.

Implemented: https://github.com/Whonix/Whonix/commit/2584c3bdcd9a98181c7535f963a615d257e0fefd

== Is it possible to add 64, 128 or even more MB to the virtual graphics card using the command line to boost graphics performance? ==

Yes. Can be realised by virsh command as per the steps in here:
http://serverfault.com/questions/346301/how-to-increase-video-memory-in-libvirt-kvm-gui

== KVM Instructions recommend to use a no cache policy? ==
As per [http://www.ilsistemista.net/index.php/virtualization/11-kvm-io-slowness-on-rhel-6.html?start=7 blog post] it is recommended to use a no cache policy. Do our KVM instructions need changes to incorporate this?

Yes if its recommended then lets do this, Its easily done through the GUI by going to: disk -> Cache policy: set to none

== Script/automate creation and upload of qcow2 images? ==
Done.

== Verifiable Builds for qcow2 images==
The https://github.com/Whonix/Whonix/blob/master/help-steps/analyze_image requires supports raw, vdi, vmdk, qcow and qcow2 images as well as .ova appliances.

== metadata preallocated images ==
For better performance. (As per [http://www.ilsistemista.net/index.php/virtualization/11-kvm-io-slowness-on-rhel-6.html blog post].) Done in 7.7.8.0.

== qcow2 compression ==
When uncompressed, upload would take ~250 hours per image. Now compressing using tar. [Not using qcow2's compression feature.]

== How to disable KVMClock? ==

In xml file add:
<timer name='kvmclock' present='no'/>


What does KVMClock do? "kvmclock or KVM pvclock lets guests read the host’s wall clock time." This is bad. [http://rwmj.wordpress.com/2010/10/15/kvm-pvclock/ source]


How to adjust KVM to have clock=vm on host.

See http://www.linux-kvm.org/page/KVMClock

http://libvirt.org/formatdomain.html#elementsTime

https://www.redhat.com/archives/libvir-list/2010-March/msg01293.html

https://doc.opensuse.org/products/draft/SLES/SLES-kvm_sd_draft/cha.qemu.running.html#cha.qemu.running.gen_opts.rtc

ls /sys/devices/system/clocksource/clocksource0/current_clocksource

To ensure that you have successfully isolated the vm clock form the host's you must run this in the vm:

sudo chmod -x /etc/init.d/sdwdate

You should verify that kvmclock is indeed disabled by running this command as root:
cat /sys/devices/system/clocksource/clocksource0/current_clocksource

Make sure kvmclock is not listed as a response any longer.

Documented for reference but is irrelevant as of now since this problem is solved.


https://bugzilla.redhat.com/show_bug.cgi?id=783921#c6 < This link provides the solution to disabling kvmclock and verifying that it's so.

whonixcheck (since Whonix 8) would tell you if kvmclock is enabled. whonixcheck --verbose will tell you, that it isn't enabled.

== Leak ==
* [https://www.whonix.org/forum/index.php/topic,243.msg1636.html New FIN ACK / RST ACK Leak Test]
* [https://www.whonix.org/forum/index.php/topic,243.msg1636.html#msg1636 Reported by HulaHoop]
* Was a [https://www.whonix.org/forum/index.php/topic,331.msg2269.html#msg2269 false positive] due to a bug in leak testing instructions (now fixed).

== Instructions include how to set clock to UTC? ==
As per http://libvirt.org/formatdomain.html#elementsTime

The '''clock''' setting.

Quote:
<blockquote>
The offset attribute takes four possible values, allowing fine grained control over how the guest clock is synchronized to the host. NB, not all hypervisors support all modes.
</blockquote>

How to check, that it is set to '''utc'''?

It is set to utc by default. A quick look at the xml file will show: <clock offset='utc'>

== How to use -rtc clock=vm ? ==
KVM's '''-rtc''' option as per https://doc.opensuse.org/products/draft/SLES/SLES-kvm_sd_draft/cha.qemu.running.html#cha.qemu.running.gen_opts.rtc

This is the original qemu patchset that implements clock=vm in the timer back-ends: https://www.redhat.com/archives/libvir-list/2010-March/msg01293.html 

<blockquote>
If you need to isolate the VM Guest clock from the host one, specify clock=vm instead of the default clock=host. 
</blockquote>

How to use '''-rtc clock=vm''' ?

How to check, that KVM '''-rtc''' is set to '''clock=vm''' ?



Does not seem to be a valid or accepted parameter by libvirt as its always sanitized from the xml file upon saving. But it is  accepted by QEMU directly. However I noticed that even with kvmclock enabled, I no longer see any change in a guest's time in response to a host skew of the time. In the recent past this was not true, as any change was immediately reflected in the Guest clock immediately. kvmclock on its own can be disabled  and confirmed to be so as outlined below.

= Archived Discussions =
* [https://www.whonix.org/forum/index.php/topic,202.0/topicseen.html qcow2 with metadata preallocation file sizes]

= Archived IRC Logs =
<pre>
* Now talking on #kvm
* Topic for #kvm is: KVM wiki website is http://www.linux-kvm.org - try status and faq pages, no really, read them! || you can also check the qemu manual at http://wiki.qemu.org/download/qemu-doc.html || don't paste on chan, use http://pastebin.com/ instead || libvirt/virt-manager support is #virt on irc.oftc.net
* Topic for #kvm set by aliguori at Wed Mar 30 13:38:24 2011
<bancfc> Hi How do I check if virtio storage is in use or an existing fallback driver for an emulated device?
<iggy> there's no fallback in kvm like in xen
<bancfc> so a simple grep should verify if a virtio device is used then - not merely attached I mean?
<iggy> well... if you really want to check, it's going to be /dev/vdX
<iggy> and lspci will show virtio block device
<bancfc> Thanks iggy I have a few more questions that I'd really appreciate your help with
<iggy> ask away
<bancfc> I am trying to isolate the vm clock so no changes on the host can affect it. This is currently possible with -rtc clock=vm afaik,
<bancfc> but it would be much more helpful for my project's purpose if this can be done through something like libvirt
<bancfc> is this possible with libvirt?
<iggy> that I don't know
<bancfc> the appealing part of using libvirt is the xml settings file it creates, but I think something similar can be done with qemu-kvm cfgfiles option
* iggy hates xml
<bancfc> But that means all settings would have to be imitated but directly for the qemu-kvm utility which is fine if I can get it to do the same things
<bancfc> namely the functionality of isoalted internal networking between two vms
<bancfc> is that possible with qemu-kvm directly?
<iggy> libvirt has an option to pass options directly to qemu-kvm
<bancfc> please tell me how this is done :-)
<bancfc> or where I can know this.
<bancfc> ok nevermind, I just want to know if this means that a setting in the xml file is passed directly to qemu-kvm then?
<iggy> ... You might try asking in the libvirt channel
<bancfc> I did but no one seems to reply...
<iggy> I know it's possible, I don't remember it off the top of my head
<bancfc> Thank you so far for your replies. I am actually working on a project that uses virtualization to route all of a vm's traffic through a TOR instance running on another network facing gateway vm.
<bancfc> Its known as Whonix
<bancfc> Just letting you know that I'd appreciate any help on getting the main issues with porting it to KVM solved
<bancfc> so we can prepare this for a greater good.
<bancfc> This is the bugtracker page I am working on resolving: https://www.whonix.org/wiki/Dev/KVM#How_to_get_virtio_running_for_storage.3F
<bancfc> iggy do you mind if I post the contents of this thread on our forum?
<iggy> no...
</pre>

<pre>
<ancfc> Is there any security drawbacks from using a raw image file?
<iggy> bancfc: security drawbacks? like what?
<bancfc> iggy: are its contents directly interpreted by the host or is that when lvm is used only?
<iggy> I'm not sure what you mean by "contents directly interpreted", but raw devices/files just means there's a 1:1 correlation between guest request and host request
<bancfc> like a virus or advanced persistent threat running in the vm
<iggy> the host doesn't "interpret" what it's reading/writing... it just becomes a read/write in the host
<bancfc> ok good just checking. iAnother question is raw snapshotting possible albeit not directly?
<bancfc> I saw something about a differencing image applied in qcow format, yes?
<iggy> only if there's something underlying the files that supports it (btrfs, lvm, zfs, etc)
<bancfc> so not at the "block" level I guess?
<bancfc> iggy: just a question or two about storage if thats ok, becuase we are trying to see which can give maximum performance
<iggy> lvm > raw files > qcow2 > everything else
<bancfc> Is qcow2 the standard? Is qed recommended instead? When is the qcow"3" changes included into the present format?
<bancfc> didn't mean to send this as you had already responded
<bancfc> but anyhow qed seems to have been designed as a speedier replacement for qcow2. But qcow2 were adding changes to become more competitive again
<bancfc> I wanted to know what you think about this and thats all. thanks
<iggy> bancfc: qed is deprecated (as all of it's performance improvements that actually ended up helping were backported to qcow2)
<iggy> the features are handled by feature flags in the qcow2 format, so there's technically no need for a "qcow3" format
<iggy> as long as you don't use the features that qed didn't support (i.e. snapshots, etc.), qcow2 should be as fast
<bancfc> iggy: thanks alot for your help
<iggy> np
</pre>

<pre>* Now talking on #tor
* Topic for #tor is: Welcome to #tor, the discussion channel for Tor users and operators | https://www.torproject.org/ | https://www.torproject.org/docs/faq | https://tor.stackexchange.com/ | Developer discussion on #tor-dev | It's 'Tor', not 'TOR' | non-tor talk => #nottor
* Topic for #tor set by ChanServ!services@services.oftc.net at Sun Feb  2 13:56:09 2014
* Riastradh (~riastradh@82JAAD1W2.tor-irc.dnsbl.oftc.net) has joined #tor
<expedient> I am working on the Whonix KVM port and ran the leaktest for this bug reported here: https://lists.torproject.org/pipermail/tor-talk/2014-March/032503.html
<expedient> It turns out that this issue applies to us too and its an upstream bug
<arma> i believe you
<arma> upstream meaning what -- the kernel? iptables?
<expedient> I am thinking iptables
<expedient> You guys can probably get to them easier than we can
<arma> is there a patch?
* drtor (~drtor@9YYAAK2T4.tor-irc.dnsbl.oftc.net) has joined #tor
<expedient> We are looking at some workaround in iptables but are not sure how well this will work
<expedient> but one thing for sure is it needs to be fixed upstream because it affects any Linux platform that uses Tor as a transproxy
<expedient> AFAIK Patrick  -Whoix leader- doesn't write kernel level code
<expedient> https://www.whonix.org/forum/index.php/topic,243.0.html
* realitygaps has quit (Remote host closed the connection)
<expedient> According to my findings, the leak can be seen in tcpdump running on the host, as direct communication to Google without going through any Tor node. Its a catastrophe by all means
<velope> a kernel patch is not necessarily appropriate, and upstream might well not consider it a bug
<velope> the iptables workaround i gave is in a followup post from mike in that thread
<velope> it would appear that "it needs to be fixed upstream" is just false
<velope> i only skimmed that forum page quickly, and i really don't want to wade through every bit of it
<velope> it contains my workaround based on --state INVALID
<expedient> That's fine we will apply your advice, but are you sure that there is nothing fundamentally wrong with the kernel or iptables though?
<velope> but it doesn't clearly seem to have been used
<velope> apply it and test, a lot
<velope> there is not yet any solid case made that there is something "fundamentally wrong"
<velope> using iptables to redirect for transproxying relies on connection tracking
<arma> i think the conclusion is "it is hard to use these things safely"
<arma> which isn't really a bug in upstream so much as a challenge with the approach
<velope> you have to test
<velope> people don't test thoroughly
<velope> they just read a man page or get some cookbook approach from some post, and run with it
<velope> that is why something like this goes unnoticed for so long
<velope> (gee, sounds like some other notable problems ...)
<expedient> Sorry to throw another link your way, but so far this is what we do when testing:
<expedient> https://www.whonix.org/wiki/Dev/Leak_Tests#FIN_ACK_.2F_RST_ACK_-_Leak_Test
<expedient> Any advice if this is enough or anything we should add to ensure its safe after a workaround?
* quiliro has quit (Quit: Leaving.)
<velope> do violent tests with your networking connection
<expedient> You are very sharp btw. That bug was a great find
<velope> interrupt it and restore it at various moments, for various periods
* blumenkraft (~eristisk@a1.networktest.34sp.com) has joined #tor
<velope> well actually i never announced or reported the problem, so even though i fixed the problem for myself a couple years ago, mike appropriately gets credit for finding it. i just get credit for a better workaround.
* amiller has quit (Remote host closed the connection)
<velope> y'all need to understand that connection tracking was never intended to be more than a loose fit around categories of traffic, not some leakproof box
<expedient> do you know if this applies to nftables too?
<expedient> Its gradually becoming the successor to iptables and was added in 3.13
<velope> when the kernel's info on a connection is lost or dropped (timeout), it's gone forever, so subsequent traffic won't be redirected
<velope> i haven't used it and don't know. unless there's been some massively radical re-architecting of connection tracking, it's unlikely to be totally different, though there could be minor differences in behavior.
<arma> the tails approach is starting to look a bit smarter
* eristisk has quit (Ping timeout: 480 seconds)
<expedient> tails is robus but it has to secure an entire rich os stack to protect the user
<arma> approach to torifying the traffic i mean
<expedient> ok
<arma> i don't argue that wrapping stuff in vm's can make it harder for an attacker to break out
<velope> in that tails doesn't rely on transproxy redirection, yes it's better
<expedient> what specifics are you talking about for torifying maybe we can replicate that?
<arma> but torifying outgoing streams is harder to make safe than explicit proxy settings
* darkclown (~darkclown@p2011-ipbf7306marunouchi.tokyo.ocn.ne.jp) has joined #tor
* anong0 has quit (Ping timeout: 480 seconds)
<velope> right, we've always warned that transproxying is not as great as it seems
<arma> "set your proxy settings to use tor, only allow tor to use the network"
* Gentlecat has quit (Ping timeout: 480 seconds)
<arma> so, implicitly, "don't allow anything that isn't configured to use tor to use the network"
<velope> and most people just ignore the warnings about transproxying, because "just stuffing everything through tor" seems just what they want, and so simple. but not really.
* mdik is now known as Guest6988
* mdik (~mdik@brln-4d0c41d4.pool.mediaWays.net) has joined #tor
<expedient>  the problem is when a box is rooted the software that is configured to use Tor can do things it shouldn't do
<expedient> but I get your point
* Guest6988 has quit (Ping timeout: 480 seconds)
<expedient> its those people who think stuffing flash through a transproxy pipe think their safe
<velope> that problem only exists for you because you insist on running tor in isolation
* huseby has quit (Ping timeout: 480 seconds)
<arma> "be sure to send unexpected traffic over tor so it can't hurt us"
<arma> vs "be sure to drop unexpected traffic so it can't hurt us"
<arma> option b sure seems wiser
<arma> then a bad guy who breaks in can, at worst, generate traffic that looks expected so it goes through tor
<sd> Useability wise, just having unique circuit per PID might be reasonable compromise.
* TheCthulhu1 has quit (Remote host closed the connection)
<arma> i think that's a totally separate topic
<expedient> arma:  an important goal we are trying to achieve is for operators of hidden services to be able to have a fighting chance in case they are targeted.
<sd> Trying to educate users "don't throw * at tor, but selectively firewall everything" seems like a losing battle though.
<arma> it does? screw those users then.
<arma> better to write software that works well
<arma> and the ones who want to use the safe software will use it
<velope> right, it can only be won or lost if you consider it to be a battle. users screw themselves, every day
<arma> and we can't do much for the ones who choose to do it wrong
<velope> a better analogy might be leading a horse to water
* Rym has quit (Ping timeout: 480 seconds)
<sd> That sounds like somewhat elitist stance. "You dont deserve privacy because you're dumb" vs "Safe defaults built in."
<velope> obviously better defaults are better, if they actually exist and are actually safer
<sd> (I can see how it can go downhill from there if users are babysitted too much, though)
<velope> but defaults never cover everything, because software is flexible, and people want it to be
<expedient> The less decisions that need to be made in security, the better everyone will be
<expedient> and hence why transproxy is an idea worth working towards
<arma> so give them only the applications that you know behave well, with those applications configured to use tor correctly
<velope> that principle is correct but the conclusion about transproxying is wrong
<arma> letting them pick their own apps and hope they are safe is a recipe for surprises again and again
<expedient> we do, but we can't guarantee that nothing dangerous happens when these apps are compromised unless it *all* goes through Tor
<sd> Ultimately the problem with transproxy is just that it's difficult to identify the source app.
* sd uses assigned source port ranges, but it is far from ideal
<expedient> Kgpg, TorBrowser and xchat come by default
<velope> even if it all goes through tor, you can't guarantee that nothing dangerous happens, you only have considered the first layer of potential problems
<expedient> updated system and AppArmor are other layers we have
<velope> that's all very nice and good
<expedient> but against a well funded adversary you must throuw everything in the toolbox and the toolbox itself to protect users
<velope> actually it's just more and more desperate band-aiding
<velope> the effort would be much better directed towards thoroughly auditing apps
<expedient> Auditing firefox is out of our league
<expedient> but we have verifiable builds for Whonix
<sd> Velope, that goal is far from realistic when we're talking huge blobs of code such as web browser or libpurple.
<velope> it's the true longterm challenge that people get scared away from all the time
* mttp_ (~mttp@9YYAAK2WG.tor-irc.dnsbl.oftc.net) has joined #tor
<velope> and the "community" pays for it dearly with things like heartbleed
</pre>

= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
