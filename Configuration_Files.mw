{{Header}}
{{#seo:
|description=Everything you should know about Configuration Drop-in Folders and Files.
|image=https://www.whonix.org/w/images/3/3b/Five-elements-379106640.jpg
}}
__TOC__

{{Anchor|.d Style Configuration Folders}}
= Configuration Drop-In Folders =
When changing any configurations it is recommended to use configuration drop-in folders whenever available to avoid the [[#Ordinary_Configuration_Files|disadvantages of ordinary configuration files]].

This applies to most, if not all, other (Debian based) Linux distributions including {{project_name}}.

[https://github.com/Whonix Most] of [[{{project name short}} Debian Packages|packages by {{project name}}]] provide configuration drop-in folders.

* {{Code|/etc/whonix.d}}
* {{Code|/etc/whonix_firewall.d}}
* {{Code|/etc/onion-grater-merger.d}} (Only on {{gateway_product_name}}.)
* {{Code|/etc/whonix_buildconfig.d}} (Only if you build from source code.)
* {{Code|/etc/sdwdate.d}}
* {{Code|/etc/uwt.d}}

We'll explain it using an example. For example, {{Code|/etc/whonix_firewall.d/30_default.conf}} says.

<blockquote>
Please use "/etc/whonix_firewall.d/50_user.conf" for your custom configuration,<br />
which will override the defaults found here. When {{project_name}} is updated, this <br />
file may be overwritten.<br />
</blockquote>

The same in other words.

<blockquote>
Instead of editing this file, please create and use the file<br />
"/etc/whonix_firewall.d/50_user.conf". When {{project_name}} is updated, <br />
"/etc/whonix_firewall.d/30_default.conf" will be overwritten. Files in folder <br />
"/etc/whonix_firewall.d/" are sourced in alphabetical order. Anything in<br />
"/etc/whonix_firewall.d/50_user.conf" will always override the defaults,<br />
allowing the user to keep their settings after updating {{project_name}}.<br />
</blockquote>

The same yet in other words... Files in {{Code|.d}} folders are usually sourced in lexical order. That means, files named {{Code|30_...}} will always get overruled by files named {{Code|50_...}}.

For example, directly editing {{Code|/etc/whonix_firewall.d/30_default.conf}} is recommended against. This is because, next time {{project_name}} gets updated, {{Code|/etc/whonix_firewall.d/30_default}} may get new settings and improved settings. You would end up with an {{Code2|dpkg interactive conflict resolution dialog}}, which would for example look the following.

<pre>
Configuration file `/etc/whonix_firewall.d/30_default.conf'
 ==> Modified (by you or by a script) since installation.
 ==> Package distributor has shipped an updated version.
   What would you like to do about it ?  Your options are:
    Y or I  : install the package maintainer's version
    N or O  : keep your currently-installed version
      D     : show the differences between the versions
      Z     : background this process to examine the situation
 The default action is to keep your current version.
*** interfaces (Y/I/N/O/D/Z) [default=N] ? N
</pre>

Modifications coming with {{project_name}} will always fall back to reasonable defaults, if you were still using an old version. However, to prevent such conflicts in the first place, you're better off reading {{Code|/etc/whonix_firewall.d/30_default.conf}}, leaving {{Code|/etc/whonix_firewall.d/30_default.conf}} untouched, copying settings you wish to overrule from {{Code|/etc/whonix_firewall.d/30_default.conf}} and pasting them into {{Code|/etc/whonix_firewall.d/50_user.conf}}.

= Ordinary Configuration Files =
There is something you should be aware of when editing ordinary configuration files where configuration drop-in folders are unavailable. This applies to {{project_name}} as well as most, if not all, other Debian based Linux distributions.

We'll explain it using an example. Let's take for example {{Code|/etc/hdparm.conf}}.

There is no {{Code2|/etc/hdparm.d}} folder. Therefore, if you want to make changes, your only option is to edit {{Code|/etc/hdparm.conf}}. But this comes with a disadvantage. Next time this file gets changed by the {{Code2|hdparm}} maintainer and you upgrade your system, you would end up with an {{Code2|dpkg interactive conflict resolution dialog}}, which would for example look the following.

{{Anchor|dpkg interactive conflict resolution dialog}}
<pre>
Configuration file `/etc/hdparm.conf'
 ==> Modified (by you or by a script) since installation.
 ==> Package distributor has shipped an updated version.
   What would you like to do about it ?  Your options are:
    Y or I  : install the package maintainer's version
    N or O  : keep your currently-installed version
      D     : show the differences between the versions
      Z     : background this process to examine the situation
 The default action is to keep your current version.
*** interfaces (Y/I/N/O/D/Z) [default=N] ? N
</pre>

Check the differences ({{Code|D}}), then make a decision. If you know you made changes to that file, you most likely want to keep them, i.e. select {{Code|N}}. If you are unsure, after the upgrade finished, check again that config file and re-apply your settings if necessary.

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
