{{Header}}
<!--
Copyright:

   Whonix Advanced Security Guide wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   Whonix Advanced Security Guide wiki page Copyright (C) 2012 - 2017 Patrick Schleizer <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/Whonix/Whonix/blob/master/GPLv3>.
-->
<!--
Wiki pages found in the Advanced Security Guide contain material from the Tails Protection against cold boot attacks page; see: <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/doc/advanced_topics/cold_boot_attacks.mdwn;hb=d249db72228b498407d85fb762b49ec155871ded>.
-->
{{#seo:
|description=Operating System Hardening
|image=https://www.whonix.org/w/images/d/d1/Oshardening34234.jpg
}}

= Debian = 

== Debian Security Announcements ==

Since Whonix is based on Debian, it takes advantage of all the hard work done by their security team: <ref>http://security.debian.org/</ref>

<blockquote>Debian takes security very seriously. We handle all security problems brought to our attention and ensure that they are corrected within a reasonable timeframe. Many advisories are coordinated with other free software vendors and are published the same day a vulnerability is made public and we also have a Security Audit team that reviews the archive looking for new or unfixed security bugs.<br />
<br />
Experience has shown that "security through obscurity" does not work. Public disclosure allows for more rapid and better solutions to security problems. In that vein, this page addresses Debian's status with respect to various known security holes, which could potentially affect Debian.</blockquote>

Users should consider subscribing to the Debian [https://lists.debian.org/debian-security-announce/ security announcement mailing list] to stay informed about the latest security advisories.

== Harden Debian ==

Most hardening steps cannot be easily added to Whonix by default. Any major changes require careful research and significant developer/tester effort, otherwise system errors or breakage may occur. This is an open topic and Whonix developers are amenable to suggestions - improving operating system security will always be a primary design goal.

Before attempting additional hardening measures below, be sure to fully understood them and apply the steps carefully:

* [https://wiki.debian.org/HardeningWalkthrough Debian Hardening Walkthrough]
* [https://www.debian.org/security/ Debian Security Information]
* [https://www.debian.org/doc/manuals/securing-debian-howto/index.en.html Securing Debian Manual]
** [https://www.debian.org/doc/manuals/securing-debian-howto/ch-automatic-harden.en.html Securing Debian Manual Chapter 6 - Automatic hardening of Debian systems]

Readers are welcome to add any additional hardening resources to this list.

== Hardened Kernels ==

The upstream Kernel Self Protection Project (KSPP) <ref>http://www.openwall.com/lists/kernel-hardening</ref> was established in 2015 with the goal of introducing more hardening features into mainline Linux. This includes many features found in the Grsecurity patchset, which was [https://www.phoronix.com/scan.php?page=news_item&px=GrSecurity-No-Longer-Free publicly available until early 2017]. One advantage of KSPP is that users will no longer need to compile and tweak settings to create a secure kernel, as many hardening features become the default over time in various distributions. Up-to-date information on available hardening features can be viewed [https://github.com/a13xp0p0v/linux-kernel-defence-map here].

The Hardened Kernel Project is a collaborative effort between Arch and Gentoo developers who handled Grsecurity packaging in their respective distributions with the goal of accelerating mainlining of the patchset. <ref>https://wiki.gentoo.org/wiki/Hardened/Hardened_Kernel_Project</ref><ref>https://github.com/thestinger/linux-hardened</ref>

While kernel hardening is important, it only addresses a subset of security risks. It cannot protect against backdoors or security issues related to design, policy or yet unknown exploit classes.

== Harden Software Repositories ==

Many operating systems provide multiple repositories. Since the Whonix implementation is based on Debian, these resources provide a suitable introduction for interested readers:

* [http://www.debian.org/doc/debian-policy/ch-archive.html Debian Policy Manual Chapter 2 - The Debian Archive].
* [https://help.ubuntu.com/community/Repositories/ Ubuntu Repositories (similar to Debian)].

In summary, these resources confirm the main repository receives the most developer attention and security updates. This suggests possible hardening might involve editing ''/etc/apt/sources.list'' to strictly limit software to the main repository, while only installing security fixes and no other updates.

Whonix has ''not'' implemented this design by default and it is an open research question whether this will actually improve security.

= Vulnerabilities at Install Time =

== Introduction ==

Various installation media expose users to vulnerabilities, and those affected include:

* '''Importable [[Download|VM images]]:''' Whonix and [http://virtualboxes.org/ other images].
* '''Installer DVDs:''' [https://www.debian.org Debian] and other major platforms.
* '''Live DVDs:''' [https://tails.boum.org Tails] and similar platforms.
* '''VM Images built with [[Dev/Build_Documentation/14_full|frozen sources]]:''' Platforms without current sources.

The threat arises because the latest stable releases sometimes contain vulnerable, remotely exploitable applications. These applications are very likely to be used over untrusted networks <ref>Such as Tor exit relays.</ref> which are in a position to run [[Warning#Man-in-the-middle_Attacks|man-in-the-middle attacks]]. One example of this vulnerability was [[https://lists.debian.org/debian-security-announce/2014/msg00219.html CVE-2014-6273]], which affected apt-get in 2014.

Readers are welcome to help research this issue further, and document sane and effective solutions. <ref>[https://forums.whonix.org/t/new-chapter-vulnerabilities-at-install-time-in-advanced-security-guide/538 Forum discussion].</ref>

== Possible Solutions ==

=== Always Up-to-date Builds ===

If Whonix regularly released up-to-date builds, this would be an optimal solution for end users. However, the maintenance effort -- building, testing and uploading -- is resource-intensive and not currently feasible for the Whonix team. 

Greater community support is needed for [[Contribute#Testing|testing]] proposed Whonix package updates and major new releases, alongside an automated test suite for Whonix.

=== apt-cache ===

When using virtual machines, Whonix-Gateway could be configured to use the host apt-cache. [[Physical Isolation|Physically-isolated]] Whonix-Gateways could use an apt-cache running on a separate machine. [https://packages.debian.org/stretch/apt-cacher-ng apt-cacher-ng] is an example implementation of such an apt-cache.

This configuration does not anonymize [[Operating_System_Software_and_Updates#Updates|operating system updates]] by default, which is a big disadvantage. <ref>This leaks a list of installed packages to ISP-level adversaries and update servers. For example, if a user installed a webserver that is likely to be used to host a hidden web service, then this information would leaked.</ref> It would be first necessary to determine how to configure apt-cacher-ng on the host to force downloads through Tor.

Eventually Whonix-Workstation could use an apt-cache that is running on Whonix-Gateway. Unfortunately, this would increase the Whonix-Gateway attack surface if/when Whonix-Workstation is compromised. On the other hand, it would decrease the Whonix-Workstation attack surface if/when a vulnerable apt-get is used for downloads over untrusted Tor exit relays.

=== apt-offline ===

Another possibility is somehow using [https://packages.debian.org/stretch/apt-offline apt-offline] to complete the initial updates of both Whonix-Gateway and Whonix-Workstation.

=== Building from Source Code using Current Sources ===

Self-created Whonix builds from source code use [[Template:Build_Documentation_CurrentSources|current sources]], thereby solving this problem. Although frozen sources have been deprecated for reasons outlined in [[Dev/Build_Documentation|Build]] documentation; using current sources comes with its own issues.

= Footnotes =
{{reflist|close=1}}

= License =
{{License_Amnesia|{{FULLPAGENAME}}}}

{{Footer}}

[[Category:Documentation]]
