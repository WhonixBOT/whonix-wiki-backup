{{Header}}
{{#seo:
|description=Documentation for the NEXT Whonix version! ONLY for developers! No guarantee it really makes into the next Whonix version.
}}

= Warning =
'''Documentation for the NEXT Whonix version! ONLY for developers! No guarantee it really makes into the next Whonix version.'''

= torsion =
'''Unfinished!''' Work in progress! See also: <br />
https://github.com/special/torsion/issues/30

Security implications not researched yet.

On Whonix-Gateway, Control Port Filter Proxy<ref>[[Dev/CPFP]]</ref> needs some adjustments.

Create a file {{Code|/etc/controlportfilt.d/50_controlportfilt_torsion}}.

<pre>
kdesudo kwrite /etc/controlportfilt.d/50_controlportfilt_torsion
</pre>

Add the following content.

<pre>
## Keep existing contents of variable CONTROL_PORT_FILTER_WHITELIST
## and extend it with control port commands required by torsion as per:
## "Documentation request for Whonix setup"
## https://github.com/special/torsion/issues/30
CONTROL_PORT_FILTER_WHITELIST=(
    "${CONTROL_PORT_FILTER_WHITELIST[@]}"
    "GETINFO status/circuit-established"
    "SETCONF HiddenServiceDir"
    "SETCONF HiddenServicePort"
    "SETEVENTS STATUS_CLIENT"
)
</pre>

Restart Control Port Filter Proxy.

<pre>
sudo service controlportfiltd restart
</pre>

= onionshare =
'''Unfinished!''' Work in progress! See also: <br />
https://www.whonix.org/forum/index.php/topic,316.0.html

Security implications not researched yet.

On Whonix-Gateway, Control Port Filter Proxy<ref>[[Dev/CPFP]]</ref> needs some adjustments.

Create a file {{Code|/etc/controlportfilt.d/50_controlportfilt_onionshare}}.

<pre>
kdesudo kwrite /etc/controlportfilt.d/50_controlportfilt_onionshare
</pre>

Add the following content.

<pre>
## Keep existing contents of variable CONTROL_PORT_FILTER_WHITELIST
## and extend it with control port commands required by onionshare as per:
## https://github.com/micahflee/onionshare/blob/master/onionshare/onionshare.py
CONTROL_PORT_FILTER_WHITELIST=(
    "${CONTROL_PORT_FILTER_WHITELIST[@]}"
    "PROTOCOLINFO 1"
    "SETCONF HiddenServiceDir"
    "SETCONF HiddenServicePort"
)
</pre>

Restart Control Port Filter Proxy.

<pre>
sudo service controlportfiltd restart
</pre>

== Tunnel Tor through VPN ==
This chapter is supposed to be added to the [[Tunnel_Tor_through_proxy_or_VPN_or_SSH]], specifically to extend the [[Tunnel_Tor_through_proxy_or_VPN_or_SSH#How]] section, when this feature gets finished.

=== Introduction ===

'''user -> VPN -> Tor'''

There are too many different VPN protocols. Too many to add all of them to this guide. However, at least adding OpenVPN would be worth it.

If you are using VPN not,

* '''because you are forced to use VPN by your ISP''', but
* want to '''add an additional layer of protection''', or
* to '''hide the fact that you are using Tor''', in that case make sure you have read [[Hide Tor and Whonix from your ISP]]

then be sure, that your VPN software is secure (ex: use OpenVPN, not pptp).

=== Use a Fail Closed Mechanism ===

This is not a Whonix specific problem. It is a general problem with VPNs. Most users are simply not aware of it. VPN's generally fail open. VPN servers and VPN software can occasionally break down without announcement. This means, if the VPN is unreachable, connections breaks down for whatever reasons and so on, in most cases, you can continue to connect to the internet without the VPN.

In case of Whonix you would be left to the protections provided by Tor. Whonix-Workstation will seamlessly continue to make "direct" connections through Tor once the VPN breaks down. If you are using the VPN only to circumvent the censorship of Tor, you may not care so much. On the other hand, if you believe a VPN improves your security, it would be rational to make sure, the VPN is always used instead only most of the time.

If you want to enforce, that the VPN gets always used:

* Whonix-Gateway: Already includes a fail closed (firewall settings {{Code|VPN_FIREWALL}} setting) mechanism, which is documented below.
* Other operating systems: See [[VPN-Firewall]].

=== How ===
==== Introduction ====
If you are forced to use a VPN server or if you are already using a VPN server, you most likely know how you can connect to it.

You can either add the VPN on the host. Whonix-Gateway will be tunneled through it.

Or you can add the VPN into Whonix-Gateway.

When your VPN is properly set up, all your connections are forced through the VPN first. If you start Tor on top of that, tunneling Tor through the VPN will work.

See also [[TestVPN|Free example VPNs working with Whonix for testing purposes]].

See also [[FAQ#What.27s_the_difference_of_installing_a_VPN_on_the_host_versus_installing_on_Whonix-Gateway.3F|What's the difference of installing a VPN on the host versus installing on Whonix-Gateway?]]

==== VPN on the Host ====
Besides what has been written above already, nothing special is required.

==== VPN on Whonix-Gateway ====
===== How =====

If you want to hide Tor by using a VPN, after install Whonix-Gateway, do the following steps before activating Tor in {{Code|whonixsetup}}.

Have a look at {{Code|/etc/whonix_firewall.d/30_default}}. To open.

<pre>
Start menu -> Applications -> System -> Whonix Default Firewall Settings
</pre>

It contains default settings, settings you can use as template (copy and paste) and an interesting comment.

<pre>
## Please use "/etc/whonix_firewall.d/50_user" for your custom configuration,
## which will override the defaults found here. When Whonix is updated, this
## file may be overwritten.
</pre>

Create a file  {{Code|/etc/whonix_firewall.d/50_user}}. If you are using a graphical Whonix-Gateway, use.

<pre>
Start menu -> Applications -> System -> Whonix User Firewall Settings
</pre>

If you are using a terminal-only Whonix-Gateway, use.

<pre>
sudo nano /etc/whonix_firewall.d/50_user
</pre>

Add the following settings. You can skip comments (starting with {{Code|#}}). Unless you are using {{Code|seattle.vpn.riseup.net}} as your VPN service, which we use as an example, you have to adjust the {{Code|VPN_SERVERS}} variable in your config.

<pre>
###########################
## VPN-Firewall Settings ##
###########################

## Make sure Tor always connects through the VPN.
VPN_FIREWALL=1

## IP address of the VPN server.
## Get the IP using: nslookup vpn-example-server.org
## Example: seattle.vpn.riseup.net
## Some providers provide multiple VPN servers.
## You can enter multiple IP addresses, separated by spaces.
VPN_SERVERS="198.252.153.26"

## For OpenVPN.
VPN_INTERFACE=tun0

## Destinations you don not want routed through the VPN.
LOCAL_NET="192.168.1.0/24 192.168.0.0/24 127.0.0.0/8"
</pre>

Reload Whonix's Firewall.

If you are using a graphical Whonix-Gateway, use.

<pre>
Start Menu -> Applications -> System -> Reload Whonix Firewall
</pre>

Or if you are using a terminal-only Whonix-Gateway, use.

<pre>
sudo whonix_firewall
</pre>

Now setup OpenVPN. It should be able to connect. You find some help on setting up OpenVPN on the [[TestVPN]] page.

Enable Tor using whonixsetup.

If you are using a graphical Whonix-Gateway, use.

<pre>
Start Menu -> Applications -> System -> whonixsetup
</pre>

Or if you are using a terminal-only Whonix-Gateway, use.

<pre>
sudo whonixsetup
</pre>

The VPN may not be ready when Tor is attempting to connect, because the VPN connection initialization takes too long. Due to a bug in Tor, it won't keep trying to connect. You may have to manually restart Tor after boot, if whonixcheck reports, that Tor is not fully bootstrapped. The same may be necessary if your VPN software or connection temporarily broke down.

<pre>
Start Menu -> Applications -> System -> Restart Tor

Or.

sudo service tor restart
</pre>

===== Let Tor wait for OpenVPN =====
To improve this situation, if you are using OpenVPN and Debian's init script to automatically start it, you can configure Tor's init script to wait for openvpn being started. Open {{Code|/etc/init.d/tor}}.

<pre>
kdesudo kwrite /etc/init.d/tor
</pre>

Search for.
<pre>
# Should-Start:      $syslog
</pre>

And modify that line to.

<pre>
# Should-Start:      $syslog openvpn
</pre>

Then apply these changes by running.

<pre>
sudo update-rc.d tor defaults
</pre>

Next time {{Code|/etc/init.d/tor}} is upgraded by the Debian maintainer, you'll get a [[Whonix_Configuration_Files#dpkg_interactive_conflict_resolution_dialog|dpkg interactive conflict resolution dialog]]. Install the package maintainer's version by pressing {{Code|y}} and enter then. Then re-apply these changes.

===== Limitations =====

* Only tested with OpenVPN. Most other VPN's have deficiencies anyway.
* DNS has to be manually resolved. There is technically no way to automatically resolve DNS without making the setup much more complex. The VPN server's IP address should not be resolved over Tor, because that's what you wanted to hide in the first place. Since outside observers will know, that you are connecting to the VPN IP anyway, it is probably save to resolve the DNS over clearnet or by asking the VPN provider if they don't already document their IPs on their website anyway.
* No support for IPv6 yet.
* TODO: Find ip-check public service for testing/showing own VPN IP. Not sure if any exists. Is this important?

'''TODO high level overview''':

* <s>Integrate VPN-Firewall's features into Whonix-Gateway's firewall.</s>
* <s>Install OpenVPN on Whonix-Gateway by default. (Otherwise installing OpenVPN while hiding Tor would be very difficult for the user.)</s>
* Make a new release integrating above points.

<s>'''TODO technical level''':</s>

* <s>Allow TCP and UDP to VPN server.</s>
* <s>No longer allow Tor to connect to any outside target when VPN_FIREWALL=1.</s>

=====  Troubleshooting =====
====== VPN Logs ======
Check your VPN software's logs.

====== VPN Connectivity Test ======
Test if you are able to connect using your VPN.

Login as user {{Code|clearnet}}.

<pre>
sudo su clearnet
</pre>

Try connecting to check.tpo. Note, at time of writing, it looked like, that usaip free trial is probably blocking SSL, therefore it might not work.

<pre>
curl.whonix-orig --tlsv1 --proto =https -H 'Host: check.torproject.org' -k https://38.229.72.22 | grep IP
</pre>

Should show something along "Welcome to sergii". Unfortunately won't echo IP, but will show, that connectivity is functional.

Get back to normal user.

<pre>
exit
</pre>

= Footnotes =
<references/>

{{Footer}}

[[Category:Documentation]]
