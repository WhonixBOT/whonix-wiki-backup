{{Header}}
{{#seo:
|description=Hardened Memory Allocator for many Applications to increase Security - Software Fork by {{kicksecure}}
|image=https://www.{{project_clearnet}}/w/images/a/a3/Kicksecurehardenedmalloc.jpg
}}
{{Title|title=
Hardened Malloc {{kicksecure}} }}
[[image:Kicksecurehardenedmalloc.jpg|thumb]]

[[Hardened Malloc|Hardened Malloc]] | [[Hardened Malloc Kicksecure|Hardened Malloc {{kicksecure}} Fork]]
= Introduction =
Hardened Malloc is a hardened memory allocator which can be used with many applications to increase security.

According to the author's GitHub description: <ref>
https://github.com/GrapheneOS/hardened_malloc
</ref>

<blockquote>This is a security-focused general purpose memory allocator providing the malloc API along with various extensions. It provides substantial hardening against heap corruption vulnerabilities. The security-focused design also leads to much less metadata overhead and memory waste from fragmentation than a more traditional allocator design. It aims to provide decent overall performance with a focus on long-term performance and memory usage rather than allocator micro-benchmarks. It offers scalability via a configurable number of entirely independently arenas, with the internal locking within arenas further divided up per size class.</blockquote>

[https://github.com/GrapheneOS/hardened_malloc Original] [[Hardened Malloc]] unfortunately cannot be globally enabled by default in [[Whonix|{{Whonix}}]] and [[Kicksecure|{{kicksecure}}]] due to [https://forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474/69 issues].

The development goal of Hardened Malloc {{kicksecure}} is pre-installation by default in {{Whonix}} and {{kicksecure}}.

Hardened Malloc {{kicksecure}} uses different compile time options.

* [https://gitlab.com/whonix/hardened_malloc/-/blob/master/debian/rules#L18 <code>hardened-malloc</code> (compile time options as close to original upstream as possible)]
* [https://gitlab.com/whonix/hardened_malloc/-/blob/master/debian/rules#L20 <code>hardened-malloc-kicksecure</code> (modified compile time options)]

Both, Hardened Malloc and Hardened Malloc {{kicksecure}} are already installed by default in {{Whonix}} and {{kicksecure}} but not yet enabled by default.

Hardened Malloc {{kicksecure}} is not yet enabled by default since there are still various known [[#Issues|issues]]. Most notably, it breaks the OpenSSH server <code>sshd</code> on Debian <code>buster</code> based operating systems, which will be fixed in Debian <code>bullseye</code> and above and possibly [https://www.virtualbox.org/ticket/20107 VirtualBox host software crashes], which haven't been reproduced by testers yet.

Advanced users may still wish to use [[Hardened Malloc]] for specific high risk applications.

Before getting started with Hardened Malloc (Kicksecure) it is recommended to first test the host operating system using [[Troubleshooting#memtest86.2B|<code>memtest86+</code> (link)]] since hardware issues with RAM might be more likely be resulting in system crashes with Hardened Malloc (Kicksecure) enabled. <ref>
In the experience of {{project name}} developer Patrick, the VirtualBox host software crashed with Hardened Malloc enabled with different error messages when faulty RAM banks where used compared to VirtualBox host software crashes with RAM banks that did not show any errors in <code>memtest86+</code>.
</ref>

Forum development discussion: <br />
https://forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474/69

= Enable =
{{Testers-only}}

Package <code>hardened-malloc-kicksecure-enable</code> <ref>
https://gitlab.com/whonix/hardened_malloc/-/blob/master/debian/control#L42
</ref> is provided as an easy way to enable Hardened Malloc {{kicksecure}} globally.

{{Install Package|package=
hardened-malloc-kicksecure-enable
}}

= Disable =
<code>hardened-malloc-kicksecure</code> can be disabled either per application or globally.

== Disable per Application ==
Apply the following steps to disable <code>hardened-malloc-kicksecure</code> per application.

Prepend the [https://gitlab.com/whonix/helper-scripts/-/blob/master/usr/bin/ld-system-preload-disable <code>ld-system-preload-disable</code>] wrapper.

Syntax:

{{CodeSelect|code=
ld-system-preload-disable application
}}

Example:

Note: replace <code>chromium</code> with the actual application which should be started without ld system preload.

{{CodeSelect|code=
ld-system-preload-disable chromium
}}

== Disable Globally ==
Apply the following steps to globally disable <code>hardened-malloc-kicksecure</code>.

If the system is still fully functional, the easiest way is to uninstall the <code>hardened-malloc-kicksecure-enable</code> package.

{{CodeSelect|code=
sudo apt purge hardened-malloc-kicksecure-enable
}}

Otherwise...

'''1)''' Boot into recovery mode. Optional.

This is only required if the system is no longer bootable. In this case, refer to [[Recovery#Recovery_Mode|boot into recovery mode]].

'''2)''' View the <code>/etc/ld.so.preload</code> file.

{{CodeSelect|code=
cat /etc/ld.so.preload
}}

'''3)''' Remove <code>/usr/lib/libhardened_malloc.so/libhardened_malloc_kicksecure.so</code> from <code>/etc/ld.so.preload</code>.

If not using <code>/etc/ld.so.preload</code> for anything else. Warning: this removes all entries from <code>/etc/ld.so.preload</code>.

{{CodeSelect|code=
sudo rm /etc/ld.so.preload
}}

= Issues =
== workaround available ==
slowdown by swap-file-creator shutdown

* related to above cryptsetup slowdown by factor ~ 7
* workaround OK https://github.com/Whonix/swap-file-creator/commit/c65edf17f952ac4a296ae6a0aac5a10541579ff6

[[chromium]] requires <code>ld-system-preload-disable</code>

* https://bugs.debian.org/971876
** workaround <code>ld-system-preload-disable chromium</code> ok
** chromium from flathub also functional (<code>hardened-malloc-kicksecure</code> probably disregarded inside flatpak's bubblewrap based sandbox?)

== no workaround available ==
breaks OpenSSH server <code>sshd</code> in Debian <code>buster</code>

* Fixed in Debian <code>bullseye</code> / {{project name}} 16. <ref>
* https://forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474/127
* https://github.com/GrapheneOS/hardened_malloc/issues/97
* workaround idea: https://forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474/137
* https://github.com/openssh/openssh-portable/pull/142
* https://bugzilla.mindrot.org/show_bug.cgi?id=3245
</ref>

cryptsetup slowdown by factor ~ 6

* reported upstream: [https://gitlab.com/cryptsetup/cryptsetup/-/issues/617 cryptsetup luksFormat slowdown of factor ~ 6 when using hardened memory allocator Hardened Malloc]

might break {{project name}} build process

* TODO: test building {{project name}} with <code>hardened-malloc-kicksecure</code> enabled

chromium crashes with hardened-malloc(-kicksecure) (requires disabling using <code>ld-system-preload-disable</code>)

* https://bugs.debian.org/971876

[https://www.virtualbox.org/ticket/20107 VirtualBox crashes with hardened memory allocator Hardened Malloc on the host] <ref>
* https://www.virtualbox.org/wiki/VBoxMainLogging
* https://www.virtualbox.org/wiki/Core_dump
</ref>

* [https://github.com/QubesOS/qubes-issues/issues/6873 Installing Hardened-Malloc and enforce enabling it will lead to duplication in Copy to VM & Move to VM]

== Notes ==
* glibc feature request: [https://sourceware.org/bugzilla/show_bug.cgi?id=26723 LD_ETC_IGNORE - environment variable to ignore /etc/ld.so.preload configuration file on a per-application basis]

= Credits and Source Code =

The [https://github.com/GrapheneOS/hardened_malloc original] source software is maintained by security researcher, Daniel Micay.

[https://www.whonix.org/wiki/Hardened_Malloc_Kicksecure This website] is the [https://en.wikipedia.org/wiki/Fork_(software_development) software fork] homepage for Hardened Malloc Kicksecure, with a focus on pre-installation by default in {{Whonix}} and {{kicksecure}}. The software fork source code can be found [https://github.com/Whonix/hardened_malloc here]. Continuous integration: [https://travis-ci.com/github/Whonix/hardened_malloc travis CI]

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
