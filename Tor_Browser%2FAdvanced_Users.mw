= Tor Browser Adversary Model =

The Tor Browser design has carefully considered the goals, capabilities and types of attacks undertaken by adversaries and planned accordingly. 

The design specifications address: proxy obedience, state separation, disk avoidance, application data isolation, cross-origin identifier unlinkability, cross-origin fingerprinting unlinkability, long-term unlinkability via the "New Identity" button, and other security measures to address many of the risks outlined below. <ref>https://www.torproject.org/projects/torbrowser/design/#Implementation</ref> <ref>This has also informed the development of the Torbutton extension.</ref>

== Adversary Goals ==

Goals of the adversary include: <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#adversary</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#adversary</ref>

* '''Bypassing proxy settings:''' Directly compromising and bypassing Tor, or having the user connect to specific IP addresses.

* '''Correlating Tor and non-Tor activity:''' If a proxy bypass is not possible, correlation of Tor and non-Tor activity is sought via cookies, cache identifiers, JavaScript events and Cascading Style Sheets (CSS).

* '''History disclosure:''' Querying user history for censored search queries or websites.

* '''Correlating activity across multiple sites:''' Learning if the user who visited site A is the same user who visited site B, in order to serve targeted advertisements.

* '''Location information:''' Seeking timezone and locality information to determine if the user originates from a specific region they are trying to control, or focusing in on dissidents or whistleblowers.

* '''Anonymity set reduction (fingerprinting):''' To identify specific individuals, system data like the browser build,  timezone or display resolution is used to track down (or at least track) their activities.

* '''History records and other on-disk information:''' Seizing the computers of all Tor users in a given area and extracting history records, cache data, hostnames and disk-logged spoofed MAC address history.

== Adversary Positioning Capabilities == 

Adversary positioning capabilities include: <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#adversary</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#adversary</ref>

* '''Exit node or upstream router:''' Running exit nodes or controlling routers upstream of exit nodes. <ref>This has already been observed.</ref>

* '''Adservers and/or malicious websites:''' Running websites or contracting ad space from adservers to inject content. Reducing a Tor user's anonymity is also good for marketing purposes. <ref>Partially explaining the unholy alliance between the corporate sector and government.</ref>

* '''Local Network / ISP / upstream router:''' Injecting malicious content at the user's upstream router when Tor is disabled in order to correlate Tor and non-Tor activity. Additionally, block Tor or attempt to recognize traffic patterns of specific web pages at the entrance to the Tor network.

* '''Physical access:''' Constant or intermittent physical access to computer equipment. This may happen to Internet cafe users or those in jurisdictions where equipment is confiscated due to general suspicion or solely for Tor use.

== Adversary Attack Capabilities == 

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' Advanced adversaries have numerous surveillance methods and attack vectors to deanonymize and spy on users. <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#adversary</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#adversary</ref>
}}

=== Inserting JavaScript ===

* '''Extracting fingerprinting information:''' Available fonts, DOM objects to ascertain the user agent, WebGL to reveal the video card in use, and high precision timing information to reveal the CPU and interpreter speed.

* '''Executing history disclosure attacks:''' Query the history of different attributes of visited links for specific queries, sites, or for profiling of users (gender, interests etc.).

* '''Querying:''' The user's timezone via the date object and reducing the anonymity set by querying the navigator object for operating system, CPU, location and user agent information.

=== Inserting or Exploiting Plugins ===

* '''Using plugins:''' Perform network activity that is independent of browser (or its own) proxy settings in order to obtain a user's non-Tor IP address.

* '''Using active plugin exploits:''' Leak the non-Tor IP address.

* '''Enumerating:''' The list of plugins to fingerprint the user.

* '''Gathering information:''' Use plugins capable of extracting font lists, interface addresses and other machine information.

* '''Retrieving:''' Unique plugin identifiers.

=== Inserting CSS ===

* '''Using CSS pop-ups:''' Correlate Tor and non-Tor activity and reveal a user's non-Tor IP address.

* '''Using CSS and JavaScript:''' Perform CSS-only history disclosure attacks.

* '''CSS media queries:''' Gather information about desktop size, widget size, display type, DPI, user agent type and other information.

=== Reading and Inserting Identifiers ===

* '''Storing identifiers:''' HTTP auth, DOM storage, cached scripts, other elements with embedded identifiers, client certificates and TLS session IDs.

* '''Performing a man-in-the-middle (MITM) attack:''' Inject elements to both read and inject cookies for arbitrary domains (affecting even SSL/TLS secured websites).

=== Other Attacks ===

* '''Creating arbitrary cached content:''' Reading the browser cache which stores unique identifiers.

* '''Observing request behavior:''' Fingerprinting is aided by observing the user agent, Accept-* headers, pipeline usage, and request ordering. Fingerprinting is worsened by custom filters like AdBlock and UBlock Origin.

* '''Fingerprinting:''' Using the large number of browser attributes to reduce the anonymity set, or even uniquely fingerprinting individual users. <ref>For instance, there is an estimated 29 bit-identifier based on the browser and desktop window resolution information alone.</ref>

* '''Website traffic fingerprinting:''' Attempting to recognize the encrypted traffic patterns of specific websites, either between the user and the Guard node, or at the Guard node itself. <ref>This attack is somewhat mitigated by the ocean of Tor traffic, which rapidly increases the rate of false positives when larger traffic sets are analyzed.</ref>

* '''Remotely or locally exploiting the browser and/or OS:''' Exploiting the browser, plugin or OS vulnerabilities to install malware or surveillance software, or physically access the machine to do the same.

= Torbutton Design =

Torbutton's functions in Tor Browser behavior are gradually being moved into direct Firefox patches, <ref>https://www.torproject.org/projects/torbrowser/design/#components</ref> but it is designed to address: <ref>https://www.torproject.org/docs/torbutton/en/design/index.html.en#requirements</ref> <ref>Some of the design features have been deprecated due to changes in the Tor / Tor Browser design.</ref>

* '''Proxy obedience:''' Tor Browser must not bypass Tor proxy settings.

* '''State separation:''' Cookies, cache, history, DOM storage, and more accumulated in one Tor state must not be accessible via the network in another Tor state.

* '''Disk avoidance:''' Tor Browser should not write any Tor-related state to disk, or store it in memory beyond one Tor toggle.

* '''Location neutrality:''' Tor Browser should not leak location-specific information, like the timezone or locale via Tor.

* '''Anonymity set preservation:''' Tor Browser should not leak any other anonymity set reducing or fingerprinting information (such as user agent, extension presence, and resolution information) automatically via Tor. 

* '''Update safety:''' Tor Browser should not perform unauthenticated updates or upgrades via Tor.

* '''Interoperability:''' Torbutton should inter-operate with third-party proxy switchers that enable the user to switch between a number of different proxies, with full Tor protection.


Tor Browser patches and the Torbutton extension can potentially disable some functionality or interfere with the proper operation of some Internet sites, but the vast majority of websites work well. To learn more about Torbutton, see:

* [https://www.torproject.org/torbutton/ The Torbutton homepage]
* [https://www.torproject.org/torbutton/torbutton-faq.html.en The Torbutton FAQ]
* [https://www.torproject.org/docs/torbutton/en/design/index.html.en Torbutton Design Documentation]
* The Torbutton function design section immediately below.

== New Identity Design ==

The Tor Browser design document describes the full features provided by this extension: <ref>https://trac.torproject.org/projects/tor/ticket/523</ref> <ref>https://www.torproject.org/projects/torbrowser/design/#new-identity</ref>

* Disables Javascript and plugins on all tabs and windows.
* Stops all page activity for each tab.
* Clears the Tor Browser state:
** OCSP state.
** Content and image cache.
** Site-specific zoom.
** Cookies and DOM storage.
** The safe browsing key.
** Google Wi-Fi geolocation token.
** Last opened URL preference (if it exists).
** Searchbox and findbox text.
** Purge session history.
** HTTP authentication.
** SSL session IDs.
** Crypto tokens.
** Site-specific content preferences.
** Undo tab history.
** Offline storage.
** Domain isolator state.
** NoScript's site and temporary permissions.
** All other browser site permissions.
* Closes all remaining HTTP keep-alive connections.
* Sends Tor the "newnym" signal to issue a new Tor circuit.


After this process above, a fresh browser window is opened and the current browser window is closed (this does not spawn a new Firefox process, only a new window). When the final window is closed, any blob:UUID URLs that were created by websites are purged. <ref>https://www.torproject.org/projects/torbrowser/design/#new-identity</ref>

== New Tor Circuit Design ==

The "New Tor Circuit for this Site" Torbutton feature sends the "newnym" signal to the Tor control port to cause a new circuit to be created for the <i>current</i> Tor Browser tab. <ref>https://trac.torproject.org/projects/tor/ticket/9442</ref> Other open tabs and windows from the same website will use the new circuit as well once they have reloaded, but connections to other websites on separate tabs are not affected. <ref>https://tb-manual.torproject.org/en-US/managing-identities.html</ref>

== Security Slider Design ==

The Tor Project manual describes the exact effect of each level and which features are disabled or partially disabled: <ref>https://tb-manual.torproject.org/en-US/security-slider.html</ref> <ref>The security slider options have now been renamed to "Standard", "Safer" and "Safest", but the Tor Project manual has not yet been updated to reflect this.</ref>

<blockquote>High
At this level, HTML5 video and audio media become click-to-play via NoScript; all JavaScript performance optimizations are disabled; some mathematical equations may not display properly; some font rendering features are disabled; some types of image are disabled; Javascript is disabled by default on all sites; most video and audio formats are disabled; and some fonts and icons may not display correctly. 
<br />
<br />
Medium <br />
At this level, HTML5 video and audio media become click-to-play via NoScript; all JavaScript performance optimizations are disabled; some mathematical equations may not display properly; some font rendering features are disabled; some types of image are disabled; and JavaScript is disabled by default on all non-HTTPS sites. 
<br />
<br />
Low
At this level, all browser features are enabled. This is the most usable option.</blockquote>

== Disabled Torbutton Functions ==

=== Open Network Settings ===

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Whonix has modified environment variables to prevent visibility of the "Open Network Settings..." menu option in Tor Browser.
}}


The regular Tor Browser Bundle from The Tor Project (without Whonix) allows networking settings to changed inside Tor via the Open Network Settings menu option. It has the same effect as editing Tor's torrc config file. 

In Whonix, the environment variable export <code>TOR_NO_DISPLAY_NETWORK_SETTINGS=1</code> has been [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh set] to disable the <code>TorButton</code> -> <code>Open Network Settings...</code> menu item. It is not useful and confusing to have in the Whonix-Workstation because: <ref>https://trac.torproject.org/projects/tor/ticket/19652</ref> <ref>https://trac.torproject.org/projects/tor/ticket/14100</ref>

* In Whonix, there is only limited access to Tor's control port (see [[Dev/CPFP]] for more information).
* For security reasons, Tor must be manually configured in ''/usr/local/etc/torrc.d/50_user.conf'' on the Whonix-Gateway, and not from the Whonix-Workstation (see [[Features#VPN_.2F_Tunnel_support|VPN/Tunnel support]] for more information).

=== Tor Circuit View ===

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Whonix has removed the [[Tor_Browser#Tor_Circuit_View|Tor Circuit View]] from Torbutton for security reasons.
}}


Normally, this option in Torbutton shows the three Tor relays used for the website in the current tab. This includes the IP addresses of each and the countries they are located in, and whether a bridge is being used (see below). The node immediately above the "Internet" node reflects the Tor exit relay. <ref>https://tails.boum.org/doc/anonymous_internet/Tor_Browser/index.en.html</ref>

'''Figure:''' ''Tor Circuit View - Disabled in Whonix''

[[File:Tor_Circuit_View.png]]

= Tor Browser without Tor =

Interested users can follow the instructions found [[Tor_Browser_without_Tor|here]]. It is also recommended to review the [http://forums.kkkkkkkkkk63ava6.onion/t/todo-research-and-document-how-to-use-tor-browser-for-security-not-anonymity-how-to-use-tbb-using-clearnet/3822 forum discussion] in relation to this topic before proceeding.

= Custom Homepage =
It is unclear whether [https://forums.whonix.org/t/new-whonix-bugs setting a custom homepage] in Tor Browser settings will currently work. Previous user attempts lead to the Whonix default homepage being loaded on startup, even though a different homepage was manually set. The custom homepage only appeared following use of the New Identity function. <ref>This is a potential bug since the user-set custom homepage does not overrule the {{Code2|TOR_DEFAULT_HOMEPAGE}} environment variable. No bug has yet been reported.</ref>

'''Technical Background'''

The [https://github.com/Whonix/whonix-welcome-page whonix-welcome-page] package currently sets [https://trac.torproject.org/projects/tor/ticket/13835 the environment variable] {{Code2|TOR_DEFAULT_HOMEPAGE}} to {{Code2|/usr/share/homepage/whonix-welcome-page/whonix.html}} when setting the Tor Browser homepage. This is done via the [https://github.com/Whonix/whonix-welcome-page/blob/master/usr/lib/whonix-welcome-page/env_var.sh bash script file] <ref>Also <i>/usr/lib/whonix-welcome-page/env_var.sh</i></ref> associated with the package.

'''User-set Custom Homepage Solutions'''

Three possible options are available (untested):

* Attempting to purge the whonix-welcome-page package. <ref>
{{CodeSelect|code=
sudo apt-get purge whonix-welcome-page
}}
</ref> This solution is difficult due to technical limitations as explained on the [[Whonix_Debian_Packages|Whonix Debian Packages]] page.
* Modifying {{Code2|/usr/lib/whonix-welcome-page/env_var.sh}}. <ref>
{{CodeSelect|code=
kdesudo kate /usr/lib/whonix-welcome-page/env_var.sh
}}
</ref> Unfortunately these changes will revert after an upgrade.
* Setting the environment variable {{Code2|TOR_DEFAULT_HOMEPAGE}} to a custom value. This would have a similar effect as setting environment variables as outlined in [[Tor_Browser#Key_Terminology|Tor Browser Transparent Proxying]].

A recent forum discussion in relation to this topic can be found [https://forums.whonix.org/t/tor-browser-in-whonix here].

= Custom Configurations =
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Custom configurations is an advanced topic. Only a small minority of users ever need to apply the steps in this section.
}}


== Verify New Identity ==
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Usually this action is only necessary for custom configurations, like when using a [[Other Operating Systems|Whonix-Custom-Workstation]].
}}


If user attempts to create a New Identity fail, then a Torbutton notification to this effect should appear once the extension realizes it cannot connect to Tor's ControlPort. If this error notification does not appear, then it likely means there are no problems.

After Tor Browser is restarted, click <code>Test Tor Network Settings</code> on the <code>about:tor</code> page. This will redirect to https://check.torproject.org automatically, but users can also type the URL if preferred. In <i>most, but not all cases</i> <ref>Getting a new circuit does not guarantee receiving a new exit relay; this is normal behavior. Also see [[Stream_Isolation]].</ref> the user should get a new Tor exit relay, with a different IP address being reported.

On Whonix-Gateway, examine the [[Dev/CPFP|Control Port Filter Proxy]] log while using TorButton's New Identity feature.

{{CodeSelect|code=
sudo journalctl -f -u onion-grater
}}

If the output is similar to the following.

<pre>
Aug 16 05:30:19 host onion-grater[2316]: 10.137.0.10:41334 (filter: 30_autogenerated): -> SIGNAL NEWNYM
Aug 16 05:30:19 host onion-grater[2316]: 10.137.0.10:41334 (filter: 30_autogenerated): <- 250 OK
</pre>

Then the Control Port Filter Proxy received both the request from Tor Browser and Tor confirmation that it worked.

== Get a New Identity without Tor ControlPort Access ==
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = This action is usually only needed for custom configurations, like when not using the [[Dev/CPFP|Control Port Filter Proxy]].
}}


Simulate TorButton's functionality via these steps.

# Close Tor Browser. <br />
# Get a new identity on Whonix-Gateway using [[Tor Controller|arm]]. <br />
# Start Tor Browser again. <br />
# Done.

{{Anchor|Change/Remove Proxy Setting}}
{{Anchor|Change / Remove Proxy Setting}}

= Start Tor Browser in Qubes DVM Template =
<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
[[Tor Browser#DVM Template|Discouraged]]! To start Tor Browser from the command line or in debugging mode in a Qubes DVM Template, please press Expand on the right.
<div class="mw-collapsible-content">
{{Open a Whonix-Workstation Terminal}}

The user has two options. To start Tor Browser "normally" from the terminal. <ref><i>/usr/bin/torbrowser</i> simply navigates to the Tor Browser folder and runs <i>./start-tor-browser</i>. The former has more features like reporting error conditions or the absence of a Tor Browser folder, generation of non-zero exit code failures, and more.</ref>
Change into the Tor Browser folder.

{{CodeSelect|code=
cd /var/cache/tb-binary/.tb/tor-browser/Browser
}}

Start Tor Browser in debugging mode.

{{CodeSelect|code=
./start-tor-browser --debug
}}

Note: Tor Browser can also be started manually without the <code>--debug</code> argument.
</div>

= Proxy Settings =
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = These steps are usually only needed for advanced tunneling scenarios.
}}

== Remove Proxy Settings ==
To remove Tor Browser proxy settings (set no proxy), apply the following instructions.
{{Tor_Browser_Remove_Proxy_Settings}}

{{Anchor|Tor Browser Proxy Configuration}}

== Change Proxy Settings ==
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = These instructions <u>do not</u> apply to accessing [[Tor_Browser#Local_Connections|local web-interfaces]].
}}


{{Template:TorBrowser_Proxy_Configuration}}

= Local Connections Exception Threat Analysis =
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = This section applies to users who are configuring an exception for [[Tor_Browser#Local_Connections|Local Connections]] in Tor Browser.
}}


According to [https://bugzilla.mozilla.org/show_bug.cgi?id=354493 this] Firefox ticket, JavaScript can be abused to scan internal networks, fingerprint devices, and make malicious commands to those devices if they have a web interface.

In Whonix, there are no embedded devices attached to an internal network; it is isolated and untrusted. However, malicious Javascript can reveal to an attacker that a service is running on a localhost port. Consequently, this can reduce the user's anonymity set. Further, daemons listening on the localhost can be maliciously misconfigured, but this has limited impact because traffic is still forced through Whonix-Gateway.

For further reading on this topic, see this related [https://forums.whonix.org/t/workaround-available-i2p-no-longer-works-with-the-latest-tor-browser/182/14 Whonix Forum topic] and [https://trac.torproject.org/projects/tor/ticket/11493 Tor Browser bug report].

The configured exception means a small trade-off in privacy, but it is much safer than using another browser. <ref>
https://trac.torproject.org/projects/tor/ticket/10419#comment:37
</ref>

= tor-launcher vs torbrowser-launcher =
tor-launcher and torbrowser-launcher are two completely different things with similar names:

* [https://lists.torproject.org/pipermail/tor-dev/2013-May/004761.html tor-launcher] ([http://trial.pearlcrescent.com/tor/torlauncher/2013-05-03/SetupWizard/wizard-all.png screenshots] ([http://www.webcitation.org/6RVFMxzEf w])) is a Tor Controller that has replaced [https://dist.torproject.org/vidalia-bundles Vidalia]. It is an add-on that is included in the Tor Browser Bundle (TBB) by default.
* [https://micahflee.com/torbrowser-launcher/ torbrowser-launcher] ([https://micahflee.com/wp-content/uploads/2013/04/tbl.png screenshot]) is an application to download Tor Browser, and is an alternative to [[Tor_Browser/Internal_Updater#Tor_Browser_Downloader_by_Whonix|Tor Browser Updater (Whonix)]] ([https://github.com/Whonix/tb-updater tb-updater]).

== tor-launcher ==
Users should not be concerned that tor-launcher might result in a [[DoNot#Prevent_Tor_over_Tor_scenarios.|Tor over Tor]] scenario, as this is prevented by [[Tor_Browser/Advanced_Users#Proxy_Settings|Whonix proxy settings]]. By default, tor-launcher is disabled in Whonix-Workstation.

In theory, a user could remove tor-launcher from TBB, but this would not make any difference. Taking this step is untested and seems unlikely to provide any additional advantages. For that reason, it is best to leave it enabled so the user has the same tested and functional setup as everyone else.

tor-launcher is not yet available for use in Whonix-Gateway. <ref>https://phabricator.whonix.org/T118</ref>

== torbrowser-launcher ==
[[Tor_Browser/Internal_Updater#Tor_Browser_Downloader_by_Whonix|Tor Browser Updater (Whonix)]] ([https://github.com/Whonix/tb-updater tb-updater]) is installed by default and specifically designed to be functional when installed alongside torbrowser-launcher. A possible long-term development goal in Whonix is to deprecate tb-updater and instead install torbrowser-launcher by default. See this [https://forums.whonix.org/t/using-torbrowser-launcher-instead-of-tb-updater-in-whonix forum development discussion] if that is of interest.

= Platform-specific Issues =
== Qubes-Whonix ==
{{Anchor|Running Tor Browser in Qubes TemplateVM}}
=== Running Tor Browser in Qubes TemplateVM or DVM Template ===
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Do not start Tor Browser in the <code>whonix-ws</code> TemplateVM or <code>whonix-ws-dvm</code> DisposableVM-TemplateVM! It is unexpected behavior and dangerous.
}}


<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
To understand why, please press on Expand on the right.
<div class="mw-collapsible-content">
* Users are expected to use Tor Browser in its stock configuration with as few modifications as possible. This is in accordance with upstream recommendations by The Tor Project.
* By starting Tor Browser in DVM Templates, users connect to the Internet with the browser and thereby risk compromising the DVM Template and all DisposableVMs based on that DVM Template.
* Starting Tor Browser creates various files. Any of these files might make the user [[DoNot#Do_not_confuse_Anonymity_with_Pseudonymity|pseudonymous rather than anonymous]], even if they are designed against this. The user does not want all TemplateBasedVMs based on that TemplateVM to be linked to the same pseudonym.
* It is far safer to start Tor Browser for the first time in the TemplateBasedVM, rather than TemplateVM. The user cannot expect Tor Browser to be perfect and for no bugs to be revealed later on. Current and past Tor Browser issues support this assertion; for example, see [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_information&status=needs_review&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-linkability here] and [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_review&status=needs_revision&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-fingerprinting here].
</div>
</div>

=== tb-updater in Qubes TemplateVM ===
Tor Browser is installed by default in Whonix-Workstation.

'''Default Behavior'''

Whonix-Workstation builds by default automatically run [[Tor_Browser/Internal_Updater#Tor_Browser_Downloader_by_Whonix|Tor Browser Downloader by Whonix]] ({{Code2|tb-updater}} package) ({{Code2|update-torbrowser}}) following its initial installation within chroot. If the attempt to run the {{Code2|tb-updater}} package is unsuccessful, then it will fail closed by default and nothing will be installed. As a consequence, this could lead to an error while building Whonix images from source code or when [[Dev/Installation_from_Repository|installing Whonix from the repository]]. Although this is undesirable behavior, developers have still decided to install Tor Browser by default in Whonix-Workstation. This means the only way to ensure Tor Browser is really installed by default is to also fail closed when necessary.

Qubes-Whonix-Workstation TemplateVMs by default automatically run {{Code2|update-torbrowser}} during upgrades of [[Tor_Browser/Internal_Updater#Tor_Browser_Downloader_by_Whonix|Tor Browser Downloader by Whonix]] ({{Code2|tb-updater}} package). If the {{Code2|update-torbrowser}} process fails, it will fail open by default. In this case, a terminal message will inform that no new Tor Browser could be downloaded, but apt-get will terminate normally. This is necessary to implement the Qubes-Whonix feature ensuring an [https://phabricator.whonix.org/T417 up-to-date version of Tor Browser] is available in freshly created AppVMs. <ref>Which is in turn inherited from updated TemplateVMs.</ref>

'''Update Failures'''

If an update failure occurs, this only poses a small inconvenience. The problem is easily solved by either using Tor Browser's 

* running [[Tor_Browser/Internal_Updater#Tor_Browser_Downloader_by_Whonix|Tor Browser Downloader by Whonix]] in Whonix-Workstation TemplateVM <code>whonix-ws</code>) or in a TemplateBased AppVM such as <code>anon-whonix</code>
* [[Tor_Browser/Internal_Updater#Tor_Browser_Internal_Updater|Internal Updater]] in a TemplateBased AppVM such as <code>anon-whonix</code> or,
* by [[Tor_Browser/Internal_Updater#Tor_Browser_Manual_Update|manually downloading]] in a TemplateBased AppVM such as <code>anon-whonix</code>.

''' Optional Package Configuration'''

Actions of the tb-updater package can be optionally configured by the user.

{{Open with root rights|filename=
/etc/torbrowser.d/50_user.conf
}}

When the tb-updater package is upgraded in the Qubes-Whonix-Workstation TemplateVM, by default a hard-coded <ref>In the tb-updater package.</ref> version Tor Browser tarball and signature is automatically downloaded. In order to disable this, add.

{{CodeSelect|code=
tb_install_follow=false
}}

Save.

'''Technical Details'''

By default, during the Debian maintainer postinst script run in Qubes-Whonix-Workstation TemplateVMs, the folders <i>/var/cache/tb-binary/.cache/tb/</i> and <i>/var/cache/tb-binary/.tb/tor-browser</i> will be deleted if they exist. tb-updater will then download files to <i>/var/cache/tb-binary/.cache/tb/</i>.

<pre>
find /var/cache/tb-binary/.cache/tb/
</pre>

<pre>
/var/cache/tb-binary/.cache/
/var/cache/tb-binary/.cache/tb
/var/cache/tb-binary/.cache/tb/files
/var/cache/tb-binary/.cache/tb/files/sha256sums.txt.asc
/var/cache/tb-binary/.cache/tb/files/tor-browser-linux64-5.5.4_en-US.tar.xz
/var/cache/tb-binary/.cache/tb/files/sha256sums.txt
/var/cache/tb-binary/.cache/tb/temp
/var/cache/tb-binary/.cache/tb/temp/tar_fifo
/var/cache/tb-binary/.cache/tb/temp/tor_check_bootstrap_helper_bootstrap_file
/var/cache/tb-binary/.cache/tb/temp/sha256_output
/var/cache/tb-binary/.cache/tb/temp/pv_wrapper_fifo
/var/cache/tb-binary/.cache/tb/temp/tbb_remote_folder
/var/cache/tb-binary/.cache/tb/gpgtmpdir
/var/cache/tb-binary/.cache/tb/gpgtmpdir/secring.gpg
/var/cache/tb-binary/.cache/tb/gpgtmpdir/pubring.gpg~
/var/cache/tb-binary/.cache/tb/gpgtmpdir/pubring.gpg
/var/cache/tb-binary/.cache/tb/gpgtmpdir/gpg_bash_lib_internal_gpg_verify_status_fd_file
/var/cache/tb-binary/.cache/tb/gpgtmpdir/trustdb.gpg
/var/cache/tb-binary/.cache/tb/gpgtmpdir/gpg_bash_lib_internal_gpg_verify_output_file
</pre>

After gpg verification, tb-updater will extract the Tor Browser archive to <i>/var/cache/tb-binary/.tb.</i>

<pre>
find /var/cache/tb-binary/.tb
</pre>

<pre>
/var/cache/tb-binary/.tb/tor-browser/...
</pre>

In essence, when a Qubes-Whonix-Workstation AppVM is booted for the first time, the systemd unit file <i>/lib/systemd/system/tb-updater-first-boot.service</i> <ref>https://github.com/Whonix/tb-updater/blob/master/lib/systemd/system/tb-updater-first-boot.service</ref> runs <i>/usr/lib/tb-updater/first-boot-home-population</i>. <ref>https://github.com/Whonix/tb-updater/blob/master/usr/lib/tb-updater/first-boot-home-population</ref> That script copies <i>/var/cache/tb-binary</i> to <i>/home/user</i>. 

The result is.

<pre>
ls -la /home/user/.tb
</pre>

<pre>
output... TODO
</pre>

<pre>
ls -la /home/user/.cache/tb
</pre>

<pre>
output... TODO
</pre>

'''Creating Whonix Using the Build Script'''

If users build Qubes-Whonix with the build script and want to fail open in general, then before building in chroot, a file <i>/etc/torbrowser.d/50_user.conf</i> must be created with the following content.

{{CodeSelect|code=
anon_shared_inst_tb=open
}}

If users build Qubes-Whonix with the build script and want to skip the initial download of Tor Browser, then before building Whonix in chroot, a file <i>/etc/torbrowser.d/50_user.conf</i> must be created with the following content.

{{CodeSelect|code=
tb_install_in_chroot=false
}}

=== tb-updater in Qubes DVM Template ===
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Users should '''not''' launch Tor Browser Downloader by Whonix in DVM Templates (<code>whonix-ws-14-dvm</code>)!
}}


The only safe place to run Tor Browser Downloader by Whonix is in either:

* The TemplateVM (<code>whonix-ws</code>); or
* The AppVM which is based on this template (<code>anon-whonix</code>). 


The reason is because Tor Browser is stored in ''/var/cache/tb-binary'' which is non-persistent in Qubes' DVM Template (<code>whonix-ws-14-dvm</code>), but persistent in Qubes' TemplateVM (<code>whonix-ws</code>).

{{Qubes persistence}}

Users can learn more about persistence [https://www.qubes-os.org/doc/templates/#important-notes-r40 here] or [[Dev/Qubes#Qubes_Persistence|here]].

Updating Tor Browser in Qubes' TemplateVM <code>whonix-ws</code> is sufficient to make a copy of the latest Tor Browser available to all new AppVMs based upon it.

=== DVM Template Customization ===
If you insist on starting <code>torbrowser</code> / <code>update-torbrowser</code> in DVM Template - discouraged - see above!

In Whonix-Workstation TemplateVM <code>whonix-ws-14</code>.

{{Open with root rights|filename=
/etc/torbrowser.d/50_user.conf
}}

Paste.

{{CodeSelect|code=
tb_qubes_dvm_template() {
   true
}
}}

Save.

Shutdown Whonix-Workstation TemplateVM <code>whonix-ws-14</code>.

{{CodeSelect|code=
sudo poweroff
}}

(Re)start DVM Template (<code>whonix-ws-14-dvm</code>).

Done. In result the user can start <code>torbrowser</code> and <code>update-torbrowser</code> in DVM Template.

=== Split Tor Browser for Qubes ===

TODO: Try, review and document [https://phabricator.whonix.org/T585 Qubes' Split Tor Browser].

== Whonix-Custom-Linux-Workstation ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' These instructions are new and only for willing testers. Some connectivity issues may be experienced. Please [[contribute]] by testing and finishing these instructions.
}}


These instructions have been tested with Tor Browser v6.0.1. Connectivity might break in later Tor Browser versions, particularly if developers modify how Tor Browser networking is configured. <ref>
Once Tor Browser moves to SocksSocket, these instructions will certainly no longer work. References:

* https://trac.torproject.org/projects/tor/ticket/14270
* https://phabricator.whonix.org/T192
</ref>

'''1. [[Manually_Downloading_Tor_Browser|Manually Download and Install Tor Browser]]'''

'''2. Set Multiple Environment Variables'''

{{Qubes persistence note}}
<br />
{{Open with root rights|filename=
/etc/environment
}}

Add.

<pre>
## Deactivate tor-launcher,
## a Vidalia replacement as browser extension,
## to prevent running Tor over Tor.
## https://trac.torproject.org/projects/tor/ticket/6009
## https://gitweb.torproject.org/tor-launcher.git
TOR_SKIP_LAUNCH=1

## Environment variable to disable the "TorButton" ->
## "Open Network Settings..." menu item. It is not useful and confusing to have
## on a workstation, because this is forbidden for security reasons. Tor must be
## configured on the gateway.
TOR_NO_DISPLAY_NETWORK_SETTINGS=1

## environment variable to skip TorButton control port verification
## https://trac.torproject.org/projects/tor/ticket/13079
TOR_SKIP_CONTROLPORTTEST=1
</pre>

Save and reboot.

From this point, only the browser component of Tor Browser will be started.

'''3. Verify Environment Variables'''

{{CodeSelect|code=
env | grep -i tor
}}

The output should show.

<pre>
TOR_NO_DISPLAY_NETWORK_SETTINGS=1
TOR_SKIP_CONTROLPORTTEST=1
TOR_SKIP_LAUNCH=1
</pre>

'''4. Configure Network Settings''' <ref>
Learn more about the network settings.

{{Tor Browser Manual Proxy Configuration}}

<pre>
## The following TOR_SOCKS_HOST and TOR_SOCKS_PORT variables
## do not work flawlessly, due to an upstream bug in Tor Button:
##    "TOR_SOCKS_HOST, TOR_SOCKS_PORT regression"
##    https://trac.torproject.org/projects/tor/ticket/8336
TOR_SOCKS_HOST="10.152.152.10"
TOR_SOCKS_PORT="9150"
</pre>
</ref>

Now the file {{Code2|~/.tb/tor-browser/Browser/TorBrowser/Data/Browser/profile.default/user.js}} must be created. This presupposes Tor Browser has been installed as per step 1 and that a folder {{Code2|~/.tb/tor-browser}} exists. If Tor Browser was installed to another folder, the the path must been adjusted.

{{Open File|filename=
~/.tb/tor-browser/Browser/TorBrowser/Data/Browser/profile.default/user.js
}}

Add.

<pre>
user_pref("extensions.torbutton.use_privoxy", false);
user_pref("extensions.torbutton.settings_method", "custom");
user_pref("extensions.torbutton.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.socks_port", 9100);
user_pref("network.proxy.socks", "10.152.152.10");
user_pref("network.proxy.socks_port", 9100);
user_pref("extensions.torbutton.custom.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.custom.socks_port", 9100);
user_pref("extensions.torlauncher.control_host", "10.152.152.10");
user_pref("extensions.torlauncher.control_port", 9052);
</pre>

Save.

The process is now complete.

== Windows ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' ''Untested and unfinished.'' Please [[contribute]] by testing and finishing these instructions.
}}


These steps are required to use Tor Browser when operating a [[Other_Operating_Systems|Custom-Whonix-Workstation]], specifically a Windows-Whonix-Workstation.

'''1. Install Tor Browser'''

* [[Manually_Downloading_Tor_Browser|Download Tor Browser]] from [http://rqef5a5mebgq46y5.onion/torbrowser/ The Tor Project].
* Verify the download.
* Extract the download.


'''2. Use Tor Browser without Bundled Tor'''

Create a new text file in the folder where Tor Browser was extracted. For example, the file could have the following name.

<pre>
Start TB without Tor.bat
</pre>

Add the following content to that file. <ref>It is necessary to set the <code>SET TOR_SKIP_LAUNCH=1</code> environment variable, then start Tor Browser. The Tor Browser Launcher add-on will detect this, skip the connection wizard and skip launching Tor.</ref>

<pre>
SET TOR_SKIP_LAUNCH=1

"Start Tor Browser.lnk"
</pre>

Save.

'''3. Configure Network Settings'''

Start Tor Browser. 

The following links for removing and changing proxy settings do not apply one-to-one for Windows! [[#Remove Proxy Settings|Removal]] of proxy settings is best avoided, while [[#Change Proxy Settings|changing]] proxy settings is a better choice. 

How this is accomplished on Windows is currently undocumented, but user contributions to finish these instructions are most welcome.

{{Tor Browser Manual Proxy Configuration}}
<br />
'''4. Figure Out Missing Instructions'''

Missing instructions need to be ported from Linux-specific to Windows-specific, see [[Tor_Browser/Advanced_Users#Whonix-Custom-Linux-Workstation|Whonix-Custom-Linux-Workstation]].

The process is now complete.

= Debugging =
{{Open a Whonix-Workstation Terminal}}

Navigate to the Tor Browser folder.

{{CodeSelect|code=
cd ~/.tb/tor-browser/Browser
}}

Start Tor Browser from the command line in debug mode.

{{CodeSelect|code=
./start-tor-browser --debug
}}

Type into the address bar.

<code>about:config</code>

Search for the settings below and set their values to match.

<pre>
extensions.torbutton.loglevel | 1
extensions.torlauncher.loglevel | 1

extensions.torbutton.logmethod | 0
extensions.torlauncher.logmethod | 0
</pre>

Close Tor Browser.

Restart Tor Browser.

{{CodeSelect|code=
./start-tor-browser --debug
}}

<ref>
https://www.torproject.org/docs/torbutton/en/design/
</ref>

= Footnotes / References =
{{reflist|close=1}}

= License =

<pre>Whonix Tor Browser wiki page Copyright (C) Amnesia <amnesia at boum dot org>
Whonix Tor Browser wiki page Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>

This program comes with ABSOLUTELY NO WARRANTY; for details see the wiki source code.
This is free software, and you are welcome to redistribute it
under certain conditions; see the wiki source code for details.</pre>

{{Footer}}

[[Category:Documentation]]
