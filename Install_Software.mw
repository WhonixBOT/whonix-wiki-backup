<translate>

{{Header}}
{{#seo:
|description=Installing additional Software on Whonix. Safety considerations.
|image=https://www.whonix.org/w/images/7/7e/Software-871026-640.jpg
}}

= Easy =
{{mbox
| image   = [[File:Ambox_notice.png|40px]]
| text       =
[[Qubes|Qubes-Whonix]] users need to install persistent software in the Whonix-Workstation TemplateVM(s).  <br />Using ''apt-get'' in the AppVM will only install software for the current session, with changes being lost when the VM is shut down.
}}
<br />
A primary Whonix goal is to greatly reduce the risk posed by (additional) software installations that are not exclusively designed to work with Tor.

Users can install any software inside Whonix-Workstation using ''apt-get'', since it is [[Support#Free_Support_Principle|based on Debian]]. However, this is <i>not</i> a recommendation for installing additional software.

Whonix is currently the most secure platform for running Tor-unsafe applications like Adobe Flash; see the [[Comparison_with_Others#Flash_.2F_Browser_Plugin_Security|operating system comparison]].

The [[Software|Whonix software]] page lists:

* Pre-installed Whonix applications which are available for different tasks.
* Recommended software for different user activities.
* Safety advice.
* Installation instructions.

== Prefer Packages from Debian Stable Repository ==

Users who decide to install new software after considering the risks should preference Debian's Stable repository,  rather than the Testing / Unstable or third party repositories. Generally avoid manually installing packages (even trusted ones), since they tend not to get updated by the user in a timely fashion.

The [https://www.debian.org/doc/manuals/debian-faq/ch-choosing.en.html#s3.1 Debian FAQ] provides a strong rationale for using the stable repository:

<blockquote>
Stable is rock solid. It does not break and has full security support. But it not might have support for the latest hardware.


If security or stability are at all important for you: install stable. period. This is the most preferred way.


Since there is typically over 1 year between releases you might find that stable contains old versions of packages. However, they have been tested in and out. One can confidently say that the packages do not have any known severe bugs, security holes etc., in them. The packages in stable integrate seamlessly with other stable packages. These characteristics are very important for production servers which have to work 24 hours a day, 7 days a week.


On the other hand, packages in testing or unstable can have hidden bugs, security holes etc., Moreover, some packages in testing and unstable might not be working as intended.
</blockquote>

Also, [http://backports.debian.org Debian Backports] should be used conservatively:

<blockquote>
Backports cannot be tested as extensively as Debian stable, and backports are provided on an as-is basis, with risk of incompatibilities with other components in Debian stable. Use with care!
</blockquote>

= GUI Applications with Root Rights =
Never login as {{Code2|root}} user ({{Code2|sudo su}}) or run GUI applications using {{Code2|sudo application}}. This will fail and is a limitation inherited from Debian. If a user attempts this action, error messages like those below will appear.

<pre>
No protocol specified
</pre>

<pre>
cannot connect to X server :0
</pre>

As a KDE user (Whonix default) use {{Code2|kdesudo application}}. Otherwise, use {{Code2|gksudo application}}. For example.

{{Open with root rights|filename=
/etc/tor/torrc
}}

= More Security =

== Introduction ==

* Users are free to install their favorite software packages. Almost any application can be installed, with a few exceptions for programs that are [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO#Howtotorifyspecificprograms impossible to torify].
* Users are protected from IP and DNS leaks (see above for details).
* Users have some protection against [[Protocol-Leak-Protection and Fingerprinting-Protection|protocol leaks and fingerprinting]], but this is far from perfect.

* Users must still try to prevent any other [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO#Protocolleaks protocol leaks] using the [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO "Torify: How-to" guide], but most of those are mitigated by Whonix.
* When updating with <i>apt-get</i>, information about which software packages and versions have been installed will leak unless [[Security_Guide#Onionizing_Repositories|Tor hidden services are used for repositories]], see [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO#Softwareupdaters software updaters]. This information cannot be directly linked to any other activity like web browsing, because the Whonix <i>apt-get</i> uwt wrapper forces it to pass through its own circuit. However, there are still risks that updates could be [[Stream Isolation|correlated]] with the same pseudonym. <ref>For example, if a user announced somewhere that they utilized software X and also have a specific application set x, y, and z installed, this information may become available to an adversary. If circuit-isolated <i>apt-get</i> passes through any Tor exit relays, mirrors or ISPs controlled by the adversary, then they may guess it is the same pseudonym which is running it. In that case the adversary gets a list of the user's installed packages, and can run a stale mirror attack (only if the user has a [[Ubuntu#About_Ubuntu|custom Ubuntu build]]), or may try other attacks against <i>apt-get</i>.</ref> <ref>As per the previous note, this threat equally applies to users who run a hidden service with a specific set of server software, for example apache, mediawiki, phpbb, and others.</ref>
* If additional software is installed, this increases the attack surface of the platform. <ref>https://en.wikipedia.org/wiki/Attack_surface</ref>


For greater security when updating, follow the guidelines [[#How to install or update with most caution?|below]].

Extra care is needed when adding extra custom repositories, especially Personal Package Archives (PPAs). Single developers are more easily pressured and/or likely to have malicious intent than the main distribution repositories.

Please read the [[Protocol-Leak-Protection and Fingerprinting-Protection|protocol leak and fingerprinting protection]] entry first. Information highlighted includes the fact that many leaks, such as DNS and IP-related leaks, do not apply to Whonix and so on.

The [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO Torify: How-to] contains documentation about [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO#Protocolleaks protocol leaks] and how to mitigate them.

Also see [https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxyLeaks Transparent Proxy Leaks], which is particularly relevant for Microsoft Windows.

== How-to: Install or Update with Utmost Caution ==

# Stop all activities and shutdown any open applications like Tor Browser.
# Change the Tor circuit (this step may not apply if the user is running a hidden service). <ref>One option is using [[Tor Controller|Arm]]. Navigate to the Whonix-Gateway (<i>sys-whonix</i> in Qubes-Whonix) and select <code>Arm - Tor Controller</code>. Press <code>n</code> for a "New Identity", or alternatively: <code>Press "m" for the menu</code> -> <code>Scroll down to ''New Identity''</code> -> <code>Press enter</code>.</ref>
# Update using apt-get after a random delay. By default, a new Tor circuit is generated after 10 seconds.
# Change the Tor circuit again.
# Continue user activities after another random delay period.

= Whonix-Workstation is Firewalled =
'''Note:''' This is just an informational resource for users interested in server software or other advanced / uncommon applications.

The presence of a Whonix-Gateway's firewall means for Whonix-Workstation:

* Incoming connections are not supported.
** However, if outgoing connections are made, then incoming connections are accepted for web browsing, IRC, or other relevant applications.
** Server [[Ports|ports]] ("open ports") are blocked.
** The Ident Protocol / web server listening port is not reachable, unless it is explicitly configured.
* [[Hidden Services]] can be hosted.
* The firewall is found on the Whonix-Gateway: <i>{{WhonixFirewall}}</i>
* Standard DNS requests on UDP port 53 are redirected to Tor's DnsPort. <ref>If the DNS server is changed in Whonix-Workstation's <i>/etc/resolv.conf</i>, this will probably have no effect. The reason is the firewall on Whonix-Gateway will redirect all those requests to Tor's DnsPort. The working exception to this rule is when users tunnel / encrypt DNS requests (DNSCrypt, httpsdnsd), as per the [[Secondary DNS Resolver|secondary DNS resolver instructions]].</ref>


Also note:

* [[Tor#UDP|Tor does not support UDP. This is not a Whonix issue.]]
* Tor only [https://trac.torproject.org/projects/tor/wiki/org/roadmaps/Tor/IPv6 partially supports IPv6], although full implementation is likely in the near term. <ref>The only missing elements at the time of writing were: automatic client connections and inter-relay connections via IPv6. Bridges are fully supported.</ref> This is not a Whonix issue.
* {{TorifiedGateway}} Users should read the footnotes on the left-hand side.


Whonix's firewall on the Whonix-Gateway is very restrictive. It can be made even more restrictive by activating <i>#OptionalFeatureNr.3#</i> within the firewall script. It is possible to limit which outgoing ports are redirected to Tor's TransPort. Depending on what the user is trying to achieve, it could also be useful to remove all SocksPorts.

Related:<br />
* [[Whonix-Workstation_Firewall|Whonix-Workstation Firewall]]
* [[Ports]]

= Advanced =
== Backports ==
{{CodeSelect|code=
sudo su -c "echo -e 'deb http://http.debian.net/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"
}}

{{Template:Apt-Pinning}}

{{Update}}

{{CodeSelect|code=
sudo apt-get update
}}

Install software.

{{CodeSelect|code=
sudo apt-get -t jessie-backports install packagename
}}

* Replace <code>packagename</code> with the package you actually want to install.

== Reinstallation of Packages ==
Mostly as per [[Support#Free_Support_Principle|free support principle]]. Normal Debian.

Explained using the {{Code2|iceweasel}} package. You can substitute {{Code2|iceweasel}} with many other packages, that do not have too many dependencies. Do not try this with any packages that are required for connectivity such as {{Code2|tor}}, as reinstallation would be very difficult and [[unsupported]].

Only complication sometimes is, such as in the example of the {{Code2|iceweasel}} package that the {{Code2|anon-workstation-packages-recommended}} package depends on {{Code2|iceweasel}}. And the {{Code2|whonix-workstation}} package depends on {{Code2|anon-workstation-packages-recommended}}.

Update your package lists and upgrade before you start. See [[Update]] for instructions.

Purge the package you want to reinstall.

{{CodeSelect|code=
sudo apt-get purge iceweasel
}}

Will show something like this.

<pre>
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages will be REMOVED:
  anon-workstation-packages-recommended* iceweasel* whonix-workstation*
0 upgraded, 0 newly installed, 3 to remove and 0 not upgraded.
After this operation, 90.8 MB disk space will be freed.
Do you want to continue? [Y/n] 
(Reading database ... 100681 files and directories currently installed.)
Removing whonix-workstation (3:2.9-1) ...
Removing anon-workstation-packages-recommended (3:2.9-1) ...
Removing iceweasel (38.4.0esr-1~deb8u1) ...
Removing 'diversion of /usr/bin/firefox to /usr/bin/firefox.real by iceweasel'
Purging configuration files for iceweasel (38.4.0esr-1~deb8u1) ...
Processing triggers for hicolor-icon-theme (0.13-1) ...
Processing triggers for menu (2.1.47) ...
Processing triggers for man-db (2.7.0.2-5) ...
Processing triggers for desktop-file-utils (0.22-1) ...
Processing triggers for qubes-core-agent (3.0.20-1+deb8u1) ...
Processing triggers for mime-support (3.58) ...
</pre>

The packages {{Code2|anon-workstation-packages-recommended}} and {{Code2|whonix-workstation}} have been inadvertently uninstalled due to technical limitations. <ref>[[Whonix_Debian_Packages#Technical_Stuff]]</ref> We will reinstall them later.

Delete user config folder if that is what you want. In the example of iceweasel, that would be the following. (Differs depending on package.)

{{CodeSelect|code=
rm -r ~/.mozilla
}}

Reinstall. (You could also drop the <code>--no-install-recommends</code> as a matter of preference.)

{{CodeSelect|code=
sudo apt-get install --no-install-recommends iceweasel anon-workstation-packages-recommended whonix-workstation
}}

Related to: [[Whonix Debian Packages]].

=Foreign Sources=

In most cases, the programs of the official Debian repositories is enough. Thousands of programs can be installed in a couple of steps. These packages are constantly maintained for bug/security fixes and tightly integrated to provide a stable distribution. However, the Linux software scene is very dynamic and sometimes you will want to use software that has not been packaged in Debian yet.

In these cases it may be necessary to install software from a separate sources, either from third party repositories, as a stand-alone precompiled .deb or directly compiled source programs.

== Risks ==
The use of foreign sources should be kept to a minimum, as it could cause problems. Note that this is not an absolute outcome of installing third party software, but a warning about possible worst case scenarios.

=== Security Issues ===
Keep in mind that there are important security implications for the system. Installing software on your computer is tantamount to granting root privileges to the developers. When installing software from dubious sources it is in fact possible that important system components are replaced with malicious versions to install backdoors or "Trojan horses" on the system.

In general, the installation of software is a matter of trust. The fact is that you have to trust every source from which you installed software. Trust has to be present on two levels. First, you have to trust that the developers have integrity and secondly you have to place your trust in the community to notice anything suspicious in the code which could be a result of the developers machines being compromised. With reproducible package builds on the horizon, the security risk will be minimal.

=== Dependency Hell ===
Manually installed packages can contain library versions not available in the standard repositories. This messes up dependency resolution when installing additional software from the official repository. Individual applications are to be considered less critical in this context, but when it comes to important system libraries in the third-party software, complications are inevitable.

Depending on how severe, upgrades to the next version of the operating system might fail and it could become non bootable or have other stability issues.

=== Mitigation ===
You can reduce [[#Security Issues|security risks]] and eliminate [[#Dependency Hell|the risk to make your other workstation unusable]] by using [[Multiple Whonix-Workstations]].

= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
</translate>
