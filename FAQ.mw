{{Header}}
{{#seo:
|description=FAQ. Frequently Asked Questions.
|image=https://www.whonix.org/w/images/7/78/Faq-463379640.jpg
}}
= Alternative Operating Systems =

{{Anchor|Why aren't you using OpenBSD, it is the most secure OS ever!!!1!}}
== Why isn't OpenBSD Used? ==

This FAQ entry addresses the suggestion that Whonix should be based on OpenBSD rather than Debian. The opinion provided below is based on the perspective of Whonix developers. <ref>Last updated in January 2018.</ref>

The OpenBSD FAQ states: [http://www.openbsd.org/faq/faq1.html#WhyUse source] ([http://www.webcitation.org/6RNq1f996 w])
<blockquote>
OpenBSD is thought of by many security professionals as the most secure UNIX-like operating system, as the result of a never-ending comprehensive source code security audit. 
</blockquote>

The landing page for OpenBSD also claims: <ref>https://www.openbsd.org/</ref>

<blockquote>Only two remote holes in the default install, in a heck of a long time!</blockquote>

These contentions are debatable and raises the question, "Who are those ''many'' security professionals and how thoroughly is the code reviewed?".

According to [http://www.bsdstats.org/ bsdstats.org] ([http://www.webcitation.org/6F4tFWwNy w]), OpenBSD has very few users. Although bsdstats is not representative of the total population of OpenBSD users due to the opt-in data collection program, 17 users at the time of writing is a very small figure. By comparison, TrueOS has 9,172 users in early 2018.

If OpenBSD cannot attract a critical mass of users, then ordinary crackers, hackers and the security research community are unlikely to gravitate to the distribution in contrast to more popular operating systems. At the same time targeted attacks become easier, because people who are paid to find exploits can find them more easily. Limited human resources inevitably means the code will remain more vulnerable to security flaws, since they are less likely to be identified.

As an example, see [http://thread.gmane.org/gmane.os.openbsd.bugs/18754 security vulnerability - NTP not authenticated]. This six year old bug affects everyone using the distribution, but it does not appear anyone is stepping forward to fix it. The suggested solution was to authenticate the connection to the NTP server, but this would not be possible in Whonix for several reasons. The Whonix design focuses on distributing trust and not using only one NTP server. Further, Whonix depends on free services which are available to anyone, ruling out  a solution that requires a personal server. Even if Whonix used authenticated NTP, it has been pointed out <ref>https://twitter.com/feldpos/status/493426189282054144</ref> that the clock could not be moved more than 600 seconds. This is better than nothing, but still inadequate for adversaries who are capable of moving the clock more than 600 seconds, harming anonymity/privacy in the process (see [[Dev/TimeSync]] for further details).

In addition, previously the OpenBSD website was not reachable over SSL. <ref>A Tor onion service is still not available.</ref> Therefore, at that time users were unable to securely view the OpenBSD site, since a man-in-the-middle attack would have been trivial to perform.

OpenBSD simply lacks innovative security improvements which are available in modern platforms like Qubes OS, despite their grandiose claims.

== Why isn't FreeBSD Used? ==

This FAQ entry addresses the suggestion that Whonix should be based on FreeBSD rather than Debian. The opinion provided below is based on the perspective of Whonix developers. <ref>Last updated in January 2018.</ref>

It is difficult and time consuming to try and list all the disadvantages of using FreeBSD, such as highlighting non-existent security features. The onus is on FreeBSD proponents to manually search for relevant features (or  lack thereof) and present an objective case for its adoption.

To avoid presenting information that will quickly become out-of-date or that may insult FreeBSD adherents, it is better to avoid definitive security statements and instead ask appropriate questions which might affect the usability, security, anonymity and wide-scale adoption of Whonix. For instance:

* Does FreeBSD have a secure-by-default update mechanism? 
* By default, will every (new) user download come from an existing ''signed'' repository?
** If not, what special settings are required?
** Are users expected to run their own repository?
* Does FreeBSD defend against outdated metadata; for example, can a man-in-the-middle use a roll back or freeze attack against the repository? 
* Does FreeBSD defend against [https://www.cs.arizona.edu/stork/packagemanagersecurity/ various attacks on package managers?] ([http://www.webcitation.org/6Ev4smCoD w]) 
* Does FreeBSD defend against attacks on the software update process by using the [https://theupdateframework.github.io TUF threat model] ([http://www.webcitation.org/6Ev4owhEP w])?

Research which might provide a strong case for FreeBSD does not exclude the possibility of weaknesses or missing security features. The best way to determine the strength of the platform and its relative resilience is to directly ask the developers of that project. Honest replies can reasonably be expected from vibrant, open source communities.The only problem is, the Linux/BSD ecosystems have hundreds of distributions and it is a daunting prospect to rank their merits in this way.

Ultimately, the burden of proof falls on FreeBSD advocates (and not Whonix developers) to prove that it is the most secure distribution available. Properly researched contributions that answer the questions above would be a good start, along with possibly approaching FreeBSD developers directly. Alternatively, research into why various aforementioned protections are not necessary to improve security would also be welcomed. Until claims about FreeBSD are substantiated, one should not take offense that it has not already been adopted.

== Why isn't OpenWRT Used? ==

[https://openwrt.org/ OpenWRT] is not used for the same reasons outlined above. Further, in early 2018 OpenWRT [https://wiki.openwrt.org/doc/packages does not have signed packages].

== Why isn't SubgraphOS Used? ==

Whonix has taken the decision not to use the [https://subgraph.com/ Subgraph project] for a number of reasons.

=== Development ===

* <b>Future Roadmap:</b> Basing Whonix on Subgraph would tie our future with the viability of the Subgraph project. It is not ideal to rely on an OS in alpha status, particularly when the Debian alternative is rock solid and has decades of development behind it.
* <b>Features:</b> Subgraph has some [[Comparison_with_Others/SubgraphOS|undesirable feature additions]] that add no value. Whonix cannot benefit from Subgraph's manpower if the goals for the development roadmap are fundamentally different.
* <b>Bugs:</b> The plentiful [https://github.com/subgraph/subgraph-os-issues/issues Subgraph bugs] would become Whonix bugs and developers would depend on Subgraph for fixes.
* <b>Programming Language:</b> Subgraph chose different programming languages (like Golang) that are unfamiliar to lead Whonix developers, making customization or modification very difficult.
* <b>Desktop Environment:</b> Whonix Developer HulaHoop has noted that Subgraph features completely rely on the GNOME desktop environment. This is undesirable because it is visually unappealing, has an over-simplified interface and would require any "cloud integration" elements to be removed. Configuring GNOME to approach the specifications already achieved in Whonix would require a lot of effort. <s>Further, Wayland and Flatpak will inevitably reach KDE in the future.</s> Update: Whonix will soon no longer be using KDE by default

=== Source Code / Software ===

* <b>Code Availability:</b> No full source code release to date (early 2018). <ref>https://github.com/subgraph/subgraph-os-issues/issues/153</ref>
* <b>Packaging:</b> The publicly available software exists in a form that is not easily packaged. This would pose a significant maintenance burden for the Whonix team.
* <b>Constraints:</b> Arbitrary limitations are in place, such as repository choices. This can of course be changed, but it is an example of wasted effort in patching the base OS to adapt to our vision.
* <b>Meta-packages:</b> There is no Subgraph meta package that can be installed using [https://github.com/subgraph/subgraph-os-issues/issues/239 "<code>sudo apt-get install subgraph-os</code>" / "<code>debootstrap</code> Subgraph OS"] in order to convert vanilla Debian into Subgraph OS. <ref>Subgraph is a Debian derivative.</ref>

=== Collaboration ===

To date, there has been no cooperation from the Subgraph project developers to correct any of the issues outlined in this section.

= Clock Skew / Time Synchronization =

== How Do I Fix an Incorrect Host Clock? ==

As noted in the [[Dev/TimeSync#Conclusions|wiki:]]

<blockquote>When the user powers on Whonix-Gateway and the host time is grossly inaccurate, it will not be able to connect to the Tor network. After booting Whonix-Gateway, it is recommended to check that the host time is no more than 1 hour in the past or more than 3 hours in the future, otherwise Tor cannot establish circuits.</blockquote>

In Whonix, a correct host time is also critical to prevent or partially mitigate [[Dev/TimeSync#Attacks|TimeSync Attacks]] such as: <ref>Unfortunately Whonix cannot prevent against attacks which replay an old Tor consensus or which attempt to reveal onion services.</ref> 

* Presenting outdated or vulnerable updates and https certificates.
* Potential denanonymization when connected to more than one adversary controlled website.
* Linking of all sessions to the same pseudonym.

Users experiencing Tor connection problems in Whonix should follow [[Troubleshooting#Clock_Fix|these instructions]] to set a correct host and/or Whonix-Gateway clock.

= Compromise Indicators =

{{Anchor|Should I be concerned about... ?}}
== Am I Compromised? ==

If the user notices trivial changes on their system - such as a duplicate deskop icon - it is not evidence of a hack or leak. Similarly, if warning or error messages appear that are difficult to understand, in most cases there is no need for panic. If something unexpected occurs such as the appearance of a "htaccess file in home directory", or graphical glitches emerge in [[Arm]], then it is more likely a harmless bug and/or usability issue rather than a compromise.

Skilled attackers do not leave such obvious traces of their breach. An infection by tailored malware is more plausible in this scenario and virtually impossible to detect by reading random messages in system logs. Even [[Malware_and_Firmware_Trojans#Malware|malware]] that is bought off-the-shelf (malware building toolkits) are unlikely to be discovered by cursory inspections. <ref>Interested readers can verify these claims by researching off-the-shelf malware building toolkits. They are dangerous to install for inexperienced users, but there is a wealth of information online such as screenshots and video tutorials.</ref> [https://en.wikipedia.org/wiki/Rootkit Rootkit] technology is no doubt a standard feature of the various programs.

Strange files, messages or other system behavior could feasibly relate to an attacker wanting the user to find something. However, the likelihood of this kind of harassment is considered low. [https://en.wikipedia.org/wiki/Script_kiddie Script kiddies] ("skiddies") are unskilled attackers who uses scripts or programs to conduct attacks on computer systems and networks, most often with juvenile outcomes. For example, they might use programs to remotely control poorly-secured Windows desktops, trolling their victims from an open, forced chat window, opening their DVD drive and so on. It is improbable that skiddies can achieve similar exploits against Linux, Xen or BSD platforms. <ref>It is unclear if script kiddie programs are readily available for attacking non-Windows users.</ref> Sophisticated attackers generally avoid detection, unless the user is unlucky enough to be a victim of [https://en.wikipedia.org/wiki/Zersetzung Zersetzung] (a psychological warfare technique).

Every forum post and support request requires time that could otherwise be directed to Whonix development. Unless the user believes there is a serious and credible problem, there is no need for a new post. Developers and the Whonix community at large do not have enough time to explain every message that Linux might report. In most cases, they are not important and outside the control of Whonix developers.

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = '''Reminder:''' Whonix is not perfect. The security, anonymity and privacy issues facing society are great, but there are few volunteers who are ''seriously'' investing the effort to challenge and resolve them.
}}


{{Should I be concerned}}

Related:
* [[Browser Tests]]
* [[Dev/Leak Tests|Leak Tests]]

= DNSCrypt =

== Can I Use DNSCrypt in Whonix? ==

DNSCrypt is possible in Whonix; see [[Secondary DNS Resolver]]. <ref>This is not a recommendation to use it.</ref>

== Why not Use DNSCrypt by Default in Whonix? ==

[http://dnscrypt.org/ DNSCrypt] may have good use cases for clearnet activities. However, it is not useful in Whonix and therefore should not be installed and activated by default for everyone. Although some users may have high expectations, DSNCrypt does not magically solve all DNS-related security issues, nor does it implement end-to-end DNS encryption to the destination server. <ref>Conceptually, end-end DNS encryption is illogical. If the IP address of the destination server was known in advance, then DNS would not be required in the first place.</ref> Most important of all, the server will still see all DNS requests in cleartext. <ref>https://security.stackexchange.com/questions/162601/what-are-the-privacy-advantages-of-a-dns-encryption-service-such-as-dnscrypt</ref> 

There are several other reasons why DNSCrypt is not activated by default. Firstly, Tor distributes trust because the DNS server changes as circuits are rotated. For pre-installed applications, circuits are also stream-isolated and change every ten minutes by default. Notably, in early 2018 there are [https://github.com/DNSCrypt/dnscrypt-resolvers/blob/0449410030b784334c53006cf043ccba911fb88b/v1/dnscrypt-resolvers.csv 78 open resolvers] that support the protocol.

Public resolvers supporting DNSCrypt have not yet acted in a way to cause mistrust. However, even if the operators were absolutely trustworthy, complete confidence is also needed in their servers - it is unwise to let the DNS security for all Whonix users depend on a few servers. Another consideration is load balancing. If Whonix relied upon a DNSCrypt supporting server by default, DNS would break for all users if that server ever decided to forbid connections from the Tor network <ref>Due to the Tor network abuse such as DDOS attacks on their servers.</ref> or if the servers went down for maintenance.

For more detailed information about DNSCrypt, refer to these related [https://sourceforge.net/p/whonix/discussion/general/thread/3c99944b/ forum] [https://sourceforge.net/p/whonix/discussion/general/thread/e659f3ad/#bff5 posts].

== Can I Use DNSCrypt on the Host or Router for Clearnet? ==

This configuration is possible; read the next section before proceeding.

== Does DNSCrypt on the Host or Router Harm Anonymity when Using Tor/Whonix? ==

The short answer to this question is no. The longer answer is DNSCrypt on the host or in the router only affects clearnet activities. Tor assumes in advance that a user's local network and ISP are completely unsafe and untrustworthy. Tor and Whonix are unaffected by DNS settings that are made on the host or in the router.

It is debatable whether DNSCrypt is useful or not for clearnet activities since there are various pros and cons. It is useful when using foreign or untrusted Wi-Fi networks that are shared with others, since DNS requests could potentially be modified or read. That said, trust is just shifted from the ISP to a DNSCrypt-supporting DNS server, such as OpenDNS. If the DNS server supporting DNSCrypt leaks a user's network address and/or logs queries as part of their business model, then it might actually be worse than using the ISP! It is hard to mount an argument for which party is more trustworthy, the ISP or a third party provider.

= Linux Distributions =

== Is the Linux User Experience Comparable to Commercial Operating Systems?  == 

When users interact with a Linux operating system like Whonix, they come with certain expectations in regards to their overall experience. For the majority, expectations are based on their familiarity with Windows or macOS, since they dominate the desktop and laptop markets. <ref>Around 95 per cent combined.</ref> These commercial platforms pre-install a wide variety of popular and fully-featured applications, while the graphical user interface (GUI) is easy to use and intuitive. As a consequence, the seamless integration of new system software packages is the rule rather than the exception.

Windows and macOS users are now accustomed to an integrated experience where "everything just works". Attempts to provide Linux users with an equivalent experience have proven to be very difficult and the problem seems insurmountable. Many find the Linux GUI difficult to use and counterintuitive. There are software applications that are similar in design to those found in Windows or macOS, but they often lack many of the same features <ref>Like Skype.</ref> or do not fully integrate with other packages. For newcomers to Linux, it might be difficult to understand how applications with similar design goals can have vastly different cross-platform functionality. Only by comparing the structural differences between a typical corporate hierarchy and a Linux distribution's collaborative effort can the discrepancies be explained.

The following table provides a simplified comparison of the major organizational structural differences. 

'''Table:''' <i>Linux Distribution vs. Commercial Operating System</i> 

{|   class="wikitable"
!  align="left" | 
!  align="left" | Linux Distributions
!  align="left" | Commercial Operating Systems
|-  class="odd"
!  align="left" | Software
|  align="left" | Based on packages from many independent projects which develop software according to their own design goals  
|  align="left" | Centralized (in-house) development with unified design goals
|-  class="even"
!  align="left" | Funding Sources
|  align="left" | Donations, volunteer payments, grants, corporate sponsorship, professional services
|  align="left" | Revenue from software licensing <ref>For example, recent Windows earnings can be found [https://www.windowscentral.com/microsoft-fy18-q1-earnings here].</ref> <ref>Most desktop computers sold worldwide come with Windows pre-installed, generating significant revenue from licensing.</ref>
|-  class="odd"
|-  class="even"
!  align="left" | Funding Amount
|  align="left" | Unprofitable, most are underfunded and depend on volunteers
|  align="left" | Profitable, billion dollar profits are the norm
|-  class="odd"
!  align="left" | Authority to Issue Directives 
|  align="left" | None, can only ask third party projects nicely
|  align="left" | CEO issues directives 
|-  class="odd"
!  align="left" | Human Resources
|  align="left" | Community-based volunteers (limited time and human resources)
|  align="left" | In Windows' case, over 120,000 employees <ref>[https://www.statista.com/statistics/273475/number-of-employees-at-the-microsoft-corporation-since-2005/]</ref>
|-  class="odd"
! align="left"  | Popularity
|  align="left" | ~ 1.7 per cent of the desktop operating system market <ref name="popular">[http://gs.statcounter.com/os-market-share/desktop/worldwide/#monthly-201803-201803-bar]</ref>
|  align="left" | Windows: ~ 82 per cent of the desktop operating system market <ref name="popular" />
macOS: ~ 13 per cent of the desktop operating market <ref>http://gs.statcounter.com/os-market-share/desktop/worldwide/</ref>
|-  class="odd"
! align="left"  | User Experience
|  align="left" | Fragmented
|  align="left" | Unified
|}

=== Software Comparison ===

As shown in the table, Linux distributions are based on many third party projects which develop software according to their own design goals. For instance, an application might be initially developed by a volunteer for Windows and optimized for that platform. Later on, another volunteer joins the project, forks the application and ports it to the Linux platform. When these projects develop software, they do not necessarily prioritize the design goals to suit compatibility with Linux distributions.

Linux distributions can only pick software packages that are already available, meaning the selected packages might fall short of the design goals. Moreover, unlike a traditional company, distributions are not structured with a large number of paid employees. Neither do they have the authority to issue directives to third party projects to make desirable software changes. If a distribution needs package changes from an independent project, there are a few options but they all require time and patience: <ref>If options or features require a substantial time investment, it may be infeasible for a distribution with limited resources to implement the desired changes.</ref> 

* Try to understand the perspective of the third party project.
* Politely ask the project if they would be willing to make the changes.
* Submit code that makes sense from their point of view.
* Patch and/or fork their software.
* Use an alternative package from a different project.

In contrast, commercial operating systems are based on software expressly designed to provide a fully-unified user experience. While Linux distributions rely on third party packages, commercial platforms are developed in large companies with a strict corporate hierarchy. In these companies, the CEO can issue a directive to developers to make any change needed to improve the integrated experience. Any developer who lacks the necessary skills or refuses to make changes is likely to be terminated for non-compliance. The human resources department (representing the CEO) will not tolerate delays in software development, as it might threaten profits.

=== Funding Comparison ===

Linux distributions are based on [[Libre Software]] which can be used freely by anyone. Without a software licensing fee, options to generate a reliable funding stream for development are severely limited. Unless funding is available to hire a large contingent of full-time employees, it is nearly impossible to provide users with a unified experience. Instead, distributions rely primarily on the goodwill of developers who volunteer their time to integrate and maintain software packages. Without a salary, the time developers can devote to the task is necessarily reduced. Although this problem is attributable to the restricted funding sources available, it has less impact for sizeable or popular distributions due to: 

* Donations or volunteer payment-based funding.
* Selling professional services such as technical support, training and consulting.
* Developmental grants.
* Corporate sponsorship.

On the other hand, proprietary operating systems like Windows are funded through the sale of software licenses and are not limited in their ability to generate funding. Licensing generates billions of dollars in revenue which is used to employ a large number of full-time developers. This in turn allows these employees to focus on developing the software packages from the ground up, while remaining focused on the primary design goal: maintaining and improving the "Windows user experience" that the community has come to expect.

=== Unified Linux Experience ===

Based on the preceding sections, it is unrealistic to expect any Linux distribution to provide a user experience identical to Windows or macOS. Linux has gradually improved the quality and consistency of the user experience on various devices, particularly for larger and more popular distributions like Debian, Fedora and Ubuntu. However, it is impossible for most (if not all) distributions to replicate the quality found on commercial platforms. In the case of smaller distributions like Whonix, very limited human resources mean it is out of the question. Instead, developers must spend a large portion of their time on core functionality development.

=== Consequences ===

One obvious impact is that Whonix developers have limited time to answer support requests. Therefore, users are recommended to follow the advice outlined in the [[Support#Free_Support_Principle|Free Support Principle]] chapter before asking for specific help. In addition, users are asked to document any steps that were used to solve problems in the forums and/or wiki, thereby supporting the [[Support#Free Support Principle Rationale|co-developer concept]] which has been adopted by the Whonix project. <ref>Users can contribute in a range of ways, such as by helping to answer questions in the forums.</ref>

= Live Operating System =

== Why not Use a Live CD/DVD as the Whonix-Workstation Operating System? ==

This option was previously discussed in depth and it was decided that Live CD/DVDs are not suitable for Whonix-Workstation.

Advantages:

* Often actively maintained.
* Stabilized.
* Hardened GNU/Linux distribution.
* Advanced features.

Disadvantages:

* No timely security updates.
* Limited persistence.
* Inflexible design.

Another serious disadvantage of Live CD/DVDs in the context of an anonymity-oriented OS is that they often have their own method of Tor enforcement included. In Whonix, this would result in a [[DoNot#Allow_Tor_over_Tor_Scenarios|Tor over Tor]] scenario.

== Will there be a Whonix Live CD or DVD? ==

=== Qubes-Whonix ===
Another promising long term possibility may be running [[Qubes-Whonix]] on [https://www.qubes-os.org Qubes OS] Live DVD/USB, which is currently in [https://www.qubes-os.org/doc/live-usb/ Alpha]. <ref>See also: https://groups.google.com/forum/?_escaped_fragment_=topic/qubes-users/IQdCEpkooto#!topic/qubes-users/IQdCEpkooto</ref> Unfortunately, at the time of writing Live-mode is no longer supported or maintained by Qubes. <ref>https://www.qubes-os.org/downloads/</ref> Nevertheless, if this is further developed in the future, only limited changes are required on the Whonix side. The primary responsibility for hardware support and Live operating system development rests upon Qubes developers, with whom the Whonix team has a strong, collaborative, working relationship.

For something roughly similar see [[Qubes/DisposableVM|Qubes DisposableVMs]].

=== Non-Qubes-Whonix ===

This will not be available in the near future unless a developer steps forward, joins the Whonix team and begins contributing code. Lead Whonix developer Patrick Schleizer has limited knowledge about Live CD/DVD creation and deployment, meaning project completion would be difficult, particularly for hardware support. At the moment Whonix is a rather simple project and many things are delegated upstream. For instance, there are various [[Download|supported platforms]], Debian provides a fine operating system, hardware support is delegated to the host operating system and supported platform, and Tor is providing a world class anonymizer. Another related problem is the [[FAQ#Why_are_Whonix_Images_so_Large.3F|large size of the Whonix images]] at present, making it very difficult to fit neatly on a Live CD/DVD. <ref>This situation might change in future if additional human resources become available. Check this wiki entry at a later date and also read: https://forums.whonix.org/t/whonix-live-mode</ref>

A workable alternative for testers is outlined in the next section below.

== Is there Something like Whonix Live? ==
[[Qubes-Whonix]] users can look into something roughly similar, see [[Qubes/DisposableVM|Qubes DisposableVMs]].

[[Non-Qubes-Whonix]] users can optionally run Whonix as a [[Whonix_Live|live system]]. Booting into live mode will make all writes go to RAM instead of the hard disk. Everything that is created / changed / downloaded in the VM during that session will not persist after shutdown. This also holds true for malicious changes made by malware, so long as it did not break out of the virtual machine. 

Alternatively, users can follow the recommendations to run Whonix with the [[System_Configuration_and_Access#Use_a_Dedicated_Host_Operating_System_and_Computer|dedicated host operating system]] installed on [[System_Configuration_and_Access#Whonix_on_External_Media|external media]].

= Tor = 

== How do I Configure a Bridge? ==

Instructions for configuring a bridge in Whonix can be found [[Bridges|here]].

== Whonix has Slowed Tor Connections Dramatically! ==

This is likely an incorrect assumption. Since Whonix [[#Does Whonix Modify Tor?|does not modify the Tor package]] directly, nor attempt to improve the Tor routing algorithm, any sudden drop in network speed is almost certainly related to:

* User (mis)configurations relating to a VPN, proxy or other relevant settings. 
* Tor network anomalies.
* [[Tor#Entry_Guards|Tor entry guards]] which are:
** Malicious.
** Overloaded.
** Under attack.
** Misconfigured.
* A change in the Tor guard selection which has resulted in poor throughput due to capacity issues.

Before posting about the issue in forums, first use one of the following two methods to create a test Whonix-Gateway with a different set of guards.

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = There is a small chance of receiving the same set of Tor guards using both methods below. Use [[Arm]] to explicitly check the new Tor guards are different before testing Tor throughput.
}}

=== Easy: Whonix-Gateway Clone === 

This procedure is less useful for Whonix debugging:

* Create a clone of the slow Whonix-Gateway (<code>sys-whonix</code>) and name it Whonix-Gateway-test VM (<code>sys-whonix-test-vm</code>). <ref>Alternatively follow the instructions to use [[Multiple_Whonix-Workstations#Multiple_Whonix-Gateways|Multiple Whonix Gateways]].</ref>
** Virtualbox: follow [https://dirkstrauss.com/clone-virtualbox-vm/ these instructions] to create a VM snapshot.
** Qubes-Whonix: <code>Right-click on sys-whonix</code> -> <code>Clone VM</code>
* [[Tor#Fresh_Tor_Entry_Guards_by_Regenerating_the_Tor_State_File|Regenerate the Tor State File]].
* Retest the speed of Tor connections.

=== Moderate Difficulty: Manual Regeneration of the Tor State File ===

This is more useful for Whonix debugging.

Copy the Whonix-Gateway Tor state folder to a temporary folder by running the following Konsole commands.

{{CodeSelect|code=
sudo systemctl stop tor@default
sudo mv /var/lib/tor /tmp
sudo systemctl restart tor@default
}}

Retest the speed of Tor connections. Afterwards, to restore the Tor state folder to its original settings, run the following Konsole commands.

{{CodeSelect|code=
sudo systemctl stop tor@default
sudo rm -r /var/lib/tor
sudo mv /tmp/tor /var/lib
sudo systemctl restart tor@default
}}

=== Interpreting the Test Results ===

There is no guarantee the test VM / new Tor state will be faster. However, if there is a significant difference in speed between the test and normal Whonix-Gateway VMs / Tor state, then this can be attributed to the Tor guards that are normally in use. This also means there is no bug in Whonix.

If the test VM / new Tor state does not speed up, the user may have selected Tor guards with poor throughput, or it could be a bug in Whonix. Before reporting the problem in the forums, regenerate the Tor state file and test the Tor throughput again. If it is still slow, then this ''may'' indicate a Whonix bug or other issue.

It is strongly discouraged to use the Whonix-Gateway-test VM / new Tor state (with a new Tor guard set) for activities other than testing, even if it is faster. It is feasible that adversaries might try to induce the user to switch their guards. By switching, the probability that a new chosen guard set is adversary-controlled increases, aiding end-to-end correlation attacks that deanoymize connections.

== Whonix is Preventing Tor from Bootstrapping! ==

See the [[FAQ#Whonix_has_Slowed_Tor_Connections_Dramatically.21|entry above]]. Bootstrapping problems can relate to nation state or ISP censorship of Tor, or relate to the Tor guard in operation. In the latter case, temporarily changing the Tor guard might resolve the issue.

If that is ineffective, users can also:

* Confirm [[System_Requirements|minimum system requirements]] have been met for Whonix.
* Confirm the accuracy of the VM clock with [[Sdwdate|sdwdate]].
* Remove any changes that were made to the Whonix-Gateway (<code>sys-whonix</code>) torrc configuration, such as [[Bridges|bridges]], pluggable transports, [[Whonix-Gateway_Security|seccomp, connection padding]] and so on.
* Test Tor functionality on the host.
* In Qubes-Whonix, [[Install_Tor_Browser_Outside_of_Whonix#Moderate:_Qubes-Whonix|test Tor functionality in a non-Whonix AppVM]].
* Increase the amount of RAM available to Whonix-Gateway (<code>sys-whonix</code>).
* Follow other [[Troubleshooting]] advice.

== Why Waste Network Bandwidth by Downloading Operating System Updates over Tor? ==

The short answer is this option was discussed with The Tor Project and Whonix was granted permission to do so.

Interested readers who want to learn more should review the following:

* Tor Project thread about this issue; see [https://trac.torproject.org/projects/tor/wiki/doc/TorBOX/Dev/ArchivedDiscussion/DOCUMENTATION#updatesoverTorshouldnotwasteTorbandwidthDOCUMENTATIONSOLVED updates over Tor, should not waste Tor bandwidth]. 
* The Tor Project was asked directly, after this issue and possible solutions were discussed thoroughly by the Whonix team; see [https://lists.torproject.org/pipermail/tor-talk/2012-March/023486.html tor-talk Operating system updates / software installation behind Tor Transparent Proxy]. <ref>Click [https://lists.torproject.org/pipermail/tor-talk/2012-March/subject.html#23507 here] for an overview of all answers.</ref>
* Andrew Lewman, a former Executive Director, Director and press contact for Tor downloads a lot of updates over the network and [https://lists.torproject.org/pipermail/tor-talk/2012-March/023493.html did not complain].

== Can I Speed Up Tor or the Whonix-Gateway? ==

''Is there a way to configure the number of nodes in a circuit and to allow selection according to their speeds?''

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = '''Reminder:''' [[Free Support Principle|Whonix Reliance on Debian (and Tor)]] - ''"Whonix is not a stripped down version of Debian; anything possible in "vanilla" Debian GNU/Linux can be replicated in Whonix."'' Tor configurations are not limited by using Whonix.
}}


Users who already know how to configure Tor in this fashion using the command line in vanilla Debian can follow the same procedure in Whonix-Gateway. This is not an endorsement for making these manual Tor changes because it is not recommended by Tor developers and thus the Whonix team. <ref>Deferring to their expertise on the possible adverse anonymity effects.</ref> This is also the reason there are no instructions in the Whonix documentation to manipulate Tor nodes in this way. 

That said, if general instructions were found describing how to achieve this on the host, then the same procedure could simply be repeated in Whonix-Gateway.

== Does Whonix Modify Tor? ==

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Whonix does <u>not </u> modify the Tor package itself.
}}


Although Whonix does not modify Tor, the configuration file ''has'' been adapted for Whonix. To inspect the relevant files, check the following on Whonix-Gateway: <ref>Changes to the configuration file are made by the [https://github.com/Whonix/anon-gw-anonymizer-config anon-gw-anonymizer-config] package.</ref>

* <code>/etc/tor/torrc/</code> file.
* <code>/etc/torrc.d</code> folder.
* <code>/usr/local/etc/torrc.d/</code> folder.
* <code>/usr/share/tor/tor-service-defaults-torrc</code> file. 

Tor is not patched and the normal Tor deb package is used in Whonix. This is installed from either deb.torproject.org, or {{Torproject_onion}} if the user has  [[Onionizing_Repositories#Onionize_Tor_Project_Updates|"onionized" Tor Project updates]].

Any changes to the Tor routing algorithm should be proposed, discussed and eventually implemented upstream in Tor on torproject.org. <ref>This means changes occur for all Tor users and not a subset relying on a particular distribution.</ref> If proposed changes are not adopted by The Tor Project, then the option to create a Tor fork <ref name=fork>https://en.wikipedia.org/wiki/Fork_(software_development)</ref> is available. Tor has already been forked at least once.

A general Whonix design principle is to keep the Tor process as uniform as possible, in order to simplify any security audits. Diverging from this practice would introduce unnecessary complexity, possibly worsen fingerprinting or degrade anonymity, and limit Whonix discussions to the security impacts of the modified routing algorithm. For these reasons, the Whonix team is strongly disinclined to make any direct changes to the Tor package.

== Can Whonix Improve Tor? ==

As outlined in the [[#Does Whonix modify Tor?|previous section]], Whonix will not implement any changes to Tor directly and any suggested improvements or bug fixes are proposed upstream on torproject.org. This has already [[Dev/Threat Model#Design Document, innovations and research|happened]] on occasion. Creating Whonix is a difficult and time consuming endeavor, so Tor improvements are better left to dedicated, skilled developers who are more knowledgeable in this area. 

Skilled coders can always provide upstream patches to Tor, or as a last resort, fork <ref name=fork /> it. Hypothetically, if a fork <ref name=fork /> developed a greater following than the original project due to proven security / anonymity benefits, then Whonix would seriously consider making a switch.

== What is Clearnet? ==

This term has two meanings:

# Connecting to the regular Internet without the use of Tor or other anonymity networks; and/or
# Connecting to regular servers which are not onion services, irrespective of whether Tor is used or not.

== check.torproject.org says "Sorry. You are not using Tor." ==

See [[Browser Tests]].

== New Identity and Tor Circuits ==

The behavior of "New Identity" in the context of TorButton and [[arm|Arm]] is often misunderstood. First of all, there are various ways to issue a "New Identity":

* [[Tor_Browser#New_Identity_Function|TorButton New Identity Function]].
* [[Arm|Arm]].
* [[Tor_Controller#tor-ctrl|tor-ctrl]].
* [[Tor_Controller#netcat|netcat]].
* And probably other methods.

In all cases, the "New Identity" function sends the protocol command "signal newnym" to Tor's ControlPort. This clears the browser state, closes tabs and obtains a fresh Tor circuit for future requests. <ref>https://blog.torproject.org/blog/torbutton-141-released</ref> 

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' The New Identity feature will ''likely'' create a new circuit with a different Tor exit relay and IP address, but this is not guaranteed.
}}


The impact of "signal newnym" on Tor circuit lifetimes is often misunderstood. "signal newnym" uses a fresh circuit for ''new'' connections. Sometimes Tor only replaces the middle relay while using the same Tor exit relay. This is by design and the Tor default. Further, "signal newnym" does not interfere with long-lived connections like an IRC connection.

Interested readers can verify the effect of "signal newnym" as follows:

# Open https://check.torproject.org in Tor Browser.
# Issue "signal newnym" using [[Arm|Arm]].
# Reload https://check.torproject.org. 
# In some cases it will still show the same IP address, probably because the browser did not close the connection to https://check.torproject.org in the first place.

Now repeat this experiment with a small modification which should result in a new Tor exit IP address:

# Open https://check.torproject.org in Tor Browser.
# Issue "signal newnym" using [[Arm|Arm]].
# Close Tor Browser, then restart it. 
# Open https://check.torproject.org again and a new Tor exit relay IP address is (likely) visible.

New Identity is not yet perfect and there are open bugs; this is not a Whonix-specific issue. "signal newnym" is not a guaranteed method of unlinking various protocol states (like the browser) so the user absolutely appears to be a different identity. {{Browser_Fingerprinting_Footnote}} Tor Browser's TorButton [[Tor_Browser/Advanced_Users#New_Identity_Design|New Identity feature]] attempts this, but it is not yet perfect.

In general for greater security, it is better to completely close Tor Browser and restart it. In [[Qubes-Whonix]], the safest option is using a Whonix-Workstation [[Qubes/DisposableVM|DisposableVM]] and closing it and recreating a new one after critical activities.

= Trust =

== Why Should I (not) Trust Whonix? ==

See [[Trust]] for a long answer.

= User Support and Input =

== Feedback and Suggestions ==

The Whonix project is highly receptive to genuine feedback and suggested improvements from users. Software projects flourish from community input and every suggestion is noted and considered.

The Whonix community is asked to remain patient. The development cycle involves a number of competing priorities and challenges which must be overcome to achieve ambitious roadmap goals. Further, there is also an existing [https://phabricator.whonix.org/maniphest/query/open/ backlog] of unresolved bugs and feature requests to address.

As Whonix resources grow over time, development activity and responsiveness to user input will increase in kind.

== Privacy on Whonix Website ==
Whonix Website <ref>clearnet whonix.org and onion {{whonix_onion}}</ref> is using popular webapps such as mediawiki, phabricator and discourse (forum software). These are developed by third parties, not whonix.org. These are Libre Software. whonix.org is a user - not a developer - of these web apps. When web app projects make changes, they don't necessarily (rather seldom) prioritize privacy and security.

Whonix is based on many third party projects. There is a description on how that is structure looks like in FAQ entry [[#Is_the_Linux_User_Experience_Comparable_to_Commercial_Operating_Systems.3F|Is the Linux User Experience Comparable to Commercial Operating Systems?]]. In essence, many independent projects provide their software and source code for free. One can use them as is or modify.

Due to the [[#Software Comparison|structure]] of Libre Software development and the limited [[#Funding Comparison|funding]] available to Whonix it is economically infeasible to tackle most issues (usability, privacy, security) of these webapps.

For example discourse:

* Uses google as default search engine even though we would prefer configure another search engine could be configured by default. Whonix developers posted a [https://meta.discourse.org/t/feature-request-configurable-search-engine-for-forum-search/35793 Feature request: configurable search engine for forum search] and discourse developers in essence replied "patches welcome".
* [https://forums.whonix.org/t/moderating-threads-moving-editing-does-not-always-funtion-properly/6334/6 Doesn't work well with secondary onions].

Websites at best can provide privacy <u>by policy</u>, i.e. by promise.

[[What we do|Whonix's main project activities]] are the research, development and maintenance of [https://github.com/Whonix privacy <u>by design</u> software], i.e. by technological enforcement open to external enhancement and audit.

See also [[#Patches are Welcome|Patches are Welcome]] or consider to pay for the desired feature.

== Non-Responsiveness to Concerns ==
Effective December 1st 2018 the policy regarding the way Whonix developers respond to support related questions and concerns has changed. Only concerns which the developers are convinced of being an actual technical problem will be responded to.

In past the Whonix developers would provide answers to reported oddities such as console output messages that were difficult to understand by users. This is no longer the case. Reasons for this will be provided in this FAQ entry. 

For example, during a [[Update|update]] you might see a message such as...

<pre>
70 signatures not checked due to missing keys
</pre>

...and not know what it means.

This is related to the following quote from chapter [[#FAQ#Compromise_Indicators|Am I Compromised?]].

<blockquote>
If the user notices trivial changes on their system - such as a duplicate deskop icon - it is not evidence of a hack or leak. Similarly, if warning or error messages appear that are difficult to understand, in most cases there is no need for panic. If something unexpected occurs such as the appearance of a "htaccess file in home directory", or graphical glitches emerge in [[Arm]], then it is more likely a harmless bug and/or usability issue rather than a compromise.
</blockquote>

Similarly, a message such as the one shown above is not a sign of a technical problem except from a usability issue.

Before developers take time to answer concerns, the reporter has to demonstrate first that it is an actual issue. Whonix like many other projects such as Qubes OS want to see among other things the following information.

* Steps to reproduce the behavior
* Actual behavior
* Expected behavior

The following example shall demonstrate a report that will be considered insufficient by Whonix.

* Steps to reproduce the behavior: Update system.
* Actual behavior: See message "70 signatures not checked due to missing keys".
* Expected behavior: Do not see message "70 signatures not checked due to missing keys".

Instead, further indicators have to be provided why this should be considered a bug.

In many cases only developers, developers-alike and very technical users will be able to report an actual issue from console output.

Reporters who exerted more effort, those who provide detailed analysis, those who performed web search, those who read the source code beforehand as well as contributors and developers are likely to receive as detailed an answer as available.

Reasons for this policy:

* Answering to each and every concern costs time. Time can only be spent once. Time spent explaining non-issues to calm users cannot be spent on the big development [https://phabricator.whonix.org/maniphest/query/open/ backlog].
* Architects of complex buildings, architects of hardware and professions do not explain technical details for free to the general public either. Whonix is Libre Software, in other words everything Whonix is made of is available for review in source code which already goes far beyond transparency of many other areas of life. Those who spend enough resources either on their own time or money can analyze everything in detail since the spirit of Libre Software is -- by intention -- to oppose artificial boundaries which make analysis unnecessarily more difficult.
* It's unrealistic to most usability issues since these are outside the control of the Whonix project and/or because it is economically infeasible due to the very structure of Libre Software development. This is elaborated in detail in FAQ entry [[#FAQ#Is_the_Linux_User_Experience_Comparable_to_Commercial_Operating_Systems.3F|Is the Linux User Experience Comparable to Commercial Operating Systems?]].

Reasons for this FAQ entry:

* Rather than explaining the actual details and why it is a non-issue, a link to this FAQ entry can be posted. This shows the user that the report has been seen but it is at this point, considered a usability issue at most, and not a worse problem.
* Answering with a link to this FAQ is better than a non-answer. A non-answer is unclear if the report has not been seen or if the project development is still active.

Users are welcome to report whatever they like, however please search the forums and web first as per [[Support#Free_Support_Principle| The Free Support Principle]] to see if it was already reported. However, users should not be surprised by the absence of detailed explanations.

== What does Unsupported Mean? ==

{{Template:Unsupported}}

= Virtualizers =

== Is VirtualBox an Insecure Choice? ==

<u>Update</u>:

Although [[VirtualBox]] is [[Dev/Virtualization Platform|not an ideal choice]], fortunately other platforms are [[Download|supported]]:

* [[Qubes-Whonix]].
* [[KVM|Whonix for KVM / Virt-Manager]]. 

For greater security, users with suitable hardware and sufficient skill are recommended to  [[Virtualization_Platform_Security#Type_1_vs_Type_2_Hypervisors|prefer Qubes-Whonix]] (a bare-metal hypervisor) over Type 2 hypervisors like VirtualBox.

The primary reason Whonix supports VirtualBox is because it is a familiar, cross-platform virtualizer which can attract more users to open source (free/Libre) software, Tor and Linux in general. By remaining highly accessible, Whonix: 

* Increases the scope of potential growth in the user base.
* Attracts greater attention as a suitable anonymity-focused operation system.
* Increases the likelihood of additional human resources and monetary contributions.
* Allows novice users to easily test Whonix and learn more about security and anonymity practices.
* Improves the relative security and anonymity of Tor / Tor Browser users by offering a virtualized solution.

<u>Old statement</u>:

<div class="toccolours mw-collapsible mw-collapsed">
If you would like to see the old statement, please press on expand on the right.
<div class="mw-collapsible-content">
=== Whonix in VirtualBox vs Tor / Tor Browser / Torified Applications on the Host ===

It is recognized that VirtualBox is not an ideal choice; see [[Dev/Virtualization Platform]]. However, there are different goals to bear in mind - Whonix is primarily focused on protecting a user's IP address / location.

A common refrain of critics is that VirtualBox is "too weak". This is a theoretical concern and does not have any practical implications at present, since Whonix in VirtualBox is actually more secure than running Tor, Tor Browser or torified applications on the host in many cases; see [[Security in Real World|Whonix Security in the Real World]]. 

It must be remembered that there are no alternatives for a large segment of the population who do not have sufficiently powerful hardware to run [[Qubes-Whonix]], or who are technically incapable of running [[KVM]]. In this case, it is safer for them to run Whonix in VirtualBox, rather than continuing to utilize Tor on the host. For example, Whonix helps to protect against future [https://blog.torproject.org/blog/firefox-security-bug-proxy-bypass-current-tbbs proxy bypass bugs] or software which [https://blog.torproject.org/blog/bittorrent-over-tor-isnt-good-idea does not honor proxy settings].

The strength of Whonix and virtualization in general is adherence to the security by isolation principle. VirtualBox critics need to objectively consider how many exploits currently exist for VirtualBox and the track record of exploits. Admittedly, virtual machine exploits may become far more problematic in the future, but at present Whonix is considered to provide more security out of the box running in VirtualBox, than not.
 
=== Platforms with Improved Security ===

Anybody seriously considering Whonix for improved security should refer to the [[Documentation]], particularly the Security Guide and Advanced Security Guide entries, as well as [[Download|supported platforms]] other than VirtualBox. Whonix is a poster child for the [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/IsolatingProxy Isolating Proxy Concept] and [http://theinvisiblethings.blogspot.com/2008/09/three-approaches-to-computer-security.html Security by Isolation].

Many users still default to running Tor on their Windows or Linux host. Whonix is immediately available to this cohort to substantially improve their real world security. Indeed, Whonix is the only up-to-date OS designed to be run inside a VM and paired with Tor, which is actively maintained and developed. Other similar projects like [http://www.janusvm.com/tor_vm/ JanusVM] are seriously outdated and no longer actively maintained. <ref>In response to whether JanusVM was safe to use, Roger Dingledine of The Tor Project [https://lists.torproject.org/pipermail/tor-talk/2011-December/022446.html stated in 2011]: "No, not safe. Probably has been unsafe to use for years."</ref>

Whonix cannot serve all target audiences. Users seeking a higher security solution will prefer [[Download|other supported platforms]], like [[Qubes-Whonix]]. "Hardcore" users may prefer to build their own custom hardened solutions, while still profiting from Whonix's research and source code. Hardened solutions like the [[Hardened Gentoo TG|Hardened Gentoo Whonix-Gateway]] are more difficult to use and therefore cannot be set as the default installation for Whonix.
</div>
</div>

= Virtual Private Networks =

== Should I Install a VPN on the Host or Whonix-Gateway? ==

This entry presumes the user has already decided to utilize a VPN. If not, this FAQ entry may be skipped.

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Do not install a VPN before carefully considering the [[Tunnels/Introduction|VPN / Tunnel Support]] documentation and weighing up the pros and cons in your personal circumstances. 
}}

{{VPN_on_the_host_vs_on_Whonix-Gateway}}

= Whonix-specific =

== Design and Development ==

=== 32-bit or 64-bit? ===
{{Anchor|Why Use a 32-bit Operating System Instead of 64-bit?}}
From Whonix 14, only 64-bit builds are available for download across all platforms. <ref>https://phabricator.whonix.org/T91</ref> This decision is based on several factors:

* Distributions are increasingly dropping support for 32-bit systems (including Debian). <ref>https://www.phoronix.com/scan.php?page=news_item&px=Debian-686-For-i386-CPUs</ref>
* Only a small minority of users are stuck with older hardware that will not support 64-bit builds. <ref>For example in [https://labs.riseup.net/code/issues/8183 Tails], less than 10% of users had 32-bit kernels in late 2016.</ref>
* It is a significant maintenance burden for Whonix to maintain both 32-bit and 64-bit builds for [[Non-Qubes-Whonix]]. That is, Whonix would need to [[Dev/64bit#Current_Situation|maintain 10 images]] instead of the current 6 images.
* Non-Qubes-Whonix 13 users ([https://forums.whonix.org/t/whonix-13-approaching-eol-end-of-life-2018-september-30-all-users-must-upgrade deprecated]) who rely on 32-bit (i686) hardware are still able to use Whonix 14, by using the  [[Upgrading_Whonix_13_to_Whonix_14|upgrade instructions]] instead of downloading new images. <ref>This is because none of the Whonix packages were made 64-bit only.</ref> <ref>https://phabricator.whonix.org/T688#13700</ref> <ref>https://forums.whonix.org/t/state-of-offical-64-bit-builds/399</ref>

=== How is Whonix Different from Tails? ===

See [[Comparison with Others]].

=== Why not Merge with Tails and Collaborate? ===

The following is a ''subjective'' opinion by lead Whonix developer Patrick Schleizer. <ref>Last updated in September 2018.</ref> Feedback, corrections and suggested improvements are welcome.

[https://tails.boum.org/ Tails] is a respected project with similar goals to Whonix - improved anonymity, privacy and security. Tails has existed for many years and has multiple developers, significant experience and a complete working infrastructure. Whonix and Tails developers already cooperate to some degree and discuss things of mutual interest to both projects on various developers mailing lists like whonix-devel, tails-devel and secure-os. 

==== Whonix and Tails Collaboration ====

Several parts of Whonix are based on Tails. For example, the development of [[sdwdate]] in Whonix was reliant  upon Tail's invention of tails_htp. Whonix also profits from Tails' previous efforts to upstream packaging and other changes in Debian, current and historical discussions in various forums, Tails research, design documents, experience, feedback and so on.

Other examples of Tails and Whonix cooperation include:

* [[Dev/Control_Port_Filter_Proxy#onion-grater_by_Tails|onion-grater]] - a whitelisting filter for dangerous Tor control protocol commands - was developed by Tails developer {{Code2|anonym}} with Whonix in mind. Whonix then [[Dev/Control_Port_Filter_Proxy#onion-grater_by_Tails_forked_by_Whonix|forked the Python code]] to add a few necessary improvements. <ref>https://github.com/Whonix/onion-grater</ref>
* Tails has expressed interest in using [[Anon Connection Wizard]] in the future.

==== Why Whonix is a Separate Project ====

Even though Tails is highly valued by Whonix developers, it may not be clear to the reader why Whonix remains a separate project and not just a contributor to Tails. There are several reasons for this decision: Whonix cannot be merged into Tails by the Whonix team on technical, skill and political grounds; implementing features or changes in Tails is an unfamiliar process; and it is unknown when/if Whonix priorities will be implemented in Tails -- but it is known how to solve these in a separate project (at least with appropriate user documentation).

Further examples are outlined in the table below. Note that some of these items are partially or nearly solved in Tails, but it is has been kept to justify the prior decision not to merge projects.

'''Table:''' ''Whonix and Tails Design and Functionality Comparison''

{|   class="wikitable"
!  align="left" | Tails Issue Tracker (TODO)
!  align="left" | Whonix Design / Instructions
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/remember_installed_packages/ Remember installed packages]
|  align="left" | By design, everything persists <ref>This is actually a disadvantage for anonymity because it is the opposite of an amnesic system, which many users prefer.</ref>
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/applications_audit/ Applications Audit]
|  align="left" | By design, protocol leaks cannot lead to deanonymization
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/Two-layered_virtualized_system/ Two-layered, virtualized system]
|  align="left" | By design, this is achieved by either software compartmentalization (VMs) or [[Physical Isolation]]
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/vpn_support/ VPN support]
|  align="left" | [[Features#VPN / Tunnel support|VPN / Tunnel support]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/Include_JonDo_Software/ JonDo] over Tor
|  align="left" | [[JonDonym]]
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/freenet_project/ Freenet] over Tor
|  align="left" | [[Freenet]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/doc/first_steps/startup_options/bridge_mode/index.en.html obfsproxy] <ref>Bridges were not natively supported by Tails when Whonix was founded.</ref>
|  align="left" | [[Bridges]]
|-  class="even"
|  align="left" | [https://tails.boum.org/doc/about/fingerprint/index.en.html Can I hide the fact that I am using Tails?]
|  align="left" | [[Hide Tor and Whonix from your ISP]]
|-  class="odd"
|  align="left" | [https://labs.riseup.net/code/issues/12264 I2P over Tor] <ref>The I2P feature was [https://tails.boum.org/news/version_2.11/index.en.html removed in Tails 2.11] due to the developer effort required.</ref>
|  align="left" | [[I2P]]
|-  class="even"
|  align="left" | [https://tails.boum.org/contribute/design/Tor_enforcement/ Transparent Proxy as a fallback mechanism]
|  align="left" | By design, everything not configured to use a SocksPort will automatically use Tor's TransPort
|-  class="odd"
|  align="left" | [https://tails.boum.org/doc/anonymous_internet/Tor_Browser/index.en.html Use Tor Browser]
|  align="left" | [[Tor Browser]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/contribute/design/stream_isolation/ Stream Isolation] <ref>Tails has basic stream isolation functionality compared to Whonix.</ref>
|  align="left" | [[Stream Isolation]]
|-  class="even"
|  align="left" | [https://tails.boum.org/todo/evaluate_web_fingerprint/ Evaluate web fingerprint] <ref>See also:  https://tails.boum.org/doc/about/fingerprint/ The bundling of uncommon extensions in Tor Browser like ''uBlock Origin'' increase the likelihood of fingerprinting Tails users specifically.</ref>
|  align="left" | Same as Tor Browser
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/improve_fingerprint_of_the_Unsafe_Browser/ Unsafe browser fingerprint]
|  align="left" | [[Logging in to captive portals]]
|-  class="even"
|  align="left" | [https://tails.boum.org/blueprint/tails_server/ Location Hidden/IP Hidden Servers]
|  align="left" | [[Hosting Location Hidden Services|Location/IP Hidden Servers]]
|-  class="odd"
|  align="left" | [https://tails.boum.org/todo/VoIP_support/ VoIP]
|  align="left" | [[Voip|VoIP]]
|-  class="even"
|  align="left" | ...
|  align="left" | ...
|}

==== Political and Design Considerations ====

There are also significant differences in political and design decisions which prohibit a merger:

* As a code contributor to Tails, Patrick Schleizer would need to accept decisions made via internal Tails decision-making processes. Whonix would lose the autonomy to simply modify anything in line with personal preferences or favored solutions. <ref>One major advantage of free software is developers are free to disagree about a project's direction, leading to the creation of a fork.</ref> At the time Whonix was created, Schleizer did not favor a Live DVD/USB approach and personally found improving Tails to be far more difficult than starting a fresh project.
* Source Code Merge Policy:
** <u>Whonix:</u> A comprehensive merge policy has not yet been developed. This would be ideal, but it is not compulsory to formulate such a design or associated documentation.
** <u>Tails:</u> In Schleizer's opinion, the [https://tails.boum.org/contribute/merge_policy/ Tails merge policy] is too strict. This is not a complaint or critique. No doubt there are good reasons for that decision and it should be noted that Tails is still a popular and effective solution for many users. Anyone who does not agree has the freedom to contribute to another project or to start a new project, leading Schleizer to make use of that freedom.
* Another major design difference is Tails' reliance on a Live DVD/USB which inherits some restrictions and limitations. Tails must fit on a DVD/USB, while Whonix does not have this requirement. Whonix also has higher hardware requirements, but therefore more space to implement features. As a consequence, initially fewer people are able to use Whonix, but this situation will improve in the future as available hardware improves. The Whonix design is fluid and new designs (both theoretical and practical) are being discovered over time. Depending on user feedback and general interest, eventually a Live DVD or Blu-ray might be created in Whonix.
* Schleizer has found it easier to cooperate with the security by isolation focused operating system [https://www.qubes-os.org Qubes OS], which resulted in [[Qubes-Whonix]].

=== How is Whonix Different from Tor Browser? ===

See [[Comparison with Others]].

=== How Difficult is Whonix Development? ===

The following information is an opinion expressed by lead developer Patrick Schleizer, which is based on several years of Whonix development and [[Priority_Support|related activities]].

Consider the following comparison table. Whonix source code is relatively simple when compared with activities like the development of cryptographic algorithms and hand written binary code.

'''Legend:''' One star (*) = very easy; 10 stars (**********) = very difficult.

<pre>* Using a computer.
** Writing Whonix bash scripts.
** Writing Whonix documentation.
*** Whonix-related anonymity and privacy research.
**** Scripting language.
***** Using Hardened Gentoo.
****** Programming languages such as C/C++.
******* Core Tor development.
******** Reverse engineering software.
******** Kernel development.
******** Assembly language.
********* Compiler development.
********* Aeronautical science.
********* Cryptographic algorithms development.
********** Hand written binary code.
</pre>

=== Why not Replace grml-debootstrap with 'X'? ===

Whonix developers are not remotely close to exhausting grml-debootstrap's extensive feature-set yet. <ref>https://forums.whonix.org/t/replacing-grml-debootstrap-debos-build-platform/5582/3</ref>

There are two sorts of VM image creation tools:

    [A] Those that use virtualization, boot the image and perform actions.
    [B] Those that use chroot (or maybe systemd-spawn).

[A] is incompatible with Whonix design principles due to files being created during boot, such as entropy seeds. This is a less clean method and is not suitable for redistribution.

In either case it would be necessary to diff:

    The image created by grml-debootstrap versus the new tool.
    Create an image twice using the new tool and inspect the diff.

Related:

    https://github.com/Whonix/Whonix/blob/master/help-steps/analyze_image
    https://www.whonix.org/wiki/Verifiable_Builds

== Images ==

=== Why are Whonix Images so Large? ===

From Whonix 14:

* zerofree has been used to reduce the size of the Whonix-Gateway from 1.7 GB to 850 MB, while the Whonix-Workstation is reduced from 2 GB to 1.1 GB. <ref>https://phabricator.whonix.org/T790</ref>
* A [[VirtualBox/CLI|headless, cli-only version of Whonix]] is available.

This is still larger than other "Tor-VM" or "Tor-LiveCD/DVD" projects, which sometimes depend on specially "stripped-down" or minimal distributions like [http://www.tinycorelinux.net/ TinyCore], [http://www.damnsmalllinux.org/ DSL] and [http://puppylinux.com/ Puppy Linux]. 

==== Minimal Distribution Disadvantages ====

The primary reason for the large size of the images is that small/er distributions do not meet Whonix requirements; namely the upstream distribution must have a proactive security policy. In addition:

* Most minimal distributions are small projects. Consequently, there is no dedicated security team that audits packages and quickly releases security patches.
* Whonix requires a distribution that cryptographically signs all updates. <ref>This is always desirable, particularly when updating over untrusted exit relays.</ref>
* The security of minimal distributions is premised on reducing the potential attack surface and not much else. Whonix also has a small attack surface, due to only installing a few select applications and not having any network listening services by default. However, on the upside a full distribution supports MAC, kernel patches, IDS and much more.
* Large, established projects have many users and developers - the many eyeballs on the code implies greater trustworthiness.
* Debian has a significant number of [https://wiki.debian.org/Security/Features security features] that are unavailable in smaller distributions.
* For further reading on this topic, see [[Dev/Operating_System|Operating System]].

==== Maintenance and Usability Concerns ====

Since Whonix is based on Debian, it is a complete, anonymity-oriented, general purpose operating system. This greatly improves [[Design|usability]] in comparison to minimal systems which lack a host of [[Features|features]]. 

There are several other benefits of relying on Debian, rather than a minimal distribution:

* A wider range of use cases is supported, such as hosting onion services. In contrast, small distributions usually have limited repositories.
* Debian has comprehensive documentation about topics like security and hardening, unlike many small distributions.
* Creating a slim system increases the maintenance burden, because it is difficult and requires significant development time. This is not and should not be the primary focus of the Whonix team. 
* Minimal projects do not usually focus on anonymity, privacy and security-related matters; the core competence of the Whonix project.
* Attempts to slim down systems inevitably results in numerous "strange bugs". Users who are familiar with Debian or Ubuntu would then question why Whonix is broken or lacks full functionality.

It should be noted that by increasing usability, Whonix actually improves security over time. This stems from a larger user pool, a more prominent profile in the press, increased development activity and additional security audits and research. On the contrary, a slimmed down system would only attract specialists or experts. <ref>This does not mean Whonix cannot be significantly hardened, customized or reduced in size by those with specialist knowledge.</ref> 

An interesting analogy is [https://www.mixminion.net/ Mixminion], which was once touted as an alternative to Tor. <ref>Consider this interesting statement from Tor developer Roger Dingledine: [http://www.mail-archive.com/liberationtech@lists.stanford.edu/msg00022.html Mixminion vs Tor].</ref> Due to Mixminion being a high latency remailer, with cover traffic and protection against traffic confirmation (end-to-end correlation attacks), it should ''theoretically'' have been more secure than Tor. The only problem was that Mixminion did not attract a critical mass of users. Without a sizable population to help disguise traffic, the putative anonymity benefits were seriously degraded - making it no more or less (in)secure than Tor. <ref>This is also the reason development was discontinued.</ref> 

==== Absence of a Live Whonix CD/DVD ====

The final reason Whonix images are large is that the project has not (yet) focused on the anonymity-oriented Live CD/DVD market. Without the restriction of needing to fit on a CD/DVD, there is no necessity to balance functionality with available space and security. Being a general purpose anonymous operating system has its benefits - default or optional functionality can be increased at whim. For example, integrating [[Bitcoin|Bitcoin]] into Whonix would be quite simple, apart from the documentation burden.

== Patches ==

=== Patches are Welcome ===

Volunteer contributions to Whonix are most welcome. All proposed patches are carefully reviewed and merged if appropriate. Volunteers with the requisite coding ability should refer to the current backlog of [https://phabricator.whonix.org open Whonix issues] and consult with developers before undertaking any significant body of work.

Often, proposed improvements or fixes to the Whonix platform are awaiting implementation due to differing developer priorities, limited human resources and/or the inordinate amount of time required to develop a particular feature or solution. In a minority of cases, the Whonix team is unsure how to resolve a bug or implement a specific change / feature. <ref>Some of these relate to cross-platform problems which are not Whonix-specific.</ref>

It is generally unhelpful to debate the priorities laid out in the future Whonix roadmap, as this diverts energy from core development. Some major suggestions might become available in the long-term or might never eventuate, such as the availability of a Live Whonix CD/DVD.

== Security ==

=== Does Whonix Guarantee my IP Address and Location are Safe when Using Skype? ===

This answer has been moved to the [[Voip#Skype|VoIP]] page.

=== Full Disk Encryption Should be Added to Whonix! ===

This assumption is incorrect. In short, it is more effective to add [[Full_Disk_Encryption_and_Encrypted_Images#Full_Disk_Encryption_on_the_Host|Full Disk Encryption]] to the host to protect against theft or robbery of personal information or data.

The interested reader can refer to [[Full_Disk_Encryption_and_Encrypted_Images#Encrypted_Guest_Images|Encrypted Guest Images]] for further details.

=== You Should Disable JavaScript by Default! ===

Whonix has not changed default JavaScript settings in Tor Browser for several reasons:

* Whonix is not a "secure browser" project - the focus is on creating a stable, reliable anonymity distribution which aligns with best practice security and privacy principles, informed by educated researchers in the field.
* Possible fingerprinting or security issues with default settings in Tor Browser are the domain of core Tor developers.
* Whonix has limited manpower, meaning the resources do not exist to create a more secure browser, even if it was desirable. <ref>Even if the manpower existed, it would make more sense to establish a new "Privacy Browser" project, rather than merge its development with Whonix. At a later stage, the theoretically more secure browser could then be bundled with the Whonix platform.</ref>
* Tor Browser is not significantly modified for the same reasons Whonix does not [[#Does_Whonix_Modify_Tor.3F|modify]] or attempt to [[FAQ#Can_Whonix_Improve_Tor.3F|improve]] Tor. <ref>Whonix includes Tor Browser by default, with only [[Tor_Browser#Whonix_Tor_Browser_Differences|minor]] differences.</ref>
* Having Whonix share the [[Fingerprint|fingerprint]] of other Tor Browser users is good for anonymity.

As noted in the [[Tor_Browser#Security_vs_Usability_Trade-off|Tor Browser chapter]], disabling JavaScript by default may worsen fingerprinting:

<blockquote>
The take-home message is disabling all JavaScript with white-list based, pre-emptive script-blocking may better protect against vulnerabilities (many attacks are based on scripting), but it reduces usability on many sites and acts as a fingerprinting mechanism based on the select sites where it is enabled. On the other hand, allowing JavaScript by default increases usability and the risk of exploitation, but the user also has a fingerprint more in common with the larger pool of users.
</blockquote>

Experienced Tor developer Mike Perry has provided justification for enabling JavaScript by default in a tor-talk mailing list topic; see [https://lists.torproject.org/pipermail/tor-talk/2012-May/024227.html "Tor Browser disabling Javascript anonymity set reduction"]. In summary, Tor Button and Tor Browser patches handle the most serious JavaScript concerns, such as IP address / location bypass problems. <ref>Although there are unresolved [https://trac.torproject.org/projects/tor/query?keywords=~tbb-fingerprinting tbb-fingerprinting] and [https://trac.torproject.org/projects/tor/query?keywords=~tbb-linkability tbb-linkability] issues.</ref>

Due to the loss in functionality, disabling JavaScript by default might place Whonix users in a small subset of the Tor Browser population. The JavaScript behavior of the broader Tor Browser population is an open research question, so it safest to avoid a possible ''reduction'' in the anonymity set of Whonix users. Users should remember that the fingerprinting potential is also dependent on Tor Browser's [https://trac.torproject.org/projects/tor/ticket/9387 security] [[Tor_Browser#Security_Slider|slider]] settings. Ultimately the user is free to turn JavaScript on or off, depending on their [https://www.torproject.org/docs/faq#TBBJavaScriptEnabled security, anonymity and usability preferences].

=== Does Whonix / Tor Provide Protection from Advanced Adversaries? ===

==== Targeted Surveillance ====

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Based on intelligence disclosures, users targeted for active surveillance by advanced adversaries are almost guaranteed to be infected!
}}


Whonix cannot provide protection against [http://www.spiegel.de/international/world/catalog-reveals-nsa-has-back-doors-for-numerous-devices-a-940994.html advanced attack tools] which have the capability to penetrate all types of OSes, firewalls, routers, VPN traffic, computers, smartphones and other digital devices. Implants are capable of surviving across reboots, software / firmware upgrades and following the re-installation of operating systems. <ref>For example, BIOS is a favorite target of IC operatives for persistence.</ref>

Once infected in this way, it is virtually undetectable and no solution can be readily found, except throwing away the hardware and moving on from the targeted physical / network location. Encryption, Tor / Tor Browser, other anonymity tools, "secure" hardware configurations and so on are helpless against these attacks, which are increasingly automated and being scaled up in size. For example, the American IC prefers using the [https://theintercept.com/2014/03/12/nsa-plans-infect-millions-computers-malware/ TURBINE] system for this purpose.

The following is just a small sample of the hundreds of advanced implants and tools currently in use. Needless to say, advanced adversaries can achieve almost any outcome they like: <ref>https://theintercept.com/2014/03/12/nsa-plans-infect-millions-computers-malware/</ref> <ref>https://www.washingtonpost.com/world/national-security/powerful-nsa-hacking-tools-have-been-revealed-online/2016/08/16/bce4f974-63c7-11e6-96c0-37533479f3f5_story.html</ref> <ref>https://www.schneier.com/blog/archives/2013/10/code_names_for.html</ref>

* Exfiltrate or modify information / data including removable flash drives (SALVAGERABBIT).
* Log keystrokes or browser history (GROK, FOGGYBOTTOM).
* Surreptitiously turn on cameras or microphones (CAPTIVATEAUDIENCE, GUMFISH).
* Exploit VPN  and VOIP data (HAMMERCHANT, HAMMERSTEIN).
* Block certain websites (QUANTUMSKY).
* Corrupt downloads (QUANTUMCOPPER).
* Present fake or malware-ridden servers (FOXACID, QUANTUMHAND). <ref>A popular attack against Tor Browser users.</ref>
* Launch malware attacks (SECONDDATE).
* Upload and download data from an infected machine (VALIDATOR).
* Detect certain targets for attack (TURMOIL). <ref>This relies on selector types like machine IDs, attached devices, cipher keys, network IDs and various user-specific leads such as cookies.</ref>
* Collect images of computer screens (VAGRANT).
* Collect from LAN implants (MINERALIZE).
* Image the hard drive (LIFESAFER).
* Jump air-gaps (GENIE).
* Inject ethernet packets onto targets (RADON).
* And much, much [https://electrospaces.blogspot.fr/p/nicknames-and-codewords.html more].

The take-home message is that current hardware and software solutions provide multiple attack vectors which are impossible to completely close. Air-gapped solutions which have never been connected to the Internet ''may'' provide security for targeted individuals, but Internet-connected devices should be considered completely unsafe.

==== Passive Surveillance ====

Users should be aware that passive surveillance systems will attempt to intercept, record, categorize and attribute all data that can be feasibly collected, including [[Surveillance_Capabilities#Internet_Backbone_Surveillance|straight off the Internet backbone]]. These systems are designed to hoover up ''everything'', irrespective of whether it is browsing history, emails, chat / video, voice data, photographs, attachments, VoIP, file transfers, video conferencing, social networking, logins, or user activity meta-data. 

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Any data packets which traverse networks (particularly encrypted traffic like Tor) are targeted for collection. Targeting of popular technology companies is also the IC's bread and butter. 
}}


Consistent use of anonymous handles, strong encryption, Tor / Tor Browser and world class open source anonymity tools and platforms ''may'' provide partial protection against [https://en.wikipedia.org/wiki/List_of_government_mass_surveillance_projects passive surveillance programs], such as:

* [https://en.wikipedia.org/wiki/PRISM_(surveillance_program) PRISM].
* [https://www.dailydot.com/layer8/nsa-spy-prgrams-prism-fairview-blarney/#fairview FAIRVIEW].
* [https://www.dailydot.com/layer8/nsa-spy-prgrams-prism-fairview-blarney/#blarney BLARNEY].
* [https://www.dailydot.com/layer8/nsa-spy-prgrams-prism-fairview-blarney/#so STORMBREW and OAKSTAR].
* [https://www.dailydot.com/layer8/nsa-spy-prgrams-prism-fairview-blarney/#xks XKEYSCORE].
* [https://www.dailydot.com/layer8/nsa-spy-prgrams-prism-fairview-blarney/#mtp MARINA, TRAFFICTHIEF, PINWHALE].
* [https://en.wikipedia.org/wiki/MAINWAY MAINWAY].
* [https://en.wikipedia.org/wiki/MYSTIC_(surveillance_program) MYSTIC].
* And many more similar programs run by governments all around the world.

Be aware that this claim comes with an important caveat - it depends on whether Tor (and other software / hardware solutions) [https://lists.torproject.org/pipermail/tor-talk/2013-July/029014.html provide adequate protection or not]. The answer to that question is not clear. Whonix has adopted a skeptical mindset and only makes conservative claims, because it is impossible to prove a negative. For a related statement about advanced adversaries, refer to the following [[Technical Introduction#With more technical terms|technical introduction]].

=== Can Certain Activities Leak DNS and/or the Real External IP Address / Location? ===

No activity conducted inside Whonix-Workstation can cause IP/DNS leaks so long as Whonix-Gateway is left unchanged or only documented changes are made like configuring bridges, establishing onion services and running updates.

However, certain behaviors can degrade anonymity or inadvertently expose a user's real identity or location. For instance:

* Do not confuse [[DoNot#Confuse_Anonymity_with_Pseudonymity|pseudonymity with anonymity]].
* Avoid activities that [[DoNot|risk de-anonymization]].
* Avoid major networking changes like using non-Tor, [[Secondary_DNS_Resolver|secondary DNS resolvers]] or establishing permanent Tor exit relays. <ref>Both of these methods shift trust to a single provider, rather than distributing it. In the case of the DNS resolver, it may lead to identity correlation or weaken safeguards against potentially hostile applications; for example, see [[Voip#Skype|Skype]].</ref>

=== Is there a Whonix Amnesic Feature / Live CD / Live DVD? What about Forensics? ===

As noted in the [[FAQ#Is_there_Something_like_Whonix_Live.3F|Whonix Live]] entry, Whonix allows [[Non-Qubes-Whonix]] users to optionally run Whonix as a live system. Writes go to RAM instead of the HDD/SSD, meaning everything that is created, changed or downloaded in the VM during that session does not persist after shutdown. However, neither [[Non-Qubes-Whonix]] or [[Qubes-Whonix]] is an [[Warning#Whonix_is_not_Amnesic|amnesic system]] by default.

For reasons why a Whonix Live CD/DVD is currently unavailable, refer to these [[FAQ#Why_not_Use_a_Live_CD.2FDVD_as_the_Whonix-Workstation_Operating_System.3F|earlier]]  [[FAQ#Will_there_be_a_Whonix_Live_CD_or_DVD.3F|entries]].

==== Forensic Considerations ====

In the past, a number of ideas have been put forward to try and make Whonix an amnesic system:

* Shredding the Whonix hard disk images.
* Having a zip archive of Whonix hard disk images and restoring them every time Whonix is used.
* Restoring a fresh [[Whonix-Workstation_Security#VM_Snapshots|snapshot]] every time Whonix is used.
* Running Whonix [https://forums.whonix.org/t/whonix-and-truecrypt/293/6 completely in ramdisks].
* Using [[Full_Disk_Encryption_and_Encrypted_Images#Full_Disk_Encryption_on_the_Host|full disk encryption]].
* And so on.

Unfortunately, none of these methods are a substitute for a true amnesic system. Amnesic live systems have a superior design insofar as sensitive (or unencrypted) data is never stored on storage media in the first place. It is manifestly unsafe to try and deal with data by wiping it after it has already been stored, so this is a poor design principle to implement.

Using full disk encryption is still useful to protect against forensic analysis, but in some parts of the world this is illegal or draws unwanted attention. Therefore, full disk encryption is not an applicable stopgap for some Whonix users and this cohort requires an amnesic version of Whonix in all instances. 

==== Anti-forensic Claims ====

The reader should always be cautious regarding claims made about the ability to defeat disk forensics. For example, the Whonix team are not experts in matters related to:

* HDD/SSD swap space.
* [https://en.wikipedia.org/wiki/Computer_forensics Computer forensics]. <ref>Developers have a basic understanding and just know to be cautious.</ref>
* Data remaining on USBs and SSDs after [http://www.infosecisland.com/blogview/12153-Data-Remains-on-USB-and-SSDs-After-Secure-Erase.html "secure" erasing].
* [https://en.wikipedia.org/wiki/Wear_leveling Wear leveling].
* The possibility of ordinary hard disks sometimes marking sectors as bad and never releasing their data. <ref>This issue requires further investigation.</ref>
* Data traces that may be [https://research.torproject.org/techreports/tbb-forensic-analysis-2013-06-28.pdf left on disk by Tor Browser] on the macOS, Linux and Windows platforms.
* Other related [http://www.forensicswiki.org forensic capabilities].

Even carefully designed setups fail to approach the efficiency of an amnesic system. At a bare minimum, before any strong claims can be made about anti-forensics, the following steps should be undertaken:

# Make an image of the HDD/SSD.
# Run Whonix and perform a range of normal user activities.
# Make another image of the HDD/SSD.
# Compare the images.

Unless these basics steps are performed, the setup may seem ingenious but fail against contemporary forensic tools. Users concerned about local forensics should at least use full disk encryption. When established open source encryption solutions like Linux dmcrypt are used correctly, they live up to their promises. However, always remember this approach is inferior to an amnesic system, particularly if the user can be forced to surrender their password under certain circumstances. If that is a legitimate concern, then Whonix may not be the right tool and alternatives like [https://tails.boum.org/ Tails] should instead be investigated.

== Stability ==

=== Whonix Crashes because of PAE? ===

See [[VirtualBox/Troubleshooting#PAE_crash|PAE crash]].

== Versioning ==

=== What is the Difference Between the ''stable'', ''stable-proposed-updates'', ''testers'' and ''developers'' Repositories? ===
{{Anchor|Alpha? Beta? Stable? Development? Whonix version scheme}}

See [[Whonix-APT-Repository#Whonix_APT_Repository_Overview|Whonix APT Repository Overview]].

=== How do I Check the Current Whonix Version? ===

See <code>/etc/whonix_version</code>.

{{Open a Whonix-Gateway Terminal}}

{{CodeSelect|code=
cat /etc/whonix_version
}}

Should show.

<code>{{VersionShort}}</code>

{{Open a Whonix-Workstation Terminal}}

{{CodeSelect|code=
cat /etc/whonix_version
}}

Should show.

<code>{{VersionShort}}</code>

=== Can I Install the Previous Stable Whonix Version? ===

It is not uncommon for Linux Distributions to support multiple release versions.<ref> At the time of writing Fedora supports 2 release versions - Fedora {28,29}. https://fedoraproject.org/wiki/Releases#Current-supported-releases</ref> <ref>Debian supports "stretch" stable, "buster" testing, "sid" unstable. https://www.debian.org/releases/</ref> The popular Linux distribution Debian [[About#Based_on_Debian|from which Whonix is based]] supports not only stable, testing and unstable versions, but also provides support for the old-stable version. This is because it can take a longer for some organizations to plan, test and upgrade all computers when a new stable version is released.<ref>https://wiki.debian.org/DebianOldStable/#FAQ</ref> Supporting the old-stable version with continued security updates for a period of time provides flexibility when migrating to the stable version. However, even for distributions like Debian that have a large number of developers, it can be very difficult supporting both stable and old-stable versions.<ref>https://www.debian.org/security/faq#lifespan</ref> This is evident by the limited time that the old-stable version is supported after the new stable is released. While providing extended support for previous stable versions is preferred for both large and small projects alike, this is not feasible for projects such as Whonix that have very limited human resources. The is because the vast majority of developer time must be focused on core components of the stable release version<ref>At time of writing Whonix 14 is stable release.</ref> and as such, providing support for both stable and old-stable would unduly stall its development. Therefore, maintaining two stable release version will not be possible in the near or distant future.

== Whonix Gateway ==

=== Why can't I Ping the Whonix-Gateway? ===

The Whonix-Gateway does not respond to ping or similar commands because it is firewalled for security reasons; see ''{{WhonixFirewall}}'' or refer to the Whonix source code. In most cases it is unnecessary to ping the Whonix-Gateway anyhow.

If a user insists on pinging the Whonix-Gateway or has a unique setup that requires it, then this can be tested by clearing all firewall rules with the [https://github.com/Whonix/whonix-developer-meta-files/blob/master/dangerous_scripts/dev_clearnet dev_clearnet] script. Alternatively, a script can be run to try and [[Dev/Firewall_Unload|unload / remove every iptables rule]], or the Whonix firewall can be hacked to not load at all. The latter method is only for experts and it is necessary to comment out the ''exit 0'' at the beginning.

=== Graphical Whonix-Gateway? ===

{{Box|text=
<u>[[Qubes-Whonix]]</u>:<br />
{{Box|text=
Does not apply.
}}
}}

{{Box|text=
<u>[[Non-Qubes-Whonix]]</u>:<br />
{{Box|text=
If a user believes the Whonix-Gateway is using too much RAM or generally prefers a terminal version of Whonix-Gateway the user can use '''headless''' Whonix, see [[VirtualBox/CLI|Whonix for VirtualBox with CLI]].
}}
{{Box|text=
Alternatively [[VirtualBox/XFCE|Whonix for VirtualBox with XFCE]] RAM can be reduced to 256 MB and [[Desktop#RAM_Adjusted_Desktop_Starter|RAM Adjusted Desktop Starter]] will automatically boot into a terminal version of Whonix-Gateway. 
}}
}}
{{Anchor|GUI Benefits}}
=== Graphical Whonix-Gateway benefits over Headless Whonix-Gateway ===
In the [[VirtualBox/CLI|non-graphical version of Whonix-Gateway]] it is difficult for users who had never used Linux before to complete tasks like upgrading or configuring obfuscated bridges. Many activities are simpler and easily accessible in a [[VirtualBox/XFCE|graphical Whonix-Gateway]], such as:

* Setting up bridges / flashproxies.
* Auditing logs.
* Auditing iptables.
* Auditing the system architecture in general.
* Running [[Test|Tests]].
* Running [[Dev/Leak_Tests|Leak Tests]].
* Editing the Tor configuration file {{Code2|/usr/local/etc/torrc.d/50_user.conf}}.
* Editing the firewall settings folder {{Code2|/etc/whonxi_firewall.d}}.
* Reading status messages ([[whonixcheck]] and [[sdwdate]]).
* [[Arm|Changing the Tor circuit]].
* Copying and pasting (configuration) commands, (error) messages and logs.
* Running tshark / wireshark.
* [[FAQ#Should_I_Install_a_VPN_on_the_Host_or_Whonix-Gateway.3F|Tunneling only Whonix-Gateway's traffic through a VPN]].

A black, text-only window (terminal) is intimidating for normal users. A graphical desktop environment is also a prerequisite for further planed improvements, such as a Whonix Controller. The proposed [https://github.com/Whonix/Whonix/issues/132 graphical Whonix Controller] will provide buttons such as:

* "Create hidden blog", which creates a pre-configured blog.
* "Backup onion service keys".
* A [https://phabricator.whonix.org/T89 Better Circumvention User Interface].
* And more.
* Also, terminal-only environments are often unusable for users with disabilities.

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
