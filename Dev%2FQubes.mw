{{#seo:
|description=Qubes-Whonix development notes.
}}
{{Header}}

= Debian Template =
https://groups.google.com/forum/#!topic/qubes-devel/EBxvtMlwp5k

= Config Files Changes =
[https://groups.google.com/d/msg/qubes-users/AqZV65yZLuU/RQlLPOn5yRsJ source]

I don't know how rpm packaging works. However, the TorVM rpm packaging seems simpler to me and introduce less overhead than Debian packaging at first view. Is there something like config-package-dev for Fedora? config-package-dev is a package to overtake ownership of other
> package's files. Such as, in Debian the Tor package owns /usr/share/tor/tor-service-defaults-torrc. Whonix needs to modify that file and keep it updated. config-package-dev can be used to avoid getting the file being overwritten when upstream releases and upgrade. Is there something like this for Fedora or is this even required? That would make a port much simpler, because for many parts, it's just diverted config files.

qubes-tor pacakages provides own config file (tor --defaults-torrc option used), so no need to override the one provided by tor package.

But to answer your question - no, rpm do not have option to take ownership of files from other packages, but to workaround this (rather sensible) limitation you can modify the config in triggers (so the file will be modified after each original package update).

= IPs =
[https://groups.google.com/d/msg/qubes-devel/jxr89--oGs0/IcA4pia70-0J source]

Qubes uses non-fixed LAN IPs? How do internal LAN IPs get assigned to TorVM / AppVMs?

QubesVm IP address is generated based on its netvm ID (subnet number) and the said VM static ID, so unless user is switching netvm, the IP is pretty static. We've chosen 10.137.<subnet-id>.<vm-id> which is quite exotic so conflicts with real LAN are very rare (even if rather harmless in isolated network).

= Tor Browser =

[https://groups.google.com/d/msg/qubes-devel/Dd0MVbIam5I/9z6GblxYQHwJ source]

In your Torless TBB launcher script for use with Qubes' transparent Tor proxy, TOR_SOCKS_HOST=10.137.3.1. Is this supposed to be the same for all Qubes machines regardless of how many ProxyVMs users have created (or other user settings)? Or is the user supposed to change this before using the script?

Perhaps it is good idea to add some firewall rule in TorVM to redirect traffic to any 10.137.0.0/16 IP + port 9050/9049 to the tor running in TorVM. This way AnonVM can use any IP as a sock proxy address.

= Run updates over Proxy/Tor =
[https://groups.google.com/d/msg/qubes-devel/2vnGqsoM9p0/0YCltU-Qs-MJ source]

Without wasting a lot space, having lots of standalone VMs... How could one persistently install software in QubesOS using package managers over Tor just for a specific VM? Routing all traffic over Tor is also an option, but not a ideal one either (having some clearnet traffic is better for various reasons).

Set TorVM as netvm for the template. By default template updates are routed via "update proxy" (simple http proxy, which allow access only to
yum-repository-like sites). This proxy is running in netvm, so after TorVM. Because of that its you need to disable 'yum-proxy-setup' service for this
template and allow some traffic in the firewall settings. Or enable 'qubes-yum-proxy' service in TorVM and ensure that its traffic goes through tor.

= Time Sync =
== Introduction ==
Discussion about insecurity of NTP: <br />
https://groups.google.com/d/msg/qubes-devel/YHK_rAUm0s0/ARrBPHrf0fkJ

[https://groups.google.com/d/msg/qubes-users/AqZV65yZLuU/Lh8T7ZL6tdIJ source]

Can Qubes OS leave VM's clocks untouched and keep time sync to the VM or is there some forced-VM-timesync-with-dom-0 that can not be turned off? In that case, that would be a bad.

Currently time synchronization is done in some silly way: qvm-sync-clock called each 6min from dom0 cron. That tool fetch the current time using
ntpdate in netvm (VM set as clockvm in qubes-prefs), then pass the result to 'date -s' in each VM.

You can disable this mechanism globally by unsetting(*) clockvm (qubes-prefs -s clockvm none).

(*) Which apparently was broken, fix will be included in updates soon.

== Instructions ==
'''UNTESTED!'''

Install a comfortable editor (optional!).

<pre>
sudo qubes-dom0-update kate
</pre>

Edit your VM settings. (Feel free to drop 'EDITOR=kate' and/or to use an editor of your choice.)

<pre>
sudo EDITOR=kate virsh edit whonix-ws
</pre>

Find the following block.

<pre>
<clock offset='utc' adjustment='reset'>
   <timer name='tsc' mode='native'/>
</clock>
</pre>

Replace it with the following.

<pre>
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup' track='guest'/>
    <timer name='xen' present='no'/>
  </clock>
</pre>

= How big is Qubes OS's user base? =
https://groups.google.com/d/msg/qubes-users/AqZV65yZLuU/Kib1jFLZanUJ

= IP Spoofing Protection =
[https://groups.google.com/d/msg/qubes-devel/le7-Rrq6yxY/nhhpXX1QNRsJ source]

AppVMs can't spoof each other in Qubes' network.

Corollary: stream isolation cannot be circumvented.

= Inter-VM Networking =
Current Qubes + Whonix implementation has both the Whonix-Gateway and Whonix-Workstation connected to the same backend FirewallVM and iptables forwarding is manually established between the Whonix IP addresses. This current method is really just an efficient hack for our initial Qubes + Whonix implementation. The native/proper way to network VMs in Qubes is via chaining their networking "backend" together, which is part of Xen networking structure. This is how other VMs in Qubes are networked, including TorVM. According to Qubes devs, these Xen backends provide simple point-to-point networking between VMs. So this would be advantageous for further isolation of inter-VM Whonix traffic, since, currently, all inter-VM traffic is routed through the internet-facing FirewallVM, which can also be shared by other VMs. This current implementation with a shared FirewallVM could be somewhat of a security concern for inter-VM traffic, and a reason to move to native/proper isolated point-to-point "backend" networking. Also, in the future, it is desirable to leverage full ProxyVM/ServiceVM networking between Whonix-Gateway and Whonix-Workstation, as the TorVM does. ProxyVM utilizes Xen "backend" networking but automates it with transparent Qubes GUI networking, making use of dynamically created virtual networking interfaces. Whonix may need to add onto or adjust its internal networking setup to be compatible with such native Qubes networking.

Discussions related to this topic:
* https://groups.google.com/d/topic/qubes-users/RFXoZ3zt-PE
* https://groups.google.com/d/msg/qubes-users/GhgWH5mHf2E/0LU35M6GPecJ
* https://groups.google.com/d/msg/qubes-users/GhgWH5mHf2E/96odaNoBVRwJ

= Forum Discussion =
[https://www.whonix.org/old-forum/index.php/topic,392.0.html Qubes + Whonix]

= IP =
== grep -r 10.152.152.10 * ==
<pre>
packages/anon-ws-leaktest/usr/lib/leaktest-workstation/simple_ping.py:target = "10.152.152.10"
</pre>
Let's make a patch adding command line support implementing either --qubes or --ip?

<pre>
packages/whonixcheck/usr/lib/whonixcheck/preparation:      GATEWAY_IP="10.152.152.10"
packages/whonixcheck/usr/lib/whonixcheck/preparation:      GATEWAY_IP="10.152.152.10"
</pre>
Overruleable. These variables get only set there if they are not yet set. So they can be manipulated by using environment variables, or better by dropping a config snippet to {{Code|/etc/whonix.d/40_qubes}}, {{Code|/etc/whonix.d/40_qubes}} that contains: export GATEWAY_IP="<qubes-ip>" <br /> (Make that {{Code|40_qubes_autogenerated}} if the file gets autogenerated.)

<pre>
packages/anon-kde-streamiso/usr/share/anon-kde-streamiso/share/config/kioslaverc:socksProxy=http://10.152.152.10 9122
</pre>
We could implement a package anon-kde-streamiso-qubes, that overrules anon-kde-streamiso and that gets only installed when using --qubes. ([http://lists.kde.org/?l=kde&m=141130406809446&w=2 KDE config files are stackable although debuging is a bit cumbersome].) We'd just have to make sure the path to anon-kde-streamiso-qubes comes (before or after?) anon-kde-streamiso's path in the KDEDIRS envrionment variable.

Or we could install either anon-kde-streamiso or anon-kde-streamiso-qubes (--qubes) depending on which build switch is being used.

<pre>
packages/anon-kde-streamiso/debian/control: settings are set, for KDE applications to socks 10.152.152.10:9122.
packages/anon-kde-streamiso/README.md:settings are set, for KDE applications to socks 10.152.152.10:9122.
</pre>
Just a package description strings doing nothing. Either nevermind or rewrite the comment.

<pre>
packages/whonix-base-files/etc/apt/apt.conf.d/90whonix:## running on 127.0.0.1:9104 forwarding to 10.152.152.10:9104.
packages/whonix-base-files/etc/apt/apt.conf.d/90whonix:## running on 127.0.0.1:9104 forwarding to 10.152.152.10:9104.
packages/whonix-base-files/etc/apt/apt.conf.d/90whonix:## running on 127.0.0.1:9104 forwarding to 10.152.152.10:9104.
packages/whonix-base-files/etc/apt/apt.conf.d/90whonix:#Acquire::socks::proxy "socks://10.152.152.10:9104/";
</pre>
These are just comments doing nothing. We can either nevermind or rewrite the comments.

<pre>
packages/whonix-ws-firewall/usr/bin/whonix_firewall:[ -n "$GATEWAY_IP" ] || GATEWAY_IP="10.152.152.10"
packages/whonix-ws-firewall/etc/whonix_firewall.d/30_default.conf:GATEWAY_IP="10.152.152.10"
</pre>
Overrulable. <br />
File: /etc/whonix_firewall.d/40_qubes <br />
Content: GATEWAY_IP="<qubes-ip>" <br />
Note: Keep a possible race condiation in mind. Depending on how that config snippnett is created and when whonix_firewall starts. Should the config change after whonix_firewall was already loaded, reload Whonix's firewall ("sudo whonix_firewall").

<pre>
packages/anon-shared-helper-scripts/usr/lib/anon-shared-helper-scripts/tor_bootstrap_check.bsh:            TOR_CONTROL_HOST="10.152.152.10"
packages/anon-shared-helper-scripts/usr/lib/anon-shared-helper-scripts/tor_bootstrap_check.bsh:            TOR_CONTROL_HOST="10.152.152.10"
</pre>
Overruleable. These variables get only set there if they are not yet set. So they can be manipulated by using environment variables, or better by dropping a config snippet to {{Code|/etc/whonix.d/40_qubes}}, {{Code|/etc/whonix.d/40_qubes}} and {{Code|/etc/torbrowser.d/40_qubes}} that contains: export TOR_CONTROL_HOST="<qubes-ip>" <br />
(Make that {{Code|40_qubes_autogenerated}} if the file gets autogenerated.)

<pre>
packages/uwt/usr/bin/uwt:        echo "         sudo $NAME -i 10.152.152.10 -p 9104 /usr/bin/apt-get --yes dist-upgrade"
</pre>
Just an output string when using "uwt -h". Not overrulable at the moment. We can either put both IPs in there. Or would it be worth sourcing the /etc/uwt.d folder to make that IP configurable? (It is also a performance question.)

<pre>
packages/uwt/etc/uwt.d/30_uwt_default:      uwtwrapper_gateway_ip="10.152.152.10"
</pre>
Overrulable. Create a file /etc/uwt.d/40_qubes with content: uwtwrapper_gateway_ip="<qubes-ip>".

<pre>
packages/uwt/man/uwt.1.ronn:`sudo uwt -t 5 -i 10.152.152.10 -p 9104 /usr/bin/apt-get.anondist-orig --yes dist-upgrade`
packages/uwt/man/uwt.1.ronn:    uwt -t 5 -i 10.152.152.10 -p 9109 /usr/bin/wget ${1+"$@"}
</pre>
Just a man page documentation string. We could modify the man page to cover both use cases.

<pre>
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:TransPort 10.152.152.10:9040
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:DnsPort 10.152.152.10:53 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9050
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9100
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:#SocksPort 10.152.152.10:9100 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9101 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9102 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9103 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9104
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9105 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9106 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9107 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9108 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9109 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9110 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9111
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9112
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9113
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9114 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9115 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9116 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9117 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9118 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9119
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9120 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9121 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9122
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9123
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9124
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:##  127.0.0.1:9150 to 10.152.152.10:9150 [as part of the
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9150
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9152
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9153
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9154
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9155
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9156
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9157
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9158
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9159
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9160 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9161 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9162 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9163 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9164 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9165 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9166 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9167 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9168 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9169 IsolateDestAddr
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9170 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9171 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9172 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9173 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9174 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9175 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9176 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9177 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9178 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9179 IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9180 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9181 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9182 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9183 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9184 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9185 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9186 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9187 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9188 IsolateDestAddr IsolateDestPort
packages/anon-gw-anonymizer-config/usr/share/tor/tor-service-defaults-torrc.anondist:SocksPort 10.152.152.10:9189 IsolateDestAddr IsolateDestPort
</pre>
Not overrulable. Unfortunatly Tor does not support variables in config files. Should I (Patrick) make a feature request against Tor?

If you could use static IPs, we could fall back to use Debian packaging's patching mechanism. But that would be burdensome maintenance wise. Because there would be need for a separate qubes repository, that always has the patch applied. Or users would always have to upgrade from source code, which seems inconvenient. Or can we think of something else?

<pre>
packages/tb-updater/usr/bin/update-torbrowser:      [ -n "$GATEWAY_IP" ] || GATEWAY_IP="10.152.152.10"
</pre>
Overrulable. Create a file {{Code|/etc/torbrowser.d/40_qubes}} with content: GATEWAY_IP="<qubes-ip>".

<pre>
packages/whonix-legacy/debian/whonix-legacy.preinst:         sed -i 's/192.168.0.10/10.152.152.10/g' "/home/user/.torchat/torchat.ini" || true
packages/whonix-legacy/debian/whonix-legacy.preinst:         sed -i 's/192.168.0.10/10.152.152.10/g' "/home/user/.xchat2/xchat.conf" || true
</pre>
No change required here. Only applies to Whonix 8.3.

<pre>
packages/whonix-gw-network-conf/etc/network/interfaces.whonix:       address 10.152.152.10
</pre>
TODO research: Does ifupdown support variables? If not... We have to think of something.

<pre>
packages/anon-ws-dns-conf/etc/resolv.conf.anondist:nameserver 10.152.152.10
</pre>
TODO research: Does /etc/resolv.conf support variables? If not... We have to think of something.

<pre>
packages/anon-ws-dns-conf/debian/control: 10.152.152.10, where an Anon-Gateway is supposed to provide a DnsPort on port
packages/anon-ws-dns-conf/README.md:10.152.152.10, where an Anon-Gateway is supposed to provide a DnsPort on port
</pre>
Just documentation strings. Either nevermind or patch documentation.

<pre>
packages/sdwdate-plugin-anon-shared-streamiso/etc/sdwdate.d/31_anon_dist_stream_isolation_plugin:PROXY="10.152.152.10:9108"
</pre>
Overrulable. Create a file /etc/sdwdate.d/40_qubes with content: PROXY="<qubes-ip>"

<pre>
packages/sdwdate-plugin-anon-shared-streamiso/debian/control: Sets sdwdate's proxy settings to socks 10.152.152.10:9108.
packages/sdwdate-plugin-anon-shared-streamiso/README.md:Sets sdwdate's proxy settings to socks 10.152.152.10:9108.
</pre>
Just documentation strings. Either nevermind or patch documentation.

<pre>
packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh:##   127.0.0.1:9050 to Whonix-Gateway 10.152.152.10:9050 and
packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh:##   127.0.0.1:9150 to Whonix-Gateway 10.152.152.10:9150.
packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh:#export TOR_SOCKS_HOST="10.152.152.10"
</pre>
Just documentation strings. Either nevermind or patch documentation.

<pre>
packages/anon-ws-disable-stacked-tor/etc/rinetd.conf.anondist:127.0.0.1        9050      10.152.152.10    9050
packages/anon-ws-disable-stacked-tor/etc/rinetd.conf.anondist:127.0.0.1        9150      10.152.152.10    9150
packages/anon-ws-disable-stacked-tor/etc/rinetd.conf.anondist:127.0.0.1        11109     10.152.152.10    9119
packages/anon-ws-disable-stacked-tor/etc/rinetd.conf.anondist:127.0.0.1        9051      10.152.152.10    9052
packages/anon-ws-disable-stacked-tor/etc/rinetd.conf.anondist:127.0.0.1        9151      10.152.152.10    9052
</pre>
Maybe [https://github.com/Whonix/Whonix/issues/341 anon-ws-disable-stacked-tor: consider replacing rinetd with rlinetd] (probably not a great idea).

TODO research: does /etc/rinetd.conf support variables? If not, we have to think of something.

<pre>
packages/whonix-ws-network-conf/etc/network/interfaces.whonix:       gateway 10.152.152.10
</pre>
Same comment as whonix-gw-network-conf/etc/network/interfaces.whonix.

<pre>
packages/anon-torchat/usr/share/anon-torchat/.torchat/torchat.ini:tor_server = 10.152.152.10
packages/anon-torchat/usr/share/anon-torchat/.torchat/torchat.ini:tor_server = 10.152.152.10
</pre>
Probably requires a package anon-torchat-qubes that conflicts with anon-torchat that gets installed when using --qubes.

<pre>
packages/xchat-improved-privacy/usr/share/xchat-improved-privacy/.xchat2/xchat.conf:# /set net_proxy_host 10.152.152.10
</pre>
Just documentation strings. Either nevermind or patch documentation.

<pre>
packages/xchat-improved-privacy/usr/share/xchat-improved-privacy/.xchat2/xchat.conf:net_proxy_host = 10.152.152.10
</pre>
Just documentation strings. Either nevermind or patch documentation.

== grep -r 10.152.152.11 * ==
<pre>
packages/whonix-ws-firewall/usr/bin/whonix_firewall:##     From 10.152.152.11 icmp_seq=1 Destination Port Unreachable
</pre>
These are just comments doing nothing. We can either nevermind or rewrite the comments. 

<pre>
packages/anon-gw-anonymizer-config/etc/tor/torrc.examples:HiddenServicePort 80 10.152.152.11:80
packages/anon-gw-anonymizer-config/etc/tor/torrc.examples:HiddenServicePort 11009 10.152.152.11:11009
packages/anon-gw-anonymizer-config/etc/tor/torrc.examples:HiddenServicePort 80 10.152.152.11:80
</pre>
These are just comments doing nothing. We can either nevermind or rewrite the comments. 

<pre>
packages/whonix-legacy/debian/whonix-legacy.preinst:         sed -i 's/192.168.0.11/10.152.152.11/g' "/home/user/.torchat/torchat.ini" || true
</pre>
Same comment as for packages/whonix-legacy/debian/whonix-legacy.preinst.

<pre>
packages/whonix-ws-network-conf/etc/network/interfaces.whonix:       address 10.152.152.11
</pre>
Same comment as for packages/whonix-gw-network-conf/etc/network/interfaces.whonix above.

<pre>
packages/anon-torchat/usr/share/anon-torchat/.torchat/torchat.ini:listen_interface = 10.152.152.11
</pre>
Same comment as for packages/anon-torchat/usr/share/anon-torchat/.torchat/torchat.ini above.

= Misc =
Random facts.

* {{Code2|AdminVM}} is a synonym for {{Code2|dom0}} <ref>https://github.com/QubesOS/qubes-issues/issues/1015</ref>.
* {{Code2|AdminVM}} is not based on Fedora Template VM. More like a standalone VM.
* Qubes Q3 RC1 {{Code2|AdminVM}} is based on Fedora 20. <ref>
https://groups.google.com/d/msg/qubes-users/zHdY6Oe58t0/qSFkLZdpng4J
<blockquote>
Actually you need rpmfusion-free-release-20.noarch.rpm, as Qubes dom0 is based on Fedora 20. 
</blockquote>
</ref>
* Qubes Q3 RC1 {{Code2|Fedora Template VM}} is based on Fedora 21.

= Time = 
<pre>
sudo mv /etc/qubes-rpc/qubes.SetDateTime /etc/qubes-rpc/qubes.SetDateTime.disabled
</pre>

= tb-updater vs TemplateVM =
== prerequisite knowledge ==
* TPO stands for The Tor Project
* The /home folder of a TemplateVM is copied to a TemplateBasedVM at creation time of the TemplateBasedVM. From then, TemplateBasedVM's /home folder is left untouched. (Source: https://groups.google.com/forum/#!topic/qubes-users/WwVJhGA-Xnc)
* Tor Browser installation path in Whonix 12 will change to ~/.tb. (https://phabricator.whonix.org/T338)
* Since Qubes-Whonix 11, Tor Browser gets installed by default for new images. (Not for in place upgrades.)
* [[Tor_Browser#Tor_Browser_Updater_.28Whonix.29|Tor Browser Updater (Whonix)]] (((https://github.com/Whonix/tb-updater))) vs
* [[Tor_Browser#Tor_Browser_Internal_Updater|Tor Browser Internal Updater]]
* Tor Browser Updater (Whonix) is unable to keep user settings (modifications such as bookmarks). It renames the old folder. Adds ".old.$(date)". So nothing is lost. Then installs a fresh one. Something important to know. This limitation can probably not be lifted in tb-updater. Upgrading Tor Browser is hard. (TPO often changed the folder layout in past.) That's what Tor Browser's internal updater is for.
* No one has demonstrated yet, that it's possible to install & run and/or update TBB to either /usr/*, /opt/* or anything of that sort. This is because within the TBB folder, by TPO default, binaries and user data is mixed. (It's a portable application. [Portable with a meaning similar to portableapps.com. Portable on USB drives or similar. Not platform, arm + anything portable.])
* By TPO default, users are supposed to have TBB in their home folder.
* It is very unlikely, that TBB will be available as regular deb package anytime soon. <ref>
* [https://trac.torproject.org/projects/tor/ticket/3994 Get TorBrowser in Debian]
* [https://trac.torproject.org/projects/tor/ticket/5236 Make a deb of the Torbrowser and add to repository]
</ref>
* A quick an dirty packaging of TBB would likely require too much maintenance effort. [Needs keeping up with upstream releases.]
* Packaging TBB is further complicated, because TBB abuses Firefox's user settings mechanism for configuring anonymity related settings. (Firefox prefs) Therefore separation of binaries and user data is difficult.
* Once TBB is in user's home folder...  [as TPO wants it] [and it does not work otherwise]... And once the user used it... And once the user stored settings there that the user cares about... [bookmarks, etc...] It gets very difficult for the TemplateVM and/or tb-updater to keep the TBB folder up to date. That's what Tor Browser Internal Updater is for.
** Unfortunately, this means, if a user had for example 5 different Qubes-Whonix-Workstation based AppVMs where Tor Browser is in use, the user would have to update each of its 5 TBBs using Tor Browser Internal Updater.
** This is an issue, because Qubes updates are already complicated. (Various templates and dom0 needs to be updated.) This adds another layer of complexity. Users also have to care about updating stuff from within their AppVMs, which is counter intuitive.
** TBB stable has automatic updates enabled by default. <ref>
https://blog.torproject.org/blog/tor-browser-50-released
<blockquote>Starting with this release, Tor Browser will now also download and apply upgrades in the background, to ensure that users upgrade quicker and with less interaction. This behavior is governed by the about:config pref app.update.auto, but we do not recommend disabling it unless you really know what you're doing.</blockquote>
</ref>

== Implementation as of Qubes-Whonix 11 ==
* As of Qubes-Whonix 11 it is confusing. Running tb-updater in the TemplateVM and restarting AppVM won't result in up to date TBB's. [Since if the TemplateVM modifies /home, this will not propagate to AppVM's /home.]

== Brainstorming ==
=== Headless TBB Internal Updater Updates in AppVMs ===
We could call a qrexec service that starts TBB in each individual AppVM heedlessly (without / with hidden gui, using xvfb or similar) so it will be fetching updates.

=== up to date versions of Tor Browsers in newly created AppVMs inherited from updated TemplateVMs ===
ship Tor Browser tarballs in Qubes TemplateVMs in /var/cache/tb-binary and extract in AppVMs at boot time to user's home folder:<br />
https://phabricator.whonix.org/T417

=== keep as is ===
Newly created Qubes-Whonix-Workstation AppVMs inherit the TBB version that came pre-installed in the Qubes-Whonix-Workstation TemplateVM. From there, TBB's internal updater keeps care of updating it.

== Forum Discussion ==
* https://www.whonix.org/old-forum/index.php/topic,1381.0.html
* https://www.whonix.org/old-forum/index.php/topic,1509.0.html

= UpdateVM =
Moved to [[Next#Torified_dom0_Updates]].

= Upgrade through Clearnet =
Just a note about upgrading a Whonix-Gateway TemplateVM through Clearnet. Untorified! This is easily possible by setting the following environment variable.

<pre>
export UWT_DEV_PASSTHROUGH="1"
</pre>

= Build Single Qubes Package =
Source: https://groups.google.com/forum/#!topic/qubes-devel/o6pn-kV7cU0

<pre>
BACKEND_VMM=xen dpkg-buildpackage -b 
</pre>

= Build Qubes-Whonix Templates =
<pre>
make get-sources
</pre>

<pre>
./setup
</pre>

override.conf
<pre>
VERBOSE = 3
DEBUG = 1
REPO_PROXY = http://127.0.0.1:3142
CHECK_BRANCH = 1

BRANCH_template_whonix = master
GIT_URL_template_whonix = https://github.com/adrelanos/qubes-template-whonix.git
</pre>

Again required?

<pre>
./setup
</pre>

<pre>
make prepare-merge
</pre>

Another time. <ref>https://github.com/QubesOS/qubes-issues/issues/1420</ref>

<pre>
make prepare-merge
</pre>

<pre>
make qubes-vm
</pre>

<pre>
make templates --debug=v
</pre>

= Test =
* works as UpdateVM
* can be used as ProxyVM for Fedora and Debian templates
* whonixcheck (--verbose) in sys-whonix, whonix, whonix-gw, whonix-ws

= Qubes VM Manger Firewall Tab Settings =
([https://www.qubes-os.org/attachment/wiki/QubesFirewall/r2b1-manager-firewall.png screenshot])

Short:<br />
Have no effect for Qubes-Whonix VMs. Can be ignored.

Long <ref>https://groups.google.com/d/msg/qubes-devel/uzgN42uEJpE/hymUCMxoCwAJ</ref>:<br />
All that settings are in separate file in the VM directory - dom0 /var/lib/qubes/appvms/whonix/firewall.xml. If the VM is running, those settings are converted to iptables syntax and loaded into QubesDB of directly connected ProxyVM. The qubes-firewall service in the ProxyVM watch for such changes and applies the rules.

I.e. in case of Whonix, the connected ProxyVM is sys-whonix. Since in Whonix qubes-firewall service is disabled (Whonix 12 <ref>https://github.com/Whonix/qubes-whonix/blob/master/lib/systemd/system/qubes-firewall.service.d/40_qubes-whonix.conf</ref>), these settings do not affect Whonix. ([https://github.com/Whonix/qubes-whonix/blob/master/lib/systemd/system/qubes-whonix-firewall.service qubes-whonix-firewall.service] is what Whonix uses.)

= Qubes Upstream Bugs =
Usability:

* [https://github.com/QubesOS/qubes-issues/issues/889 Centralized Tray Notifications]

= stable vs testing =
Building R3 vs R3.1. Comments on which branch / config to build.

https://github.com/QubesOS/qubes-issues/issues/1318#issuecomment-147133115

= Handling of file system in TemplateVMs vs TemplateBasedVMs =
== Qubes R3 ==
{| class="wikitable" style="background-color: #fff;text-align: center"

|
| root
| home

|-
| create new AppVM
| {{Yes}}
| {{Yes}}

|-
| modifications in TemmplateVMs for existing AppVMs
| {{Yes}}
| {{No}}

|}

* when you create a new AppVM, it inherits the TemplateVMs root and home folder
* when you make changes in your TemplateVM root such as installing new packages, those will be available to existing AppVMs after TemplateVM shutdown + AppVM (re)start
* when you make changes in your TemplateVM home, those will be not be available to existing AppVMs

== Qubes Proposal ==
{| class="wikitable" style="background-color: #fff;text-align: center"

|
| root
| home

|-
| create new AppVM
| {{Yes}}
| {{No}}

|-
| modifications in TemmplateVMs for existing AppVMs
| {{Yes}}
| {{No}}

|}

= Split GPG =
See [[Dev/Split_GPG]].

= Footnotes =
<references />

{{Footer}}

[[Category:Design]]
