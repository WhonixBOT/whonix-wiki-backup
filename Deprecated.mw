{{Header}}
{{#seo:
|description=Outdated, Deprecated, Archived Whonix Documentation.
}}
= About this page =

'''This is outdated documentation which no longer applies. Kept in case it will be required again in future.'''

=SELinux= <!--T:386-->

<translate>
<!--T:387-->
SELinux is more robust than Apparmor because its label based vs file-path based. But his comes at the expense of being difficult to write policies. The good news is if you are a KVM user and want to harden your GNU/Linux host, its as simple as enabling SELinux and libvirt will automatically take advantage of it without any further effort needed on your part.

<!--T:388-->
These instructions apply to Whonix and could be easily replicated for your Debian host.
First disable Apparmor if you are using it. Both MAC systems cannot be run simultaneously run. This is not supported by LSM and may also be a source of conflicts. 

<!--T:389-->
AppArmor is disabled, and the kernel module unloaded by entering the following<ref>https://help.ubuntu.com/12.04/serverguide/apparmor.html</ref>:
</translate>

<pre>sudo /etc/init.d/apparmor stop
sudo update-rc.d -f apparmor remove</pre>

<translate>
<!--T:390-->
To enable SELinux follow these steps.<ref>http://debian-handbook.info/browse/stable/sect.selinux.html</ref> The cited guide also includes steps for writing custom policy for hardening.</translate>


<pre>
    # aptitude install selinux-basics selinux-policy-default
    # selinux-activate
    # reboot

    # sudo nano /etc/default/grub

    Replace all mention of apparmor in settings for GRUB_CMDLINE_LINUX with selinux=1 and the enforcing=1 parameter to the Linux kernel. The audit=1 parameter enables SELinux logging which records all the denied operations.

    Remove the line under it that starts with: GRUB_CMDLINE_LINUX_DEFAULT

    # update-grub
</pre>


= Updating Tor =

Tor was installed on Whonix according to [https://www.torproject.org/docs/debian#ubuntu official instructions for Ubuntu]. You can update Tor (and the rest of the system) using ''apt-get update'' and ''apt-get dist-upgrade''.

If you run in the following error message when running ''apt-get update'' on the Gateway...

<pre>W: GPG error: http://deb.torproject.org precise Inrelease: The following signature were invalid: Keyexpired 1346668560</pre>

...or into the following error message on the Gateway when running ''apt-get dist-upgrade'':

<pre>Warning: The following packages cannot be authenticated!
deb.torproject.org-keyring tor
Install these packages without varification?</pre>

...please use the workaround below. Please do not install without verification for your own safety!

Temporary fix. Run these two commands. (Check if they are still current and genuine in official instructions for Ubuntu.)

<pre>gpg --keyserver keys.gnupg.net --recv 886DDD89

gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add -</pre>

(If they fail for the first time, perhaps because you are on a slow network or slow Tor circuit, run them a few times until the succeed.)

,, Technical problem: The latest Whonix release is a few days ago and in meanwhile there is a new deb.torproject.org-keyring got renewed while the old torproject deb keys expired. Fixing the problem requires a new Whonix release. It will be fixed in 0.3.0. 


=Nymserver QuickSilver Mail How-To=

This guide is for QuickSilver Lite, a Libre Software GUI for Mixmaster. QuickSilver Lite was written for Windows but is fully compatible with Wine. The paranoici Zax-type Nymserver is used for this example. Credit goes to Whonix user '''mirimir''' whose instructions this work is based on.<ref>http://www.wilderssecurity.com/threads/installing-quicksilver-lite-in-whonix-and-creating-a-mixmin-nym.344489/</ref><ref>https://archive.is/bNFah</ref>



<pre>

## Generate your GPG keypair using KGpg. Fill in the nym you chose for the Email field. Use something likely not taken:
KGpg -> Keys -> Generate Key Pair... ->

Name: John Doe (or any alias of choice)
Email: yournym@nymphet.paranoici.org
Keysize: 4096 bits
    
OK -> Enter passphrase for key -> OK.


## Import Nymserver key from KGpg.
KGpg -> Open Keyserver Dialog -> Search for 'send@nymphet.paranoici.org' -> Import


## Always check the fingerprint for yourself. The output at the moment is:

pub  4096R/0x5CE8D7B97340F3A7 2013-01-06 Nymserver <send@nymphet.paranoici.org>
      Key fingerprint = B91A FAEE 998D 5134 5AFE  E104 5CE8 D7B9 7340 F3A7


## In KGpg, highlight your key, and set Trust level on Nymserver key to 'Marginal' and sign it with your own key.

Right-click on Nymserver key -> Key Properties

Owner Trust: Marginally

-> Apply -> OK


Right-click on Nymserver key -> Continue -> Select your nym's secret key to use for signing -> OK -> Enter passphrase



## Download QuickSilver's signing keys with scurl to home folder.
scurl -ko quicksilver.asc https://www.quicksilvermail.net/quicksilver.asc

## Check fingerprints/owners without importing anything. 
gpg --with-fingerprint quicksilver.asc

## Always check the fingerprint for yourself. The output at the moment is:

pub  4096R/0x1B04C05145FF11B1 2013-09-08 QuickSilver <admin@quicksilvermail.net>
      Key fingerprint = 6BC3 5E3D 7473 E416 F423  E845 1B04 C051 45FF 11B1

## Import key:
gpg --import quicksilver.asc

## To avoid ''unsafe ownership'' key warnings
gpg --fingerprint
chmod --recursive 700 ~/.gnupg



## Download archives.
wget -r --no-check-certificate --no-parent -A 'QSLite*.zip' https://www.quicksilvermail.net/qslite/
wget -r --no-check-certificate --no-parent -A 'QSLite*.zip.sig' https://www.quicksilvermail.net/qslite/
wget -r --no-check-certificate --no-parent -A 'QSAam*.zip' https://www.quicksilvermail.net/qsaam/
wget -r --no-check-certificate --no-parent -A 'QSAam*.zip.sig' https://www.quicksilvermail.net/qsaam/


## Move files into Home folder.
mv /home/user/www.quicksilvermail.net/qslite/QSLite*.zip /home/user
mv /home/user/www.quicksilvermail.net/qslite/QSLite*.zip.sig /home/user
mv /home/user/www.quicksilvermail.net/qsaam/QSAam*.zip /home/user
mv /home/user/www.quicksilvermail.net/qsaam/QSAam*.zip.sig /home/user


## Verify archive. Fingerprint should match the key above.
gpg --verify-options show-notations --verify QSLite*.zip.sig QSLite*.zip
gpg --verify-options show-notations --verify QSAam*.zip.sig QSAam*.zip


## Install Wine.
sudo apt-get install wine

## Run Wine to create its directories. Cancel Wine Mono Installer.
wine run

## Create folder for QS components and transfer them.
mkdir /home/user/.wine/drive_c/QS/
unzip QSLite*.zip -d /home/user/.wine/drive_c/QS/
unzip QSAam*.zip -d /home/user/.wine/drive_c/QS/

## Select 'Replace All' when prompted for duplicate files.
A

## Open Terminal and create links to allow QSL and QSA to use Debian gpg:
mkdir .wine/drive_c/QS/gpg-links
link '/home/user/.gnupg/pubring.gpg' '/home/user/.wine/drive_c/QS/gpg-links/pubring.gpg'
link '/home/user/.gnupg/secring.gpg' '/home/user/.wine/drive_c/QS/gpg-links/secring.gpg'

## Run QSL. This way is needed only for the initial run it applies to QSA too. Access QSL from the desktop shortcut afterwards.
cd /home/user/.wine/drive_c/QS
wine qsl.exe

## Setup QSL.
Setup -> Draw randomly in window until "OK" appears ... click "OK" -> Check: Create desktop shortcut | Email Address: yournym@nymphet.paranoici.org -> SMTP Server: gbhpq7eihle4btsn.onion -> Leave SMTP Proxy setings unchanged -> Leave HTTP Proxy setings unchanged -> Finish

(Note: Mixnym's SMTP Onion Service used. Tor Transport used - stream isolation unnecessary)


## Configure QSL.
Open Tools | Options.
...In General tab:
......Under "User Mode", check "Expert".
......Under "On Start-up", check "Open Template Dialog".
...In PGP tab:
......Check "PGP Public Key Encryption".
......For "Private Keyring", use "C:\QS\gpg-links\secring.gpg".
......For "Public Keyring", use "C:\QS\gpg-links\pubring.gpg".
......Click "Default key" and select it (will be just your new one).
......If desired, choose to cache private-key passphrases for five minutes or so.
...In Mix tab:
......Select "once a day" for "Update remailer stats".
...Click "Ok" to finish.
Open Tools | Stats manager.
...Click "Update".
...When you see "done!" click "Ok".
...If it stalls, there's something wrong with your Tor setup.
......Check with Firefox, and also check Tor config in Tools | Proxies.
Open Tools | Allpingers manager.
...Click "Update".
...When you see "done!" click "Ok".


Now you'll configure the message that QSL uses to create a Mixnym nym.
In the main compose pane, customize the message to look like the following:

Code:

Fcc: nyms
Host: gbhpq7eihle4btsn.onion
From: nobody@nowhere.net
Chain: *,*,*; copies=2;
To: send@nymphet.paranoici.org
Subject:

hsub: New Mail For Jude!

-----BEGIN PGP PUBLIC KEY BLOCK-----

mQINBFFP2l4BEACXJDUM6SxyjUk8K+MJ4fRJ5VMaE6hSsAD6n8eO04l9HMzSx26X
<snip>
wnOpR4sYYD9MFLura6+YiHWtT8ih
=ndP9
-----END PGP PUBLIC KEY BLOCK-----

~~

In the above:
...Replace "Jude" in "hsub: New Mail For Jude!" with your fake first name.
...Replace the public key block with your public key that you exported above. Get it by exporting it from KGpg then copy-paste the contents.
...Be very careful near line ends ... Unix vs DOS newline can be buggy here.
...The "~~" at the bottom, preceeded by two blank lines, is crucial!
Save as "nym create template".
...You can reuse it with edits for creating other nyms.
Click the PGP lock and signing icons.
......The mixnym server will only accept signed configuration requests.
Now click "Send" 
"PGP Enrypt to Recipients..." prompt will appear. 
...Choose the Nymserver key from the top pane then click "OK"
Enter your key passphrase when prompted to sign message.
After it finishes, you should see:

Code:

0 in message queue
0 in problem queue
2 sent

All mail sent!

If it worked, the next step is configuring QSA.
If it hangs, cancel out and go back through everything looking for errors.
Close QSL when you're done (and ignore the crash error that you may see).

You can't get a reply from the Nymserver until you configure QSA.


## Run QSA.
cd /home/user/.wine/drive_c/QS
wine qsa.exe

## Setup QSA.
Check: Create desktop shortcut... click "OK" 

If your Nymserver name and type is not listed you must add it first before you can add AAM subject lines encrypted to you.

Open Tools | Nymservers.
...New:
......Nymserver Domain: nymphet.paranoici.org.
......Type: Zax
...Click "OK" then "Done"
Open Tools | AAM Subject Lines.
...New:
...In AAM Subject Line Tab:
......Nym, select your nym's private-key".
......Subject (HSUB), use the one you set or "New Mail For Jude!" if you are following the example above.
...Click "OK" then "Done".
Only one AAM Subject Line can be configured to find your hsub. Be sure to enter it exactly as you did before or else QSA won't find it.
Click "Get Mail" from the main interface. Replies take a while.

## Clean-Up
rm -rf /home/user/www.quicksilvermail.net
rm QSLite*.zip
rm QSLite*.zip.sig
rm QSAam*.zip
rm QSAam*.zip.sig
rm /home/user/Desktop/"QuickSilver Lite.lnk"
rm /home/user/Desktop/"QuickSilver Aam.lnk"


</pre>

==From: Header Support==
For a list of remailers that accept ''From:'' headers.<ref>https://www.quicksilvermail.net/links.html</ref>

http://pinger.mixmin.net/from.html



= KVM GUI Instructions =

No longer applies as we are now using vm xml templates for a standard configuration. The rest of the instructions for shared folders and spice have been moved into a readme file distributed with the images.

<pre>
sudo apt-get update
sudo apt-get install virt-manager
</pre>

Make sure folder {{Code|/var/lib/libvirt/images/}} exists.

<pre>
sudo mkdir -p /var/lib/libvirt/images/
</pre>

Do not use {{Code|unxz}}! Extract the images using {{Code|tar}} to {{Code|/var/lib/libvirt/images/}}.

Before starting the new vm wizard we must create an internal isolated network that connects the workstation with the gateway.

Go to the VMM GUI --> Edit --> Connection Details --> Add button
Choose whonix as network name
Edit subnet range to 10.0.0.2/24
Uncheck the dhcpv4 option
Ignore anything to do with ipv6
Keep the default option of: Isolated Virtual Network selected and click finish.

The next steps may need more work to customize vm devices and clock to safe defaults. Work in this area not final.

Create a Whonix Gateway vm first and choose to edit it before installation.
Customize the first NIC that is included to be in default NAT mode.
Click to add hardware and chose another NIC.
This new NIC must have the newly created isolated virtual network 'whonix' selected as the network device. Finalize and launch.
Must enable disk controller as SATA
Must select qcow2 as storage format.

Create Whonix Workstation vm and  make sure you select the isolated int. network for the only NIC this machine has. Launch.
Disk Controller works only with IDE
Must select qcow2 as storage format

Don't forget to take snapshot.

Done!

-SPICE is enabled for graphics by default but needs a vdagent to be installed in the guest vms for accelerated 2D in vm to happen. Not included in workstation install by default which impacts performance greatly.

http://www.linux-kvm.org/page/SPICE

It should be safe for use unless you Adrelanos determine otherwise. 2D and 3D in VBox have an insecure architecture and even the manuals admit to this. 2D in VBox is not even available for anything but windows guests which is not recommended and insecure of course.  Everything Linux based is designed from the ground up with security considerations in mind.

Clock disabling for vms on host is recommended. Still haven't done it yet,  and it seems to need command line.

== Enabling SPICE == 
SPICE allows accelerated graphics and clipboard sharing. Its implications for security are an open question that needs a detailed answer rather than a vague clear cut one.

1. Enable SPICE by selecting it from the VMM GUI. (It is the default option if you decide not select VNC when creating the VM).
 
Not enabling SPICE from the beginning, will prevent the spice channel device from being added which impacts performance. To fix this add a channel device and select SPICE. This steps is not necessary if you leave the defaults as they are at the beginning.

2. QXL is the GPU model that should be attached.

3. Install vdagent in guest and reboot.

== .qcow file size too big? ==
'''Short:''' <br />
It won't really take up 101 GB. Just ~ 2.6 GB. This is an issue with file managers, not Whonix.

'''Long:''' <br />
<ref>
Don't get fooled by {{Code|ls}} or usual GUI file managers. We're using [http://en.wikipedia.org/wiki/Sparse_file sparse files]. When you are using a reasonable modern file system - which you most likely do - it won't use up a lot space. You can check this for yourself.

<pre>
du -h --apparent-size Whonix-Gateway-8.2.qcow2
101G    Whonix-Gateway-8.2.qcow2
du -h Whonix-Gateway-8.2.qcow2
2.6G    Whonix-Gateway-8.2.qcow2
</pre>

This is tested. If you don't have 500 GB free space, you can have 10 copies if Whonix-Gateway-8.2.qcow2.
</ref>

== KVM Shared Folders ==
To move data between the guest and host follow these steps:

1. Set the following settings for shared folders in virt-manager:

''The file sharing mode 'mapped' is just an example, using squash or passthrough is possible by selecting them from the drop down menu.''

Driver:Default

Mode: Mapped



Source Path: [This is the path of the folder on the Host you are sharing with the Guest]

Target Path: [A custom tag for the shared directory that is used when running the mounting commands within the guest. for example: /tmpshare]


2. Run terminal as root in Guest then use the following command:

mount -t 9p -o trans=virtio [mount tag] [mount point] -oversion=9p2000.L

Mount tag is: /tmpshare

Mount point is the path of the directory that you will share in the Guest with the Host. If it doesn't exist you must create that folder.

Note: you replace the parentheses in the command, they are just a placeholder in this example and should not be typed in.

3. To automatically mount this every time at boot, add the following to your guest's /etc/fstab:

sudo nano /etc/fstab
[mount tag] [mount point]    9p  trans=virtio,version=9p2000.L,rw    0   0

= Footnotes =
[1] http://wiki.qemu.org/Documentation/9psetup#Starting_the_Guest_using_libvirt
<references />

= VirtualBox Guest Additions =

== Introduction ==

Written and tested with Whonix 0.2.1 (Ubuntu precise). Many things can go wrong and none or the very least of them will be caused by Whonix. This has only limited support by the Whonix developers, because 1. it's not recommended for security reasons and 2. the guest additions related bugs and instructions are somewhat out of the scope of the Whonix project.

Installation is somewhat difficult and no packages exist. Just search the internet and you'll see, that loads of people having issues installing the VirtualBox guest additions. People having problems for years. VMware is of no alternative, people are also having trouble installing the VMware tools into Linux guests. The issue with the guest additions is ridiculous. For years no solution has been found. With each kernel update, recompilation is required, and quite often, due to some updates, complication becomes difficult or impossible for a long time.

Also see article, [[http://www.phoronix.com/scan.php?page#news_item&px#OTk5Mw|The VirtualBox Kernel Driver Is Tainted Crap]].

If you are having trouble, than in most cases not because of Whonix. The Whonix setup is a regular Ubuntu Linux and VirtualBox. You can try asking the regular VirtualBox and Ubuntu resources if you have trouble.

= TorChat source package =

== HowTo ==

'''EXPERIMENTAL''' Experimental as in it is difficult to install. Only use it in case you trust TorChat. There shouldn't be any anonymity leaks and it should be as safe as other hidden services in general and in Whonix.

Learn about [[Hidden Services]] in Whonix first and learn how to set up the hidden webserver. This will ease following this guide.

On Whonix-Gateway.

Open your {{Code2|/etc/tor/torrc}}.

<pre>
sudo nano /etc/tor/torrc
</pre>

Add.

<pre>
HiddenServiceDir /var/lib/tor/torchat_service/
HiddenServicePort 11009 10.152.152.11:11009
</pre>

Save. Reload Tor.

<pre>sudo service tor reload</pre>

On Whonix-Gateway.

Install dependencies.

<pre>sudo apt-get install python python-wxgtk2.8</pre>

Get your onion address.

<pre>nano /var/lib/tor/torchat_service/hostname</pre>

Backup your key, if you want to ever restore it one another machine, a newer Whonix-Workstation or after hdd failure.

<pre>/var/lib/tor/torchat_service/private_key</pre>

Download the latest Python version of TorChat source code, for example as time of writing torchat-source-0.9.9.553.zip - Python source code (classic standalone 0.9.9 version) from (https://github.com/prof7bit/TorChat/downloads) and store it in ''/home/user''.

Unpack.

<pre>unzip torchat-source-0.9.9.553.zip</pre>

Get into the torchat source folder. For example.

<pre>cd /home/user/torchat-source-0.9.9.553/</pre>

Get into the src folder.

<pre>cd src</pre>

Get into the Tor folder.

<pre>cd Tor</pre>

Rename tor.sh.

<pre>mv tor.sh backup_tor.sh</pre>

Go back to the src folder.

<pre>cd ..</pre>

Create torchat.ini.

<pre>nano torchat.ini</pre>

Add the following content.

<pre>[client]
listen_interface = 10.152.152.11 
listen_port = 11009
own_hostname = <your onion hostname without .onion>

[tor]
tor_server = 10.152.152.10
tor_server_control_port = 9154
tor_server_socks_port = 9154

[tor_portable]
tor_server = 10.152.152.10
tor_server_control_port = 9154
tor_server_socks_port = 9154</pre>

Make torchat executable.

<pre>chmod +x torchat.py</pre>

Run torchat.

<pre>./torchat</pre>

=== Alternative ===

After installing the dependencies we could also force install the torchat deb package.

<pre>sudo dpkg -i --force-depends torchat-0.9.9.553.deb</pre>

And then configure the files inside ''/home/user/.torchat''. I don't know if that may be the better way.

= Mixmaster =

== MX capable DNS resolver ==

No longer required.

Mixmaster needs to resolve MX DNS records, [https://trac.torproject.org/projects/tor/ticket/7829 while Tor does not support that]. We have to install a DNS resolver capable of doing that. It still comes with caveats.

Required knowledge:

* Introduction chapter of [[Secondary DNS Resolver]]

The [[Secondary DNS Resolver#example-with-cznic-labs-dns-resolver|Example with CZ.NIC Labs DNS resolver]] worked in this case.

Security considerations when replacing the system wide DNS resolver:

<ul>
<li>The third party DNS resolver traffic goes through its own circuit, which is good.</li>
<li><p>All (custom installed) applications not configured to use a SocksPort (see [Stream Isolation]), would resolve their DNS through the system wide DNS resolver, which would be the third party resolver, giving too much power to it, because it's always the same, only one service provider, not changing like Tor circuits but static. ## Install Postfix ##</p>
<p>sudo apt-get install postfix ## configure postfix as sattelite system, default settings</p></li></ul>

Technical background: Mixmaster requires either - a) An (open) smtp server SMTPRELAY in ''/etc/mixmaster/remailer.conf''. Unfortunately, I haven't found any open smtp server (search term: open relay). A mailserver where the user registers first would probably work, but this would defeat the original idea: sending e-mails without depending on registration. Or, - b) a mta (mail transfer agent), which speaks to the remailer directly. '''TODO''': Are there enough Tor exit relays, which allow the SMTP port and does their ISP allow to speak SMTP? If there are too few servers, it could be bad for anonymity.

Open ''/etc/postfix/main.cf''.

<pre>kdesudo kwrite /etc/postfix/main.cf</pre>

Replace the content with the following.

<pre># See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

myhostname = host.localdomain
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
mydestination = host, host.localdomain, localhost.localdomain, localhost
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_command = 
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = loopback-only
inet_protocols = all

relayhost = 1.1.1.1
#relayhost = 2.2.2.2</pre>

== Debugging Postfix ==

Looking into the mail log.

<pre>tail -f /var/log/mail.info</pre>

Should contain something like this.

<pre>
<date> <time> debian postfix/pickup[id]: id2: uid=1000 from=<user>
<date> <time> debian postfix/cleanup[id]: id2: message-id=<id3.id4@host.localdomain>
<date> <time> debian postfix/qmgr[id]: id2: from=<user@host.localdomain>, size=30000, nrcpt=1 (queue active)
<date> <time> debian postfix/smtp[300]: id2: to=<remailer@breaka.net>, relay=mail.breaka.net[202.75.54.8]:25, delay=30, delays=0.30/0.01/30/3.0, dsn=2.0.0, status=sent (250 OK id=id5-id6-id7)
<date> <time> debian postfix/qmgr[id]: id2: removed
</pre>

Reading local mail.

<pre>## Either with cli tool mail.
mail

## Or using gui tool Icedove (Debian version of Mozilla Thunderbird)
## using movemail.</pre>

If all went well, there will be no local mail. Only error messages result in local mails.

= Bugs =

* In Whonix 0.4.5, due to a [https://trac.torproject.org/projects/tor/ticket/7668 Tor Browser upstream bug] (they forgot to update the changelog) and because the keyserver is/was down, the torbrowser and whonixcheck script in Whonix can no longer find out which Tor Browser version is locally installed. ([https://sourceforge.net/p/whonix/discussion/general/thread/6122990d/ Whonix Bug Report]) The [[TorBrowser#update-tor-browser|Update Tor Browser]] chapter contains a workaround and a fix is available for testers.

= Attack matrix in different order =

<table>
<thead>
<tr class="header">
<th align="left">attack</th>
<th align="left">TBB</th>
<th align="left">TBB in a VM</th>
<th align="left">Tails</th>
<th align="left">Tails in a VM</th>
<th align="left">Whonix Standard Download version host+vm+vm</th>
<th align="left">Whonix Physical Isolation</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">(1) Protocol IP leak</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(2) exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="odd">
<td align="left">(3) exploit + root exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(4) root exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="odd">
<td align="left">(5) exploit + vm exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(6) exploit + vm exploit + exploit against physically isolated Whonix-Gateway</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
<tr class="odd">
<td align="left">(7) vm exploit</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(8) vm exploit + exploit against physically isolated Whonix-Gateway</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
<tr class="odd">
<td align="left">(9) exploit against Tor process</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
<tr class="even">
<td align="left">(10) attack against the Tor network</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
</tbody>
</table>

= E-Mail Notification =

Users, who have an (anonymous) sourceforge.net account, could go to the [https://sourceforge.net/projects/whonix/ Whonix sf.net Project Page], scroll down to ''Update Notifications'' and hit the ''Subscribe to Updates'' button. They would receive notifications about new releases sent to their (anonymous) [E-Mail] address.

There is currently no way for users to subscribe to sf.net blogs or wiki, but such a feature [https://sourceforge.net/p/allura/tickets/5702/ has been requested].

== Sourceforge.net E-Mail Notification ==

Didn't work reliable.

E-mail notification: For users having an account on sf.net, there is on [https://sourceforge.net/p/whonix/code/ sf.net] git is an [[E-Mail]] subscribe button: '''M'''.

This is an example how such a mail could look like:

''experimental: comment by adrelanos http://sourceforge.net/p/whonix/code/ci/a1740dfcd391cedfa625d72b990b2a587620df30/''

''experimental: Whonix-Workstation_packages: added gtk3-engines-oxygen by adrelanos http://sourceforge.net/p/whonix/code/ci/7375070a7986230028bf4e82a6ab3ecb420bfd60/''

''---''

''Sent from sourceforge.net because you indicated interest in https://sourceforge.net/p/whonix/code/''

''To unsubscribe from further messages, please visit https://sourceforge.net/auth/prefs/''

= Restrict Flash Settings =
'''You can skip this chapter. It's no longer of use, because if you use BetterPrivacy as recommended above, you won't need this.'''

Flash applications can set cookies, so-called Local Shared Objects (LSO), independently of the browser's settings. These cookies are able to save data up to 100 Kb. Usually, they save settings but they may be used to track surfers as well.

In order to manage the settings of your Adobe Flash Player, Macromedia offers a [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager.html Flash application] on its website. There you may e.g. configure the rules concerning the data storage and the rights for using camera and microphone. The settings are spread over several flash applications. Deactivate all functions that allow sharing and saving of data. The storage of LSOs may be deactivated on the [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager03.html Global Storage Settings panel].

Hint: Only in case you previously deactivated JavaScript: You must have Javascript enabled for adobe.com and macromedia.com temporary to run the Flash application. 

[[Image:flash1.png|none]]

Furthermore, the cookies already saved have to be deleted. This functionality may be found on the [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager07.html Website Storage Settings panel].

[[Image:flash2.png|none]]

Personal side note: you see how ridiculous that plugin is, if the usage of the Flash settings manager depends on their website being reachable.

= Build Documentation dpkg-source commit =
To dpkg commit changes, run the debian upstream tarball creation script.

<pre>
./help-steps/make-debian-package-upstream-tarball
</pre>

Then run.

<pre>
dpkg-source --commit
</pre>

When it asks "Enter the desired patch name:" just enter anything you wish, for example "buildconfig". In the following window, you don't have to fill out anything. Just save and close the editor. <ref>This will create a Debian quilt patch.</ref> You only have to do this once and won't be asked again to do this, unless you add another change which needs to be dpkg-source committed.

If you want to undo the dpkg-source committed change, check the contents of the {{Code|.pc}} and the {{Code|debian/patches}} folder and delete it.
= Build Documentation - Override Whonix Version =
Since the Whonix debian package version number is auto derived from {{Code|git describe}} and used for [[Download#Whonix_Version_Check_and_Whonix_News|Whonix News]] download, it is recommended to override it. <ref>Alternatively, you could deactivate or override [[Download#Whonix_Version_Check_and_Whonix_News|Whonix News]] in the whonixcheck script and manually stay on top of news.</ref> You could add a file to {{Code|buildconfig.d}}, for example {{Code|buildconfig.d/50_version}} and add for example.

<pre>
temp="$WHONIX_BUILD_CLOSEST_GIT_TAG"

## Using `export`, so whonix_shared/usr/share/whonix/chroot-scripts-post.d/70_log_build_version can read it.
export WHONIX_BUILD_WHONIX_VERSION_NEW="$(echo "$temp" | sed 's/-/./g')"

echo "WHONIX_BUILD_WHONIX_VERSION_NEW: $WHONIX_BUILD_WHONIX_VERSION_NEW"

WHONIX_BUILD_NEW_CHANGELOG_VERSION=""$WHONIX_BUILD_WHONIX_VERSION_NEW""-debpackage""$WHONIX_BUILD_NEW_DEB_REVISION_VERSION""

echo "WHONIX_BUILD_NEW_CHANGELOG_VERSION: $WHONIX_BUILD_NEW_CHANGELOG_VERSION"
</pre>

While building, check if WHONIX_BUILD_NEW_CHANGELOG_VERSION looks sane. <ref>For example {{Code|WHONIX_BUILD_NEW_CHANGELOG_VERSION: 2:6.13.g4218c564e556cb68a3f18dc4040db5353690706c}} does not look sane, but {{Code|WHONIX_BUILD_NEW_CHANGELOG_VERSION: 2:6-debpackage1}} looks sane.</ref>

If you added a new file to {{Code|buildconfig.d}}, for example {{Code|buildconfig.d/50_target_arch}}, those have to be dpkg-source committed before building Whonix. Otherwise you'll get an error message. (Which looks like this:<ref name=dpkgcommit>
<pre>
 dpkg-source -b Whonix
dpkg-source: info: using source format `3.0 (quilt)'
dpkg-source: info: building whonix using existing ./whonix_138adretemp.4.gd3d4f5fa9e18fddafdf5b09b428ba04dfb2a6d1e.orig.tar.gz
dpkg-source: info: local changes detected, the modified files are:
 Whonix/buildconfig.d/50_target_arch
dpkg-source: error: aborting due to unexpected upstream changes, see /tmp/whonix_138adretemp.4.gd3d4f5fa9e18fddafdf5b09b428ba04dfb2a6d1e-debpackage1.diff.fIiBKC
dpkg-source: info: you can integrate the local changes with dpkg-source --commit
dpkg-buildpackage: error: dpkg-source -b Whonix gave error exit status 2
debuild: fatal error at line 1361:
dpkg-buildpackage -rfakeroot -D -us -uc -sa failed
++ error_handler_general
++ local return_code=29
++ rm --force /etc/apt/sources.list.d/whonixtestingtemp.list
++ rm --force /etc/apt/apt.conf.d/90whonix-build-confold
+++ caller
++ echo '
BASH_COMMAND: sudo -E -u user debuild -p"gpg             --no-default-keyring             --homedir "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"             --default-key "$DEBEMAIL"
            " -sa
return_code: 29
ERROR ./build-steps.d/1200_create-debian-packages: | caller: 173 ./build-steps.d/1200_create-debian-packages
'

BASH_COMMAND: sudo -E -u user debuild -p"gpg             --no-default-keyring             --homedir "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"             --default-key "$DEBEMAIL"
            " -sa
return_code: 29
ERROR ./build-steps.d/1200_create-debian-packages: | caller: 173 ./build-steps.d/1200_create-debian-packages

++ exit 1
</pre>
</ref>).

= Whonix 0.5.6 Download Matrix =
<big>Version: <span style="color: green">{{Version}}</span></big>

'''Note:''' You need to download both Gateway and Workstation virtual machine images.

{| class="wikitable" style="text-align: center;background-color: #fff"
|- style="background-color: #f9f9f9"
| style="height: 47px;"|
| style="white-space: nowrap; width: 137px;"|'''Whonix-Gateway'''
| style="white-space: nowrap; width: 137px;"|'''Whonix-Workstation'''
| style="white-space: nowrap; width: 140px;"|'''[[Hide Tor and Whonix from your ISP|Anonymous Download]]<br /> possible <ref name=anonymousdownload>By using the [https://www.torproject.org/download/download-easy.html.en Tor Browser Bundle] (TBB). For an introduction, see [[Tor Browser]]. See also [[Hide Tor and Whonix from your ISP]].</ref>'''
| style="width: 135px;"|'''[[Download Security]]<br /> without [[#Verify the Whonix images|Verification]]'''
| style="width: 135px;"|'''[[Download Security]]<br /> with [[#Verify the Whonix images|Verification]]'''
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:HTTP.png|40px]] {{Anchor|Whonix_signature}}
| <html><a href="http://sourceforge.net/projects/whonix/files/whonix-</html>{{Version}}<html>/Whonix-Gateway.ova/download" target="_blank">Download</a></html>
| <html><a href="http://sourceforge.net/projects/whonix/files/whonix-</html>{{Version}}<html>/Whonix-Workstation.ova/download" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:Button_sig.png|25px]]
| white-space: nowrap;"|<html><a href="/download/</html>{{Version}}<html>-sig/Whonix-Gateway.ova.sig">OpenPGP Signature</a></html>
| white-space: nowrap;"|<html><a href="/download/</html>{{Version}}<html>-sig/Whonix-Workstation.ova.sig">OpenPGP Signature</a></html>
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:Crypto_key.png|25px]]
| colspan="2"|Verify the images using the [[Whonix Signing Key|Signing Key]]
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:btorrent-icon.png|25px]]<ref>Torrent clients known to work: transmission, Vuze, Deluge. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="/download/</html>{{Version}}<html>-torrent/Whonix-Gateway.ova.torrent">Torrent Download</a></html>
| <html><a href="/download/</html>{{Version}}<html>-torrent/Whonix-Workstation.ova.torrent">Torrent Download</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl>It's at least as secure as [[SSL]] and [https://en.wikipedia.org/wiki/SHA-1 SHA-1], better than plain http. This is because you get the torrent file or magnet link over https and the torrent/magnet client checks the SHA-1 checksum at the end. Using OpenPGP verification would be safer.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:Magnet_icon.svg.png|20px]] <ref>Magnet link clients known to work: gtk-gnutella. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="magnet:?xt=urn:btih:fba5ace7a163afae54aa1677cf92540a38d5914c&dn=Whonix-Gateway.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2FWhonix-Gateway-0.5.6.ova">Magnet Link</a></html>
| <html><a href="magnet:?xt=urn:btih:7255075def146b6f5d7b6e23121e1e5a5bedf13d&dn=Whonix-Workstation.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2FWhonix-Workstation-0.5.6.ova">Magnet Link</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl />
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:template_source.png|25px]]
| colspan="2"|[[Dev/Build Documentation|Build from source code]]
| See [[Dev/Build Anonymity|Build Anonymity]]
|colspan="2" style="background-color: {{Green}}"| Excellent <ref>When you build from source code, audit the source code for being non-malicious and reasonably bug free, you do not have to [[Trust]] the developers, the website or the SSL certificate authorities.</ref>
|}

= XChat =
{{Old-Stable-0.5.6}}

All XChat plugins have been deactivated (hardening) and moved to /usr/lib/xchat/plugins.disabled. If you really need a plugin, such as perl for SASL, you can use the example below.

<pre>sudo mv /usr/lib/xchat/plugins.disabled/perl.so /usr/lib/xchat/plugins/</pre>

= Manually updating Tor Browser (Whonix 0.5.6) =
{{Old-Stable-0.5.6}}

(1) Go to https://www.torproject.org/ and/or http://idnxcnkne4qt76tg.onion/ and download the Tor Browser Bundle for Linux 32 bit. Store it in ''/home/user/''.

(2) Read https://www.torproject.org/docs/verifying-signatures.html.en and/or http://idnxcnkne4qt76tg.onion/docs/verifying-signatures.html.en and learn about gpg verification.

(3) Go to https://www.torproject.org/docs/signing-keys.html.en and/or http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en to get the gpg keys.

(4) Verify the Tor Browser Bundle download.

(5) Go into ''/home/user/'' with the file manger. (Dolphin)

(6) Extract the Tor Browser Bundle. Right click on the downloaded archive -> extract -> extract archive here.

(7) In case you downloaded another version than ''en-US'', rename the tor-browser_''lang'' folder to ''tor-browser_en-US''. This is important, because the paths in the following script are hardcoded.

(8) Go into the ''/home/user/tor-browser_en-US'' folder.

(9) Delete ''start-tor-browser'' or move it to the ''/home/user/tor-browser_en-US/Docs'' folder.

(10) Create a new file within the ''/home/user/tor-browser_en-US/'' folder called ''start-tor-browser'' with the following content.

<pre>
#!/bin/bash
## Whonix Tor Browser start script

export TOR_SKIP_LAUNCH=1
    
cd ~
~/tor-browser_en-US/App/Firefox/firefox --profile ~/tor-browser_en-US/Data/profile
    
## End of Whonix Tor Browser start script
</pre>

(11) Make the ''start-tor-browser'' script executable. Right click on ''start-tor-browser'' -> Properties -> Permissions -> enable the ''Is executable'' box -> ok.

(12) Go to ''/home/user/tor-browser_en-US/Data/profile/'' and create a file ''user.js'' with the following content.

<pre>## Begin of patched user.js.

## If you edit this file while Firefox is running, your changes will be
## overwritten, when you close Firefox.

## How to create the user.js network settings:
## 1. Make a backup of prefs.js.
## 1. Start Tor Browser with the patched start script.
## 2. Apply proxy settings using the Tor Button settings dialog..
## 3. Make a diff from the old and the new pref.js.
## 4. Copy the relevant changes to user.js.

## network settings
## (Are now set in /etc/environment - or not...)
## (See /etc/environment.)
user_pref("extensions.torbutton.use_privoxy", false);
user_pref("extensions.torbutton.settings_method", "custom");
user_pref("extensions.torbutton.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.socks_port", 9100);
user_pref("network.proxy.socks", "10.152.152.10");
user_pref("network.proxy.socks_port", 9100);
user_pref("extensions.torbutton.custom.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.custom.socks_port", 9100);

## End of Whonix user.js.
</pre>

(13) If you want to make 100% sure you never have Tor over Tor, you must shut down Whonix-Gateway while doing the following.

(14) Delete /home/user/my_tor-browser_en-US/App/tor.

(15) If there is '''no''' green Vidalia icon in the task bar, everything is fine.

(16) Start Tor Browser and run

<pre>ps aux | grep tor</pre>

If you see something like.

<pre>109 /usr/sbin/tor</pre>

Or.

<pre>/home/user/my_tor-browser_en-US/App/tor</pre>

Something went wrong and you're running Tor over Tor, which is recommended against.

(17) If the tests results are as expected, everything went fine.

(18) Don't forget to restart Whonix-Gateway, if you shut it down in step (13).

(19) Done.

= DummyTor =
== Introduction ==
{{Old-Stable-0.5.6}}

Whonix-Workstation has an empty Tor package installed by default, called Dummy Tor package. It contains no files, besides some default files<ref>changelog.gz copyright README.Debian control control.tar.gz data.tar.gz debian-binary md5sums</ref>, which are required to create a dummy package. Debian packages are standard Unix '''ar''' archives, auditors can unpack and check them.

The reason for installing the Dummy Tor package inside Whonix-Workstation is to prevent installing the Tor package from the upstream (Debian or The Tor Project) repository, to prevent running Tor over Tor. This allows installation of packages, which depend on Tor, such as [[Chat#TorChat|TorChat]] and parcimonie on Whonix-Workstation.

To prevent the package from upgrading

<pre>echo "tor hold" | sudo dpkg --set-selections</pre>

has been run while building Whonix from source code.

To check the status an auditor could run.

<pre>dpkg --get-selections | grep tor</pre>

To undo holding the packing a user could run.

<pre>echo "tor install" | sudo dpkg --set-selections</pre>

== Implementation ==
{{Old-Stable-0.5.6}}

* Everything is inside the ''whonix_workstation/usr/local/share/whonix/dummytor/'' folder in Whonix source code
* and subsequently in /usr/local/share/whonix/dummytor/ in Whoix-Workstation.
* .deb package format
* /usr/local/share/whonix/dummytor/tor is the control file
* /usr/local/share/whonix/dummytor/tor_1.0_all.deb is the package which was installed using dpkg by whonix_workstation/usr/local/share/whonix_internal_install_script.
* whonix_workstation/usr/local/share/whonix/dummytor/dummytor is the "build script" for the package, which is actually only a single "equivs-build ./tor" command.

== How it would look... ==
{{Old-Stable-0.5.6}}

...if a Tor version higher than 1.0 was released.

<pre>
sudo apt-get dist-upgrade

Reading package lists... Done
Building dependency tree       
Reading state information... Done
Calculating upgrade... Done
The following packages have been kept back:
  tor
</pre>

= Tor Browser =
== Remove Proxy Settings - Whonix 0.5.6 ==
{{Old-Stable-0.5.6}}

It's best to get a fresh copy of Tor Browser, which has never been started before.

Whonix modifies user.js as documented in the [[Tor_Browser#Whonix_Proxy_Settings_.2F_user.js|Tor Browser chapter]].

Open ''/home/user/tor-browser_en-US_my/Data/profile/user.js''.

<pre>kwrite /home/user/tor-browser_en-US_my/Data/profile/user.js</pre>

Comment out all network settings.<ref>These steps are required to remove proxy settings.</ref> <ref>TOR_SOCKS_HOST and TOR_SOCKS_PORT were set for [[Stream Isolation]].</ref>

<pre>
## network settings
#user_pref("extensions.torbutton.use_privoxy", false);
#user_pref("extensions.torbutton.settings_method", "custom");
#user_pref("extensions.torbutton.socks_host", "10.152.152.10");
#user_pref("extensions.torbutton.socks_port", 9100);
#user_pref("network.proxy.socks", "10.152.152.10");
#user_pref("network.proxy.socks_port", 9100);
#user_pref("extensions.torbutton.custom.socks_host", "10.152.152.10");
#user_pref("extensions.torbutton.custom.socks_port", 9100);
</pre>

You could use Tor Button's settings dialog to set it to any other proxy or transparent torification. The latter means "no proxy", which will result in Tor Browser using whatever the operating system provides and if you don't have a VPN installed inside Whonix-Workstation, it will go through Tor's TransPort.

If you are using the transparent torification option in Tor Button, you could point a socksifier to ''start-tor-browser'' and it should work as usual.

If you are having problems, it's most likely a problem with Tor Browser / Tor Button's proxy settings. In Tor Browser open the pseudo url "''about:config''" and search for "''network.proxy''" and check if these settings are sane.

== Warning ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px|alt=Whonix first time users warning]]
| text       = Don't use [[#Tor Browser Internal Updater|Tor Browser's Internal Updater]]. For now. Use [[#Tor Browser Updater (Whonix)|Tor Browser Updater (Whonix)]]. More information below.
}}

There are various update mechanisms. Not all are equally secure. Whonix recommends against using Tor Browser's internal updater for security reasons. <ref>
Updates are unsigned. The Tor Project trac ticket: https://trac.torproject.org/projects/tor/ticket/13379 <br />
This is dangerous over clearnet, but it is especially dangerous when updating over Tor, because a [[Warning#Man-in-the-middle_attacks|Man-in-the-middle attack]] could happen. <br />
[https://www.whonix.org/forum/index.php/topic,807 Forum Development Discussion] <br />
[https://www.whonix.org/forum/index.php/topic,810 Forum Help Thread]
</ref> Using Tor Browser Updater (Whonix) is recommended. To enable you to distinguish them, here are some screenshots of the various updaters.

[https://www.whonix.org/forum/index.php/topic,810 Forum Help Thread]
== Warning2 ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px|alt=Whonix first time users warning]]
| text       = Don't this Tor Browser's internal updater. For now. Why? See [[#Warning]]. Below you see a screenshot of Tor Browser's Internal Updater.
}}

= Whonix 0.5.6 Disable Auto Login =
{{Old-Stable-0.5.6}}

'''OPTIONAL. Only in case you want to do that.'''

If you aren't using [[Physical Isolation]], i.e. if you use the Default-[[Download]]-Version (Virtual Machines), it's probably better to use the desktop locking mechanism of your host operating system.

These features are inherited from Debian and its packages.

'''1. On Whonix-Gateway and Whonix-Workstation'''

Open /etc/inittab:

<pre>
sudo nano /etc/inittab
</pre>

Look for:

<pre>
## If you do not want this,
## comment in the next line and comment out the second one.
</pre>

Below you'll see:

<pre>
#1:2345:respawn:/sbin/getty 38400 tty1
1:2345:respawn:/sbin/getty --autologin user 38400 tty1
</pre>

Change it to:

<pre>
1:2345:respawn:/sbin/getty 38400 tty1
#1:2345:respawn:/sbin/getty --autologin user 38400 tty1
</pre>

'''2. On Whonix-Workstation'''

Start Menu -> System Settings -> Login Screen -> Convenience -> Disable "Enable Auto Login"

= Tor Browser in Whonix 0.5.6 =

== Introduction ==

The regular Tor Browser Bundle and Tor Browser in Whonix slightly differ. Tor Browser has been slightly modified by Whonix to work behind the Whonix-Gateway. The network and browser fingerprint however, is the same.

Tor Browser's internal update check mechanism is untouched and works fine. Default homepage is untouched and still https://check.torproject.org.

== New Identity Button ==

Note that, if you are using the Tor Browser, which comes with Whonix, that the New Identity button of Tor Button is defunct (greyed out). This is because Tor Button can not access Tor's control port. Due to Whonix Technical [[Design]], Tor Browser and Tor are isolated from each other, which means there is no way to fix this without loosing the added security by Whonix.

When using the regular Tor Browser Bundle (not Whonix!), the New Identity button unlinks your old identity, changes your circuit (exit relay IP) and creates a fresh identity.

As a workaround close Tor Browser, change your circuit with [[Tor Controller|Arm]] and start Tor Browser again.

This isn't a big issue, since the New Identity button isn't perfect yet anyway, there are open bugs.<ref>See [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_information&status=needs_review&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-linkability tbb-linkability] and [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_review&status=needs_revision&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-fingerprinting tbb-fingerprinting].</ref>

(New Identity Button will be fixed in Whonix {{Whonix6}} and above.)

== Whonix Proxy Settings / user.js ==

When running <code>torbrowser -update</code>, the update script creates a <code>user.js</code> file, for example <code>~/tor-browser_en-US/Data/profile/user.js</code>. User.js is used to override some Tor Button defaults, namely the SocksProxy settings and other minor misc settings. <ref>If you are curious which these are in details, or for reviewers or auditors, see [https://github.com/Whonix/Whonix/blob/stable/whonix_workstation/usr/local/bin/torbrowser torbrowser script and user.js on github].</ref> See also the [[Stream_Isolation#Limited_workarounds_for_Tor_Browser|Tor Browser sub chapter]] on the Stream Isolation page.

== More than one Tor Browser in Whonix ==

For better isolation of different identities. For advanced users. Moved to the [[Advanced_Security_Guide#More_than_one_Tor_Browser_in_Whonix|Advanced Security Guide]].

= Manually updating Tor Browser =
(1) Go to https://www.torproject.org/ and/or http://idnxcnkne4qt76tg.onion/ and download the Tor Browser Bundle for Linux 32 bit. Store it in ''/home/user/''.

(2) Read https://www.torproject.org/docs/verifying-signatures.html.en and/or http://idnxcnkne4qt76tg.onion/docs/verifying-signatures.html.en and learn about gpg verification.

(3) Go to https://www.torproject.org/docs/signing-keys.html.en and/or http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en to get the gpg keys.

(4) Verify the Tor Browser Bundle download.

(5) Go into ''/home/user/'' with the file manger. (Dolphin)

(6) If you still have the old version of TBB opened (because you are probably reading this from the old TBB), close it. (copy the next steps to Kwrite if necessary)

(7) Rename your old TBB /home/user/tor-browser_en-US to something else.

(8) Extract the Tor Browser Bundle. Right click on the downloaded archive -> extract -> extract archive here.

(9) In case you downloaded another version than ''en-US'', rename the tor-browser_''lang'' folder to ''tor-browser_en-US''. This is important, because the paths in the following script are hardcoded.

(10) Go into the ''/home/user/tor-browser_en-US'' folder.

(11) Delete ''start-tor-browser'' or move it to the ''/home/user/tor-browser_en-US/Docs'' folder.

(12) Create a new file within the ''/home/user/tor-browser_en-US/'' folder called ''start-tor-browser'' with the following content.

<pre>
#!/bin/bash
## Whonix Tor Browser start script

export TOR_SKIP_LAUNCH=1
    
cd ~
~/tor-browser_en-US/App/Firefox/firefox --profile ~/tor-browser_en-US/Data/profile
    
## End of Whonix Tor Browser start script
</pre>

(13) Make the ''start-tor-browser'' script executable. Right click on ''start-tor-browser'' -> Properties -> Permissions -> enable the ''Is executable'' box -> ok.

(14) If you want to make 100% sure you never have Tor over Tor, you must shut down Whonix-Gateway while doing the following.

(15) Delete /home/user/my_tor-browser_en-US/App/tor.

(16) If there is '''no''' green Vidalia icon in the task bar, everything is fine.

(17) Start Tor Browser and run

<pre>ps aux | grep tor</pre>

If you see something like.

<pre>109 /usr/sbin/tor</pre>

Or.

<pre>/home/user/my_tor-browser_en-US/App/tor</pre>

Something went wrong and you're running Tor over Tor, which is recommended against.

(18) If the tests results are as expected, everything went fine.

(19) Don't forget to restart Whonix-Gateway, if you shut it down in step (13).

(20) Done.

= More than one Tor Browser in Whonix =
'''WARNING: "More than one Tor Browser in Whonix" instructions have not been updated for TBB 3.x yet!'''

As the [[Warning]] page stated, [[Warning#Whonix_doesn.27t_magically_separate_your_different_contextual_identities | Whonix doesn't magically separate your different contextual identities]] and since Tor Browser and Tor Button do not yet solve this, for further separation of identities you could use [[Multiple Whonix-Workstations]], which would be more secure.

Alternatively, less secure than Multiple Whonix-Workstations, you could start multiple instances of Tor Browser and run them through different SocksPorts. The instructions in the [[Manually Updating Tor Browser]] article need minimal changes.

Instead of

<pre>
#!/bin/bash
## Whonix Tor Browser start script

~/tor-browser_en-US/App/Firefox/firefox --profile ~/tor-browser_en-US/Data/profile

## End of Whonix Tor Browser start script
</pre>

Use

<pre>
#!/bin/bash
## Whonix Tor Browser start script

## Adjust the path!
~/tor-browser_2/App/Firefox/firefox --profile ~/tor-browser_2/Data/profile -no-remote

## End of Whonix Tor Browser start script
</pre>

Only {{Code2|-no-remote}} was added to the start script. Otherwise Tor Browser would connect to the already running Tor Browser and this isn't what you want. And don't forget to adjust the path to the other Tor Browser.

You also have to use a different SocksPort, see [[Tor_Browser#Change.2FRemove_Proxy_Settings|Change/Remove Proxy Settings]]. (See [[Stream Isolation]] page for explanation why you should use different SocksPorts.)

= Trusting the key =
== Download the key from multiple sources ==
A simple technique to increase the trust you can put in the Whonix signing key would be to download it several times, from several locations, several computers, possibly several countries, etc.

You could also use this technique to compare keys downloaded by your friends or other people you trust.

Downloading the key from the same server only lowers the possibility of a man-in-the-middle attack for a part of the route. The following figure illustrates that best:

<pre>
user <-> user ISP <-> internet <-> sourceforge.net ISP <-> sourceforge.net server
MITM less likely for this route |  no help for this route
</pre>

For this reasons adrelanos' homepage, which describes and contains adrelanos' OpenPGP key is mirrored at six different places. Download adrelanos' key from all those places and store it as ''adrelanos1.asc'', ''adrelanos2.asc'', ''adrelanos3.asc'', etc.

1. [https://github.com/Whonix/Whonix/blob/master/adrelanos.mediawiki adrelanos' homepage on github]; ([https://raw.github.com/Whonix/Whonix/master/adrelanos.asc key download])

Github.com is accessible over SSL. <ref name=ssl> See [[SSL]] for comments on SSL (in)security.</ref>

2. [https://sourceforge.net/p/whonix/code/ci/b5e205ccb19a11e901124fe7f101fcb0c71b0c8c/tree/adrelanos.asc adrelanos' key page on sourceforge]; ([https://sourceforge.net/p/whonix/code/ci/b5e205ccb19a11e901124fe7f101fcb0c71b0c8c/tree/adrelanos.asc?format=raw key download])

SSL available for users logged into sourceforge.net. <ref name=ssl></ref>

3. [https://gitorious.org/whonix/whonix/blobs/master/adrelanos.mediawiki adrelanos' homepage on gitorious]; ([https://gitorious.org/whonix/whonix/blobs/raw/master/adrelanos.asc key download])

Gitorious.org is accessible over SSL. <ref name=ssl />

4. [https://trac.torproject.org/projects/tor/wiki/doc/proper adrelanos' homepage on torproject.org wiki]

SSL available. <ref name=ssl /> Anyone can edit the torproject.org wiki and exchange content with malicious one. Therefore check the history feature. Obviously, I do trust Tor and torproject.org. My wiki account "''proper''" should be genuine, therefore changes by "''proper''" should be legit.

5. [https://savannah.gnu.org/people/viewgpg.php?user_id=89289 adrelanos OpenPGP key mirror on savannah.gnu.org profile page]

SSL available. <ref name=ssl /> The following command is recommended to enforce downloading the key over SSL:

<pre>
## Not forced through Tor, unless you are using Whonix, torsocks or similar.
curl --tlsv1 --proto =https --output adrelanos.asc.4 https://savannah.gnu.org/people/viewgpg.php?user_id=89289
</pre>

6. adrelanos' OpenPGP key mirror on OpenPGP keyserver

No SSL. Should really be only used as a mirror.

<pre>
## Not forced through Tor, unless you are using Whonix, torsocks or similar.
gpg --keyserver x-hkp://pool.sks-keyservers.net --recv-key 916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA
</pre>

7. adrelanos' OpenPGP key in Whonix 6 and above

<pre>
gpg --import /usr/share/whonix/keys/whonix-keys.d/adrelanos.asc
</pre>

Verify:

<pre>gpg --recv-key 916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA</pre>
Should show.

<pre>
pub   4096R/2EEACCDA 2014-01-16 [expires: 2015-01-16]
      Key fingerprint = 916B 8D99 C38E AF5E 8ADC  7A2A 8D66 066A 2EEA CCDA
uid                 [ unknown] Patrick Schleizer <adrelanos@riseup.net>
sub   4096R/0x3B1E6942CE998547 2014-01-16 [expires: 2015-01-16]
sub   4096R/0x10FDAC53119B3FD6 2014-01-16 [expires: 2015-01-16]
sub   4096R/0xCB8D50BB77BB3C48 2014-01-16 [expires: 2015-01-16]
</pre>

Each time you re-import the key from a different source:

<pre>
gpg --import adrelanos.asc 
gpg --import adrelanos1.asc 
gpg --import adrelanos2.asc 
...
</pre>

It should always show:

<pre>
gpg: key 2EEACCDA: "Patrick Schleizer <adrelanos@riseup.net>" not changed
gpg: Total number processed: 1
gpg:              unchanged: 1
</pre>

And:

<pre>
gpg --fingerprint
</pre>

Should always show the same fingerprint and only contain: (Besides keys you imported knowingly earlier, perhaps your friends keys.)

<pre>
pub   4096R/0x8D66066A2EEACCDA 2014-01-16 [expires: 2015-01-16]
      Key fingerprint = 916B 8D99 C38E AF5E 8ADC  7A2A 8D66 066A 2EEA CCDA
uid                 [ unknown] Patrick Schleizer <adrelanos@riseup.net>
sub   4096R/0x3B1E6942CE998547 2014-01-16 [expires: 2015-01-16]
sub   4096R/0x10FDAC53119B3FD6 2014-01-16 [expires: 2015-01-16]
sub   4096R/0xCB8D50BB77BB3C48 2014-01-16 [expires: 2015-01-16]
</pre>

Unless the new key is signed with the old key, something fishy is going on.

= Whonix 7 Download Table (Deprecated) =
<!--T:7-->
<big>Version: <span style="color: green">{{Version}}</span></big>

<!--T:8-->
'''Note:''' You need to download both Gateway and Workstation virtual machine images.

<!--T:9-->
{| class="wikitable" style="text-align: center;background-color: #fff"
|- {{GrayBackground}}
| style="height: 47px;"|
| style="white-space: nowrap; width: 137px;"|'''Whonix-Gateway'''<br />(1.2 GiB)
| style="white-space: nowrap; width: 137px;"|'''Whonix-Workstation'''<br />(1.3 GiB)
| style="white-space: nowrap; width: 140px;"|'''[[Hide Tor and Whonix from your ISP|Anonymous Download]]<br /> possible <ref name=anonymousdownload>By using the [https://www.torproject.org/download/download-easy.html.en Tor Browser Bundle] (TBB). For an introduction, see [[Tor Browser]]. See also [[Hide Tor and Whonix from your ISP]].</ref>'''
| style="width: 135px;"|'''[[Download Security]]<br /> without [[#Verify the Whonix images|Verification]]'''
| style="width: 135px;"|'''[[Download Security]]<br /> with [[#Verify the Whonix images|Verification]]'''
|- style="height: 47px"

<!--T:91-->
| {{GrayBackground}}| [[File:HTTP.png|40px]] {{Anchor|Whonix_signature}}
| <html><a href="http://mirror.whonix.org/Whonix-</html>{{Version}}<html>/Whonix-Gateway-</html>{{Version}}<html>.ova" target="_blank">Download</a></html>
| <html><a href="http://mirror.whonix.org/Whonix-</html>{{Version}}<html>/Whonix-Workstation-</html>{{Version}}<html>.ova" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Very Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"

<!--T:15-->
| {{GrayBackground}}| [[File:HTTP.png|40px]] {{Anchor|Whonix_signature}}
| <html><a href="http://sourceforge.net/projects/whonix/files/current/</html>{{Version}}<html>/Whonix-Gateway-</html>{{Version}}<html>.ova/download" target="_blank">Download</a></html>
| <html><a href="http://sourceforge.net/projects/whonix/files/current/</html>{{Version}}<html>/Whonix-Workstation-</html>{{Version}}<html>.ova/download" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Very Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"

<!--T:10-->
| {{GrayBackground}}| [[File:SSL_Symbol.png|40px]] {{Anchor|Whonix_signature}}
| <html><a href="https://jhcloos.com/whonix/7/Whonix-Gateway-7.ova" target="_blank">Download</a></html>
| <html><a href="https://jhcloos.com/whonix/7/Whonix-Workstation-7.ova" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"

<!--T:11-->
| {{GrayBackground}}| [[File:Button_sig.png|25px]]
| white-space: nowrap;"|<html><a href="/download/current/</html>{{Version}}<html>-sig/Whonix-Gateway-</html>{{Version}}<html>.ova.asc">OpenPGP Signature</a></html>
| white-space: nowrap;"|<html><a href="/download/current/</html>{{Version}}<html>-sig/Whonix-Workstation-</html>{{Version}}<html>.ova.asc">OpenPGP Signature</a></html>
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"

<!--T:12-->
| {{GrayBackground}}| [[File:Crypto_key.png|25px]]
| colspan="2"|Verify the images using the [[Whonix Signing Key|Signing Key]]
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"

<!--T:13-->
| {{GrayBackground}}| [[File:btorrent-icon.png|25px]]<ref>Torrent clients known to work: transmission, Vuze, Deluge. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="/download/</html>{{Version}}<html>-torrent/Whonix-Gateway-</html>{{Version}}<html>.ova.torrent">Torrent Download</a></html>
| <html><a href="/download/</html>{{Version}}<html>-torrent/Whonix-Workstation-</html>{{Version}}<html>.ova.torrent">Torrent Download</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl>It's at least as secure as [[SSL]] and [https://en.wikipedia.org/wiki/SHA-1 SHA-1], better than plain http. This is because you get the torrent file or magnet link over https and the torrent/magnet client checks the SHA-1 checksum at the end. Using OpenPGP verification would be safer.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"

<!--T:14-->
| {{GrayBackground}}| [[File:Magnet_icon.svg.png|20px]] <ref>Magnet link clients known to work: gtk-gnutella. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="magnet:?xt=urn:btih:405e051b5309fb66fd7ba9a04066936de64ce478&dn=Whonix-Gateway-7.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2FWhonix-Gateway-7.ova">Magnet Link</a></html>
| <html><a href="magnet:?xt=urn:btih:13ec8c33dd9b58fe4e5120002dad7b4c683c2b78&dn=Whonix-Workstation-7.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2FWhonix-Workstation-7.ova">Magnet Link</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl />
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"

<!--T:16-->
| {{GrayBackground}}| [[File:template_source.png|25px]]
| colspan="2"|[[Dev/Build Documentation|Build from source code]]
| See [[Dev/Build Anonymity|Build Anonymity]]
| style="background-color: {{Green}}"| Very High <ref name=fromsourcecode>When you build from source code, audit the source code for being non-malicious and reasonably bug free, you do not have to [[Trust]] the developers, the website or the SSL certificate authorities.</ref>
| style="background-color: {{Green}}"| Best <ref name=fromsourcecode /> <ref>By additional verification that you got the source code from the original authors and by ensuring you're using the same source code as others you get better security.</ref>
|}

= Whonix 7 OLD Known Issues =
=== Connection Issues - Tor stops working after an Upgrade and needs a Workaround === <!--T:98-->
When upgrading to Tor 0.2.4.19-1~d79.jessie+1 (using sudo apt-get dist-upgrade), your Tor connection may go down. There is a temporary workaround.

<!--T:74-->
Open /etc/default/tor.

<!--T:75-->
<pre>
## If you are using a graphical Whonix-Gateway, use:
kdesudo kate /etc/default/tor

<!--T:76-->
## Or alternatively, if you are using a terminal-only Whonix-Gateway, use:
sudo nano /etc/default/tor
</pre>

<!--T:77-->
Scroll down, near bottom comment in (by removing the # in front of it).

<!--T:78-->
<pre>
USE_AA_EXEC="no"
</pre>

<!--T:79-->
Then try:

<!--T:80-->
<pre>
sudo service tor restart
</pre>

<!--T:81-->
You should keep that in mind and undo that change when Whonix or Tor fixes that bug. We'll keep you posted. (See [[Download#Stay_tuned]] and [[Security_Guide#Recommendation_to_install_latest_security_updates_on_all_systems]].)

<!--T:82-->
Forum help thread:
[[Special:AWCforum/st/id287/new_tor_and_debian_updates_today....html]]

=== Virtual Box Shared Folder Issues === <!--T:57-->
Shared Folders aren’t working with the latest Linux kernel. (This is a Debian/Virtual Box issue, not caused by Whonix. Has already been reported to upstream by a Debian user.)

<!--T:58-->
Possible workarounds, more information, etc. can be found in the Whonix User Help Forum discussion thread:
[[Special:AWCforum/st/id261/VirtualBox_shared_directories_on....html]]

=== Tor Browser Starter (Whonix) === <!--T:84-->
After manually upgrading Tor Browser (see above)... To start Tor Browser, got to your /home/user/tor-browser_en-US folder and double click start-tor-browser. Or type in terminal (Konsole).

<!--T:85-->
<pre>
/home/user/tor-browser_en-US/start-tor-browser
</pre>

=== Tor Browser Updater (Whonix) === <!--T:83-->
Currently broken due to changes by torproject.org. You have to [[Manually Updating Tor Browser|manually update Tor Browser]] in meanwhile.

<!--T:56-->
Forum help thread:
[[Special:AWCforum/st/id262/updating_TOR_browser_error...html]]

=== Enigmail Encryption === <!--T:59-->
When using OpenPGP encryption in Icedove / Enigmail you might get "encryption command failed".

<!--T:60-->
Icedove has been updated in Debian Testing in meanwhile. Upgrade it.

<!--T:61-->
<pre>
sudo apt-get update
sudo apt-get dist-upgrade
</pre>

<!--T:62-->
You should then install enigmail as usual: <br />
<pre>
sudo apt-get install enigmail
</pre>

=== Defunct Desktop Shortcuts === <!--T:90-->
The desktop shortcuts Tor Browser, Contribute, Forum, Documentation, Donate won't work until there is an upgrade of Whonix. Please manually visit these pages. How to start Tor Browser has already been explained above.

=== Whonix-Gateway: Err: http://deb.torproject.org tor-0.2.4.x-jessie/main i386 Packages 404 Not Found ===
'''Short answer''': <br />
Update and upgrade your underlying Debian system (Whonix is a derivative of Debian).
<pre>
sudo apt-get update
sudo apt-get dist-upgrade
</pre>

<!--T:87-->
See also [[Security_Guide#Recommendation_to_install_latest_security_updates_on_all_systems]]. This bug will be fixed with next Whonix upgrade (will take some time). No other action strictly required for now.

<!--T:88-->
'''Long answer''': <br />
This is because torproject deprecated that repository. That was to be expected. The repository we're using now is already preconfigured (in /etc/apt/sources.list.d/torproject.list).

<!--T:89-->
Taking action isn't important at this stage. You can comment it out (by putting a # in front of it) in /etc/apt/sources.list.d/torproject.list if you want. ({{Code|kdesudo kate /etc/apt/sources.list.d/torproject.list}} for graphical Whonix-Gateway or {{Code|sudo nano /etc/apt/sources.list.d/torproject.list}} for terminal-only Whonix-Gateway) If you don't do it, it will be auto fixed with next upgrade of Whonix.


=== apt-get Hash Sum mismatch ===
If you get a hash sum mismatch when updating through sudo apt-get update then deleting the package lists should solve it. A hash sum mismatch can look like:

<pre>
W: Failed to fetch http://ftp.us.debian.org/debian/dists/testing/contrib/i18n/Translation-enIndex  Hash Sum mismatch
</pre>

<!--T:94-->
To delete the package lists, run:
<pre>
sudo rm -fR /var/lib/apt/lists/*
</pre>

<!--T:95-->
To make sure everything works like it should, update your package lists and upgrade your distro. Chances are that your previous update/upgrade attempts have failed due to the mismatch.

<!--T:96-->
<pre>
sudo apt-get update && apt-get dist-upgrade
</pre>

<!--T:97-->
(Source <ref>http://askubuntu.com/questions/41605/trouble-downloading-updates-due-to-hash-sum-mismatch-error</ref>)

=== There is no public key available for the following key IDs ===
The message "{{Code2|There is no public key available for the following key IDs}}" is not necessarily an error. It might be just a warning/information.

<!--T:105-->
<pre>
sudo apt-get update
...
Reading package lists... Done
...
W: There is no public key available for the following key IDs:
9C131AD3713AAEEF
</pre>

<!--T:106-->
Check the exit code of apt-get.

<!--T:107-->
<pre>
echo $?
0
</pre>

<!--T:108-->
When it's 0, there is no problem. This is due to key transition, because Whonix's repository is currently signed with the old and the new signing key.

= Reasons for Staying Anonymous Developer =
Security and trust shouldn't depend on showing a face:

* [https://tails.boum.org/forum/Who_is_behind_Tails__63__ Tails] ([http://www.webcitation.org/6EnyCggbX w])

= KVM =
=== Convert ===
Converting is only required if you want to use the stable version of Whonix. No longer required for testers-only versions, see: <br />
https://www.whonix.org/blog/category/testers-wanted/

1. Extract the downloaded Whonix ova images to obtain the VMDK virtual storage files.

<pre>
tar -xvf ~/Whonix.ova
</pre>

As of now, VMDK files cannot be directly used by KVM or converted to a file type supported by KVM.

<pre>
VBoxManage clonehd --format VDI vmdk_file vdi_file
</pre>

(You need to adjust the names vmdk_file and vdi_file.)

2. Use qemu-img to convert the vdi to qcow2. Why qcow2? Because it supports snapshotting, which is very useful for reverting Whonix-Workstation to a known clean state. You must not revert gateway snapshots of the gateway vm as that will change your guard nodes which is not good for anonymity. This would increase your chances of having a rogue guard node and exit.

<pre>
qemu-img convert -p -O qcow2 ~/whonix.vdi ~/whonix.qcow2
</pre>

= System Requirements =
*** Lucid has been reported, not to work. Since it's only supported until 2013-04 it won't be fixed.

= Mirror =
<pre>
<!--T:10-->
| {{GrayBackground}}| [[File:SSL_Symbol.png|40px]] {{Anchor|Whonix_signature}}
| <html><a href="https://jhcloos.com/whonix/Whonix-</html>{{VersionNew}}<html>/Whonix-Gateway-</html>{{VersionNew}}<html>.ova" target="_blank">Download</a></html>
| <html><a href="https://jhcloos.com/whonix/Whonix-</html>{{VersionNew}}<html>/Whonix-Workstation-</html>{{VersionNew}}<html>.ova" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"
</pre>

= Magnet Link =
<pre>
<!--T:14-->
| {{GrayBackground}}| [[File:Magnet_icon.svg.png|20px]] <ref>Magnet link clients known to work: gtk-gnutella. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="magnet:?xt=urn:btih:b8969f87015c994f2c4dd93b3ed7c62861c27477&dn=Whonix-Gateway-8.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2FWhonix-Gateway-8.ova">Magnet Link</a></html>
| <html><a href="magnet:?xt=urn:btih:7a6a5294ebebef5e5edcb05aa2caf66ebaeaf300&dn=Whonix-Workstation-8.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2FWhonix-Workstation-8.ova">Magnet Link</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl />
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"
</pre>

= Download / Snapshot =
* Take a snapshot for both Whonix-Gateway and Whonix-Workstation on VirtualBox. So you can easily restore the original snapshot whenever you need a clean state.

= Mediawiki Install =
Get and install the mediawiki web app.

<pre>
sudo su
cd /var/www
wget http://releases.wikimedia.org/mediawiki/1.22/mediawiki-1.22.3.tar.gz
tar -xvzf mediawiki-1.22.3.tar.gz
mv mediawiki-1.22.3 wiki
</pre>

Start iceweasel.

Setup mediawiki. Go to http://127.0.0.1/wiki/mw-config/index.php.

Use the following settings.

<pre>
Database name: wiki
Datebase password: what you remembered above
No more questions.
Otherwise use the defaults.
Name of wiki:
Whonix
</pre>

Download LocalSettings.php, safe as /home/user/LocalSettings.php.

= Tor Browser Recommended =
When you start '''Tor Browser Recommended''', there is a shortcut on the desktop, see [[Image:important.png|alt=Tor Browser Recommend Icon<|r]], it will open both Whonix News Blogs in a privacy friendly way.

= I2P =
'''Clock Skew Issues'''

Whonix 9: <br />
Should have no issues.

In Whonix 8: <br/>
I2P-0.9.11 this doesn't work - I2P complains about clock skews even after disabling both '''sdwdate''' and '''bootclockrandomization'''.

<pre>
sudo service sdwdate stop
sudo chmod -x /etc/init.d/sdwdate
</pre>

It is still possible to fix the clock manually. For example, if I2P reports a clock skew of 60 seconds at startup, use this command to change system time:

<pre>
sudo date -s now-60sec
</pre>

then restart I2P.

However, time sync management in Whonix is a complex issue, so before changing the default way of time management in Whonix, make sure to read [[Dev/TimeSync]] and understand the implications.

= old known issues =
=== gpg keyserver unreachable ===
Open gpg.conf.
<pre>
kwrite ~/.gnupg/gpg.conf
</pre>

Search for all instances of "keyserver". And comment them out, i.e.
<pre>
#keyserver ...
</pre>

Add a functional keyerver at the bottom. In Whonix 9 we will be using the following one as default.

<pre>
keyserver hkp://qdigse2yzvuglcix.onion
</pre>

=== libtorsocks Warning ===
During running apt-get dist-upgrade, you may see a warning similar to the following one.

<pre>
15:36:37 libtorsocks(12225): sendmsg: Connection is a UDP or ICMP stream, may be a DNS request or other form of leak: rejecting.
Cannot talk to rtnetlink: No such file or directory
acpid: error talking to the kernel via netlink
</pre>

Sounds scary, but is of no concern. See footnote for technical explanation. <ref>
This is because in order to implement [[Stream Isolation]], Whonix's apt-get [https://github.com/Whonix/uwt uwt] wrapper forces apt-get through torsocks. Unfortunately, not only apt-get is forced through Tor, but also sysvinit and subsequently all daemons sysvinit is restarting. acpi_fakekey daemon uses local connections. Those will be rejected by torsocks. The worst that can happen is that acpi_fakekey won't operate until manually restarted. This is a bigger issue for web servers and alike, because those may not function until manually restarted.

This will likely be fixed as soon Whonix will be based on Debian jessie, because that uses systemd, that is not affected by this as well as torsocks 2.0 may solve this.
</ref>

= Upgrade from Testers repository =
Whonix's testers-only repository contains a fix. If you like to volunteer as a tester, see [[Whonix-APT-Repository]] on how to [[Whonix-APT-Repository#Change_Whonix_APT_Repository|enable]] it, so this change can move soon into Whonix's stable repository. After enabling it, [[Security_Guide#Updates|upgrade]].

= VirtualBox spoof the initial virtual hardware clock offset  =
Moved back to [[Advanced_Security_Guide#Spoof_the_Initial_Virtual_Hardware_Clock_Offset]].

= Physical Isolation =
== Install Basic Packages ==
This step is only required up to and including Whonix 8. Versions higher than Whonix 8 do not require this manual step anymore.

Make sure you have all packages installed which are listed in the file {{Code2|grml_packages}}. You can do that using the following command.

<pre>
sudo apt-get install $(grep -vE "^\s*#" grml_packages | tr "\n" " ")
</pre>

= Why was Whonix 7 based on Debian Testing, not Debian Stable? =

* Contains [http://packages.debian.org/python-stem python-stem], which is a Tor controller library. It is in use to ask for Tor's bootstrap status. This is required for whonixcheck (diagnosing connection issues) and [[Dev/TimeSync|TimeSync]] (TimeSync starts as soon as Tor is bootstrapped). See this [https://github.com/Whonix/Whonix/issues/60 ticket] for more details. The alternative, uploading python-stem to Whonix's APT Repository isn't doable given Whonix's contributor size. (It would require keeping up with the original package and updating when they update. And implementing the feature, allowing builders to build Whonix from source code without touching Whonix's APT repository for [[Trust]] reasons would also have been more difficult.)
* Being based on stable and incorporating a few packages from testing is difficult, see this [https://github.com/Whonix/Whonix/issues/60 ticket] for details.
* Contains build dependency [http://packages.debian.org/jessie/config-package-dev config-package-dev] <u>with</u> debhelper support. (We could probably build on stable and just get the config-package-dev <u>with</u> debhelper support elsewhere, but it's simpler just to require Debian testing as build operating system.
* Stable (Wheezy) contains only obfs2 (obfsproxy [http://packages.debian.org/wheezy/obfsproxy 0.1.4]), while Testing (Jessie) contains obfs3 (obfsproxy [http://packages.debian.org/jessie/obfsproxy 0.2.3]), and obfsproxy has been recently removed from torproject's apt repository.

= Whonix 9 OLD Issues =
=== KEYEXPIRED Error ===
You might see this error when attempting to [[Security_Guide#Updates|update]] existing Whonix versions (build version 9.4 and below.)

<pre>
W: GPG error: http://sourceforge.net wheezy Release: The following signatures were invalid: KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449659 KEYEXPIRED 1421449659 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449659 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449659
</pre>

To fix this issue, open a terminal

<pre>
fpr="916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA"
gpg --recv-keys "$fpr"
gpg --fingerprint "$fpr" 
gpg --export "$fpr" | sudo apt-key add -
</pre>

Then [[Security_Guide#Updates|update your system]] as usual.

After that you will be able to [[Tor_Browser#Update_Tor_Browser|update Tor Browser]] as well.

It will be fixed out of the box in Whonix 9.6 and above.

Forum support thread:<br />
https://www.whonix.org/forum/index.php/topic,892

{{Anchor|Tor Browser Startup Issues - Needs Workaround}}

=== Tor Browser Startup Issues ===
This has been fixed out of the box in Whonix 9.3 and above.

After the upgrade to Tor Browser 4.x, it can be no longer started.

Whonix's stable repository contains a fix. [[Security_Guide#Updates|Upgrade]]. After upgrading, reboot is required. <ref>So [https://github.com/Whonix/anon-ws-disable-stacked-tor anon-ws-disable-stacked-tor] environment variables changes take effect to fix the ControlPort quotes warning.</ref>

Forum discussion:<br />
https://www.whonix.org/forum/index.php/topic,636.0.html

=== Connection Issues - Tor stops working after an Upgrade and needs a Workaround ===
This is [https://www.whonix.org/blog/whonix-9-2-maintenance-release fixed in Whonix 9.2] above.

In Whonix 9... When upgrading to Tor 0.2.5.8-rc-1~d70.wheezy+1 (using sudo apt-get dist-upgrade) in Whonix 9, your Tor connection may go down. There is a workaround.

Open {{Code2|/etc/apparmor.d/local/system_tor}}.

<pre>
## If you are using a graphical Whonix-Gateway, use:
kdesudo kate /etc/apparmor.d/local/system_tor

## Or alternatively, if you are using a terminal-only Whonix-Gateway, use:
sudo nano /etc/apparmor.d/local/system_tor
</pre>

Scroll down until you see.

<pre>
/usr/bin/obfsproxy rix,
</pre>

Comment out (by adding a # in front of it).

<pre>
#/usr/bin/obfsproxy rix,
</pre>

Then reboot.

<pre>
sudo reboot
</pre>

You should keep that in mind. When Whonix fixes that bug, you'll get an interactive dpkg conflict resolution dialog. This is explained in [[Security Guide#Updates]]. Just choose to install the new {{Code2|/etc/apparmor.d/local/system_tor}} file then.

Forum discussion: <br />
https://www.whonix.org/forum/index.php/topic,559.0.html

=== AppArmor Warning during Boot ===
If you wonder during boot about following warning.
<pre>
Warning /etc/apparmor.d/... network rules not enforced.
</pre>

[[File:apparmor_warning.png]]

This is not a security issue. Whonix installs [[AppArmor]] and the [https://packages.debian.org/wheezy/apparmor-profiles apparmor-profiles] package by default, but does not enforce AppArmor by default. We are not there yet and Debian also does not enforce AppArmor by default yet either. The apparmor-profiles package gets installed by default for better usability, to make enforcing AppArmor easier. This warning only reflects, that the profile is not enforced by default.

Forum discussion dovecot:<br />
https://www.whonix.org/forum/index.php/topic,668

Debian bug report:<br />
[http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=774888 please provide an option to hide or deactivate all the noisy, scary warnings during boot]

= VirtualBox Guest Additions =
=== New Instructions for Debian Wheezy ===
==== Installation from Debian apt repository ====
Inside your VirtualBox virtual machine.

Very simple.

Searching<ref>http://packages.debian.org/search?searchon=names&keywords=virtualbox</ref> for Debian packages containing VirtualBox was a wise thing. In past it was sometimes a real pain to install the guest additions. The search brought up, that honorable people created a debian package with the tools.

1. [[Security_Guide#Updates|Update]] your operating system.

2. Install. Easy:

<pre>
sudo apt-get install virtualbox-guest-x11
</pre>

Advanced security? See footnote or skip: <ref>
If you only want Shared Folder, mouse integration, for improved security, you can try using only the next line, but not the line after next.
You need kernel headers to be able to compile the kernel module.

<pre>
sudo apt-get install --no-install-recommends virtualbox-guest-dkms virtualbox-guest-utils
</pre>

If you want all features, such as dynamic resolution and shared clipboard
<pre>
sudo apt-get install virtualbox-guest-x11
</pre>
</ref>

3. Reboot.

4. NOTE: Sometimes after reboot the Workstation guest fails to pick up a new resolution. Try to change the screen resolution manually a few times, from KDE settings. Once it succeeds to change to fullscreen, the change will stay persistent across reboots.

==== Installing using VirtualBox Instructions ====
Alternatively, above [[#Installation from Debian apt repository]] fails, which should not, you could also refer to the upstream documentation, [https://www.virtualbox.org/manual/ch04.html VirtualBox: Chapter 4. Guest Additions].

==== Instructions for Debian Jessie ====
<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
Whonix 10 is based on Debian Wheezy. So unless you are using a Whonix-Custom-Workstation based on Debian Jessie, you most likely want to use above instructions. Otherwise press expand on the right side.
<div class="mw-collapsible-content">
'''Not sure if the jessie instructions are still up to date. Maybe the ones for wheezy also work for jessie just fine.

Inside your VirtualBox virtual machine.

This version is difficult to get working with guest additions and vbox shares. Debian Jessie has the issue that Whonix installs with Kernel 3.10 and the distro is at 3.12, and the 3.10 headers are not available. Therefore, it is dangerous (and unsafe) to get the Kernel headers on a different repository. Additionally, there are reports that updating the kernel can cause issues (and is also unsafe).

Noteː It has been reported that reverting Virtualbox 2 versions back with 3.10 can also solve issues. Update this wiki with your results.
</div>
</div>

= Build Warnings =
* <u>'''Short'''</u>: '''Don't install {{Code2|apt-listchanges}} as custom package during VM image builds or don't have it installed during {{Code2|--target root}} builds.''' 
<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
<div class="mw-collapsible-content">
''Long'': Because likely might change the build process from a non-interactive one to an interactive one. You're better off purging apt-listchanges.

<pre>
sudo apt-get purge apt-listchanges
</pre>

Alternatively, you could use a non-interactive frontend for {{Code2|apt-listchanges}} such as {{Code2|text}}. To do so, you would have to edit {{Code2|/etc/apt/listchanges.conf}}.

<pre>
sudo nano /etc/apt/listchanges.conf
</pre>

<pre>
[apt]
frontend=text
</pre>

After Whonix has been build, you're free to reinstall {{Code2|apt-listchanges}}.
</div>
</div>
<br />

= Tor Browser =
== Change/Remove Proxy Settings ==
'''This is an advanced topic. You most likely only need it for advanced tunneling scenarios.'''

You could either:

* Use Tor Button's -> Preferences to set it to any other proxy or no proxy. {{Code2|Transparent Torification}} means, "no proxy" or in other words it means "use whatever the system provides".
1) Click on Tor Button.
[[File:Tor_Button.png]]<br />
2) Click on Preferences.<br />
[[File:Tor_Button_Settings_Menu.png]]<br />
3) Choose {{Code2|Transparent Torification}}.<br />
[[File:Tor_Button_Settings.png]]<br />
4) Click OK.
* For an alternative method, setting {{Code2|Transparent Torification}} which does not involve Tor Button's graphical user interface, see footnote <ref>
<!--Keeping that, in case Tor Button's settings dialog breaks again.-->
If you want to set it to no proxy, you could either:

* additionally add in ~/tor-browser_en-US/start-tor-browser below "#!/bin/sh".

<pre>export TOR_TRANSPROXY=1</pre>

* Or add to /etc/environment

<pre>TOR_TRANSPROXY=1</pre>

and reboot.
</ref>.
* Forget about Tor Button's -> Open Network Settings. See footnote, if you want to know why.<ref>
When using the regular Tor Browser Bundle from The Tor Project without Whonix, that menu can be used to change network settings inside Tor. It has the same effects as editing Tor's config file torrc. Using this graphical user interface isn't possible in Whonix, because for security reasons, in Whonix there is only limited access to Tor's control port. (See [[Dev/CPFP]] for more information.) (You could change such settings manually in /etc/tor/torrc on Whonix-Gateway. (See also [[Features#VPN_.2F_Tunnel_support|VPN/Tunnel suppprt]] for more information.)
</ref>

= Grub Fix =
== Introduction ==
The following instructions differ for 686-pae and 486 kernel users.

Are you are 686-pae kernel kernel or 486 kernel user?
* If you previously did not choose any options right after starting Whonix in the grub boot menu, if you don't know what this is about, then you're very likely a [[#686-pae Kernel Users|686-pae Kernel User]].
* If you are used to picking the 486 kernel as per [[Starting_Whonix#Boot_Options|page Starting Whonix, chapter Boot Options]], then you already know, that you're a [[#486_Kernel_Users|486 Kernel User]].

== 686-pae Kernel Users ==
Remove the 486 and 586 kernel meta packages.

<pre>
sudo apt-get remove linux-image-*-486 linux-image-*-586
</pre>

Remove the 486 and 586 kernel packages.

<pre>
sudo apt-get remove linux-image-3.*-486 linux-image-3.*-586
</pre>

Make sure a kernel is installed.

<pre>
sudo apt-get install linux-image-686-pae
</pre>

Proceed with [[#Install Grub]] chapter!

== 486 Kernel Users ==
Remove the 686-pae kernel meta packages.

<pre>
sudo apt-get remove linux-image-686-pae
</pre>

Remove the 686-pae kernel packages.
<pre>
sudo apt-get remove linux-image-3.*-686-pae
</pre>

Make sure a kernel is installed.

<pre>
sudo apt-get install linux-image-486
</pre>

Proceed with [[#Install Grub]] chapter!

= Stream Isolation =
=== Limited workarounds for Tor Browser ===

==== Possible ====
1. Weakest: On Tor Browser, click on the Torbutton and then click on "New Identity". However your current browser session will be lost.

2. Better: Install a second browser and configure it to use its own SocksPort, see [[Tor_Browser#More_than_one_Tor_Browser_in_Whonix|More than one Tor Browser in Whonix]].

3. Even better: Use [[multiple Whonix-Workstations]].

==== IsolateDestAddr and IsolateDestPort for Tor Browser (Recommended against!) ====

'''(Recommended against!)''' If you are interested anyway, see footnote <ref>'''(Recommended against!)'''
As a workaround you could enable IsolateDestAddr and IsolateDestPort for the Tor Browser.

This comes at great performance costs, especially for websites with lots of 3rd party content. It will not isolate connections to different websites on a shared server and it will create new circuits for every IP address you connect to (e.g. it will isolate subdomains if they use different IPs). It will also let you stand out more from other Tor Browser users, because almost no one is using it that way. Generally, for these reasons you should not enable this feature. Instead close the browser and get a "new identity" through arm on the gateway if you want to separate activities inside Tor Browser. If you want to do this anyway, follow the following instructions.

On Whonix-Gateway open {{Code2|/etc/tor/torrc}}'.

<pre>
sudo nano /etc/tor/torrc
</pre>

Add.

<pre>
SocksPort 10.152.152.10:9150 IsolateDestAddr IsolateDestPort
</pre>

Save.

Reload Tor.

<pre>
sudo service tor reload
</pre>

Done.
</ref>.

= Qubes =
== Qubes-Whonix Gnome Workstation ==
OR, to install Workstation with complete Gnome applications that are installed in Qubes Fedora templates:<br /> 
For Gnome, read security notes on [[Other Desktop Environments]].

* Input command:<br /> <code>sudo qubes-dom0-update --enablerepo=qubes-templates-community qubes-template-whonix-ws-gnome</code>

'''2. Increase Update Size'''

The Gnome version of the Whonix-Workstation TemplateVM may be too large and will you need to increase the allowed update size to accommodate installing it.

In Dom0 -> Terminal:

* Input command:<br /> <code>export UPDATES_MAX_BYTES=$[ 4 * 1024 ** 3 ]</code>

== AppArmor ==
At the moment, if you want to use this, you must apply these settings to the TemplateVMs as well as the TemplateBasedVMs. [https://github.com/QubesOS/qubes-issues/issues/1091 Once Qubes Q3 gets released, TemplateBasedVMs will inherit the kernelopts setting of their TemplateVM.]

== Edit Firewall Rules ==
'''2. Edit Whonix-Workstation Firewall Rules'''

In Dom0 &raquo; Qubes VM Manager:

* Select Whonix-Workstation AppVM:
** Edit VM firewall rules:
*** Select: '''Deny''' network access except...
*** Disable: Allow ICMP traffic
*** Disable: Allow DNS queries
*** Disable: Allow connections to Updates Proxy
*** Press: OK

== Misc ==
This guide will create a new instance of a Whonix-Gateway ProxyVM, which routes all internet traffic through Tor, that you can then connect your Whonix-Workstation AppVMs to.

You can repeat this guide multiple times and create as many Whonix-Gateway ProxyVM instances as you need, for greater Tor isolation. Note that using multiple Whonix-Gateway ProxyVMs simultaneously will reveal a pattern of connecting to multiple sets of Tor guard nodes, which may or may not be a unique usage indicator.

This guide will create a new instance of a Whonix-Workstation AppVM, which serves as an AnonVM application environment, that you connect to Tor through a Whonix-Gateway ProxyVM of yours.

You can repeat this guide multiple times and create as many Whonix-Workstation AppVM instances as you need, for greater Tor and data isolation. You can connect multiple Whonix-Workstation AppVMs to the same or different instances of Whonix-Gateway ProxyVMs.

If connecting this AppVM to the internet, you will need an existing Whonix-Gateway ProxyVM instance to connect to. You may need to '''[[Qubes/Create_Gateway_ProxyVMs|create a Whonix-Gateway ProxyVM]]''' before proceeding.

If you wish to keep your version of Whonix up-to-date you should also enable the Whonix Repository. You should apply this process to all of your Whonix TemplateVMs. In otherwords, make sure you follow these directions for both your Whonix-Gateway (commonly called whonix-gw) and Whonix-Workstation (commonly called whonix-ws).

When running the Whonix, [[Whonixcheck|Whonixcheck]] will automatically tell you if Debian package updates are available (Debian is the version of Linux that Whonix is built upon).

== Whonix 10 TemplateVM Update ==
<br />
With the advent of Whonix 11, the update guide for Whonix 10 is now deprecated
If you are still using Whonix 10, you are advised to install [[Qubes/Install|Whonix 11]]
If you are still interested in updating Whonix 10, click on Expand on the right.
<div class="mw-collapsible-content">
This guide explains how to update your Whonix TemplateVMs using the update repositories.

You should regularly apply this update process to all of your Whonix-Gateway and Whonix-Workstation TemplateVMs.


'''1. Attach Whonix TemplateVM to a Whonix-Gateway ProxyVM (commonly called sys-whonix)'''

You may need to first '''[[Qubes/Create_Gateway_ProxyVMs|create a Whonix-Gateway ProxyVM]]''' to use, if one does not exist yet.

In Dom0 &raquo; Qubes VM Manager:

* Select Whonix TemplateVM &raquo; VM Settings &raquo; Basic tab &raquo; NetVM:
** Choose an existing Whonix-Gateway ProxyVM from the NetVM list for downloading updates.



'''2. Start Whonix TemplateVM'''

In Dom0 &raquo; Qubes VM Manager:

* Select Whonix TemplateVM:
** Start selected VM



'''3. Launch TemplateVM Terminal'''

In Dom0 &raquo; Application Launcher Menu:

* For your Whonix TemplateVM's launcher menu, click on the "Terminal" app to launch it.



'''4. Enable Whonix Repository'''

Qubes and Debian updates install by default. If you would also like to install Whonix updates this way, then ensure you have the Whonix repository enabled -- (or disabled if you prefer). This setting will remain in your TemplateVM for later. On first run of template you will be presented with the Whonix repository options, but you may change them at any time.

In Whonix TemplateVM &raquo; Terminal:

* Input command: <code>sudo whonix-setup-wizard repository</code>
** Choose: Yes. Automatically install updates from the Whonix team.
** Press: OK
** Choose: Whonix Stable Repository (unless you are a tester or developer and understand what you are doing).
** Press: OK



'''5. Check and Install Updates'''

In Whonix TemplateVM &raquo; Terminal:

* Input command: <code>sudo apt-get update && sudo apt-get dist-upgrade -y</code>

* OR, You can right click the Whonix templateVM in '''Qubes Manager''' and select '''Update'''



'''6. Clear Terminal History'''

In Whonix TemplateVM &raquo; Terminal:

* Input command: <code>history -cw</code>



'''7. Shutdown Whonix TemplateVM'''

In Dom0 &raquo; Qubes VM Manager:

* Select Whonix TemplateVM:
** Shutdown selected VM



'''8. Restart/Update Whonix VMs'''

If new updates were available and installed, you will need to either simply restart your running Whonix-Gateway ProxyVMs and running Whonix-Workstation AppVMs for them to be updated -- or alternatively apply this same update process again to your running VMs if not wanting to restart them right away.

= Before installing =

First you need to have the Qubes OS installed on your system.  A helpful Installation Guide for Qubes OS 3.0 is found [https://www.qubes-os.org/doc/InstallationGuideR3.0rc2/ here]

However, before installing Qubes OS on your system, after you have downloaded the Qubes ISO, make sure that you follow the Qubes OS security advice for verifying the signatures of the Qubes ISO found [https://www.qubes-os.org/doc/VerifyingSignatures/ here]

After you have Qubes OS up and running on your system, before you install Whonix you must next

{{Pre Install Advice}}

= Footnotes =
<references />

{{Footer}}

[[Category:Deprecated]]
