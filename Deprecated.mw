{{Header}}
{{#seo:
|description=Outdated, Deprecated, Archived {{project name}} Documentation.
|image=https://www.whonix.org/w/images/3/36/Deprec.jpg
}}

= Ethereum Wallet =

== UNFINISHED ==
'''UNFINISHED!'''

== Connection Issues ==
Ethereum cannot be directly run over Tor yet since it requires UDP. This might change when geth 1.5 is released. <ref>
* https://github.com/ethereum/mist/issues/455
* https://github.com/ethereum/go-ethereum/issues/1855
* http://ethereum.stackexchange.com/questions/1904/can-one-use-ethereum-as-a-client-over-tor
</ref>

In meanwhile your only option is to [[Tunnel_UDP_over_Tor|Tunnel UDP over Tor]].

* [[{{q project name short}}|{{q project name}}]]: The proably easiest way is to [[Tunnels/Connecting_to_Tor_before_a_VPN#Separate_VPN-Gateway|Connect to Tor before a VPN using a Separate VPN-Gateway]] (User &rarr; Tor &rarr; VPN &rarr; Internet).
* [[{{non q project name short}}|{{non q project name}}]]: Harder, but best is probably [[Tunnels/Connecting_to_Tor_before_a_VPN|Connect to Tor before a VPN]] (User &rarr; Tor &rarr; VPN &rarr; Internet).

== Installation ==
Check the newest version of Mist before proceeding. If there is a newer version than 0.8.4, these instructions below need to be slightly updated.

<pre>
curl --location --tlsv1.2 --proto =https https://github.com/ethereum/mist/releases/download/v0.8.4/Mist-linux64-0-8-4.deb > Mist-linux64-0-8-4.deb
</pre>

<pre>
sudo dpkg -i Mist-linux64-0-8-4.deb
</pre>

<pre>
sha256sum Mist-linux64-0-8-4.deb
</pre>

<pre>
sudo apt-get install -f
</pre>

Now Mist should be installed.

If that does not work...

{{Install_Package|package=
libappindicator1 libdbusmenu-glib4 libdbusmenu-gtk4 libindicator7 libxss1
}}

<pre>
sudo dpkg -i Mist-linux64-0-8-4.deb
</pre>

= keepassxc manual installation =
Get keepassxc signing key. <ref>https://keepassxc.org/verifying-signatures</ref>

{{CodeSelect|code=
gpg --recv-keys C1E4CBA3AD78D3AFD894F9E0B7A66F03B59076A8
}}

Download keepassxc.

{{CodeSelect|code=
curl --location --remote-name --tlsv1.2 https://github.com/keepassxreboot/keepassxc/releases/download/2.3.4/KeePassXC-2.3.4-x86_64.AppImage
}}

Download keepassxc signature.

{{CodeSelect|code=
curl --location --remote-name --tlsv1.2 https://github.com/keepassxreboot/keepassxc/releases/download/2.3.4/KeePassXC-2.3.4-x86_64.AppImage.sig
}}

Verify keepassxc signature.

{{CodeSelect|code=
gpg --verify KeePassXC*.sig
}}

Should show the following.

<pre>
gpg: assuming signed data in 'KeePassXC-2.3.4-x86_64.AppImage'
gpg: Signature made Thu 23 Aug 2018 01:31:30 PM EDT
gpg:                using RSA key C1E4CBA3AD78D3AFD894F9E0B7A66F03B59076A8
gpg: Good signature from "KeePassXC Release <release@keepassxc.org>" [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: BF5A 669F 2272 CF43 24C1  FDA8 CFB4 C216 6397 D0D2
     Subkey fingerprint: C1E4 CBA3 AD78 D3AF D894  F9E0 B7A6 6F03 B590 76A8
</pre>

Make keepassxc executable.

{{CodeSelect|code=
chmod +x KeePassXC*
}}

== Automatically Prepend Tor Browser with Firejail ==

Starting with {{project_name}} 14, users can automatically prepend the Tor Browser binary with Firejail. <ref>https://github.com/{{project_name_short}}/tb-starter/commit/ca3e4cbaedaaa80a6e92145badf0fcdb3c5b22db</ref> This setting can be used in either the TemplateVM or TemplateBasedVM ([[{{q project name short}}|{{q project name}}]]: <code>anon-whonix</code>).

=== TemplateVM ===

This is useful in {{workstation_product_name}} (<code>{{whonix-ws}}</code>).

{{Open with root rights|filename=
/etc/torbrowser.d/50_user.conf
}}

Paste.

{{CodeSelect|code=
tb_starter_bin_pre="firejail"
}}

Save.

=== TemplateBasedVM ===

In [[{{q project name short}}|{{q project name}}]], this is useful in <code>anon-whonix</code>.

{{Open with root rights|filename=
/rw/config/torbrowser.d/50_user.conf
}}

Paste.

{{CodeSelect|code=
tb_starter_bin_pre="firejail"
}}

Save.

=== Debug ===

To debug any problems, run.

{{CodeSelect|code=
bash -x torbrowser
}}

= VirtualBox Troubleshooting =
=== PAE Crash ===

# Modify this setting in {{gateway_product_name}}: <code>Virtual Box</code> &rarr; <code>Right-click on {{gateway_product_name}}</code> &rarr; <code>Settings</code> &rarr; <code>System</code> &rarr; <code>Processor</code> &rarr; <code>Uncheck the ''Enable PAE/NX'' Box</code> &rarr; <code>OK</code>
# Afterwards, repeat these steps in {{workstation_product_name}}.

=== VERR_VMX_MSR_VMXON_DISABLED ===

# Modify this setting in {{gateway_product_name}}: <code>Virtual Box</code> &rarr; <code>Right-click on {{gateway_product_name}}</code> &rarr; <code>Settings</code> &rarr; <code>System</code> &rarr; <code>Acceleration</code> &rarr; <code>Uncheck the "Enable VT-x/AMD-V" Box</code> &rarr; <code>OK</code>
# Afterwards, repeat these steps in {{workstation_product_name}}.

If it still doesn't work, change the following setting:<br />
<code>Virtual Box</code> &rarr; <code>Right-click on {{gateway_product_name}}</code> &rarr; <code>Settings</code> &rarr; <code>System</code> &rarr; <code>Acceleration</code> &rarr; <code>Uncheck the "Enable Nested Paging" Box</code> &rarr; <code>OK</code>

=== Kernel Panic ===

Kernel panics are often caused by similar issues that result in the [[#PAE crash|PAE crash]] and {{Code2|VERR_SSM_FIELD_NOT_CONSECUTIVE}} errors discussed above. 

If possible, enable {{Code2|VT-x}} in BIOS settings.

If this option is unavailable, then disable PAE/NX in VirtualBox; see [[#PAE crash|PAE crash]] above for instructions.

= SecBrowser Qubes Stub =


SecBrowser is a security-focused browser that provides vulnerability surface reduction for users that need high security, thereby reducing the risk of infection from malicious, arbitrary code. A built-in security slider provides enhanced usability, as website features which have historically been used as attack vectors (like JavaScript) can be easily disabled.  Without any customization, SecBrowser’s default configuration offers better security than Firefox, Google Chrome or Microsoft Edge.<ref>https://2019.www.torproject.org/projects/torbrowser/design/</ref> It also provides better protections from online tracking, [https://www.whonix.org/wiki/Data_Collection_Techniques fingerprinting] and the [https://www.whonix.org/wiki/Data_Collection_Techniques#Fingerprinting_of_Browser_.28HTTP.29_Header linkability] of activities across different websites.

SecBrowser is a derivative of the Tor Browser Bundle, but without Tor. This means unlike Tor Browser, SecBrowser does not route traffic over the Tor network. Even without the aid of the Tor network, SecBrowser still benefits from the numerous [https://gitweb.torproject.org/tor-browser.git patches] that Tor developers have merged into the code base. Even with developer skills, these enhancements would be arduous and time-consuming to duplicate in other browsers, with the outcome unlikely to match SecBrowser's many security benefits. While browser extensions can be installed to mitigate specific attack vectors, this ad hoc approach is insufficient. SecBrowser leverages the combines experience and knowledge of the Tor Project developers, Whonix developers and the battle-tested Tor Browser. 


=== SecBrowser Security Enhancements ===

{| class="wikitable"
! style="font-weight:bold;" | Features
! style="font-weight:bold;" | Description
|-
| HTTPS Everywhere
| This browser extension encrypts communications with many major websites, making your browsing more secure.<ref>https://www.eff.org/https-everywhere</ref>
|-
| NoScript
| NoScript can provide significant protection with the correct configuration.<ref>https://en.wikipedia.org/wiki/NoScript</ref> NoScript blocks active (executable) web content and protects against [https://en.wikipedia.org/wiki/Cross-site_scripting cross-site scripting] (XSS). "The add-on also offers specific countermeasures against security exploits".
|-
| DNS and Proxy Configuration Obedience
| Proxy obedience is achieved through custom patches, Firefox proxy settings, and build flags. Plugins which can bypass proxy setting are disabled.<ref>https://2019.www.torproject.org/projects/torbrowser/design/#proxy-obedience</ref>
|-
| Reproducible Builds
| Build security is achieved through a reproducible build process that enables anyone to produce byte-for-byte identical binaries to the ones the Tor Project releases.<ref>https://blog.torproject.org/deterministic-builds-part-two-technical-details</ref> <ref>https://2019.www.torproject.org/projects/torbrowser/design/#BuildSecurity</ref>
|-
| Slider Security
| Enables improved security by disabling certain web features that can be used as attack vectors.<ref>https://tb-manual.torproject.org/security-slider/</ref><ref>https://2019.www.torproject.org/projects/torbrowser/design/#proxy-obedience</ref>
|-
| WebRTC Disabled by Default
| WebRTC can compromise the security of VPN tunnels, by exposing the external (real) IP address of a user.<ref>https://en.wikipedia.org/wiki/WebRTC#Concerns</ref><ref>https://torrentfreak.com/huge-security-flaw-leaks-vpn-users-real-ip-addresses-150130/</ref>
|}

=== Settings ===

While SecBrowser has numerous security enhancements they can come at a cost of decreased usability. Since it is also highly configurable, security settings and behavior can be customized according to personal requirements.

* '''Private Browsing Mode:''' In the default configuration Tor Browser has private browsing mode enabled. This setting prevents browsing and download history as well as cookies from remaining persistent across browser restarts. While private browsing mode increases security, usability can be affected to the point that some websites will not function properly or not at all.<ref>https://trac.torproject.org/projects/tor/ticket/10569</ref> To enhance usability  SecBrowser comes packaged with a custom <code>user_pref</code> that disables private browsing mode. If privacy is paramount users can enable private browsing mode by commenting out the corresponding user preference.

* '''Security Slider:''' By default the security slider is set to "Safest" which is the highest security setting.This will prevent some web pages from functioning properly, so security needs must be weighed against the degree of usability that is required. 

* '''Persistent NoScript Settings:''' SecBrowser includes a <code>user_pref</code> that allows custom NoScript settings to persist across browser sessions.This is a security vs usability trade-off.

* '''Remember Logins and Passwords for Sites:''' To increase usability, users have the option to save site login information such as user names or passwords.  

=== Privacy and Fingerprinting Resistance ===

Research from a pool of 500,000 Internet users has shown that the vast majority (84%) have unique browser configurations and version information which makes them trackable across the Internet. When Java or Flash is installed, this figures rises to 94%.<ref>https://www.eff.org/deeplinks/2010/05/every-browser-unique-results-fom-panopticlick</ref> SecBrowser shares the fingerprint with around [https://metrics.torproject.org/userstats-relay-country.html three million] other Tor Browser users, which allows people who use SecBrowser to "blend in" with the larger population and better protect their privacy. 

The [https://www.eff.org/deeplinks/2010/05/every-browser-unique-results-fom-panopticlick EFF has found] that while most browsers are uniquely fingerprintable, resistance is afforded via four methods:

* Disabling JavaScript with tools like NoScript.
* Use of Torbutton, which is bundled with SecBrowser and enabled by default.
* Use of mobile devices like Android and iPhone.
* Corporate desktop machines which are clones of one another.

With JavaScript disabled, SecBrowser provides significant resistance to browser fingerprinting.<ref>https://blog.torproject.org/effs-panopticlick-and-torbutton</ref>

* The User Agent is uniform for all Torbutton users.
* Plugins are blocked.
* The screen resolution is rounded down to 50 pixel multiples.
* The timezone is set to GMT.
* DOM Storage is cleared and disabled.

The EFF's [https://panopticlick.eff.org/ Panopticlick] fingerprint test shows that SecBrowser resists fingerprinting.

''Note:'' Because tracking techniques are complex, Panopticlick does not measure all forms of tracking and protection.

* SecBrowser conveys 6.26 bits of identifying information. 
* One in 76.46 browsers having the same fingerprint.
* Browser's that convey lower bits of identification are better at resisting fingerprinting.<ref>https://33bits.wordpress.com/about/</ref>


When Tor Browser's and SecBrowser's HTTP headers are compared using [https://fpcentral.irisa.fr/ Fingerprint central] the test results are near identical.


'''Table:''' ''Tor Browser vs SecBrowser HTTP headers comparison.'' 

''Percentage (%) out of 1652 with fingerprints tags [Firefox,Windows]:''

{| class="wikitable"
! Name
! style="text-align: center;" | Value
! style="text-align: center;" | Tor Browser
! style="text-align: center;" | SecBrowser
|-
| 
| style="text-align: center;" | 
| style="text-align: center;" | %
| style="text-align: center;" | %
|-
| User-Agent
| style="text-align: center;" | Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0
| style="text-align: center;" | 2.48
| style="text-align: center;" | 2.42
|-
| Accept
| style="text-align: center;" | text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
| style="text-align: center;" | 97.15
| style="text-align: center;" | 97.15
|-
| Host
| style="text-align: center;" | fpcentral.irisa.fr
| style="text-align: center;" | 90.44
| style="text-align: center;" | 90.43
|-
| Content-Length
| style="text-align: center;" | 
| style="text-align: center;" | 100.00
| style="text-align: center;" | 100.00
|-
| Accepted-Language
| style="text-align: center;" | en-US,en;q=0.5
| style="text-align: center;" | 32.63
| style="text-align: center;" | 32.95
|-
| Referer
| style="text-align: center;" | https://fpcentral.irisa.fr/
| style="text-align: center;" | 69.37
| style="text-align: center;" | 69.35
|-
| Upgrade-Insecure-Requests
| style="text-align: center;" | 1
| style="text-align: center;" | 83.05
| style="text-align: center;" | 83.04
|-
| Accepting-Encoding
| style="text-align: center;" | gzip, deflate, br
| style="text-align: center;" | 82.14
| style="text-align: center;" | 82.13
|-
| Content-Type
| style="text-align: center;" | 
| style="text-align: center;" | 100.00
| style="text-align: center;" | 100.00
|-
| Connection
| style="text-align: center;" | close
| style="text-align: center;" | 100.00
| style="text-align: center;" | 100.00
|}

== Install SecBrowser ==

SecBrowser can be installed using <code>tb-updater</code> which is a package developed and maintained by Whonix developers. When run, <code>tb-updater</code> seamlessly automates the download and verification of SecBrowser (from The Tor Project's website). One of the many benefits of <code>tb-updater</code> is the ability to disable Tor is prebuilt into the software. This improves usability and is convenient since a security-focused browser (SecBrowser), is readily available. Unlike other manual methods of disabling Tor, this greatly simplifies the procedure and lessens the chance of a configuration error. 

=== Conclusion ===

SecBrowser is a highly configurable security-focused browser that affords users with numerous options to fine tune their browser's security and usability. This can be achieved through user preferences (<code>user_pref</code>) or on the fly by means of an easy to use and intuitive security slider. This allows users to easily and seamlessly change their security posture to meet changing environments. SecBrowser's fingerprinting resistance provides strong protection against web tracking and can be combined with a VPN to further enhance privacy.<ref> SecBrowser Panopticlick test stated "Yes! You have strong protection against Web tracking, though your software isn’t checking for Do Not Track policies"</ref> SecBrowser can be used with any Debian 10 (buster) based operating system including [https://forums.whonix.org/t/hardened-debian-security-focused-linux-distribution-based-on-debian-in-development-feedback-wanted/5943 SecOS] (a Hardened Debian based OS) which is in active development and coming soon.

= OnionShare Installation from git =
'''1.''' ''Optional'': Create a separate {{workstation_product_name}} ([[{{q project name short}}|{{q project name}}]]: <code>anon-onionshare</code> AppVM).

Note: This is not strictly necessary, but best practice is to separate anonymous activities of a different nature in distinct VMs (AppVMs). <ref>[[{{q_project_name_short}}|{{q_project_name}}]] users should note the <code>{{whonix-ws}}</code> TemplateVM will pull in over 70Mb of dependencies at step 6. Consider creating a separate, cloned <code>{{whonix-ws}}</code> TemplateVM for this purpose beforehand.</ref>

In [[{{q project name short}}|{{q project name}}]], to clone the existing <code>anon-whonix</code>: 

<code>Qube Manager</code> &rarr; <code>Right-click on anon-vm</code> &rarr; <code>Select "<u>C</u>lone qube"</code> &rarr; <code>Rename to "anon-onionshare"</code>

'''2.''' Install git in {{workstation_product_name}} (<code>anon-onionshare</code>).

Open a terminal (Konsole) in {{workstation_product_name}} (<code>anon-onionshare</code>) and navigate to the persistent home directory. 

{{CodeSelect|code=
cd /home/user
}}

Next install git which is not available by default in the VM (AppVM). <ref>The git installation will not persist in [[{{q_project_name_short}}|{{q_project_name}}]] following reboot. This method avoids polluting the <code>{{whonix-ws}}</code> TemplateVM upon which it is based.</ref>

{{CodeSelect|code=
sudo apt-get install git
}}

'''3.''' Clone the OnionShare directory.

This will pull the OnionShare source code directly from GitHub.

{{CodeSelect|code=
git clone https://github.com/micahflee/onionshare.git
}}

Next navigate to the OnionShare directory.

{{CodeSelect|code=
cd onionshare
}}

'''4.''' Retrieve the OnionShare PGP signing key.

This step retrieves the OnionShare developer's PGP key using its long key ID. <ref>The OnionShare core developer is Micah Lee. The key ID has been taken directly from www.micahflee.com</ref>

{{CodeSelect|code=
gpg --keyserver pool.sks-keyservers.net --recv-keys 0x927F419D7EC82C2F149C1BD1403C2657CD994F73
}}

'''5.''' Examine and verify the git tags and commit.

These steps list the available git tags, and verifies the latest version and its commit (v2.0 at the time of writing).

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = Good signature messages should appear for each verify command below. Do not proceed if signatures are bad! In that case, remove the OnionShare directory and repeat step 3.
}}
{{CodeSelect|code=
git tag
}}

{{CodeSelect|code=
git verify-tag v2.0
}}

{{CodeSelect|code=
git verify-commit v2.0^{commit}
}}

[[{{q_project_name_short}}|{{q_project_name}}]] users should shut down <code>anon-onionshare</code> prior to the next step.

'''6.''' Install OnionShare dependencies.

Several dependencies must be installed in {{workstation_product_name}} (<code>{{whonix-ws}}</code> TemplateVM) for OnionShare to work correctly. Locate the {{Code2|BUILD.md}} file in the OnionShare repository and run the necessary apt-get commands in the "Debian-like distros" section.

For example, for OnionShare 2 run in a terminal (Konsole).

{{CodeSelect|code=
sudo apt install -y python3-flask python3-stem python3-pyqt5 python3-crypto python3-socks python-nautilus tor obfs4proxy python3-pytest build-essential fakeroot python3-all python3-stdeb dh-python
}}

[[{{q_project_name_short}}|{{q_project_name}}]] users should shutdown the <code>{{whonix-ws}}</code> TemplateVM after dependencies have installed, and restart the <code>anon-onionshare</code> AppVM.

= Notice =
<u>Note:</u> {{project_name}} users should download new releases with [[#Tor_Browser_Downloader_by_Whonix_.E2.84.A2|Tor Browser Downloader ({{project_name}})]].

{{Box|text=
'''6 May, 2019''' <ref>https://blog.torproject.org/new-release-tor-browser-809</ref>
<blockquote>Tor Browser 8.0.9 is now available from the [https://www.torproject.org/download/ Tor Browser Download page] and also from our [https://www.torproject.org/dist/torbrowser/8.0.9/ distribution directory]. <br />

This release fixes the issue which caused NoScript and all other [https://blog.mozilla.org/addons/2019/05/04/update-regarding-add-ons-in-firefox/ Firefox extensions signed by Mozilla to be disabled]. <br />

If you used the workaround mentioned in our [https://blog.torproject.org/noscript-temporarily-disabled-tor-browser previous blog post], don't forget to set the <code>xpinstall.signatures.required</code> entry in <code>about:config</code> back to '''<span style="color:#008000">true</span>''' after installing this update.</blockquote>
-----
'''8 May, 2019''' <ref>https://blog.torproject.org/new-release-tor-browser-85a12</ref>

<blockquote>Tor Browser 8.5a12 is now available from the [https://www.torproject.org/download/alpha/ Tor Browser Alpha download page] and also from our [https://www.torproject.org/dist/torbrowser/8.5a12/ distribution directory]. <br />

... <br />

This release fixes the issue which caused NoScript and all other [https://blog.mozilla.org/addons/2019/05/04/update-regarding-add-ons-in-firefox/ Firefox extensions signed by Mozilla to be disabled]. <br />

If you used the workaround mentioned in our [https://blog.torproject.org/noscript-temporarily-disabled-tor-browser previous blog post], don't forget to set the <code>xpinstall.signatures.required</code> entry in <code>about:config</code> back to '''<span style="color:#008000">true</span>''' after installing this update.</blockquote>
}}

= Repository Location URI =

To set the default {{project_name}} repository URI, choose one of the following. 

Default https URI.

{{CodeSelect|code=
sudo whonix_repository --baseuri https://deb.whonix.org --enable --repository stable
}}

Onion URI. See also [[Onionizing Repositories]].

{{CodeSelect|code=
sudo whonix_repository --baseuri tor+http://deb.{{project_onion}} --enable --repository stable
}}

To undo any changes, just run the [[#Change {{project_name}} APT Repository|{{project_name}} APT Repository Tool]] again.

= APT Security Update - DSA 4371-1 =
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = Special instructions are required to update due to '''APT security update [https://lists.debian.org/debian-security-announce/2019/msg00010.html DSA 4371-1]'''
}}
{{mbox
| image   = [[File:Ambox_notice.png|40px]]
| text    = This procedure is <u>not</u> required for {{project name}} 14.0.1.3.8 or above. <ref>
Because that version comes with the upgraded APT version which includes the security fix.
</ref>
}}
Using [[Onionizing Repositories|onion sources]] <u>might</u> provide protection against this vulnerability. <ref>
[https://lists.debian.org/debian-security-announce/2019/msg00010.html Debian's security announcement] does not mention [https://onion.torproject.org Debian onion sources]: <br /> <blockquote>The code handling HTTP redirects in the HTTP transport method doesn't properly sanitize fields transmitted over the wire. This vulnerability could be used by an attacker located as a man-in-the-middle between APT and a mirror to inject malicous content in the HTTP connection. This content could then be recognized as a valid package by APT and used later for code execution with root privileges on the target machine.</blockquote> Redirects might also be used by onion mirrors. The {{project name}} project is unaware of any Debian announcement regarding where their onion sources are hosted. Since onion sources are also just a mirror, and mirrors may also be in a position to attempt a [[Warning#Man-in-the-middle_Attacks|man-in-the-middle attack]], these instructions are recommended in all cases.</ref> The special instructions below should be safe for {{project name}} users; minor modifications are necessary for Debian platforms. <ref>This is because {{project name}} uses <code>/etc/apt/sources.list.d/debian.list</code>, while Debian and Qubes' Debian templates depend upon <code>/etc/apt/debian.list</code>.
</ref>

'''1.''' Move <code>/etc/apt/sources.list.d/debian.list</code> to a temporary location.

{{CodeSelect|code=
sudo mv /etc/apt/sources.list.d/debian.list /etc/apt/debian.list
}}

'''2.''' Create an apt sources list that works without redirections.

{{CodeSelect|code=
echo "deb http://cdn-fastly.deb.debian.org/debian-security stable/updates main" {{!}} sudo tee /etc/apt/sources.list.d/debian.list
}}

'''3.''' Securely update the package lists using the <code>-o Acquire::http::AllowRedirect=false</code> workaround.

{{CodeSelect|code=
sudo apt-get -o Acquire::http::AllowRedirect=false update
}}

'''4.''' Securely upgrade apt-get using the <code>-o Acquire::http::AllowRedirect=false</code> workaround.

{{CodeSelect|code=
sudo apt-get -o Acquire::http::AllowRedirect=false upgrade
}}

'''5.''' Verify the installed <code>apt</code> version has been upgraded.

{{CodeSelect|code=
dpkg -l {{!}} grep "commandline package manager"
}}

This command should show.

<pre>
ii  apt                                            1.4.9                                      amd64        commandline package manager
</pre>

The output above shows <code>apt</code> version <code>1.4.9</code>, which includes the security fix.

'''6.''' Delete the temporary <code>/etc/apt/sources.list.d/debian.list</code>.

{{CodeSelect|code=
sudo rm /etc/apt/sources.list.d/debian.list
}}

'''7.''' Restore the original <code>/etc/apt/sources.list.d/debian.list</code>.

{{CodeSelect|code=
sudo mv /etc/apt/debian.list /etc/apt/sources.list.d/debian.list
}}

'''8.''' Perform the [[Operating_System_Software_and_Updates#Standard_Upgrade_Steps|Standard Upgrade Steps]].

The procedure is now complete.

Forum discussion:<br />
https://forums.whonix.org/t/special-instructions-required-to-securely-update-because-of-apt-security-update-dsa-4371-1/6721

= Upgrade =
Upgrade torsocks and usability-misc first. <ref>
This avoids some torsocks warnings due to the torsocks upgrade.
</ref> <ref>
Provides apt-get-noninteractive.
</ref>

{{CodeSelect|code=
apt-get install torsocks usability-misc
}}
Ignore any errors relating to missing torsocks libraries.

Stop whonixcheck systemd unit. <ref>
https://forums.whonix.org/t/upgrade-from-13-to-14-breaking-whonix-every-time
</ref>

{{CodeSelect|code=
systemctl stop whonixcheck
}}

Purge packages which are not required or deprecated in {{project name}} and have been replaced by new functionality.

= VirtualBox Guest Addition =
== For {{project name}} versions below 14 ==
<div class="toccolours mw-collapsible mw-collapsed">
<u>If you are using a default {{gateway_product_name}} or {{workstation_product_name}}</u>, follow these steps:
<div class="mw-collapsible-content">
1) Power off the virtual machine.<ref name=poweroff />

2) Go to the {{Code2|VirtualBox main window -> Right click a VM -> choose Settings -> Shared Folders -> click on the 'plus +' icon -> under 'Folder Path' choose a folder from your host OS -> in 'Folder Name:' type '''shared'''}}. Tick the {{Code2|Auto-mount}} checkbox. Press {{Code2|OK}}.

3) Power on the virtual machine.

4) Done. Files you drop into {{Code2|/mnt/shared}} in the virtual machine will end up in your host OS shared folder and vice versa.

<ref>
For your convenience, the [https://github.com/{{project_name_short}}/shared-folder-help shared-folder-help] package applied the following steps for you automatically.

a) [https://github.com/{{project_name_short}}/shared-folder-help/blob/master/debian/shared-folder-help.postinst shared-folder-help.postinst]  did:

{{CodeSelect|code=
sudo mkdir -p /mnt/shared
}}

{{CodeSelect|code=
sudo chmod 777 /mnt/shared
}}
 
b) Mounting of the shared folder is done automatically by the [https://github.com/{{project_name_short}}/shared-folder-help/blob/master/lib/systemd/system/mnt-shared-vbox.service mnt-shared-vbox] systemd service.
</ref>
</div>
</div>

= Tor Browser Licensing =
* Tor Browser is installed by default in the [[{{q_project_name_short}}|{{q_project_name}}]] {{workstation_product_name}}, but not in [[{{non q project name short}}|{{non q project name}}]] for licensing reasons. This will change in {{project name}} 14. <ref>
<u>Licensing reasons</u>:

* Mozilla trademark: https://trac.torproject.org/projects/tor/ticket/10888
* The Tor Project trademark: https://www.whonix.org/wiki/Dev/TPO_Trademark
* [https://phabricator.whonix.org/T337 Tor Browser gets installed by default since [[{{q_project_name_short}}|{{q_project_name}}]] 12] because [[{{q_project_name_short}}|{{q_project_name}}]] is built and distributed by the maintainers of Qubes OS, not {{project_name}}. Different laws apply and they are not concerned about the legal implications.
</ref> <ref>
* [https://trac.torproject.org/projects/tor/ticket/19652 Permission to install Tor Browser by default in {{project_name}}]
* [https://trac.torproject.org/projects/tor/ticket/19911 {{project name}} project official licensee of The trademarks]
</ref>

= Browser Plugins =

[[Image:flash_leak_test.png|Flash Leak Test SocksPort and TransPort|thumb]]

[[Image:flash_leak_test_both_transport.png|Flash Leak Test both TransPort|thumb]]


== Introduction ==
We explain the risks of browser plugins (flash etc.), discuss some alternatives and finally explain how to use browser plugins anyway in the best possible secure manner.

== Tor Browser ==
For information about Tor Browser in general, see 
[[Tor Browser]].

== Warning not to use them ==
{{mbox
| type       = critical
| image      = [[File:Ambox_warning_pn.svg.png|40px|alt=warning against non-Free browser plugins]]
| text    = 

Some popular plugins are non-Free, Closed Source software!
See [[Warning#Avoid_non-Free_Software|Warning, Avoid non-Free Software]].
Check if your browser plugin is Free Software before using it.

}}


Quoted the {{project name}} Features page <ref>[[Features]]</ref>: "''Java / JavaScript / flash / browser plugins / Malware <ref>https://en.wikipedia.org/wiki/Malware</ref> / misconfigured applications cannot leak your real external IP.''" "''This is still not recommended as they may decrease anonymity (e.g. flash cookies) and often have security vulnerabilities. Some popular plugins are closed source. See [https://www.whonix.org/wiki/Security_in_Real_World {{project name}} Security in real world].''"


Although it is not recommended, we don't want to withhold the knowledge from you how to use browser plugins.

IP leaks are not easily possible.<ref>Read [https://www.whonix.org/wiki/Comparison_with_Others#Attacks| Attack on {{project_name}}] and/or [[Design]] for details on how much effort would be needed.</ref>


The concern against browser plugins can be broken down to:

1. Non-Free Software. See our warning Box above.

2. Linkability: browser plugins use can be probably correlated to the same [https://www.whonix.org/wiki/DoNot#Do_not_confuse_Anonymity_with_Pseudonymity| pseudonym]. <ref name=compare>For an overview about Flash Tracking Techniques and why {{project name}} users are much better off than users who run Tor and proxifiers and/or custom firewall rules, see chapter [https://www.whonix.org/wiki/Comparison_with_Others#Flash_.2F_Browser_Plugin_security| Flash / Browser Plugin Security]</ref>

3. Fingerprinting: browser plugins can probably leak lots of information about your (virtual) operating system ({{workstation_product_name}})

4. Security: some plugins have a history for remote exploits. More precise: the risk for your virtual operating system to get infected by trojan horses etc. is higher.

But anyway, of course you should look for alternatives first (see below), but if you insist on using browser plugins, an isolating/transparent proxy like {{project name}} is probably your best bet. <ref name=compare />

== Avoiding browser plugins ==
Avoiding browser plugins and flash is better than using them.

Note that there are alternatives to browser plugins. Most of the workarounds aren't a 100% complete, perfect drop in replacement, but perhaps it works sufficient for you (for example, if you only need youtube). Alternatives are html5, gnash, flash video replacer, flash video download or using a flash video download and convert online service. There are also applications worth checking, such as youtuberipper, ClipGrab, minitube, Totem with totem-plugins-extra, etc. Discussing the flash alternatives in details is beyond the scope of {{project_name}}.

Also the Tails folks prepared a good list of Flash alternatives, see [https://tails.boum.org/todo/Flash_support Tails Flash support].

If you still want to use browser plugins or flash, read below.

== How to use Flash - EASY ==
{{mbox
| type       = critical
| image      = [[File:Ambox_warning_pn.svg.png|40px|alt=warning against non-Free browser plugins]]
| text    = 

Adobe Flash is non-Free, Closed Source software! <br />
Make sure you have read our [https://www.whonix.org/wiki/Browser_Plugins#Warning_not_to_use_them Warning not to use them] above first!
}}
If you insist on using browser plugins anyway (read [https://www.whonix.org/wiki/Browser_Plugins#Warning_not_to_use_them| warnings] above), you can install new software <ref>Read [https://www.whonix.org/wiki/Install_Software Software Installation on {{workstation_product_name}}]</ref> in {{workstation_product_name}}. Your best bet may be using the Tor Browser. JDownloader is a Libre alternative to Flash for downloading videos for local viewing.<ref>https://labs.riseup.net/code/issues/5363</ref>

Your IP/location will still be hidden. Consider the plugin usage ''[https://www.whonix.org/wiki/DoNot#Do_not_confuse_Anonymity_with_Pseudonymity| pseudonymous rather than anonymous]''. This is the EASY chapter, which does not include all security considerations. For those, read the whole page.

If you are using any plugins such as Flash, it will be probably known to the exit relay, exit relay's ISP and website, that you are a {{project name}} user.

<ref name=four>Most "plugins over Tor" users probably use Mozilla Firefox and Flash on Microsoft Windows with a socksifier. They can be easily browser fingerprinted and probably even linked, see [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/WebBrowsers TorifyHOWTO/WebBrowsers] and [https://www.torproject.org/torbutton/torbutton-faq.html.en#oldtorbutton Tor Button FAQ].</ref>

<ref name=five>That is because very few people use Tor Browser with plugins, which are routed through Tor. Also because Tor Browser was at {{project name}} build time manually configured to use a Tor's SocksPort (for stream isolation), while user-installed plugins will will be automatically routed Tor's TransPort. The SocksPort and the TransPort will go through different circuits and most times through different exit relays. That probably differs from the rest of the "Plugins over Tor" users group. For demonstration, see screenshot: [[Image:flash_leak_test.png|Flash Leak Test SocksPort and TransPort|thumb]] you'll see, that the Tor Browser and Flash have different Tor exit IP's. It is questionable if that particular difference could and should be fixed and if situation had improved afterwards.</ref>


<ref name=six>See [https://www.whonix.org/wiki/Tor_Browser#Change.2FRemove_Proxy_Settings| Change/Remove Proxy Settings] for how to route Tor Browser through Tor's TransPort. Then both, Tor Browser and plugins would go through Tor's TransPort. This has been tested, see screenshot [[File:Flash_leak_test_both_transport.png|thumb]]. The question would be, if that would actually improve the situation talked about in earlier footnotes. There are probably only a very few using Tor Browser and plugins through the same circuit. (In a earlier footnote, it was mentioned, that they are still using Mozilla Firefox, even though that's even more discouraged.)</ref>

Install Flash.

{{CodeSelect|code=
sudo apt-get install flashplugin-nonfree
}}


(2) Additionally, it might make sense to install Firefox (Tor Browser) Add-On [https://addons.mozilla.org/en-US/firefox/addon/betterprivacy/ BetterPrivacy BetterPrivacy], which can be setup to delete Flash Cookies.

(3) Activate browser plugins in Tor Browser.

To activate browser plugins in Tor Browser <ref>Note that Tor Button in Tor Browser disables all plugins by the default settings. That decision is made by the Tor Browser developers, not by the {{project name}} developers. (Of course, the {{project name}} developers second their decision.)</ref> right click on Tor Button -> Preferences... -> Security Settings -> uncheck: Disable Plugins during Tor usage. You have to restart Tor Browser.

(4) Updating Flash

Each time there is a new version of flash, you should update.

{{CodeSelect|code=
sudo update-flashplugin-nonfree --install --verbose
}}

== How to use other browser plugins ==
Note that Tor Browser developers added a patch <ref>https://gitweb.torproject.org/torbrowser.git/tree/src/current-patches/firefox/0005-Block-all-plugins-except-flash.patch</ref>, which blocks all plugins except flash. To use other plugins, read the more advanced guide below.

== How to use browser plugins - Advanced ==
If you don't like to use Tor Browser, you could install the mainstream Firefox, Chromium, Flash etc. For a discussion whether this is good or bad for anonymity, see the "More Security" section below.

Firefox. <ref>https://wiki.debian.org/Firefox</ref> <ref>It is also possible to [https://medium.com/@mos3abof/how-to-install-firefox-on-debian-jessie-90fa135e9e9 install the latest Firefox version] on Debian.</ref>

{{CodeSelect|code=
sudo apt-get install firefox-esr
}}

Or Chromium.

{{CodeSelect|code=
sudo apt-get install chromium-browser chromium-browser-l10n
}}

== How to use browser plugins - More Security ==
=== Read the EASY chapter above first ===
Read the EASY chapter above first

=== Deactivate unneeded browser plugins ===
It is recommended to activate only plugins, you really use. On most browsers their is a pseudo URL 'about:plugins' to check which are activated. Go to Tor Browser -> Tools -> Plugins and deactivate all plugins, which you don't need, or even better, uninstall them.

=== Separate Tor Browser or Separate {{workstation_product_name}} dedicated to browser plugins ===
For best security use [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/WebBrowsers#TorBrowserbehindatransparentorisolatingproxy More than one Tor Browser behind an transparent or isolating proxy] or even better, [https://www.whonix.org/wiki/Security_Guide#Recommendation_to_use_multiple_VM_Snapshots|multiple VM snapshots] or [https://www.whonix.org/wiki/Multiple_{{workstation_product_name_short}} Multiple {{workstation_product_name}}].

=== SocksPort vs TransPort ===

Using the easy instructions above will cause Tor Browser to go through SocksPort and browser plugins such as Flash to go through TransPort. It may or may not make sense to either force both through a SocksPort (difficult) or to force both through the TransPort, see footnotes.

<ref name=four>Most "plugins over Tor" users probably use Mozilla Firefox and Flash on Microsoft Windows with a socksifier. They can be easily browser fingerprinted and probably even linked, see [https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/WebBrowsers TorifyHOWTO/WebBrowsers] and [https://www.torproject.org/torbutton/torbutton-faq.html.en#oldtorbutton Tor Button FAQ].</ref>

<ref name=five>That is because very few people use Tor Browser with plugins, which are routed through Tor. Also because Tor Browser uses Tor's SocksPort (for stream isolation), while user-installed plugins will will be automatically routed Tor's TransPort. The SocksPort and the TransPort will go through different circuits and most times through different exit relays. That probably differs from the rest of the "Plugins over Tor" users group. For demonstration, see screenshot: [[File:Flash_leak_test.png|thumb]] you'll see, that the Tor Browser and Flash have different Tor exit IP's. It is questionable if that particular difference could and should be fixed and if situation had improved afterwards.</ref>

<ref name=six />

=== Download Flash directly from Adobe ===
{{mbox
| type       = critical
| image      = [[File:Ambox_warning_pn.svg.png|40px|alt=warning against non-Free browser plugins]]
| text    = 

Adobe Flash is non-Free, Closed Source software! <br />
Make sure you have read our [https://www.whonix.org/wiki/Browser_Plugins#Warning_not_to_use_them Warning not to use them] above first!
}}

If you insist on using it... For better security <ref>http://lists.debian.org/debian-security/2012/12/msg00025.html</ref> or if Flash from the Debian repository does not work for you, Flash can be downloaded directly from Adobe.

(1) Go to https://get.adobe.com/flashplayer/otherversions/

(2) choose Linux (32-bit)

(3) choose 11.2 for other Linux (.tar.gz) 32-bit

(4) click on the Download now button

(5) you will see

<pre>
An external application is needed to handle:

https://fpdownload.macromedia.com/get/flashplayer/pdc/11.2.202.270/install_flash_player_11_linux.i386.tar.gz

[...]
</pre>


Verify, that you'll download from http''s''.

(6) Download.

(7) Unpack.

(8) Follow the Installation instructions in the readme.txt.

== License ==
{{JonDos}}
The "Restrict Flash Settings" chapter of the {{project name}} BrowserPlugins wiki page contains content from the JonDonym documentation [https://anonymous-proxy-servers.net/en/help/flash-applets.html How to anonymize Flash videos and applets] page.

= Qubes DisposableVM =
== Adding Shortcuts to Application Menus ==
<ref>Qubes feature request WIP: [https://github.com/QubesOS/qubes-issues/issues/1339 Have DisposableVMs inherit launcher shortcuts like other TemplateBasedVMs #1339]</ref>
===== Qubes 3.2 / XFCE4 (Untested) =====

Make a <i>.desktop</i> file for every DisposableVM shortcut that will be added to the menu.<ref>Official documentation: [https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html Desktop entry specifications]</ref> These .desktop files must be placed in <i>~/.local/share/applications/</i>.

Open a terminal in the DVM Template.

<code>dom0</code> &rarr; <code>Qubes VM Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>click 'Run command in VM'</code> &rarr; <code>type 'konsole'</code> <ref>On the command line (dom0), run. {{CodeSelect|code=qvm-run -a {{whonix-ws-dvm}} konsole}}</ref>

Create a local applications directory.

{{CodeSelect|code=
mkdir -p ~/.local/share/applications/
}}

Use a text editor to create and open each .desktop file and logically name each one.

{{CodeSelect|code=
kwrite ~/.local/share/applications/dvm-torbrowser.desktop
}}

As appropriate, add the following entries and substitute fields to each .desktop file. In the Exec field, substitute <i>torbrowser</i> with the command used to launch each relevant application matching the shortcut. For example: <i>konsole, kwrite, libreoffice, kgpg, okular, dolphin</i> and so on.

<!-- EDITORS NOTE: '{{!}}' is a magic word for '|'.-->
{{CodeSelect|code=
[Desktop Entry]
Name=Tor Browser
Comment=Launch Tor Browser in DisposableVM
Type=Application
Terminal=false
Exec=sh -c 'echo torbrowser {{!}} /usr/lib/qubes/qfile-daemon-dvm qubes.VMShell dom0 DEFAULT red'
}}

Icon= & Category= are also useful fields. Feel free to research the .desktop specification using the footnote above.

Once the .desktop files have been created, they need to be added to the Applications menu. Use a text editor to edit the following file.

{{CodeSelect|code=
kwrite ~/.config/menus/xfce-applications.menu
}}

Find the menu entry associated with the DVM Template. (Help!)

{{CodeSelect|code=
<Menu>
    <Name>DisposableVMTemplate</Name>
}}

In the <Include> subsection, add the appropriately named .desktop file.

{{CodeSelect|code=
<Filename>dvm-torbrowser.desktop</Filename>
}}

===== Qubes 3.2 / XFCE4: MenuLibre (Untested) =====

<div class="toccolours mw-collapsible mw-collapsed">
This is recommended for testers only! Users should know how to fix the application menu in case it breaks. If interested, click on Expand on the right.
<div class="mw-collapsible-content">
Warning: Testers have previously experienced [https://groups.google.com/forum/m/#!msg/qubes-users/rxI8lNOD7p0/p9Va5Vg9BwAJ removal of the Qubes System Tools start menu entry] when applying these changes! For greater safety, consider using git to manage the home folder so any MenuLibre changes can be reverted.

In dom0, run.

{{CodeSelect|code=
sudo qubes-dom0-update menulibre
}}

The use the menu editor.

<code>Qubes Start Menu</code> &rarr; <code>System Tools</code> &rarr; <code>Menu Editor</code>
</div>
</div>

== spawn from other VMs ==
If intending to spawn DisposableVMs from other VMs, configure the NetVM for the DisposableVM setting, see [[Qubes/Disposable_VM#Warning:_Use_caution_when_spawning_DisposableVMs_from_other_VMs|Warning: Use caution when spawning DisposableVMs from other VMs]].
== new DVM Template ==
Step 4: Configure {{gateway_product_name}} as the NetVM. <ref>
On the command line (dom0), run.

{{CodeSelect|code=
qvm-prefs -s {{whonix-ws-dvm}} netvm sys-whonix}}
</ref>

<code>dom0</code> &rarr; <code>Qubes VM Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>VM Settings</code> &rarr; <code>NetVM</code> &rarr; <code>sys-whonix</code>
== Updating Tor Browser ==
Tor Browser presents a special situation because it is installed in a user's home directory. As a result, the TemplateVM (<code>{{whonix-ws}}</code>) never updates existing Tor Browser installations.

'''Non-Customized DVM Templates Users''' 

To obtain the latest Tor Browser, the simplest method is to use {{project name}} built-in Tor Browser downloader functionality. Simply update using [[Tor_Browser#Tor_Browser_Downloader_by_{{project_name}}Tor Browser Downloader by {{project name}} (tb-updater)]] in <code>{{whonix-ws}}</code> when performing your usual maintenance [https://www.qubes-os.org/doc/whonix/update/ upgrading]. 

Update and upgrade.

{{CodeSelect|code=
sudo apt-get update && sudo apt-get dist-upgrade
}}

Then, create a new DisposableVM to overwrite the existing one.

Open a dom0 terminal.

<code> Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>System Tools</code> &rarr; <code>Konsole or Xfce Terminal</code>

Create a new DVM Template using the updated <code>{{whonix-ws}}</code> TemplateVM.

{{CodeSelect|code=
qvm-create-default-dvm whonix-ws
}}

'''Customized DVM Template Users'''

Users have two choices: 

# [[Tor_Browser#Tor_Browser_Downloader_by_{{project_name}}Tor Browser Downloader by {{project name}} (tb-updater)]] (update-torbrowser)
# [[Tor_Browser#Tor_Browser_Internal_Updater|Tor Browser's internal updater]].
<br />
'''Option #1: Use {{Code2|update-torbrowser}} to download a new copy of Tor Browser'''

<code>dom0</code> &rarr; <code>Qubes VM Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>click 'Run command in VM'</code> &rarr; <code>type 'konsole'</code> <ref>On the command line (dom0), run. {{CodeSelect|code=qvm-run -a {{whonix-ws-dvm}} konsole}}</ref>

Launch Tor Browser Downloader by {{project name}} and follow the instructions.

{{CodeSelect|code=
update-torbrowser --input gui
}}

Shutdown the DVM Template. <ref>On the command line (dom0), run. {{CodeSelect|code=qvm-shutdown {{whonix-ws-dvm}}}}
or<br />
DVM Template command line (domU), run. {{CodeSelect|code=sudo poweroff}}
</ref>

<code>dom0</code> &rarr; <code>Qubes VM Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>click 'Shutdown VM'</code>

Regenerate the DVM Template.

Open a dom0 terminal.

<code>Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>System Tools</code> &rarr; <code>Konsole or Xfce Terminal</code>

Then run.

{{CodeSelect|code=
qvm-create-default-dvm whonix-ws
}}

'''Option #2: Use Tor Browser's internal updater and download new updates only'''

<code>dom0</code> &rarr; <code>Qubes VM Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>click 'Run command in VM'</code> &rarr; <code>type 'torbrowser'</code> <ref> On the command line (dom0), run. {{CodeSelect|code=qvm-run -a {{whonix-ws-dvm}} torbrowser}}</ref>

Use Tor Browser's Internal Updater by clicking TorButton and selecting <code>Check for Tor Browser Update</code>. Close and restart Tor Browser.

Shutdown the DVM Template. <ref>On the command line (dom0), run. {{CodeSelect|code=qvm-shutdown {{whonix-ws-dvm}}}}</ref>

<code>dom0</code> &rarr; <code>Qubes VM Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>click 'Shutdown VM'</code>

Regenerate the DVM Template.

Open a dom0 terminal.

<code>Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>System Tools</code> &rarr; <code>Konsole or Xfce Terminal</code>

Regenerate the template.

{{CodeSelect|code=
qvm-create-default-dvm whonix-ws
}}

== Edit Qubes' DisposableVM Start Menu  ==
Complete the following to work around [[#Warning: Do not use Firefox from Qubes DisposableVM default start menu]].

In Qubes dom0.

<code>alt + F3</code> &rarr; <code>on the left side, click 'DisposableVM'</code> &rarr; <code>right-click on 'Firefox'</code> &rarr; <code>edit</code> -> 

* Name: <code>DisposableVM: Tor Browser</code>
* Command: <code>sh -c 'echo torbrowser | /usr/lib/qubes/qfile-daemon-dvm qubes.VMShell dom0 DEFAULT red'</code> 
<br />
&rarr; <code>click 'Save'</code>

While editing entries, it is also possible to edit the xterm entry and change it to konsole. This is not important for security, but may be a personal preference.

== R3.2 If you wish to install the alpha version of Tor Browser ==
<div class="toccolours mw-collapsible mw-collapsed">
'''Advanced users:''' If you wish to install the alpha version of Tor Browser, click on Expand on the right.
<div class="mw-collapsible-content">
'''Option #1: Use a non-customized DVM Template''' 

This template will use a stock image based on whonix-ws and will not preserve any changes that are made to it.

Step 1: Disable <code>tb-updater</code>'s functionality which automatically updates during apt-get inside the Qubes TemplateVM. <ref>[[Tor_Browser#tb-updater_in_Qubes_TemplateVM]]</ref> 

This prevents the preferred Tor Browser version being overwritten by the stable version.

In whonix-ws terminal, run.

{{CodeSelect|code=
echo "tb_install_follow=false" {{!}} sudo tee -a /etc/torbrowser.d/50_user.conf
}}

Step 2: Install the preferred version of Tor Browser to TemplateVM by launching Tor Browser Downloader by {{project name}} and following the instructions. <ref name=hide_gtk_warnings /> <ref name=noaskstart /> <ref name=cli_noaskstart />

In whonix-ws terminal, run.

{{CodeSelect|code=
noaskstart=true update-torbrowser --input gui >/dev/null 2>&1
}}

Step 3: Create a DVM Template based on the whonix-ws TemplateVM.

In dom0 terminal, run.

{{CodeSelect|code=
qvm-create-default-dvm whonix-ws
}}

When a new version of Tor Browser is released, repeat the previous two steps to update the TemplateVM and DVM Template.

'''Option #2: Use a Customized DVM Template''' 

Note: This template can be further customized by following the instructions [[#Customizing a DVM Template|below]].

Step 1: Delete the existing DVM Template.

In dom0 terminal, run. 

{{CodeSelect|code=
qvm-remove <oldDVM_Template>
}}

Step 2: Create a new DVM Template based on the whonix-ws TemplateVM.

In dom0 terminal, run.

{{CodeSelect|code=
qvm-create-default-dvm whonix-ws
}}

Step 3: Configure {{gateway_product_name}} as the NetVM for the DVM Template.

In dom0 terminal, run.

{{CodeSelect|code=
qvm-prefs -s whonix-ws-dvm netvm sys-whonix
}}

Step 4: Launch a DVM Template terminal.

In dom0 terminal, run. 

{{CodeSelect|code=
qvm-run -a whonix-ws-dvm konsole
}}

Step 5: Enable a customized flag in the DVM Template.

In the DVM Template terminal, run.

{{CodeSelect|code=
touch /home/user/.qubes-dispvm-customized
}}

Step 6: Use update-torbrowser to download and install the preferred TorBrowserBundle.

In the DVM Template terminal, run.

{{CodeSelect|code=
noaskstart=true update-torbrowser --input gui >/dev/null 2>&1
}}

Step 7: Shutdown the DVM Template.

In the DVM Template terminal, run.

{{CodeSelect|code=
sudo poweroff
}}

Step 8: Regenerate the DVM Template.

In dom0 terminal, run.

{{CodeSelect|code=
qvm-create-default-dvm whonix-ws
}}

Do not forget to [[Qubes/Disposable_VM#Warning:_Check_your_Tor_Browser_Version|check your Tor Browser version]]!

----
</div>
</div>

==== Warning: Do not Use Firefox from Qubes' DisposableVM Default Start Menu ====
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = 
Do '''not''' expect anonymity when selecting <code>Qubes Start Menu</code> &rarr; <code>DisposableVM</code> &rarr; <code>Firefox</code>! <br /> <br />Using any browser other than Tor Browser is strongly discouraged if anonymity is desired, see [[Tor Browser]]. The default Qubes start menu option is best not used at all, unless the [[#Edit Qubes DisposableVM start menu|menu entry is manually edited]] to launch Tor Browser in place of Firefox. <ref>Instructions are provided later under chapter [[#Setup]].</ref>
}}

===== Qubes 3.1 / KDE4 =====
<code>dom0</code> &rarr; <code>right-click Application Launcher Menu</code> &rarr; <code>click `Edit Applications`</code> &rarr; <code>Select DisposableVM from the VM entries on the left panel</code> &rarr; <code>Press the arrow button to expand the menu</code> &rarr; <code>Click New Item on the Toolbar</code> &rarr; <code>Type in a Name for the shortcut</code> ->
    
Type in the specific command to launch the program in the DisposableVM. Tor Browser, konsole and dolphin are provided as examples below.

{{CodeSelect|code=
sh -c 'echo torbrowser {{!}} /usr/lib/qubes/qfile-daemon-dvm qubes.VMShell dom0 DEFAULT red'
}}

{{CodeSelect|code=
sh -c 'echo konsole {{!}} /usr/lib/qubes/qfile-daemon-dvm qubes.VMShell dom0 DEFAULT red'
}}

{{CodeSelect|code=
sh -c 'echo dolphin {{!}} /usr/lib/qubes/qfile-daemon-dvm qubes.VMShell dom0 DEFAULT red'
}}

&rarr; <code>Click on the square in the upper right in order to choose an icon</code> <ref>Custom application icons are stored in <i>/var/lib/qubes/<type of vm>/<vm name>/apps.icons/</i></ref> &rarr; <code>Click Save</code>.

----

= VLC =
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = '''Warning:''' As of May 2018, VLC has reached [https://www.debian.org/security/2018/dsa-4203 end of life in Debian jessie] and hence {{project name}} 13. A different media player should be used until {{project name}} 14 is released, because VLC in jessie has unpatched security vulnerabilities.
}}

= VirtualBox =
==Recommended Version==
{{project_name}} [[Install_Software#Recommendation_to_Install_Packages_from_Debian_Stable_Repository|recommends installing the package contained in the Debian Stable repository]]. 

===Install from Debian Stable===
[https://packages.debian.org/search?keywords=virtualbox&searchon=names&suite=stable&section=all Latest Stable VirtualBox package information]
{{CodeSelect|code=
sudo apt-get install virtualbox linux-headers-$(uname -r)
}}

To install [[VirtualBox/Guest Additions|VirtualBox Guest Additions]]:
{{CodeSelect|code=
sudo apt-get install virtualbox-guest-x11
}}

= whonix-setup-wizard dev =
== overloading 'whonix-setup-wizard setup' issue ==
I think the problem is we're overloading the 'whonix-setup-wizard setup' command with logic to start (not)
* show disclaimer,
* connection wizard,
* repository,
* first use notice

Related code:
* https://github.com/{{project_name_short}}/whonix-setup-wizard/blob/33b63f7d6aca34cf47b2d12e22180205050598ef/usr/share/pyshared/whonix_setup_wizard/whonix_setup_wizard.py#L69-80
* <code>wizard_steps=</code>

== Newer Proposal for {{project name}} 13 ==
{{q_project_name}}:<br />
* The qubes-whonix package will keep care of automatically starting anon-connection-wizard.
* Users can manually start {{project name}} Repository Wizard from the start menu.
* Users can manually start Anon Connection Wizard from the start menu.
* That's it. No more windows.
<br />
{{non_q_project_name_short}}:<br />
* At first start...
** Show Disclaimer page.
** Show First Run Notice page.
** Show {{project name}} Repository Wizard.
** Show Anon Connection Wizard.
* Users can manually start {{project name}} Repository Wizard from the start menu.
* Users can manually start Anon Connection Wizard from the start menu.

= About this page =

'''This is outdated documentation which no longer applies. Kept in case it will be required again in future.'''


'''Legacy instructions: applies up to {{project name}} 13'''

1. First we will start with {{gateway_product_name}}:

<pre>
virsh -c qemu:///system define {{gateway_product_name}}*.xml
</pre>

2. Followed by the {{project name}} isolated internal network (XML also in the same folder as {{project name}} Gateway):

<pre>
virsh -c qemu:///system net-define Whonix_network*.xml
</pre>

If the definition of the {{project name}} internal network fails because the network bridge "virbr1" already exists, edit the Whonix_network*.xml file and change the name to one that doesnt exist, e.g. "virbr2" (you can list all existing bridge adapters with "sudo brctl show").

<pre>
virsh -c qemu:///system net-autostart Whonix
</pre>

<pre>
virsh -c qemu:///system net-start Whonix
</pre>

3. Lastly the {{workstation_product_name}}:

<pre>
virsh -c qemu:///system define {{workstation_product_name}}*.xml
</pre>


* On the host, a libvirt bug that conflicts with the way it works with Apparmor and the VM will refuse to start. It was fixed upstream but it will be a while until it reaches you.

To fix it run:

<pre>
sudo ln -s /etc/apparmor.d/libvirt/TEMPLATE.qemu /etc/apparmor.d/libvirt/TEMPLATE.kvm
</pre>


Add FoxyProxy to [[Tor Browser]] in {{project_name}}. 

{{Box|text=
'''Warning:''' Installing FoxyProxy worsens the user's browser fingerprint and adversely affects anonymity since it is not a default Tor Browser add-on. The Tor Project's anonymity warning is explicit: <ref>https://www.torproject.org/docs/faq.html.en</ref>
<blockquote>
Can I install other Firefox extensions?<br />
<br />
Tor Browser is free software, so there is nothing preventing you from modifying it any way you like. However, we do not recommend installing any additional Firefox add-ons with Tor Browser. Add-ons can break your anonymity in a number of ways, including browser fingerprinting and bypassing proxy settings.
</blockquote>

When using a browser and FoxyProxy in combination, a user's [[Fingerprint#web_fingerprint|web fingerprint]] becomes more unique. The potential fingerprinting harm to user anonymity depends on how many others are running Tor Browser in conjunction with FoxyProxy. 

This configuration is so specialized that probably very few are doing it, reducing the user pool to a small subset. Due to the risk, this approach is generally recommended against. If a user decides to proceed anyhow, the tunnel configuration should not be combined with any browser other than Tor Browser (like Firefox or Chrome), due to an even greater browser fingerprinting risk.

This warning equally applies to configurations such as Tor Browser and I2P, or Tor Browser and remote (http(s)/socks4/5) proxies.

To install FoxyProxy, follow these steps in the {{workstation_product_name}} ([[{{q project name short}}|{{q project name}}]]: {{workstation_product_name}} AppVM). <ref>The following instructions have been tested as functional in Tor Browser versions 6.5, 7.0a1 and 7.0a2 "hardened". https://lists.torproject.org/pipermail/tbb-dev/2017-February/000471.html</ref> <ref>Some users report <i>xpinstall.signatures.required</i> needs to be disabled in Tor Browser <i>about:config</i> settings to enable FoxyProxy, when it is installed from the Debian repository. This workaround is not required when installing FoxyProxy from addons.mozilla.org. https://forums.whonix.org/t/new-version-of-tbb-no-longer-accepts-foxyproxy-plugin</ref> 

Make the tbb-foxyproxy config file available to Tor Browser. <ref>
https://github.com/{{project_name_short}}/usability-misc
</ref> <ref>
https://github.com/{{project_name_short}}/usability-misc/blob/master/usr/share/usability-misc/tbb-foxyproxy/foxyproxy.xml
</ref>

{{CodeSelect|code=
cp /usr/share/usability-misc/tbb-foxyproxy/foxyproxy.xml /home/user/.tb/tor-browser/Browser/TorBrowser/Data/Browser/profile.default/
}}

Navigate to addons.mozilla.org.

<code>Tor Browser Menu</code> &rarr; <code>Tools</code> &rarr; <code>Add-ons</code>

Download and install the FoxyProxy add-on. <ref>This procedure is safe. Since Firefox 43, all add-ons on Mozilla's servers are signed and verified. https://wiki.mozilla.org/Add-ons/Extension_Signing</ref>

<code>Search: "foxyproxy"</code> &rarr; <code>Install: FoxyProxy Standard</code>

Restart Tor Browser.

When prompted, select <code>Restart now</code>.

After restart, the FoxyProxy icon should appear in the Tor Browser toolbar and be enabled. Check you can interact with it and change proxy settings as required.

After FoxyProxy is installed, you may see an app-armory warning you about the denied creation of dconf/user. The current Debian profile for Firefox does not yet include the modern temporary file location /run/user. However, this can be safely ignored since FoxyProxy never needs access to this dconf/user. However, if you'd like give the Tor Browser permission to use tempory file directory /run/user/ and not receive the warning, edit the file

{{CodeSelect|code=
lxsudo mousepad /etc/apparmor.d/home.tor-browser.firefox
}}

And uncomment line
{{CodeSelect|code=
# owner /run/user/[0-9]*/** rwkl,
}}
by removing the #.

To reverse this procedure and restore the default Tor Browser fingerprint:
* [[{{non q project name short}}|{{non q project name}}]]: It is best to use a VM snapshot taken before installing the add-on. 
* [[{{q project name short}}|{{q project name}}]]: FoxyProxy should be installed to a specific {{workstation_product_name}} AppVM set up for proxy purposes. The AppVM can be discarded at leisure.

If [[{{non q project name short}}|{{non q project name}}]] users did not take a snapshot prior to these changes, Tor Browser can be downloaded again. Alternatively, FoxyProxy can be removed via the <code>about:addons</code> &rarr; <code>Extensions</code> menu.

For further technical discussion of FoxyProxy, see the [https://forums.whonix.org/t/new-version-of-tbb-no-longer-accepts-foxyproxy-plugin {{project name}} forum].
}}
====== AnnealMail ======

Project uncontained and contains vulns: https://github.com/annealmail/annealmail/issues/12#event-1489053019

AnnealMail is a modified [https://en.wikipedia.org/wiki/Enigmail Enigmail] implementation built around the Codecrypt PQ-crypto suite. Some interesting features include encrypted subject lines. Until it is packaged for Debian<ref>https://github.com/annealmail/annealmail/issues/10</ref><ref>https://bugs.debian.org/849321</ref> it can be easily built from source.

1. Download the build dependencies and execute the commands<ref>https://github.com/annealmail/annealmail/blob/master/COMPILING
</ref> then install the resulting addon file from Thunderbird's extension tab.

2. Follow the instructions for setting up AnnealMail with Codecrypt<ref>https://github.com/annealmail/annealmail/blob/master/README.md</ref>

= Usenet =

== Quicksilver Lite in {{project name}} / creating a Mixmin nym ==
mirimir<ref>http://www.wilderssecurity.com/member.php?u=121604</ref> posted a guide to wilderssecurity.com forum, see [http://www.wilderssecurity.com/showthread.php?p=2210463 Installing Quicksilver Lite in {{project name}} and creating a Mixmin nym]. If you need help, try asking in that forum thread.

Please note that {{project name}} developers cannot answer support requests related to Quicksilver. This possibility has just been pointed out and wasn't tested in practice. It is a whole different thing than {{project name}} and very technical, difficult with many stumble points. Please look for another way, if you need support. Setting up Nym is not {{project name}} specific. Success stories, use cases, comments, improved documentation etc. however is welcome.



== grsecurity ==

=== About grsecurity ===
Linux kernel is not a secure OS, Linus himself made it pretty clear that he doesn't think highly of the "security community"<ref>http://www.networkworld.com/article/2274866/lan-wan/torvalds--fed-up-with-the--security-circus-.html</ref>. His threat model and a Tor User threat model don't have much in common. Good that Linux is open source and if we disagree with a policy or politics we can just patch or fork it... Grsecurity/PaX is the most comprehensive kernel patch providing much needed security hardening both for the kernel itself and for making userland protections more effective. 



Sadly Debian does not ship a grsecurity kernel. <ref>https://wiki.debian.org/grsecurity</ref> That means either a packager/maintainer of {{project name}} needs to compile them EVERY TIME there is a security update to the kernel (which is pretty frequently) or the {{project name}} users themselves need to compile and update their kernels. This is undesirable because kernel compilation is not set and forget, you need a bit of knowledge, it takes a while, especially in a resource restricted VM and you need to keep updated about new releases via mailing lists or similar because your software updater doesn't automatically handle custom kernels (even emerge in hardened gentoo doesn't). All this would most likely only result in users running old, outdated kernel versions.


Furthermore, for {{gateway_product_name}} and the Identity/Location TCB grsecurity only addresses a subset of security risks: It can mitigate ''some'' kernel vulnerabilities (and we only really care about the networking stack which is pretty secure judging from its track record). '''Maybe''' '''''some''''' (memory corruption) vulnerabilities in apt-get and Tor that aren't already mitigated by the existing userland hardening done by Ubuntu. It can't protect against backdoors or security issues related to design, policy or yet unknown classes of exploits. We feel that these relatively small advantages outweigh the issues introduced by using a custom compiled kernel. <s>We hope a binary distro will step forward and start using grsecurity. In that case we'll most likely switch {{gateway_product_name}} to that distro as soon as possible.</s>

For {{workstation_product_name}} the benefits are even more doubtful. To be effective grsecurity needs to lock down some functions that are needed by Xorg, JIT compilers... but we need those to be working. To solve this we'd have to write a restrictive RBAC policy which is far from trivial. We think accepting that {{workstation_product_name}} will be exploitable and acting accordingly (using snapshots and rolling back to clean state) is the right approach for a desktop system.

If you disagree with this assessment or have any suggestions how to improve the current situation please let us know.


Experts only: There is also Hardened Gentoo based {{gateway_product_name}}. Outdated, needs maintainer. See [https://www.whonix.org/wiki/Hardened_Gentoo_TG Hardened Gentoo TG] . 


Updates:
* There's Alpine Linux, where Tor is in testing. [http://bugs.alpinelinux.org/issues/1067 Package Request: Tor].</ref>
* Arch Linux offers a grsecurity kernel. <ref>https://wiki.archlinux.org/index.php/Grsecurity</ref>

Footnotes:

{{reflist|close=1}}

=== Installation ===
Try these instructions: [[grsecurity]]

Or...

'''Advanced users only!'''<br />
These instructions are not in a state yet where they are easily usable by anyone.

Install {{Code2|[https://github.com/{{project_name_short}}/genmkfile genmkfile]}}. See instructions for {{Code2|[[Dev/Build_Documentation/apparmor-profile-torbrowser|apparmor-profile-torbrowser]]}} but replace {{Code2|apparmor-profile-torbrowser}} with {{Code2|genmkfile}}.

Install {{Code2|[https://github.com/{{project_name_short}}/grsecurity-installer grsecurity-installer]}}. See instructions for {{Code2|[[Dev/Build_Documentation/apparmor-profile-torbrowser|apparmor-profile-torbrowser]]}} but replace {{Code2|apparmor-profile-torbrowser}} with {{Code2|grsecurity-installer}}.

To speed up compilation, you might want to assign additional CPU cores and more RAM to your virtual machine.

Run {{Code2|grsecurity-installer}} to download kernel sources, grsecurity patch, compile and install the grsecurity kernel.

{{CodeSelect|code=
sudo bash -x grsecurity-installer
}}

During {{Code2|make menuconfig}} you need to enable grsecurity.

TODO: expand


=TorChat=

== HowTo ==

=== Installation ===
'''EXPERIMENTAL'''<br />
Experimental in that it is difficult to install. Only use it in case you trust TorChat. There shouldn't be any anonymity leaks and it should be as safe as other onion services in general and in {{project_name}}.

Learn about [[Onion Services]] in {{project name}} first and learn how to set up the hidden webserver. This will ease following this guide.

==== On {{gateway_product_name}} ====
===== Step 1: open /usr/local/etc/torrc.d/50_user.conf =====
{{Open_/usr/local/etc/torrc.d/50_user.conf}}

===== Step 2: edit /usr/local/etc/torrc.d/50_user.conf =====
(all {{project name}} platforms)

Once inside {{Code2|/usr/local/etc/torrc.d/50_user.conf}}, scroll all the way to the bottom, and copy-paste the following text:

[[{{q_project_name_short}}|{{q_project_name}}]]: 

{{IP-of-q-ws-AppVM}}

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/torchat/
HiddenServicePort 11009 IP-of-q-ws-AppVM:11009
HiddenServiceVersion 3
}}

[[{{non q project name short}}|{{non q project name}}]]:

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/torchat/
HiddenServicePort 11009 10.152.152.11:11009
HiddenServiceVersion 3
}}

(all {{project name}} platforms) 

Save.

===== Step 3: make changes to /usr/local/etc/torrc.d/50_user.conf take effect =====
{{Reload Tor}}

===== Step 4: get your onion hostname =====
Find out your .onion hostname.

{{CodeSelect|code=
sudo cat /var/lib/tor/torchat/hostname
}}

===== Step 5: backup your Tor onion service private key =====
{{
Backups_Tor_Onion_Service_private_key
|private_key_file=/var/lib/tor/torchat/private_key
}}

==== On {{workstation_product_name}} ====
{{mbox
| type       = notice
| image      = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = No worries, this won't result in [[DoNot#Prevent_Tor_over_Tor_scenarios.|Tor over Tor]] thanks to {{project name}} [[Dev/anon-ws-disable-stacked-tor|anon-ws-disable-stacked-tor]] package on {{workstation_product_name}} which prevents this.
}}

===== Step 1: Install TorChat =====
Update your package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install TorChat.

{{CodeSelect|code=
sudo apt-get install torchat python-socksipy
}}

===== Step 2: Configure TorChat =====
Open the {{Code2|torchat.ini}} which is in the hidden folder {{Code2|/home/user/.torchat/torchat.ini}}. The folder {{Code2|~/.torchat/Tor}} can be ignored.

{{CodeSelect|code=
kwrite /home/user/.torchat/torchat.ini
}}

Look for the following line.

<pre>
own_hostname = <your onion hostname without the .onion ending>
</pre>

Replace it with your onion hostname. For example if your onion hostname is {{Code2|idnxcnkne4qt76tg.onion}} replace it enter {{Code2|idnxcnkne4qt76tg}}, so it looks like this:

<pre>
own_hostname = idnxcnkne4qt76tg
</pre>

Save.

===== Step 3: Qubers users only =====
{{
Qubes_Tor_Onion_Service_Firewall_Exception
|port=11009
}}

===== Step 4: Final Notes =====
Done.

<u>Note</u>, that it may take up to 30 minutes (or so?) until a fresh .onion domain gets reachable.

=== Starting ===
{{mbox
| type       = notice
| image    = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = It can take a while until a Tor onion service becomes reachable for the first time. Wait at least a few minutes before you believe it doesn't work.
}}

[[{{q_project_name_short}}|{{q_project_name}}]]:<br />
Qubes App Launcher (blue/grey "Q") -> {{workstation_product_name}} AppVM (commonly named {{Code2|whonix}}) -> TorChat Instant Messenger

[[{{non q project name short}}|{{non q project name}}]]:<br />
Start menu -> Applications -> Internet -> TorChat Instant Messenger

=== Uninstall ===
If you want to remove it...

On {{workstation_product_name}}.

{{CodeSelect|code=
sudo apt-get remove torchat
}}

On {{gateway_product_name}}.

{{Open /usr/local/etc/torrc.d/50_user.conf}}

And undo the changes in {{Code2|/usr/local/etc/torrc.d/50_user.conf}} on {{gateway_product_name}}.

{{Reload Tor}}

=== Debugging ===

In case it won't work for you.

Test if Tor is reachable on 10.152.152.10:9119.

{{CodeSelect|code=
/usr/bin/wget.anondist-orig 10.152.152.10:9119
}}

If it says.

<pre>
--2013-02-13 13:49:47--  http://10.152.152.10:9119/
Connecting to 10.152.152.10:9119... connected.
HTTP request sent, awaiting response... 501 Tor is not an HTTP Proxy
2013-02-13 13:49:47 ERROR 501: Tor is not an HTTP Proxy.
</pre>

It means, it is fine and the port is reachable.

Run torchat in a Terminal.

{{CodeSelect|code=
torchat
}}

The following output is an example, how it looks when everything is fine.

<pre>
~ $ torchat
(0) [config,470,main] python version 2.7.3 (default, Jan  2 2013, 16:53:07) [GCC 4.7.2]
(0) [config,477,main] script directory is /usr/share/torchat
(0) [config,478,main] data directory is /home/user/.torchat
./tor.sh: 6: ./tor.sh: tor: not found
(0) [tc_client,2083,startPortableTor] very strange: portable tor started but hostname could not be read
(0) [tc_client,2084,startPortableTor] will use section [tor] and not [tor_portable]
</pre>

If you are using [[Multiple {{workstation_product_name_short}}|Multiple {{workstation_product_name}}]], where the Workstation has another IP than {{Code|10.152.152.11}} you must edit the following line in torchat.ini.

<pre>
listen_interface = 10.152.152.11
</pre>

Did the hidden webserver example from the [[Onion Services]] page work for you? Try that first.

You also could try using the TorChat source package, which is still documented on the [[Deprecated]] page.

=== Technical Design ===

The [[Dev/anon-ws-disable-stacked-tor]] package prevents Tor over Tor.

=== Credits ===

Thanks to scarp for helping with the TorChat instructions!



= OnionCat =
== Introduction ==

* [[OnionCat| OnionCat, GarliCat: Tunnel TCP, UDP, ICMP or any other protocol through Tor or I2P; IPv6, VPN-like, TAP/TUN tunneling device]] 

|description=OnionCat, GarliCat: Tunnel TCP, UDP, ICMP or any other protocol through Tor or I2P; IPv6, VPN-like, TAP/TUN tunneling device

image=https://www.whonix.org/w/images/8/83/Onion-161611640.png

Introduction to OnionCat:

* [https://trac.torproject.org/projects/tor/wiki/doc/OnionCat torproject wiki about OnionCat] ([http://www.webcitation.org/6EQUoe9Cs w]) ([http://ea5faa5po25cf7fb.onion/projects/tor/wiki/doc/OnionCat onion])
* [http://www.cypherpunk.at/onioncat cypherpunk.at/onioncat] ([http://www.webcitation.org/6EQUqZawz w])
* [https://cryptoanarchy.org/wiki/OnionCat cryptoanarchy.org about OnionCat] ([http://web.archive.org/web/20120810015004/https://cryptoanarchy.org/wiki/OnionCat webarchive]; [http://www.webcitation.org/6EQUZky7n webcitation])

== Status ==
* OnionCat (Tor) will work with {{project_name}}. (Tested.)
* GarliCat (I2P) might partially work with {{project_name}}. (Untested.)

== Over Tor ==
OnionCat transports any protocol between endpoints inside the Tor network. All involved peers need to run OnionCat. It gives IPv6 addresses to Onion Services, making many applications possible.

IPv6 is currently disabled on {{gateway_product_name}}, because Tor doesn't support IPv6 yet (except for bridges), and because no one developed more than rudimentary IPv6 firewall rules for {{gateway_product_name}} yet. {{gateway_product_name}} firewall blocks all IPv6 traffic including local traffic by default. Anyway, that will not be an issue. IPv6 on {{workstation_product_name}}, where OnionCat will be running, is enabled. Since only OnionCat's underlying operating system requires IPv6, but not the Tor process there will be no problem. OnionCat on {{workstation_product_name}} will translate the IPv6 requests to IPv4 to the Tor process which is running on {{gateway_product_name}}. Therefore no IPv6 on {{gateway_product_name}} is required.

<u>On your {{gateway_product_name}}.</u>

If you want to read an introduction about onion services and to learn about about onion service security, see [[Onion Services]].

If you also want to run a hidden web server on the same .onion domain (nice for testing and learning Onion Services basics), see [[Onion Services]].

{{Open /usr/local/etc/torrc.d/50_user.conf}}

Add. <ref>Arbitrary choice of port to avoid conflicts with custom onioncat setups.</ref>

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/onioncat/
HiddenServicePort 8060 10.152.152.11:8060
HiddenServiceVersion 3
}}

Save.

{{Reload Tor}}

Reminder: To get your onion service url.

{{CodeSelect|code=
sudo cat /var/lib/tor/onioncat/hostname
}}

{{
Backups_Tor_Onion_Service_private_key
|private_key_file=/var/lib/tor/onionchat/private_key
}}

<u>On your {{workstation_product_name}}.</u>

[[Update]] your package lists

{{CodeSelect|code=
sudo apt-get update
}}

Install onioncat.

{{CodeSelect|code=
sudo apt-get install onioncat
}}

Start onioncat. Replace {{Code|address.onion}} with your actual onion service url from above.

{{CodeSelect|code=
sudo ocat address.onion -l 10.152.152.11:8060
}}

As of onioncat r555 (only applies to Jessie onwards) onioncat starts in unidirection 'client' mode by default. To accept incoming connections {{Code|-U}} must be used. Mutual authentication is also available in this newer version which is needed to ensure that the identities of all endpoints engaged in a transaction are verified. <ref>http://manpages.debian.org/cgi-bin/man.cgi?query=ocat&apropos=0&sektion=0&manpath=Debian+testing+jessie&format=html&locale=en</ref>

{{CodeSelect|code=
sudo ocat address.onion -U -l 10.152.152.11:8060
}}

Alternatively, if starting onioncat in 'client' mode run:
{{CodeSelect|code=
sudo ocat -R
}}
At least one node has to run as a 'server' with a Hidden service configured for contact to occur.

To enumerate your onioncat IPv6 address run:
{{CodeSelect|code=
sudo ocat -i address.onion
}}

==== Notes ====

===== Security =====
There are two possible ways to authenticate and control who is allowed to connect to you Onioncat instance and the applications running on top of it.

1. The simpler and more robust approach is to setup Tor to perform authentication of clients connecting to your Onion Service. If they do not possess a certain randomly generated cryptographic secret, they cannot connect to your Onion Service. 

For information on how to do this see [[Onion Services#Onion Service Authentication]].

2. The second approach does this process at the higher level through delegating authentication to Onioncat.

For official documentation on security read the reference at the end of this sentence. <ref>https://www.cypherpunk.at/onioncat_trac/wiki/Security</ref>

Onioncat Authentication Notes and Definitions:
* Bi-directional mode is what was used for OC since the beginning. That means that one established circuit (TCP session through Tor) is being used to send AND transmit packets. Thus, it is called bi-directional.

* Uni-directional mode means that there are two separate circuits: one for sending and one for receiving.

So what's the implications: <br />
Circuits are established through Tor and are identified and authenticated by the network through the onion hostname (= OC IPv6 address). But this 
authentication is just one-ended. That means that the client (the one initiating the circuit) can authenticate the server but the server can't 
authenticate the client. As a consequence the client could spoof its IP address. In Tor/OnionCat context, IP spoofing means to use any IPv6 address 
but not the one which is associated to the onion ID (that's actually what {{Code|-R}} does). Although this is technically no problem there's a security risk which 
could be that someone takes over the IPv6 address from someone else and could thereby attract (steal) packets. The risk is still very low.

Uni-directional mode addresses exactly that problem. It forces the server to not reuse an incoming connection but establish a new circuit to the supposed client. Thus spoofing is defeated because it requires for the client to own the private key as well.

Uni-directional mode is on by default since revision 556, but this change may be subject to change in future releases.

Uni-directional mode and {{Code|-R}} (i.e. starting onioncat in 'client' mode) are incompatible! That means an OnionCat using {{Code|-R}} will not be able to communicate with an OnionCat in uni-directional mode.

OnionCats with {{Code|-R}} can only talk to bi-directional OnionCats having {{Code|-U}} set as noted above.

Source / Credits of this chapter: <br />
These are Onioncat dev, Bernhard Fischer's words with modifications by the {{project name}} team. All credit goes to him.

===== Tunneling IPv4 =====
Many programs do not support IPv6 and so to use IPv4 with Onioncat, IPv4 will need to be tunneled over IPv6.<ref>https://www.cypherpunk.at/onioncat_trac/wiki/IPv4</ref> This option is preferred to Onioncat's native IPv4 forwarding designated by the -4 parameter, which is deprecated and could not have guaranteed the authenticity of the communicating endpoints as the tunneling method can.

Most operating systems should support IP-IP6 tunneling. IPv6 supports encapsulation of IPv4 or IPv6, hence, tunneling is not a big deal. An IP-IP6 tunnel is a point-to-point tunnel between two IPv6 nodes. The tunnel endpoints are virtual network interfaces. IP addresses are assigned to them and routing has to be set up as usual (as if those interfaces where ethernets). Before configuring a tunnel you need to know the two IPv6 addresses of the IPv6 nodes. Those will be the IPv6 OnionCat addresses. There are a few steps necessary on Linux. First insert the IPv6 tunneling kernel module, then setup the tunnel interface by connecting it to the two IPv6 addresses. Next configure the IPv4 addresses to the tunnel endpoints, bring them up and add the necessary routes (... and don't forget to update your firewall rules - but this is not needed with {{project name}} Workstation's default settings).

{{CodeSelect|code=
sudo su
modprobe ip6_tunnel
ip -6 tunnel add iptun0 mode ipip6 local fd87:d87e:eb43:1f53:c75:3b27:7adc:c9a5 remote fd87:d87e:eb43:8733:3338:21f6:a2b8:eebf
ifconfig iptun0 192.168.100.1 up
route add -net 192.168.100.0/24 dev iptun0
}}

On the other end do the same thing except that you have to swap the two IPv6 addresses and use another IP address on the tunnel endpoint, e.g. 192.168.100.2. If Tor, OnionCat, and the tunnel is up on both ends you should be able to ping the remote end.

===== Useful Commands =====
* Check connectivity between endpoints using ping:
{{CodeSelect|code=
 ping6 onioncat-address
}}

* Replies should come immediately if everything is working.


* To derive the OnionCat IPv6 address from your Onion Service address run: 
{{CodeSelect|code=
ocat -i onion.address
}}


* Running ifconfig can show helpful information on active network interfaces: 
{{CodeSelect|code=
sudo ifconfig
}}

===== Debugging =====
<u>On your {{workstation_product_name}}.</u>

To terminate onionat you could use.

{{CodeSelect|code=
sudo kill -sigint $(pgrep ocat)
}}

===== Miscellaneous =====
To make Onioncat to autostart with the system using the parameters listed above.
editing its configuration file:
{{CodeSelect|code=
sudoedit /etc/default/onioncat
}}

Enable the autostart comment by removing '#':
<pre>ENABLED=yes</pre>

Add your settings:
<pre>DAEMON_OPTS="Paramters go here"</pre>

== Over I2P ==

GarliCat over I2P might only work, if you use [[I2P|ip2 over Tor]].

There was the idea to create an [[Dev/Inspiration#I2PBOX|I2PBOX]], but it never came to live due to lack of community interest, which means GarliCat directly over I2P will not be supported by {{project_name}}.

As soon as I2P over Tor is working in {{workstation_product_name}}, you can probably follow the instructions on [https://cryptoanarchy.org/wiki/OnionCat cryptoanarchy.org] ([http://web.archive.org/web/20120810015004/https://cryptoanarchy.org/wiki/OnionCat webarchive]; [http://www.webcitation.org/6EQUZky7n webcitation]) without modifications.

= General Debugging Hints =
* There at multiple sources for issues, you might stumble upon.
* Therefore it is recommended, before you try using OnionCat with {{project_name}}, if that doesn't endanger you, try first to successfully test OnionCat without {{project_name}}.
* As soon as you learnt that, it eliminated one source for possible issues (OnionCat) and can start learning how to use it with {{project name}} (which might introduce new issues, but enhanced security will be your reward).
* You also have to learn first, how to use onion services with {{project_name}}, see [[Onion Services|hosting onion services]] for reference.

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]

=== Tor Access ===

'''These instructions break sending emails to other domains that are not riseup.'''

Some email services provide access via Onion Service addresses. This provides better end to end security properties for authenticating to the server and conceals when you check your inbox.

In Thunderbird go to:

Settings -> Preferences -> Account Settings

Server Settings Tab, set the IMAP address to:
imap.<address>.onion


Outgoing Server (SMTP) Tab, Edit:
smtp.<address>.onion


The service providers may or may not enable TLS/STARTTLS connection security for their Onion domain since it is redundant. Its best to leave turned on by default and only disable it if problems arise.

Leave your Default Identity with the clearnet domain to avoid confusing recipients when replying to you.

= Pidgin =
For instant messaging in {{project name}} you can install the Pidgin<ref>http://pidgin.im/</ref> Instant Messenger. It is a multi-protocol client, so you could run MSN, ICQ, IRC, AIM, XMPP/Jabber and many other protocols at the same time, even with several instances of the same protocol.

All of these chat systems are unsafe if not used together with [[Chat#OTR_encryption|OTR]]. Even when used with OTR, expect to be exposing your social graph. Privacy hackers isolate parts of the social graph by running several accounts for groups of people on each popular server, thus avoiding the insecure XMPP federation (adding people on servers that is not your own).

For more detailed documentation refer to the [http://developer.pidgin.im/wiki/Using%20Pidgin official Pidgin user guide].

You can install it using Start menu -> Applications -> System -> Terminal.

{{CodeSelect|code=
sudo apt-get update
}}
{{CodeSelect|code=
sudo apt-get install pidgin
}}

There is also a Torchat plugin available for pidgin [https://github.com/prof7bit/TorChat/downloads official libpurple-torchat pidgin plugin], which could be implemented to allow p2p encrypted end-to-end communications although there is no known documentation on getting this done specifically in {{project_name}}. It works seamless on standard pidgin/linux distro's with tor, the code is over a year without any changes/updates, hopefully because it simply works without any need for changes.

Some protocols that are problematic in context of privacy/anonymity are disabled by default. <ref>By the https://github.com/{{project_name_short}}/pidgin-improved-privacy package.</ref>

To get a list of those, you could run.

{{CodeSelect|code=
sudo dpkg-divert --list | grep pidgin
}}

To re-enable all of them, you could run.

{{CodeSelect|code=
sudo /var/lib/dpkg/info/pidgin-improved-privacy.prerm remove
}}

After a restart of Pidgin, the protocols will be available.

= OTR encryption =

Of course the issue of end-to-end encryption arises again. As we mentioned earlier, we have Off-the-record messaging<ref>https://otr.cypherpunks.ca/</ref> (commonly called OTR) for instant messaging, and Pidgin and many other instant messengers have support for that. There are several resources on how it works and how to use it on their web site. Basically all you need to do is choose "Start private conversation" in the OTR menu and a key will be generated automatically if you do not have one already. After that OTR will establish a private conversation if the other end's instant messenger supports it.

If you didn't authenticate your partner with something like a shared secret there can be a man in the middle recording your chat, even if you are using the same server (the server or the TLS connection to the server may be corrupted).

OTR and other Pidgin plugins are enabled in the "Tools menu -> Plug-ins" section. Simply check the appropriate box for enabling any plugin you want, and possibly you might also want to configure it by pressing the "Configure Plug-in" button. When this is done for the OTR plugin a window that can be used to manage your keys will open. The use of OTR is recommended as many instant messaging protocols normally sends your messages in plaintext. Force your friends to migrate to clients with support for OTR!

'''NOTE''': <code>/me</code> is '''not''' encrypted when used in a OTR private conversation! Also <code>/msg</code> in XMPP chatrooms is not – it goes through the chatroom server!

Read also those [http://www.cypherpunks.ca/otr/index.php#docs various other resources about OTR].

You can install it using Start menu -> Applications -> System -> Terminal.

{{CodeSelect|code=
sudo apt-get update
}}
{{CodeSelect|code=
sudo apt-get install pidgin-otr
}}
==== Jitsi ====
Jacob Appelbaum (Tor researcher) recommends<ref>https://jitsi.org/Main/News</ref> Jitsi<ref>https://jitsi.org/</ref> (this applies if _not_ using Tor). It supports OTR encryption and ZRTP and is available in Debian Testing. 

Jitsi supports push to talk.

Jitsi  is the most feature-rich Free Software VoIP client. The team behind it is very innovative, constantly focusing on adding new functionality. It supports many protocols and advanced features like Multi-party video conferencing - in which someone's client will be running into server mode for that purpose because of latency management.<ref>https://archive.fosdem.org/2013/schedule/event/hangout_conferences_with_jitsi/</ref>

Its stability leaves more to be desired however. Alpha stage clients are available for Android.

Unfortunately it is not usable with Tor, because the Tor network does not support UDP and because Jitsi does not support TCP for audio/video at time of writing (April 2014).

'''TODO''': write a guide on how to connect to a free public server, having a secure ZRTP encrypted conversation with someone using the same client (note: impossible as of April 2014 without revealing the ip numbers of the corresponding parties to both eavesdroppers and the server).

==== sflphone ====

Nathan Freitas (Tor Orbot developer) likes<ref>https://lists.torproject.org/pipermail/tor-talk/2013-February/027204.html</ref> sflphone<ref>http://sflphone.org/</ref>. Can be installed from Debian package sources.

It does not support OTR. You would have to keep that in mind and use another way to exchange encrypted text. This is not a reason, not to use it, if you are aware of that.

'''TODO''': research, does sflphone support push to talk?

'''TODO''': write a guide how to connect to a free public server, having a secure ZRTP encrypted conversation with someone using the same client.
==== OnionPhone ====
OnionPhone <ref>http://www.torfone.org/onionphone</ref> is the successor to TOR Fone, improving the ciphers used among other problems<ref>https://lists.torproject.org/pipermail/tor-talk/2013-February/027215.html</ref>. Repo here <ref> https://github.com/gegel/onionphone</ref>

The main improvement is that OnionPhone can now be used as a VoIP plugin that integrates it with with [https://www.whonix.org/wiki/Chat#TorChat TorChat], using the Tor network to protect and anonymize your communication in this mode. It is also the only mode that makes sense in terns of usability because otherwise its a command line utility.

OnionPhone works on Linux and Windows, with Android support planned.

Other modes of operation include using the Tor network as a decentralized and secure alternative for SIP signalling. The call streams are then initiated directly using either TCP or UDP (for NAT traversal). Note that metadata is not concealed in that mode. 

It can be run standalone with direct connections with OnionCat.

TODO: Encourage Debian Packaging
TODO: Build, test and document usage instructions with TorChat

==== linphone ====
===== Introduction =====
Linphone is one of the most feature-rich Free Software clients available, second only to Jitsi in that respect, but second to none is stability and performance from testing. It can also support conferencing (audio only as of 2014).<ref>http://www.linphone.org/docs/liblinphone/group__conferencing.html</ref> Additionally it has fully developed clients for all desktop and mobile operating systems.

Should an Android port of Onioncat ever become a reality by the Guardian Project, Linphone can be used for anonymous VoIP between all combinations of device form factors. There is headway on that front.<ref>https://github.com/guardianproject/ChatSecureAndroid/issues/495</ref>

===== Setup with {{project name}} =====
Technically, only one member of the chat party needs to configure a Tor Onion Service (be a callee). Others can run Onioncat in 'client' only mode (be ca caller). 

Bidirectional communication can only be established after the client party (caller) connects to the one running an onion service 'server' mode (callee), because the latter can accept incoming connections while the former cannot.

{| class="wikitable" style="background-color:#fff;text-align:center"
|- style="background-color: #f9f9f9"
| || callee || caller
|-
| Can make outgoing calls
| {{Yes}}
| {{Yes}}
|-
| Can initially receive incoming calls
| {{Yes}}
| {{No}}
|-
| Needs to host a Tor onion service
| {{Yes}}
| {{No}}
|-
| Difficulty setup
| style="background-color: {{Yellow}}"| medium
| style="background-color: {{Green}}"| easy
|}

===== Setup as Both, Callee or Caller =====
<div class="toccolours mw-collapsible mw-collapsed">
You only have to read this, if you want to use linphone as both, callee or caller. As a caller, you can only make outgoing calls. As a callee (that includes ability of being a caller), you can make outgoing calls and receive incoming calls. Only one of both calling parters has to follow these instructions. However, it doesn't matter if both calling partners follow these following instructions.
If you are interested, click on Expand on the right. 
<div class="mw-collapsible-content">
<u>On your {{gateway_product_name}}.</u>

If you want to read and introduction about onion services and to learn about about onion service security, see [[Onion Services]].

If you also want to run a hidden web server on the same .onion domain (nice for testing and learning Onion Services basics), see [[Onion Services]].

Open your {{Code2|/usr/local/etc/torrc.d/50_user.conf}}.

{{CodeSelect|code=
sudoedit /usr/local/etc/torrc.d/50_user.conf
}}

Add. <ref>Arbitrary choice of port to avoid conflicts with custom onioncat setups.</ref>

<pre>
HiddenServiceDir /var/lib/tor/linphone_service/
HiddenServicePort 64739 10.152.152.11 :64739
HiddenServiceVersion 3
</pre>

Reload Tor.

{{CodeSelect|code=
sudo service tor reload
}}

Reminder: To get your onion service url.

{{CodeSelect|code=
sudo cat /var/lib/tor/linphone_service/hostname
}}

Reminder: Backup your onion service key, in case you want to be able to restore it, on another machine, on a newer {{gateway_product_name}}, after hdd failure, etc. You can find it here and need sudo to access it.

<pre>
/var/lib/tor/linphone_service/private_key
</pre>

<u>On your {{workstation_product_name}}.</u>

Update your package lists

{{CodeSelect|code=
sudo apt-get update
}}

Install onioncat and linphone.

{{CodeSelect|code=
sudo apt-get install onioncat linphone
}}

Start onioncat. Replace {{Code|address.onion}} with your actual onion service url from above.

{{CodeSelect|code=
sudo ocat address.onion -U -l 10.152.152.11 :64739
}}

As of onioncat r555 (only applies to Jessie onwards) onioncat starts in unidirection 'client' mode by default. To accept incoming connections '''-U''' must be used. Mutual authentication is also available in this newer version which is needed to ensure that the identities of all endpoints engaged in a transaction are verified. <ref>http://manpages.debian.org/cgi-bin/man.cgi?query=ocat&apropos=0&sektion=0&manpath=Debian+testing+jessie&format=html&locale=en</ref>

Find out your onioncat IPv6 address.

{{CodeSelect|code=
ip addr show dev tun0 | sed -e's/^.*inet6 \([^ ]*\)\/.*$/\1/;t;d'
}}

Open Linphone settings and select IPv6. Apply and restart Linphone.
</div>
</div>

===== Setup only as Caller =====
<div class="toccolours mw-collapsible mw-collapsed">
You only have to read this, if you want to use linphone caller only. As a caller, you can only make outgoing calls. Only one of both calling parters can follow these instructions. If both calling partners would follow these instructions, would not be able to call each other.
If you are interested, click on Expand on the right. 
<div class="mw-collapsible-content">
<u>On your {{workstation_product_name}}.</u>

Update your package lists

{{CodeSelect|code=
sudo apt-get update
}}

Install onioncat and linphone.

{{CodeSelect|code=
sudo apt-get install onioncat linphone
}}

Start onioncat.

{{CodeSelect|code=
sudo ocat -R
}}

Open Linphone settings and select IPv6. Apply and restart Linphone.
</div>
</div>

===== Calling =====
<u>On your {{workstation_product_name}}.</u>

At this point you should have exchanged IPv6 addresses of the callee. To call someone put in the call box. You can keep {{Code|user}}. Must use brackets. Replace {{Code|onioncat IPv6 address}} with the actual IPv6 of your calling partner.

<pre>
user@[onioncat ipv6 address]
</pre>

===== Debugging =====
<u>On your {{workstation_product_name}}.</u>

To terminate onioncat you could use.

{{CodeSelect|code=
sudo kill -sigint $(pgrep ocat)
}}

===== Miscellaneous =====
To make Onioncat to autostart with the system using the parameters listed above.
editing its configuration file:
{{CodeSelect|code=
sudoedit /etc/default/onioncat
}}

Enable the autostart comment by removing '#':
<pre>ENABLED=yes</pre>

Add your settings:
<pre>DAEMON_OPTS="Paramters go here"</pre>

===== Credits =====
Credits go to [https://www.whonix.org/old-forum/index.php?action=profile;u=87 HulaHoop] for researching how to use Linphone with Tor for sharing instructions in [https://forums.whonix.org/t/voip-jitsi-mumble {{project name}} User Forum].

== Development Ideas ==
=== OnionCat ===
[[OnionCat]] could be useful if tunneling UDP and/or ICMP tunneling over Tor should be required. It should be avoided if possible, because it add complexity to the setup. Does it introduce more latency because connection always goes from onion service to onion service?

== OpenBazaar ==
OpenBazaar supports both TCP and UDP. The latter was added to aid those using it on the clearnet that had difficulties connecting from behind their routers. <ref>https://github.com/OpenBazaar/OpenBazaar/issues/795</ref> When using Tor you don't have to worry about that.

A [https://www.reddit.com/r/OpenBazaar/comments/2iusp4/openbazaar_tor_demo/ community demo] for OpenBazaar  was done with Tor by hosting seed nodes as Onion Services.

== Hosting ANY Onion Services ==
You can provide '''any''' server service, which relies on TCP, such as web servers, IRC servers, chat servers and so forth. UDP and IPv6 are not supported by the Tor network, but if required you could use [[OnionCat]] as a workaround.

== OnionCat ==
See [[OnionCat]].

 <ref>{{note}} IPv6 is not yet supported by Tor. Limited workaround: [[OnionCat]]</ref>

 <ref>Limited workaround: [[OnionCat]]</ref>

<ref>{{note}} [[OnionCat]]</ref>

== Syncthing with OnionCat ==
Syncthing is a libre software solution for private file synchronization.

This section will cover file syncing with peers inside the Tor network.

'''TO-DO: Test Syncthing without OnionCat since SOCKS support was added recently.'''<ref>These instructions for a Onion Service do not mention OnionCat as being needed: https://sin.thecthulhu.com/library/Syncthing_instructions.txt</ref>

1. Set up [[OnionCat]] on {{project name}} Gateway. All parties involved will need to configure a Onion Service with OnionCat because syncing is bidirectional. Make sure you can successfully ping all OnionCat addresses before proceeding.

{{Third_Party_Repository}}

2. Before adding the repo<ref>apt.syncthing.net</ref>, fetch the key and verify<ref>https://syncthing.net/security.html</ref> fingerprints.  '''Always check the fingerprint for yourself.''' The output at the moment is:

<pre>
pub  2048R/0xD26E6ED000654A3E 2014-12-29 Syncthing Release Management <release@syncthing.net>
      Key fingerprint = 37C8 4554 E7E0 A261 E4F7  6E1E D26E 6ED0 0065 4A3E
</pre>

Download key with scurl to home folder.

{{CodeSelect|code=
scurl -o syncthing-pubkey.asc https://syncthing.net/release-key.txt
}}

Check fingerprints/owners without importing anything.

{{CodeSelect|code=
gpg --keyid-format long --with-fingerprint syncthing-pubkey.asc
}}

If it looks good import into trusted.gpg.d.

{{CodeSelect|code=
gpg --no-default-keyring --keyring ./syncthing-pubkey.gpg --import syncthing-pubkey.asc
sudo cp syncthing-pubkey.gpg /etc/apt/trusted.gpg.d/syncthing-pubkey.gpg
}}
{{CodeSelect|code=
sudo sh -c 'echo deb http://apt.syncthing.net/ syncthing release > /etc/apt/sources.list.d/syncthing-release.list'
}}
{{CodeSelect|code=
sudo apt-get update -qq
}}
{{CodeSelect|code=
sudo apt-get install syncthing
}}

3. Launch Syncthing:
{{CodeSelect|code=
syncthing
}}

Do not close the running terminal or Syncthing will shutdown.
Answer 'No' if asked to 'Allow Anonymous Usage Reporting'.

{{Template:FoxyProxy}}

To open the WebGUI, open Tor Browser and paste:
{{CodeSelect|code=
http://127.0.0.1:8384/
}}

4. At this point Syncthing back-end should have generated your unique Device ID.
Go to:
<pre>
Actions > Show ID
</pre>

Share the Device ID along with your OnionCat address. As long as one side shares this information the other can add and find them.

5. Once ID information is exchanged, go to <pre>Add Device</pre> and paste the other endpoint's Device ID. Then under '''Addresses''' change ''dynamic'' to <pre>[OnionCat-address]:22000</pre> 

'''Note that you MUST write the OnionCat IPv6 address within brackets for it to work.''' 

Select  the ''default''  directory under '''Share Folders With Device'''.

6. Syncing more than two endpoints can quickly become tedious so select at least one node to be an '''Introducer''' by selecting the option. The Introducer node will inform the new device about all nodes attached to it.

7. Finally drag and drop any files you want to sync to the 'Sync' folder under your Home directory. 

Done.

Note: No one can connect to your swarm without you adding them but you may still want to make your virtual network more private. This is done using '''HiddenServiceAuthorizeClient''' - a Tor feature.

== Torrenting over OnionCat ==
This section will cover torrenting with anonymous peers inside the Tor network. This is a trackerless setup.

'''Seeding'''

1. Set up [[OnionCat]] on {{project name}} Gateway. All parties involved will need to configure a Onion Service with OnionCat because torrenting is bidirectional.

2. Next install qBittorrent: 
{{CodeSelect|code=
sudo apt-get install qbittorrent
}}

3. Create your torrent: <pre>Tools > Torrent creator</pre> Add the file/folder you want to share. Leave the Tracker information boxes empty. Insert your OnionCat IPv6 IP into the Comment section.

Check ''Start seeding after creation'' then create and save the torrent file.

4. Share the torrent file on your personal Onion Site blog or some other channel as you normally would.

'''Downloading'''

1. Add the torrent file in qBittorrent

2. Select the the torrent from the list and go to the ''General tab''. Copy the OnionCat IPv6 address from the Comment section.

3. Click the ''Peers'' tab and right-click into the empty tab.  Click ''Add a new peer...'' and paste the IPv6 address. Note that the default listening port for incoming connections is set to 6881 and nothing needs to be done.

Done.

For a private sharing environment you will need to configure Tor to use the HiddenServiceAuthorizeClient option. More on that [https://www.whonix.org/wiki/Onion_Services#Onion_Service_Authentication here].

=== Tunnel Freenet over OnionCat ===

Some Freenet users have successfully experimented with connecting over [[OnionCat|OnionCat]]. Note that all communicating parties need to set this up for this to work. Follow this [https://bluishcoder.co.nz/2016/08/18/using-freenet-over-tor.html guide] to connect to other Darknet peers. No connections to the public datastore possible with this method.<ref>https://emu.freenetproject.org/pipermail/devl/2016-August/039267.html</ref>

{{project_name}} specific caveats to the above instructions.

Adjust OnionCat to connect to the Gateway with socat.

'''TO-DO: Create and add socat template to all relevant onion service guides'''

== Pond ==

'''Removed because upstream dead.'''

Pond is a forward secure, asynchronous messaging system that uses Tor to conceal metadata. Pond messages not a record; they expire automatically a week after they are received.

Add Debian Experimental to repos sources lists.

{{CodeSelect|code=
sudo su -c "echo -e 'deb http://httpredir.debian.org/debian experimental main' > /etc/apt/sources.list.d/debian-experimental.list"
}}

{{Template:Apt-Pinning}}

Install Pond and its dependencies.

{{CodeSelect|code=
sudo apt-get update
sudo apt-get install golang libgtk-3-dev libgtkspell3-3-dev libtspi-dev
sudo apt-get -t experimental install pond
}}

Run Pond.

{{CodeSelect|code=
cd
mkdir gopkg
export GOPATH=$HOME/gopkg
$GOPATH/usr/bin/pond-client
}}

The server's file path:
/usr/bin/pond-server


Optionally set a passphrase and keep the default server selected.

For usage instructions read '''help --all''' to understand the options.

== HugePages ==

Huge memory pages improve performance for some virtualized workloads such as running databases.
They are not enabled by default in Linux because the amount of memory to be allocated this way depends on the different needs from one user/admin to another. <ref>https://bugzilla.redhat.com/show_bug.cgi?id=1173218#c12</ref>

On the host you need to activate the nr_hugepages setting in the proc filesystem:

<pre>
echo 1054 > /proc/sys/vm/nr_hugepages
</pre>

NOTE: To make the above value persistent, you'd need to set:

<pre>
echo "vm.nr_hugepages=1054" > /etc/sysctl.d/50_hugepages
</pre>

Then, `grep` for the HugePages_Total:

<pre>
grep -i HugePages_Total /proc/meminfo 
</pre>

Should show.

<pre>
HugePages_Total:    1054
</pre>

The total system RAM allocated as hugepages can be calculated as:

<b>2Mb * 1054 = 2108 ≈ 2GiB</b>

Then, boot a libvirt virtual machine with 2 GB memory with appropriate XML setting as noted in the example below:

<pre>
  <memory unit='KiB'>2000896</memory>
  <currentMemory unit='KiB'>2000000</currentMemory>
  <memoryBacking>
    <hugepages>
      <page size='2048' unit='KiB' nodeset='0'/>
    </hugepages>
  </memoryBacking>
  <vcpu placement='static'>8</vcpu>
</pre>


== Clipboard Sharing ==
SPICE allows accelerated graphics and clipboard sharing. The clipboard is disabled by default for security reasons <ref>So you don't accidentally copy for example a link to a website you visited anonymously to your non-anonymous host browser or vice versa.</ref> but could be enabled.

When [[KVM#Editing_an_imported_Machine.27s_XML_Configuration|editing using xml]], search for.

<pre>
<clipboard copypaste='no'/>
</pre>

And change to.

<pre>
<clipboard copypaste='yes'/>
</pre>


== KSM ==

The security assumptions about virtual environments is that each vm is a completely isolated instance that knows nothing about what's happening outside it. It posses a privacy problem for an isolated multi-workstation setup.

In a single workstation-to-gateway scenario, KSM is not problematic because technically, nothing going on, on the gateway, even if known would endanger privacy. However should someone run multiple workstation vms, each with the intent that they are all separated - each with its own internal network for isolation for example, then with KSM all similar activities or processes running in the other vms, would register to an attacker who has compromised one of them. For example, information that the same website has been visited in another vm too. This would allow cross-vm activity correlation.

Its not really a weakness unique to KSM, but a common problem shared by using the equivalent feature on other hypervisors too (Xen's TPS - Transparent Page Sharing). <ref>http://docs.openstack.org/security-guide/content/hypervisor-selection.html</ref>

Quote [https://staff.aist.go.jp/c.artho/papers/EuroSec2011-suzaki.pdf Memory Deduplication as a Threat to the Guest OS]:
<blockquote>
4.3 Detection of Downloaded Files
</blockquote>
<blockquote>
The memory disclosure attack can also be applied to find an opened file on a victim’s VM. We have tried to detect a logo file when Firefox shows a home page.
</blockquote>
<blockquote>
We confirmed that the Google logo file was detected if page caching is enabled on Firefox. When the page cache was set to 0, detection failed. If an attacker leads a victim to a malicious home page which includes an identifiable logo file, the attacker can detect the page view from the victim’s VM.
</blockquote>
<blockquote>
This disclosure attack is dangerous because it detects a page view even if the network is encrypted by TLS/SSL. Especially in a multi-tenant data center, this attack is serious, because it does not violate any SLA statements on cloud computing.
</blockquote>


== Wiping the storage used by a guest domain ==
A volume used by a domain can contain confidential data, hence it is necessary to wipe it before removal. Libvirt offers a helping hand for such cases:

<pre>
virsh vol-wipe <volume>
</pre>

which truncates and extends the volume to its original size. This in fact fills the file with zeroes. This ensures that data previously stored on volume is not accessible to reads anymore. After this, you can remove volume :

<pre>
virsh vol-delete <volume>
</pre>

Source <ref>http://wiki.libvirt.org/page/VM_lifecycle#Wiping_the_storage_used_by_a_guest_domain</ref>

=  Template:Install Backport =

{{Box|text=
[[Security_Guide#Updates|Upgrade]] your system as usual. <ref>
This makes later installation from backports less likely to break the package management.
</ref>

Create a file {{Code2|/etc/apt/sources.list.d/user.list}}. {{Open with root rights|
filename=/etc/apt/sources.list.d/user.list
}}

Add the following content.

{{CodeSelect|code=
deb http://ftp.us.debian.org/debian jessie-backports main contrib non-free
}}

Save.

Update your package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install a package from jessie-backports. Example.

{{CodeSelect|code=
sudo apt-get install -t jessie-backports {{{package}}}
}}

Note:

* Don't forget the <code>-t jessie-backports</code>, which does the trick here.
}}
= Mounting Shared Folders in KVM Guests =

Run the following command in terminal (Start Menu -> Applications -> System -> Terminal).

<pre>
sudo mount -t 9p -o trans=virtio shared /mnt/shared -oversion=9p2000.L
</pre>

To automatically mount this every time at boot, modify {{Code2|/etc/fstab}}.

{{Open_File|filename=
/etc/fstab
}}

Add.

<pre>
shared /mnt/shared    9p  trans=virtio,version=9p2000.L,rw    0   0
</pre>

Save.


=SELinux=

SELinux is more robust than Apparmor because its label based vs file-path based. But his comes at the expense of being difficult to write policies. The good news is if you are a KVM user and want to harden your GNU/Linux host, its as simple as enabling SELinux and libvirt will automatically take advantage of it without any further effort needed on your part.

These instructions apply to {{project name}} and could be easily replicated for your Debian host.
First disable Apparmor if you are using it. Both MAC systems cannot be run simultaneously run. This is not supported by LSM and may also be a source of conflicts. 

AppArmor is disabled, and the kernel module unloaded by entering the following<ref>https://help.ubuntu.com/12.04/serverguide/apparmor.html</ref>:


<pre>sudo /etc/init.d/apparmor stop
sudo update-rc.d -f apparmor remove</pre>


To enable SELinux follow these steps.<ref>http://debian-handbook.info/browse/stable/sect.selinux.html</ref> The cited guide also includes steps for writing custom policy for hardening.


<pre>
    # aptitude install selinux-basics selinux-policy-default
    # selinux-activate
    # reboot

    # sudoedit /etc/default/grub

    Replace all mention of apparmor in settings for GRUB_CMDLINE_LINUX with selinux=1 and the enforcing=1 parameter to the Linux kernel. The audit=1 parameter enables SELinux logging which records all the denied operations.

    Remove the line under it that starts with: GRUB_CMDLINE_LINUX_DEFAULT

    # update-grub
</pre>


= Updating Tor =

Tor was installed on {{project name}} according to [https://www.torproject.org/docs/debian#ubuntu official instructions for Ubuntu]. You can update Tor (and the rest of the system) using ''apt-get update'' and ''apt-get dist-upgrade''.

If you run in the following error message when running ''apt-get update'' on the Gateway...

<pre>W: GPG error: http://deb.torproject.org precise Inrelease: The following signature were invalid: Keyexpired 1346668560</pre>

...or into the following error message on the Gateway when running ''apt-get dist-upgrade'':

<pre>Warning: The following packages cannot be authenticated!
deb.torproject.org-keyring tor
Install these packages without varification?</pre>

...please use the workaround below. Please do not install without verification for your own safety!

Temporary fix. Run these two commands. (Check if they are still current and genuine in official instructions for Ubuntu.)

<pre>gpg --keyserver keys.gnupg.net --recv 886DDD89

gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add -</pre>

(If they fail for the first time, perhaps because you are on a slow network or slow Tor circuit, run them a few times until the succeed.)

,, Technical problem: The latest {{project name}} release is a few days ago and in meanwhile there is a new deb.torproject.org-keyring got renewed while the old torproject deb keys expired. Fixing the problem requires a new {{project name}} release. It will be fixed in 0.3.0. 


=Nymserver QuickSilver Mail How-To=

This guide is for QuickSilver Lite, a Freedom Software GUI for Mixmaster. QuickSilver Lite was written for Windows but is fully compatible with Wine. The paranoici Zax-type Nymserver is used for this example. Credit goes to {{project name}} user '''mirimir''' whose instructions this work is based on.<ref>http://www.wilderssecurity.com/threads/installing-quicksilver-lite-in-whonix-and-creating-a-mixmin-nym.344489/</ref><ref>https://archive.is/bNFah</ref>



<pre>

## Generate your GPG keypair using KGpg. Fill in the nym you chose for the Email field. Use something likely not taken:
KGpg -> Keys -> Generate Key Pair... ->

Name: John Doe (or any alias of choice)
Email: yournym@nymphet.paranoici.org
Keysize: 4096 bits
    
OK -> Enter passphrase for key -> OK.


## Import Nymserver key from KGpg.
KGpg -> Open Keyserver Dialog -> Search for 'send@nymphet.paranoici.org' -> Import


## Always check the fingerprint for yourself. The output at the moment is:

pub  4096R/0x5CE8D7B97340F3A7 2013-01-06 Nymserver <send@nymphet.paranoici.org>
      Key fingerprint = B91A FAEE 998D 5134 5AFE  E104 5CE8 D7B9 7340 F3A7


## In KGpg, highlight your key, and set Trust level on Nymserver key to 'Marginal' and sign it with your own key.

Right-click on Nymserver key -> Key Properties

Owner Trust: Marginally

-> Apply -> OK


Right-click on Nymserver key -> Continue -> Select your nym's secret key to use for signing -> OK -> Enter passphrase



## Download QuickSilver's signing keys with scurl to home folder.
scurl -ko quicksilver.asc https://www.quicksilvermail.net/quicksilver.asc

## Check fingerprints/owners without importing anything. 
gpg --keyid-format long --with-fingerprint quicksilver.asc

## Always check the fingerprint for yourself. The output at the moment is:

pub  4096R/0x1B04C05145FF11B1 2013-09-08 QuickSilver <admin@quicksilvermail.net>
      Key fingerprint = 6BC3 5E3D 7473 E416 F423  E845 1B04 C051 45FF 11B1

## Import key:
gpg --import quicksilver.asc

## To avoid ''unsafe ownership'' key warnings
gpg --fingerprint
chmod --recursive 700 ~/.gnupg



## Download archives.
wget -r --no-check-certificate --no-parent -A 'QSLite*.zip' https://www.quicksilvermail.net/qslite/
wget -r --no-check-certificate --no-parent -A 'QSLite*.zip.sig' https://www.quicksilvermail.net/qslite/
wget -r --no-check-certificate --no-parent -A 'QSAam*.zip' https://www.quicksilvermail.net/qsaam/
wget -r --no-check-certificate --no-parent -A 'QSAam*.zip.sig' https://www.quicksilvermail.net/qsaam/


## Move files into Home folder.
mv /home/user/www.quicksilvermail.net/qslite/QSLite*.zip /home/user
mv /home/user/www.quicksilvermail.net/qslite/QSLite*.zip.sig /home/user
mv /home/user/www.quicksilvermail.net/qsaam/QSAam*.zip /home/user
mv /home/user/www.quicksilvermail.net/qsaam/QSAam*.zip.sig /home/user


## Verify archive. Fingerprint should match the key above.
gpg --verify-options show-notations --verify QSLite*.zip.sig QSLite*.zip
gpg --verify-options show-notations --verify QSAam*.zip.sig QSAam*.zip


## Install Wine.
sudo apt-get install wine

## Run Wine to create its directories. Cancel Wine Mono Installer.
wine run

## Create folder for QS components and transfer them.
mkdir /home/user/.wine/drive_c/QS/
unzip QSLite*.zip -d /home/user/.wine/drive_c/QS/
unzip QSAam*.zip -d /home/user/.wine/drive_c/QS/

## Select 'Replace All' when prompted for duplicate files.
A

## Open Terminal and create links to allow QSL and QSA to use Debian gpg:
mkdir .wine/drive_c/QS/gpg-links
link '/home/user/.gnupg/pubring.gpg' '/home/user/.wine/drive_c/QS/gpg-links/pubring.gpg'
link '/home/user/.gnupg/secring.gpg' '/home/user/.wine/drive_c/QS/gpg-links/secring.gpg'

## Run QSL. This way is needed only for the initial run it applies to QSA too. Access QSL from the desktop shortcut afterwards.
cd /home/user/.wine/drive_c/QS
wine qsl.exe

## Setup QSL.
Setup -> Draw randomly in window until "OK" appears ... click "OK" -> Check: Create desktop shortcut | Email Address: yournym@nymphet.paranoici.org -> SMTP Server: gbhpq7eihle4btsn.onion -> Leave SMTP Proxy setings unchanged -> Leave HTTP Proxy setings unchanged -> Finish

(Note: Mixnym's SMTP Onion Service used. Tor Transport used - stream isolation unnecessary)


## Configure QSL.
Open Tools | Options.
...In General tab:
......Under "User Mode", check "Expert".
......Under "On Start-up", check "Open Template Dialog".
...In PGP tab:
......Check "PGP Public Key Encryption".
......For "Private Keyring", use "C:\QS\gpg-links\secring.gpg".
......For "Public Keyring", use "C:\QS\gpg-links\pubring.gpg".
......Click "Default key" and select it (will be just your new one).
......If desired, choose to cache private-key passphrases for five minutes or so.
...In Mix tab:
......Select "once a day" for "Update remailer stats".
...Click "Ok" to finish.
Open Tools | Stats manager.
...Click "Update".
...When you see "done!" click "Ok".
...If it stalls, there's something wrong with your Tor setup.
......Check with Firefox, and also check Tor config in Tools | Proxies.
Open Tools | Allpingers manager.
...Click "Update".
...When you see "done!" click "Ok".


Now you'll configure the message that QSL uses to create a Mixnym nym.
In the main compose pane, customize the message to look like the following:

Code:

Fcc: nyms
Host: gbhpq7eihle4btsn.onion
From: nobody@nowhere.net
Chain: *,*,*; copies=2;
To: send@nymphet.paranoici.org
Subject:

hsub: New Mail For Jude!

-----BEGIN PGP PUBLIC KEY BLOCK-----

mQINBFFP2l4BEACXJDUM6SxyjUk8K+MJ4fRJ5VMaE6hSsAD6n8eO04l9HMzSx26X
<snip>
wnOpR4sYYD9MFLura6+YiHWtT8ih
=ndP9
-----END PGP PUBLIC KEY BLOCK-----

~~

In the above:
...Replace "Jude" in "hsub: New Mail For Jude!" with your fake first name.
...Replace the public key block with your public key that you exported above. Get it by exporting it from KGpg then copy-paste the contents.
...Be very careful near line ends ... Unix vs DOS newline can be buggy here.
...The "~~" at the bottom, preceeded by two blank lines, is crucial!
Save as "nym create template".
...You can reuse it with edits for creating other nyms.
Click the PGP lock and signing icons.
......The mixnym server will only accept signed configuration requests.
Now click "Send" 
"PGP Enrypt to Recipients..." prompt will appear. 
...Choose the Nymserver key from the top pane then click "OK"
Enter your key passphrase when prompted to sign message.
After it finishes, you should see:

Code:

0 in message queue
0 in problem queue
2 sent

All mail sent!

If it worked, the next step is configuring QSA.
If it hangs, cancel out and go back through everything looking for errors.
Close QSL when you're done (and ignore the crash error that you may see).

You can't get a reply from the Nymserver until you configure QSA.


## Run QSA.
cd /home/user/.wine/drive_c/QS
wine qsa.exe

## Setup QSA.
Check: Create desktop shortcut... click "OK" 

If your Nymserver name and type is not listed you must add it first before you can add AAM subject lines encrypted to you.

Open Tools | Nymservers.
...New:
......Nymserver Domain: nymphet.paranoici.org.
......Type: Zax
...Click "OK" then "Done"
Open Tools | AAM Subject Lines.
...New:
...In AAM Subject Line Tab:
......Nym, select your nym's private-key".
......Subject (HSUB), use the one you set or "New Mail For Jude!" if you are following the example above.
...Click "OK" then "Done".
Only one AAM Subject Line can be configured to find your hsub. Be sure to enter it exactly as you did before or else QSA won't find it.
Click "Get Mail" from the main interface. Replies take a while.

## Clean-Up
rm -rf /home/user/www.quicksilvermail.net
rm QSLite*.zip
rm QSLite*.zip.sig
rm QSAam*.zip
rm QSAam*.zip.sig
rm /home/user/Desktop/"QuickSilver Lite.lnk"
rm /home/user/Desktop/"QuickSilver Aam.lnk"


</pre>

==From: Header Support==
For a list of remailers that accept ''From:'' headers.<ref>https://www.quicksilvermail.net/links.html</ref>

http://pinger.mixmin.net/from.html



= KVM GUI Instructions =

No longer applies as we are now using vm xml templates for a standard configuration. The rest of the instructions for shared folders and spice have been moved into a readme file distributed with the images.

<pre>
sudo apt-get update
sudo apt-get install virt-manager
</pre>

Make sure folder {{Code|/var/lib/libvirt/images/}} exists.

<pre>
sudo mkdir -p /var/lib/libvirt/images/
</pre>

Do not use {{Code|unxz}}! Extract the images using {{Code|tar}} to {{Code|/var/lib/libvirt/images/}}.

Before starting the new vm wizard we must create an internal isolated network that connects the workstation with the gateway.

Go to the VMM GUI --> Edit --> Connection Details --> Add button
Choose whonix as network name
Edit subnet range to 10.0.0.2/24
Uncheck the dhcpv4 option
Ignore anything to do with ipv6
Keep the default option of: Isolated Virtual Network selected and click finish.

The next steps may need more work to customize vm devices and clock to safe defaults. Work in this area not final.

Create a {{project name}} Gateway vm first and choose to edit it before installation.
Customize the first NIC that is included to be in default NAT mode.
Click to add hardware and chose another NIC.
This new NIC must have the newly created isolated virtual network 'whonix' selected as the network device. Finalize and launch.
Must enable disk controller as SATA
Must select qcow2 as storage format.

Create {{project name}} Workstation vm and  make sure you select the isolated int. network for the only NIC this machine has. Launch.
Disk Controller works only with IDE
Must select qcow2 as storage format

Don't forget to take snapshot.

Done!

-SPICE is enabled for graphics by default but needs a vdagent to be installed in the guest vms for accelerated 2D in vm to happen. Not included in workstation install by default which impacts performance greatly.

http://www.linux-kvm.org/page/SPICE

It should be safe for use unless you Adrelanos determine otherwise. 2D and 3D in VBox have an insecure architecture and even the manuals admit to this. 2D in VBox is not even available for anything but windows guests which is not recommended and insecure of course.  Everything Linux based is designed from the ground up with security considerations in mind.

Clock disabling for vms on host is recommended. Still haven't done it yet,  and it seems to need command line.

== Enabling SPICE == 
SPICE allows accelerated graphics and clipboard sharing. Its implications for security are an open question that needs a detailed answer rather than a vague clear cut one.

1. Enable SPICE by selecting it from the VMM GUI. (It is the default option if you decide not select VNC when creating the VM).
 
Not enabling SPICE from the beginning, will prevent the spice channel device from being added which impacts performance. To fix this add a channel device and select SPICE. This steps is not necessary if you leave the defaults as they are at the beginning.

2. QXL is the GPU model that should be attached.

3. Install vdagent in guest and reboot.

== .qcow file size too big? ==
'''Short:''' <br />
It won't really take up 101 GB. Just ~ 2.6 GB. This is an issue with file managers, not {{project_name}}.

'''Long:''' <br />
<ref>
Don't get fooled by {{Code|ls}} or usual GUI file managers. We're using [http://en.wikipedia.org/wiki/Sparse_file sparse files]. When you are using a reasonable modern file system - which you most likely do - it won't use up a lot space. You can check this for yourself.

<pre>
du -h --apparent-size {{gateway_product_name}}-8.2.qcow2
101G    {{gateway_product_name}}-8.2.qcow2
du -h {{gateway_product_name}}-8.2.qcow2
2.6G    {{gateway_product_name}}-8.2.qcow2
</pre>

This is tested. If you don't have 500 GB free space, you can have 10 copies if {{gateway_product_name}}-8.2.qcow2.
</ref>

== KVM Shared Folders ==
To move data between the guest and host follow these steps:

1. Set the following settings for shared folders in virt-manager:

''The file sharing mode 'mapped' is just an example, using squash or passthrough is possible by selecting them from the drop down menu.''

Driver:Default

Mode: Mapped



Source Path: [This is the path of the folder on the Host you are sharing with the Guest]

Target Path: [A custom tag for the shared directory that is used when running the mounting commands within the guest. for example: /tmpshare]


2. Run terminal as root in Guest then use the following command:

mount -t 9p -o trans=virtio [mount tag] [mount point] -oversion=9p2000.L

Mount tag is: /tmpshare

Mount point is the path of the directory that you will share in the Guest with the Host. If it doesn't exist you must create that folder.

Note: you replace the parentheses in the command, they are just a placeholder in this example and should not be typed in.

3. To automatically mount this every time at boot, add the following to your guest's /etc/fstab:

sudoedit /etc/fstab
[mount tag] [mount point]    9p  trans=virtio,version=9p2000.L,rw    0   0

= cpfpy =
Debugging start command.

<pre>
sudo service control-port-filter-python start
</pre>

Debugging stop command.

<pre>
sudo service control-port-filter-python stop
</pre>

To find any eventual leftovers, stale processes, try this.

<pre>
ps aux | grep cpfpd
</pre>

or

<pre>
ps aux | grep python
</pre>

On the gateway, talk to cpfpy directly.

<pre>
telnet 10.152.152.10 9052
</pre>

To check if the port is free, if cpfpy really has shut down.

<pre>
sudo lsof -i :9052
</pre>

<pre>
COMMAND   PID       USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
cpfpd 27653 debian-tor    4u  IPv4  73153      0t0  TCP 10.152.152.10:9052 (LISTEN)
</pre>


= Footnotes =
[1] http://wiki.qemu.org/Documentation/9psetup#Starting_the_Guest_using_libvirt
{{reflist|close=1}}

= VirtualBox Guest Additions =

== Introduction ==

Written and tested with {{project name}} 0.2.1 (Ubuntu precise). Many things can go wrong and none or the very least of them will be caused by {{project_name}}. This has only limited support by the {{project name}} developers, because 1. it is not recommended for security reasons and 2. the guest additions related bugs and instructions are somewhat out of the scope of the {{project name}} project.

Installation is somewhat difficult and no packages exist. Just search the internet and you'll see, that loads of people having issues installing the VirtualBox guest additions. People having problems for years. VMware is of no alternative, people are also having trouble installing the VMware tools into Linux guests. The issue with the guest additions is ridiculous. For years no solution has been found. With each kernel update, recompilation is required, and quite often, due to some updates, complication becomes difficult or impossible for a long time.

Also see article, [[http://www.phoronix.com/scan.php?page#news_item&px#OTk5Mw|The VirtualBox Kernel Driver Is Tainted Crap]].

If you are having trouble, than in most cases not because of {{project_name}}. The {{project name}} setup is a regular Ubuntu Linux and VirtualBox. You can try asking the regular VirtualBox and Ubuntu resources if you have trouble.

= TorChat source package =

== HowTo ==

'''EXPERIMENTAL''' Experimental as in it is difficult to install. Only use it in case you trust TorChat. There shouldn't be any anonymity leaks and it should be as safe as other onion services in general and in {{project_name}}.

Learn about [[Onion Services]] in {{project name}} first and learn how to set up the hidden webserver. This will ease following this guide.

On {{gateway_product_name}}.

Open your {{Code2|/usr/local/etc/torrc.d/50_user.conf}}.

<pre>
sudoedit /usr/local/etc/torrc.d/50_user.conf
</pre>

Add.

<pre>
HiddenServiceDir /var/lib/tor/torchat_service/
HiddenServicePort 11009 10.152.152.11:11009
HiddenServiceVersion 3
</pre>

Save. Reload Tor.

<pre>sudo service tor reload</pre>

On {{gateway_product_name}}.

Install dependencies.

<pre>sudo apt-get install python python-wxgtk2.8</pre>

Get your onion address.

<pre>nano /var/lib/tor/torchat_service/hostname</pre>

Backup your key, if you want to ever restore it one another machine, a newer {{workstation_product_name}} or after hdd failure.

<pre>/var/lib/tor/torchat_service/private_key</pre>

Download the latest Python version of TorChat source code, for example as time of writing torchat-source-0.9.9.553.zip - Python source code (classic standalone 0.9.9 version) from (https://github.com/prof7bit/TorChat/downloads) and store it in ''/home/user''.

Unpack.

<pre>unzip torchat-source-0.9.9.553.zip</pre>

Get into the torchat source folder. For example.

<pre>cd /home/user/torchat-source-0.9.9.553/</pre>

Get into the src folder.

<pre>cd src</pre>

Get into the Tor folder.

<pre>cd Tor</pre>

Rename tor.sh.

<pre>mv tor.sh backup_tor.sh</pre>

Go back to the src folder.

<pre>cd ..</pre>

Create torchat.ini.

<pre>nano torchat.ini</pre>

Add the following content.

<pre>[client]
listen_interface = 10.152.152.11 
listen_port = 11009
own_hostname = <your onion hostname without .onion>

[tor]
tor_server = 10.152.152.10
tor_server_control_port = 9154
tor_server_socks_port = 9154

[tor_portable]
tor_server = 10.152.152.10
tor_server_control_port = 9154
tor_server_socks_port = 9154</pre>

Make torchat executable.

<pre>chmod +x torchat.py</pre>

Run torchat.

<pre>./torchat</pre>

=== Alternative ===

After installing the dependencies we could also force install the torchat deb package.

<pre>sudo dpkg -i --force-depends torchat-0.9.9.553.deb</pre>

And then configure the files inside ''/home/user/.torchat''. I don't know if that may be the better way.

= Mixmaster =

== MX capable DNS resolver ==

No longer required.

Mixmaster needs to resolve MX DNS records, [https://trac.torproject.org/projects/tor/ticket/7829 while Tor does not support that]. We have to install a DNS resolver capable of doing that. It still comes with caveats.

Required knowledge:

* Introduction chapter of [[Secondary DNS Resolver]]

The [[Secondary DNS Resolver#example-with-cznic-labs-dns-resolver|Example with CZ.NIC Labs DNS resolver]] worked in this case.

Security considerations when replacing the system wide DNS resolver:

<ul>
<li>The third party DNS resolver traffic goes through its own circuit, which is good.</li>
<li><p>All (custom installed) applications not configured to use a SocksPort (see [Stream Isolation]), would resolve their DNS through the system wide DNS resolver, which would be the third party resolver, giving too much power to it, because it is always the same, only one service provider, not changing like Tor circuits but static. ## Install Postfix ##</p>
<p>sudo apt-get install postfix ## configure postfix as sattelite system, default settings</p></li></ul>

Technical background: Mixmaster requires either - a) An (open) smtp server SMTPRELAY in ''/etc/mixmaster/remailer.conf''. Unfortunately, I haven't found any open smtp server (search term: open relay). A mailserver where the user registers first would probably work, but this would defeat the original idea: sending e-mails without depending on registration. Or, - b) a mta (mail transfer agent), which speaks to the remailer directly. '''TODO''': Are there enough Tor exit relays, which allow the SMTP port and does their ISP allow to speak SMTP? If there are too few servers, it could be bad for anonymity.

Open ''/etc/postfix/main.cf''.

<pre>lxsudo mousepad /etc/postfix/main.cf</pre>

Replace the content with the following.

<pre># See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

myhostname = host.localdomain
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
mydestination = host, host.localdomain, localhost.localdomain, localhost
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_command = 
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = loopback-only
inet_protocols = all

relayhost = 1.1.1.1
#relayhost = 2.2.2.2</pre>

== Debugging Postfix ==

Looking into the mail log.

<pre>tail -f /var/log/mail.info</pre>

Should contain something like this.

<pre>
<date> <time> debian postfix/pickup[id]: id2: uid=1000 from=<user>
<date> <time> debian postfix/cleanup[id]: id2: message-id=<id3.id4@host.localdomain>
<date> <time> debian postfix/qmgr[id]: id2: from=<user@host.localdomain>, size=30000, nrcpt=1 (queue active)
<date> <time> debian postfix/smtp[300]: id2: to=<remailer@breaka.net>, relay=mail.breaka.net[202.75.54.8]:25, delay=30, delays=0.30/0.01/30/3.0, dsn=2.0.0, status=sent (250 OK id=id5-id6-id7)
<date> <time> debian postfix/qmgr[id]: id2: removed
</pre>

Reading local mail.

<pre>## Either with cli tool mail.
mail

## Or using gui tool Icedove (Debian version of Mozilla Thunderbird)
## using movemail.</pre>

If all went well, there will be no local mail. Only error messages result in local mails.

= Bugs =

* In {{project name}} 0.4.5, due to a [https://trac.torproject.org/projects/tor/ticket/7668 Tor Browser upstream bug] (they forgot to update the changelog) and because the keyserver is/was down, the torbrowser and whonixcheck script in {{project name}} can no longer find out which Tor Browser version is locally installed. ([https://sourceforge.net/p/whonix/discussion/general/thread/6122990d/ {{project name}} Bug Report]) The [[TorBrowser#update-tor-browser|Update Tor Browser]] chapter contains a workaround and a fix is available for testers.

= Attack matrix in different order =

<table>
<thead>
<tr class="header">
<th align="left">attack</th>
<th align="left">TBB</th>
<th align="left">TBB in a VM</th>
<th align="left">Tails</th>
<th align="left">Tails in a VM</th>
<th align="left">{{project_name}} Standard Download version host+vm+vm</th>
<th align="left">{{project_name}} Physical Isolation</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">(1) Protocol IP leak</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(2) exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="odd">
<td align="left">(3) exploit + root exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(4) root exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">safe</td>
</tr>
<tr class="odd">
<td align="left">(5) exploit + vm exploit + Unsafe Browser</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(6) exploit + vm exploit + exploit against physically isolated {{gateway_product_name}}</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
<tr class="odd">
<td align="left">(7) vm exploit</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">safe</td>
</tr>
<tr class="even">
<td align="left">(8) vm exploit + exploit against physically isolated {{gateway_product_name}}</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">safe</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
<tr class="odd">
<td align="left">(9) exploit against Tor process</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
<tr class="even">
<td align="left">(10) attack against the Tor network</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
<td align="left">fail</td>
</tr>
</tbody>
</table>

= E-Mail Notification =

Users, who have an (anonymous) sourceforge.net account, could go to the [https://sourceforge.net/projects/whonix/ {{project name}} sf.net Project Page], scroll down to ''Update Notifications'' and hit the ''Subscribe to Updates'' button. They would receive notifications about new releases sent to their (anonymous) [E-Mail] address.

There is currently no way for users to subscribe to sf.net blogs or wiki, but such a feature [https://sourceforge.net/p/allura/tickets/5702/ has been requested].

== Sourceforge.net E-Mail Notification ==

Didn't work reliable.

E-mail notification: For users having an account on sf.net, there is on [https://sourceforge.net/p/whonix/code/ sf.net] git is an [[E-Mail]] subscribe button: '''M'''.

This is an example how such a mail could look like:

''experimental: comment by adrelanos http://sourceforge.net/p/whonix/code/ci/a1740dfcd391cedfa625d72b990b2a587620df30/''

''experimental: {{workstation_product_name}}_packages: added gtk3-engines-oxygen by adrelanos http://sourceforge.net/p/whonix/code/ci/7375070a7986230028bf4e82a6ab3ecb420bfd60/''

''---''

''Sent from sourceforge.net because you indicated interest in https://sourceforge.net/p/whonix/code/''

''To unsubscribe from further messages, please visit https://sourceforge.net/auth/prefs/''

= Restrict Flash Settings =
'''You can skip this chapter. It is no longer of use, because if you use BetterPrivacy as recommended above, you won't need this.'''

Flash applications can set cookies, so-called Local Shared Objects (LSO), independently of the browser's settings. These cookies are able to save data up to 100 Kb. Usually, they save settings but they may be used to track surfers as well.

In order to manage the settings of your Adobe Flash Player, Macromedia offers a [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager.html Flash application] on its website. There you may e.g. configure the rules concerning the data storage and the rights for using camera and microphone. The settings are spread over several flash applications. Deactivate all functions that allow sharing and saving of data. The storage of LSOs may be deactivated on the [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager03.html Global Storage Settings panel].

Hint: Only in case you previously deactivated JavaScript: You must have Javascript enabled for adobe.com and macromedia.com temporary to run the Flash application. 

[[Image:flash1.png|none]]

Furthermore, the cookies already saved have to be deleted. This functionality may be found on the [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager07.html Website Storage Settings panel].

[[Image:flash2.png|none]]

Personal side note: you see how ridiculous that plugin is, if the usage of the Flash settings manager depends on their website being reachable.

= Build Documentation dpkg-source commit =
To dpkg commit changes, run the debian upstream tarball creation script.

<pre>
./help-steps/make-debian-package-upstream-tarball
</pre>

Then run.

<pre>
dpkg-source --commit
</pre>

When it asks "Enter the desired patch name:" just enter anything you wish, for example "buildconfig". In the following window, you don't have to fill out anything. Just save and close the editor. <ref>This will create a Debian quilt patch.</ref> You only have to do this once and won't be asked again to do this, unless you add another change which needs to be dpkg-source committed.

If you want to undo the dpkg-source committed change, check the contents of the {{Code|.pc}} and the {{Code|debian/patches}} folder and delete it.
= Build Documentation - Override {{project name}} Version =
Since the {{project name}} debian package version number is auto derived from {{Code|git describe}} and used for [[Download#{{project_name}}_Version_Check_and_{{project_name}}_News|{{project_name}} News]] download, it is recommended to override it. <ref>Alternatively, you could deactivate or override [[Download#{{project_name}}_Version_Check_and_{{project_name}}_News|{{project_name}} News]] in the whonixcheck script and manually stay on top of news.</ref> You could add a file to {{Code|buildconfig.d}}, for example {{Code|buildconfig.d/50_version}} and add for example.

<pre>
temp="$WHONIX_BUILD_CLOSEST_GIT_TAG"

## Using `export`, so whonix_shared/usr/share/whonix/chroot-scripts-post.d/70_log_build_version can read it.
export WHONIX_BUILD_WHONIX_VERSION_NEW="$(echo "$temp" | sed 's/-/./g')"

echo "WHONIX_BUILD_WHONIX_VERSION_NEW: $WHONIX_BUILD_WHONIX_VERSION_NEW"

WHONIX_BUILD_NEW_CHANGELOG_VERSION=""$WHONIX_BUILD_WHONIX_VERSION_NEW""-debpackage""$WHONIX_BUILD_NEW_DEB_REVISION_VERSION""

echo "WHONIX_BUILD_NEW_CHANGELOG_VERSION: $WHONIX_BUILD_NEW_CHANGELOG_VERSION"
</pre>

While building, check if WHONIX_BUILD_NEW_CHANGELOG_VERSION looks sane. <ref>For example {{Code|WHONIX_BUILD_NEW_CHANGELOG_VERSION: 2:6.13.g4218c564e556cb68a3f18dc4040db5353690706c}} does not look sane, but {{Code|WHONIX_BUILD_NEW_CHANGELOG_VERSION: 2:6-debpackage1}} looks sane.</ref>

If you added a new file to {{Code|buildconfig.d}}, for example {{Code|buildconfig.d/50_target_arch}}, those have to be dpkg-source committed before building {{project_name}}. Otherwise you'll get an error message. (Which looks like this:<ref name=dpkgcommit>
<pre>
 dpkg-source -b Whonix
dpkg-source: info: using source format `3.0 (quilt)'
dpkg-source: info: building whonix using existing ./whonix_138adretemp.4.gd3d4f5fa9e18fddafdf5b09b428ba04dfb2a6d1e.orig.tar.gz
dpkg-source: info: local changes detected, the modified files are:
 Whonix/buildconfig.d/50_target_arch
dpkg-source: error: aborting due to unexpected upstream changes, see /tmp/whonix_138adretemp.4.gd3d4f5fa9e18fddafdf5b09b428ba04dfb2a6d1e-debpackage1.diff.fIiBKC
dpkg-source: info: you can integrate the local changes with dpkg-source --commit
dpkg-buildpackage: error: dpkg-source -b {{project name}} gave error exit status 2
debuild: fatal error at line 1361:
dpkg-buildpackage -rfakeroot -D -us -uc -sa failed
++ error_handler_general
++ local return_code=29
++ rm --force /etc/apt/sources.list.d/whonixtestingtemp.list
++ rm --force /etc/apt/apt.conf.d/90whonix-build-confold
+++ caller
++ echo '
BASH_COMMAND: sudo -E -u user debuild -p"gpg             --no-default-keyring             --homedir "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"             --default-key "$DEBEMAIL"
            " -sa
return_code: 29
ERROR ./build-steps.d/1200_create-debian-packages: | caller: 173 ./build-steps.d/1200_create-debian-packages
'

BASH_COMMAND: sudo -E -u user debuild -p"gpg             --no-default-keyring             --homedir "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"             --default-key "$DEBEMAIL"
            " -sa
return_code: 29
ERROR ./build-steps.d/1200_create-debian-packages: | caller: 173 ./build-steps.d/1200_create-debian-packages

++ exit 1
</pre>
</ref>).

= {{project name}} 0.5.6 Download Matrix =
<big>Version: <span style="color: green">{{Version}}</span></big>

'''Note:''' You need to download both Gateway and Workstation virtual machine images.

{| class="wikitable" style="text-align: center;background-color: #fff"
|- style="background-color: #f9f9f9"
| style="height: 47px;"|
| style="white-space: nowrap; width: 137px;"|'''{{gateway_product_name_short}}'''
| style="white-space: nowrap; width: 137px;"|'''{{workstation_product_name}}'''
| style="white-space: nowrap; width: 140px;"|'''[[Hide Tor and {{project name short}} from your ISP|Anonymous Download]]<br /> possible <ref name=anonymousdownload>By using the [https://www.torproject.org/download/download-easy.html.en Tor Browser Bundle] (TBB). For an introduction, see [[Tor Browser]]. See also [[Hide Tor and {{project name short}} from your ISP]].</ref>'''
| style="width: 135px;"|'''[[Download Security]]<br /> without [[#Verify the {{project name}} images|Verification]]'''
| style="width: 135px;"|'''[[Download Security]]<br /> with [[#Verify the {{project name}} images|Verification]]'''
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:HTTP.png|40px]] {{Anchor|signature}}
| <html><a href="http://sourceforge.net/projects/whonix/files/whonix-</html>{{Version}}<html>/{{gateway_product_name_short}}.ova/download" target="_blank">Download</a></html>
| <html><a href="http://sourceforge.net/projects/whonix/files/whonix-</html>{{Version}}<html>/{{workstation_product_name_short}}.ova/download" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:Button_sig.png|25px]]
| white-space: nowrap;"|<html><a href="/download/</html>{{Version}}<html>-sig/{{gateway_product_name_short}}.ova.sig">OpenPGP Signature</a></html>
| white-space: nowrap;"|<html><a href="/download/</html>{{Version}}<html>-sig/{{workstation_product_name_short}}.ova.sig">OpenPGP Signature</a></html>
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:Crypto_key.png|25px]]
| colspan="2"|Verify the images using the [[{{project name short}} Signing Key|Signing Key]]
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:btorrent-icon.png|25px]]<ref>Torrent clients known to work: transmission, Vuze, Deluge. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="/download/</html>{{Version}}<html>-torrent/{{gateway_product_name_short}}.ova.torrent">Torrent Download</a></html>
| <html><a href="/download/</html>{{Version}}<html>-torrent/{{workstation_product_name_short}}.ova.torrent">Torrent Download</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl>It is at least as secure as [[SSL]] and [https://en.wikipedia.org/wiki/SHA-1 SHA-1], better than plain http. This is because you get the torrent file or magnet link over https and the torrent/magnet client checks the SHA-1 checksum at the end. Using OpenPGP verification would be safer.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:Magnet_icon.svg.png|20px]] <ref>Magnet link clients known to work: gtk-gnutella. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="magnet:?xt=urn:btih:fba5ace7a163afae54aa1677cf92540a38d5914c&dn={{gateway_product_name_short}}.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2F{{gateway_product_name_short}}-0.5.6.ova">Magnet Link</a></html>
| <html><a href="magnet:?xt=urn:btih:7255075def146b6f5d7b6e23121e1e5a5bedf13d&dn={{workstation_product_name_short}}.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2F{{workstation_product_name}}-0.5.6.ova">Magnet Link</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl />
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"
| style="background-color: #f9f9f9"| [[File:template_source.png|25px]]
| colspan="2"|[[Dev/Build Documentation|Build from source code]]
| See [[Dev/Build Anonymity|Build Anonymity]]
|colspan="2" style="background-color: {{Green}}"| Excellent <ref>When you build from source code, audit the source code for being non-malicious and reasonably bug free, you do not have to [[Trust]] the developers, the website or the SSL certificate authorities.</ref>
|}

= XChat =
{{Old-Stable-0.5.6}}

All XChat plugins have been deactivated (hardening) and moved to /usr/lib/xchat/plugins.disabled. If you really need a plugin, such as perl for SASL, you can use the example below.

<pre>sudo mv /usr/lib/xchat/plugins.disabled/perl.so /usr/lib/xchat/plugins/</pre>

= Manually updating Tor Browser ({{project_name}} 0.5.6) =
{{Old-Stable-0.5.6}}

(1) Go to https://www.torproject.org/ and/or http://idnxcnkne4qt76tg.onion/ and download the Tor Browser Bundle for Linux 32 bit. Store it in ''/home/user/''.

(2) Read https://www.torproject.org/docs/verifying-signatures.html.en and/or http://idnxcnkne4qt76tg.onion/docs/verifying-signatures.html.en and learn about gpg verification.

(3) Go to https://www.torproject.org/docs/signing-keys.html.en and/or http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en to get the gpg keys.

(4) Verify the Tor Browser Bundle download.

(5) Go into ''/home/user/'' with the file manger. (Dolphin)

(6) Extract the Tor Browser Bundle. Right click on the downloaded archive -> extract -> extract archive here.

(7) In case you downloaded another version than ''en-US'', rename the tor-browser_''lang'' folder to ''tor-browser_en-US''. This is important, because the paths in the following script are hardcoded.

(8) Go into the ''/home/user/tor-browser_en-US'' folder.

(9) Delete ''start-tor-browser'' or move it to the ''/home/user/tor-browser_en-US/Docs'' folder.

(10) Create a new file within the ''/home/user/tor-browser_en-US/'' folder called ''start-tor-browser'' with the following content.

<pre>
#!/bin/bash
## {{project name}} Tor Browser start script

export TOR_SKIP_LAUNCH=1
    
cd ~
~/tor-browser_en-US/App/Firefox/firefox --profile ~/tor-browser_en-US/Data/profile
    
## End of {{project name}} Tor Browser start script
</pre>

(11) Make the ''start-tor-browser'' script executable. Right click on ''start-tor-browser'' -> Properties -> Permissions -> enable the ''Is executable'' box -> ok.

(12) Go to ''/home/user/tor-browser_en-US/Data/profile/'' and create a file ''user.js'' with the following content.

<pre>## Begin of patched user.js.

## If you edit this file while Firefox is running, your changes will be
## overwritten, when you close Firefox.

## How to create the user.js network settings:
## 1. Make a backup of prefs.js.
## 1. Start Tor Browser with the patched start script.
## 2. Apply proxy settings using the Tor Button settings dialog..
## 3. Make a diff from the old and the new pref.js.
## 4. Copy the relevant changes to user.js.

## network settings
## (Are now set in /etc/environment - or not...)
## (See /etc/environment.)
user_pref("extensions.torbutton.use_privoxy", false);
user_pref("extensions.torbutton.settings_method", "custom");
user_pref("extensions.torbutton.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.socks_port", 9100);
user_pref("network.proxy.socks", "10.152.152.10");
user_pref("network.proxy.socks_port", 9100);
user_pref("extensions.torbutton.custom.socks_host", "10.152.152.10");
user_pref("extensions.torbutton.custom.socks_port", 9100);

## End of {{project name}} user.js.
</pre>

(13) If you want to make 100% sure you never have Tor over Tor, you must shut down {{gateway_product_name}} while doing the following.

(14) Delete /home/user/my_tor-browser_en-US/App/tor.

(15) If there is '''no''' green Vidalia icon in the task bar, everything is fine.

(16) Start Tor Browser and run

<pre>ps aux | grep tor</pre>

If you see something like.

<pre>109 /usr/sbin/tor</pre>

Or.

<pre>/home/user/my_tor-browser_en-US/App/tor</pre>

Something went wrong and you're running Tor over Tor, which is recommended against.

(17) If the tests results are as expected, everything went fine.

(18) Don't forget to restart {{gateway_product_name}}, if you shut it down in step (13).

(19) Done.

= DummyTor =
== Introduction ==
{{Old-Stable-0.5.6}}

{{workstation_product_name}} has an empty Tor package installed by default, called Dummy Tor package. It contains no files, besides some default files<ref>changelog.gz copyright README.Debian control control.tar.gz data.tar.gz debian-binary md5sums</ref>, which are required to create a dummy package. Debian packages are standard Unix '''ar''' archives, auditors can unpack and check them.

The reason for installing the Dummy Tor package inside {{workstation_product_name}} is to prevent installing the Tor package from the upstream (Debian or The Tor Project) repository, to prevent running Tor over Tor. This allows installation of packages, which depend on Tor, such as [[Chat#TorChat|TorChat]] and parcimonie on {{workstation_product_name}}.

To prevent the package from upgrading

<pre>echo "tor hold" | sudo dpkg --set-selections</pre>

has been run while building {{project name}} from source code.

To check the status an auditor could run.

<pre>dpkg --get-selections | grep tor</pre>

To undo holding the packing a user could run.

<pre>echo "tor install" | sudo dpkg --set-selections</pre>

== Implementation ==
{{Old-Stable-0.5.6}}

* Everything is inside the ''whonix_workstation/usr/local/share/whonix/dummytor/'' folder in {{project name}} source code
* and subsequently in /usr/local/share/whonix/dummytor/ in Whoix-Workstation.
* .deb package format
* /usr/local/share/whonix/dummytor/tor is the control file
* /usr/local/share/whonix/dummytor/tor_1.0_all.deb is the package which was installed using dpkg by whonix_workstation/usr/local/share/whonix_internal_install_script.
* whonix_workstation/usr/local/share/whonix/dummytor/dummytor is the "build script" for the package, which is actually only a single "equivs-build ./tor" command.

== How it would look... ==
{{Old-Stable-0.5.6}}

...if a Tor version higher than 1.0 was released.

<pre>
sudo apt-get dist-upgrade

Reading package lists... Done
Building dependency tree       
Reading state information... Done
Calculating upgrade... Done
The following packages have been kept back:
  tor
</pre>

= Tor Browser =
== FoxyProxy Sandboxing Warning ==
Tor Browser will soon ship with sandboxing on an opt-in basis. Unfortunately, the initial sandbox versions are incompatible with this configuration and it must not be enabled. <ref>https://lists.torproject.org/pipermail/tor-dev/2016-December/011733.html</ref> Users with AppArmor enabled may see Tor Browser profile warning messages. These messages can be safely ignored, since they do not prevent FoxyProxy functioning at this time.

== Remove Proxy Settings - {{project name}} 0.5.6 ==
{{Old-Stable-0.5.6}}

It is best to get a fresh copy of Tor Browser, which has never been started before.

{{project_name}} modifies user.js as documented in the [[Tor_Browser#{{project_name}}_Proxy_Settings_.2F_user.js|Tor Browser chapter]].

Open ''/home/user/tor-browser_en-US_my/Data/profile/user.js''.

<pre>kwrite /home/user/tor-browser_en-US_my/Data/profile/user.js</pre>

Comment out all network settings.<ref>These steps are required to remove proxy settings.</ref> <ref>TOR_SOCKS_HOST and TOR_SOCKS_PORT were set for [[Stream Isolation]].</ref>

<pre>
## network settings
#user_pref("extensions.torbutton.use_privoxy", false);
#user_pref("extensions.torbutton.settings_method", "custom");
#user_pref("extensions.torbutton.socks_host", "10.152.152.10");
#user_pref("extensions.torbutton.socks_port", 9100);
#user_pref("network.proxy.socks", "10.152.152.10");
#user_pref("network.proxy.socks_port", 9100);
#user_pref("extensions.torbutton.custom.socks_host", "10.152.152.10");
#user_pref("extensions.torbutton.custom.socks_port", 9100);
</pre>

You could use Tor Button's settings dialog to set it to any other proxy or transparent torification. The latter means "no proxy", which will result in Tor Browser using whatever the operating system provides and if you don't have a VPN installed inside {{workstation_product_name}}, it will go through Tor's TransPort.

If you are using the transparent torification option in Tor Button, you could point a socksifier to ''start-tor-browser'' and it should work as usual.

If you are having problems, it is most likely a problem with Tor Browser / Tor Button's proxy settings. In Tor Browser open the pseudo url "''about:config''" and search for "''network.proxy''" and check if these settings are sane.

== Warning ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px|alt={{project_name}} first time users warning]]
| text    = Don't use [[#Tor Browser Internal Updater|Tor Browser's Internal Updater]]. For now. Use [[#Tor Browser Updater ({{project_name}})|Tor Browser Updater ({{project_name}})]]. More information below.
}}

There are various update mechanisms. Not all are equally secure. {{project name}} recommends against using Tor Browser's internal updater for security reasons. <ref>
Updates are unsigned. The Tor Project trac ticket: https://trac.torproject.org/projects/tor/ticket/13379 <br />
This is dangerous over clearnet, but it is especially dangerous when updating over Tor, because a [[Warning#Man-in-the-middle_attacks|Man-in-the-middle attack]] could happen. <br />
[https://forums.whonix.org/t/dealing-with-tbb-native-updater/735 Forum Development Discussion] <br />
[https://forums.whonix.org/t/tor-browsers-internal-updater-security-warning/738 Forum Help Thread]
</ref> Using Tor Browser Updater ({{project_name}}) is recommended. To enable you to distinguish them, here are some screenshots of the various updaters.

[https://forums.whonix.org/t/tor-browsers-internal-updater-security-warning/738 Forum Help Thread]
== Warning2 ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px|alt={{project_name}} first time users warning]]
| text    = Don't this Tor Browser's internal updater. For now. Why? See [[#Warning]]. Below you see a screenshot of Tor Browser's Internal Updater.
}}

== Language ==
=== Method 4 - Command Line Parameter Method ===
'''{{workstation_product_name}} ONLY!'''

'''Currently broken. Will be fixed in {{project name}} 10.'''

Not a good method, because tb-starter would miss this setting.

<s>'''Please TEST and leave feedback.'''</s>

Available languages as in May 2014:

<pre>
ar
de
en-US
es-ES
fa
fr
it
ko
nl
pl
pt-PT
ru
tr
vi
zh-CN
</pre>

To check if further languages are supported visit https://www.torproject.org/dist/torbrowser/ or http://idnxcnkne4qt76tg.onion/dist/torbrowser/. 

Syntax.

<pre>
update-torbrowser --update --language <language code>
</pre>

Example.

{{CodeSelect|code=
update-torbrowser --update --language vi
}}

Replace "vi" with "zh-CN" for Chinese and so on.

= {{project name}} 0.5.6 Disable Auto Login =
{{Old-Stable-0.5.6}}

'''OPTIONAL. Only in case you want to do that.'''

If you aren't using [[Physical Isolation]], i.e. if you use the Default-[[Download]]-Version (Virtual Machines), it is probably better to use the desktop locking mechanism of your host operating system.

These features are inherited from Debian and its packages.

'''1. On {{gateway_product_name}} and {{workstation_product_name}}'''

Open /etc/inittab:

<pre>
sudoedit /etc/inittab
</pre>

Look for:

<pre>
## If you do not want this,
## comment in the next line and comment out the second one.
</pre>

Below you'll see:

<pre>
#1:2345:respawn:/sbin/getty 38400 tty1
1:2345:respawn:/sbin/getty --autologin user 38400 tty1
</pre>

Change it to:

<pre>
1:2345:respawn:/sbin/getty 38400 tty1
#1:2345:respawn:/sbin/getty --autologin user 38400 tty1
</pre>

'''2. On {{workstation_product_name}}'''

Start Menu -> System Settings -> Login Screen -> Convenience -> Disable "Enable Auto Login"

= Tor Browser in {{project name}} 0.5.6 =

== Introduction ==

The regular Tor Browser Bundle and Tor Browser in {{project name}} slightly differ. Tor Browser has been slightly modified by {{project name}} to work behind the {{gateway_product_name}}. The network and browser fingerprint however, is the same.

Tor Browser's internal update check mechanism is untouched and works fine. Default homepage is untouched and still https://check.torproject.org.

== New Identity Button ==

Note that, if you are using the Tor Browser, which comes with {{project_name}}, that the New Identity button of Tor Button is defunct (greyed out). This is because Tor Button can not access Tor's control port. Due to {{project name}} Technical [[Design]], Tor Browser and Tor are isolated from each other, which means there is no way to fix this without loosing the added security by {{project_name}}.

When using the regular Tor Browser Bundle (not Whonix!), the New Identity button unlinks your old identity, changes your circuit (exit relay IP) and creates a fresh identity.

As a workaround close Tor Browser, change your circuit with [[Tor Controller|Arm]] and start Tor Browser again.

This is not a big issue, since the New Identity button is not perfect yet anyway, there are open bugs.<ref>See [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_information&status=needs_review&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-linkability tbb-linkability] and [https://trac.torproject.org/projects/tor/query?status=accepted&status=assigned&status=needs_review&status=needs_revision&status=new&status=reopened&order=priority&col=id&col=summary&col=keywords&col=status&col=owner&col=type&col=priority&keywords=tbb-fingerprinting tbb-fingerprinting].</ref>

(New Identity Button will be fixed in {{project name}} 6 and above.)

== {{project name}} Proxy Settings / user.js ==

When running <code>torbrowser -update</code>, the update script creates a <code>user.js</code> file, for example <code>~/tor-browser_en-US/Data/profile/user.js</code>. User.js is used to override some Tor Button defaults, namely the SocksProxy settings and other minor misc settings. <ref>If you are curious which these are in details, or for reviewers or auditors, see [https://github.com/{{project_name_short}}/{{project_name_short}}/blob/stable/whonix_workstation/usr/local/bin/torbrowser torbrowser script and user.js on github].</ref> See also the [[Stream_Isolation#Limited_workarounds_for_Tor_Browser|Tor Browser sub chapter]] on the Stream Isolation page.

== More than one Tor Browser in {{project name}} ==

For better isolation of different identities. For advanced users. Moved to the [[Advanced_Security_Guide#More_than_one_Tor_Browser_in_{{project_name}}Advanced Security Guide]].

= Manually updating Tor Browser =
(1) Go to https://www.torproject.org/ and/or http://idnxcnkne4qt76tg.onion/ and download the Tor Browser Bundle for Linux 32 bit. Store it in ''/home/user/''.

(2) Read https://www.torproject.org/docs/verifying-signatures.html.en and/or http://idnxcnkne4qt76tg.onion/docs/verifying-signatures.html.en and learn about gpg verification.

(3) Go to https://www.torproject.org/docs/signing-keys.html.en and/or http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en to get the gpg keys.

(4) Verify the Tor Browser Bundle download.

(5) Go into ''/home/user/'' with the file manger. (Dolphin)

(6) If you still have the old version of TBB opened (because you are probably reading this from the old TBB), close it. (copy the next steps to Kwrite if necessary)

(7) Rename your old TBB /home/user/tor-browser_en-US to something else.

(8) Extract the Tor Browser Bundle. Right click on the downloaded archive -> extract -> extract archive here.

(9) In case you downloaded another version than ''en-US'', rename the tor-browser_''lang'' folder to ''tor-browser_en-US''. This is important, because the paths in the following script are hardcoded.

(10) Go into the ''/home/user/tor-browser_en-US'' folder.

(11) Delete ''start-tor-browser'' or move it to the ''/home/user/tor-browser_en-US/Docs'' folder.

(12) Create a new file within the ''/home/user/tor-browser_en-US/'' folder called ''start-tor-browser'' with the following content.

<pre>
#!/bin/bash
## {{project name}} Tor Browser start script

export TOR_SKIP_LAUNCH=1
    
cd ~
~/tor-browser_en-US/App/Firefox/firefox --profile ~/tor-browser_en-US/Data/profile
    
## End of {{project name}} Tor Browser start script
</pre>

(13) Make the ''start-tor-browser'' script executable. Right click on ''start-tor-browser'' -> Properties -> Permissions -> enable the ''Is executable'' box -> ok.

(14) If you want to make 100% sure you never have Tor over Tor, you must shut down {{gateway_product_name}} while doing the following.

(15) Delete /home/user/my_tor-browser_en-US/App/tor.

(16) If there is '''no''' green Vidalia icon in the task bar, everything is fine.

(17) Start Tor Browser and run

<pre>ps aux | grep tor</pre>

If you see something like.

<pre>109 /usr/sbin/tor</pre>

Or.

<pre>/home/user/my_tor-browser_en-US/App/tor</pre>

Something went wrong and you're running Tor over Tor, which is recommended against.

(18) If the tests results are as expected, everything went fine.

(19) Don't forget to restart {{gateway_product_name}}, if you shut it down in step (13).

(20) Done.

= More than one Tor Browser in {{project name}} =
'''WARNING: "More than one Tor Browser in Whonix" instructions have not been updated for TBB 3.x yet!'''

As the [[Warning]] page stated, [[Warning#{{project_name}}_doesn.27t_magically_separate_your_different_contextual_identities | {{project name}} doesn't magically separate your different contextual identities]] and since Tor Browser and Tor Button do not yet solve this, for further separation of identities you could use [[Multiple {{workstation_product_name_short}}|Multiple {{workstation_product_name}}]], which would be more secure.

Alternatively, less secure than Multiple {{workstation_product_name}}s, you could start multiple instances of Tor Browser and run them through different SocksPorts. The instructions in the [[Manually Downloading Tor Browser]] article need minimal changes.

Instead of

<pre>
#!/bin/bash
## {{project name}} Tor Browser start script

~/tor-browser_en-US/App/Firefox/firefox --profile ~/tor-browser_en-US/Data/profile

## End of {{project name}} Tor Browser start script
</pre>

Use

<pre>
#!/bin/bash
## {{project name}} Tor Browser start script

## Adjust the path!
~/tor-browser_2/App/Firefox/firefox --profile ~/tor-browser_2/Data/profile -no-remote

## End of {{project name}} Tor Browser start script
</pre>

Only {{Code2|-no-remote}} was added to the start script. Otherwise Tor Browser would connect to the already running Tor Browser and this is not what you want. And don't forget to adjust the path to the other Tor Browser.

You also have to use a different SocksPort, see [[Tor_Browser#Change.2FRemove_Proxy_Settings|Change/Remove Proxy Settings]]. (See [[Stream Isolation]] page for explanation why you should use different SocksPorts.)

= Trusting the key =
== Download the key from multiple sources ==
A simple technique to increase the trust you can put in the {{project name}} signing key would be to download it several times, from several locations, several computers, possibly several countries, etc.

You could also use this technique to compare keys downloaded by your friends or other people you trust.

Downloading the key from the same server only lowers the possibility of a man-in-the-middle attack for a part of the route. The following figure illustrates that best:

<pre>
user <-> user ISP <-> internet <-> sourceforge.net ISP <-> sourceforge.net server
MITM less likely for this route |  no help for this route
</pre>

For this reasons adrelanos' homepage, which describes and contains adrelanos' OpenPGP key is mirrored at six different places. Download adrelanos' key from all those places and store it as ''adrelanos1.asc'', ''adrelanos2.asc'', ''adrelanos3.asc'', etc.

1. [https://github.com/{{project_name_short}}/{{project_name_short}}/blob/master/adrelanos.mediawiki adrelanos' homepage on github]; ([https://raw.github.com/{{project_name_short}}/{{project_name_short}}/master/adrelanos.asc key download])

Github.com is accessible over SSL. <ref name=ssl> See [[SSL]] for comments on SSL (in)security.</ref>

2. [https://sourceforge.net/p/whonix/code/ci/b5e205ccb19a11e901124fe7f101fcb0c71b0c8c/tree/adrelanos.asc adrelanos' key page on sourceforge]; ([https://sourceforge.net/p/whonix/code/ci/b5e205ccb19a11e901124fe7f101fcb0c71b0c8c/tree/adrelanos.asc?format=raw key download])

SSL available for users logged into sourceforge.net. <ref name=ssl></ref>

3. [https://gitorious.org/whonix/whonix/blobs/master/adrelanos.mediawiki adrelanos' homepage on gitorious]; ([https://gitorious.org/whonix/whonix/blobs/raw/master/adrelanos.asc key download])

Gitorious.org is accessible over SSL. <ref name=ssl />

4. [https://trac.torproject.org/projects/tor/wiki/doc/proper adrelanos' homepage on torproject.org wiki]

SSL available. <ref name=ssl /> Anyone can edit the torproject.org wiki and exchange content with malicious one. Therefore check the history feature. Obviously, I do trust Tor and torproject.org. My wiki account "''proper''" should be genuine, therefore changes by "''proper''" should be legit.

5. [https://savannah.gnu.org/people/viewgpg.php?user_id=89289 adrelanos OpenPGP key mirror on savannah.gnu.org profile page]

SSL available. <ref name=ssl /> The following command is recommended to enforce downloading the key over SSL:

{{CodeSelect|code=
## Not forced through Tor, unless you are using {{project_name}}, torsocks or similar.
curl {{Curl Secure}} --output adrelanos.asc.4 https://savannah.gnu.org/people/viewgpg.php?user_id=89289
}}

6. adrelanos' OpenPGP key mirror on OpenPGP keyserver

No SSL. Should really be only used as a mirror.

<pre>
## Not forced through Tor, unless you are using {{project_name}}, torsocks or similar.
gpg --keyserver x-hkp://pool.sks-keyservers.net --recv-key 916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA
</pre>

7. adrelanos' OpenPGP key in {{project name}} 6 and above

<pre>
gpg --import /usr/share/whonix/keys/whonix-keys.d/adrelanos.asc
</pre>

Verify:

<pre>gpg --recv-key 916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA</pre>
Should show.

<pre>
pub   4096R/2EEACCDA 2014-01-16 [expires: 2015-01-16]
      Key fingerprint = 916B 8D99 C38E AF5E 8ADC  7A2A 8D66 066A 2EEA CCDA
uid                 [ unknown] Patrick Schleizer <adrelanos@riseup.net>
sub   4096R/0x3B1E6942CE998547 2014-01-16 [expires: 2015-01-16]
sub   4096R/0x10FDAC53119B3FD6 2014-01-16 [expires: 2015-01-16]
sub   4096R/0xCB8D50BB77BB3C48 2014-01-16 [expires: 2015-01-16]
</pre>

Each time you re-import the key from a different source:

<pre>
gpg --import adrelanos.asc 
gpg --import adrelanos1.asc 
gpg --import adrelanos2.asc 
...
</pre>

It should always show:

<pre>
gpg: key 2EEACCDA: "Patrick Schleizer <adrelanos@riseup.net>" not changed
gpg: Total number processed: 1
gpg:              unchanged: 1
</pre>

And:

<pre>
gpg --fingerprint
</pre>

Should always show the same fingerprint and only contain: (Besides keys you imported knowingly earlier, perhaps your friends keys.)

<pre>
pub   4096R/0x8D66066A2EEACCDA 2014-01-16 [expires: 2015-01-16]
      Key fingerprint = 916B 8D99 C38E AF5E 8ADC  7A2A 8D66 066A 2EEA CCDA
uid                 [ unknown] Patrick Schleizer <adrelanos@riseup.net>
sub   4096R/0x3B1E6942CE998547 2014-01-16 [expires: 2015-01-16]
sub   4096R/0x10FDAC53119B3FD6 2014-01-16 [expires: 2015-01-16]
sub   4096R/0xCB8D50BB77BB3C48 2014-01-16 [expires: 2015-01-16]
</pre>

Unless the new key is signed with the old key, something fishy is going on.

= {{project name}} 7 Download Table (Deprecated) =
<big>Version: <span style="color: green">{{Version}}</span></big>

'''Note:''' You need to download both Gateway and Workstation virtual machine images.

{| class="wikitable" style="text-align: center;background-color: #fff"
|- {{GrayBackground}}
| style="height: 47px;"|
| style="white-space: nowrap; width: 137px;"|'''{{gateway_product_name_short}}'''<br />(1.2 GiB)
| style="white-space: nowrap; width: 137px;"|'''{{workstation_product_name}}'''<br />(1.3 GiB)
| style="white-space: nowrap; width: 140px;"|'''[[Hide Tor and {{project name short}} from your ISP|Anonymous Download]]<br /> possible <ref name=anonymousdownload>By using the [https://www.torproject.org/download/download-easy.html.en Tor Browser Bundle] (TBB). For an introduction, see [[Tor Browser]]. See also [[Hide Tor and {{project name short}} from your ISP]].</ref>'''
| style="width: 135px;"|'''[[Download Security]]<br /> without [[#Verify the {{project name}} images|Verification]]'''
| style="width: 135px;"|'''[[Download Security]]<br /> with [[#Verify the {{project name}} images|Verification]]'''
|- style="height: 47px"

| {{GrayBackground}}| [[File:HTTP.png|40px]] {{Anchor|signature}}
| <html><a href="http://mirror.whonix.org/{{project_name_short}}-</html>{{Version}}<html>/{{gateway_product_name_short}}-</html>{{Version}}<html>.ova" target="_blank">Download</a></html>
| <html><a href="http://mirror.whonix.org/{{project_name_short}}-</html>{{Version}}<html>/{{workstation_product_name}}-</html>{{Version}}<html>.ova" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Very Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"

| {{GrayBackground}}| [[File:HTTP.png|40px]] {{Anchor|signature}}
| <html><a href="http://sourceforge.net/projects/whonix/files/current/</html>{{Version}}<html>/{{gateway_product_name_short}}-</html>{{Version}}<html>.ova/download" target="_blank">Download</a></html>
| <html><a href="http://sourceforge.net/projects/whonix/files/current/</html>{{Version}}<html>/{{workstation_product_name}}-</html>{{Version}}<html>.ova/download" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Very Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"

| {{GrayBackground}}| [[File:SSL_Symbol.png|40px]] {{Anchor|signature}}
| <html><a href="https://jhcloos.com/whonix/7/{{gateway_product_name_short}}-7.ova" target="_blank">Download</a></html>
| <html><a href="https://jhcloos.com/whonix/7/{{workstation_product_name}}-7.ova" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"

| {{GrayBackground}}| [[File:Button_sig.png|25px]]
| white-space: nowrap;"|<html><a href="/download/current/</html>{{Version}}<html>-sig/{{gateway_product_name_short}}-</html>{{Version}}<html>.ova.asc">OpenPGP Signature</a></html>
| white-space: nowrap;"|<html><a href="/download/current/</html>{{Version}}<html>-sig/{{workstation_product_name}}-</html>{{Version}}<html>.ova.asc">OpenPGP Signature</a></html>
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"

| {{GrayBackground}}| [[File:Crypto_key.png|25px]]
| colspan="2"|Verify the images using the [[{{project name short}} Signing Key|Signing Key]]
|{{Yes}} <ref name=anonymousdownload />
| -
| -
|- style="height: 47px"

| {{GrayBackground}}| [[File:btorrent-icon.png|25px]]<ref>Torrent clients known to work: transmission, Vuze, Deluge. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="/download/</html>{{Version}}<html>-torrent/{{gateway_product_name_short}}-</html>{{Version}}<html>.ova.torrent">Torrent Download</a></html>
| <html><a href="/download/</html>{{Version}}<html>-torrent/{{workstation_product_name}}-</html>{{Version}}<html>.ova.torrent">Torrent Download</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl>It is at least as secure as [[SSL]] and [https://en.wikipedia.org/wiki/SHA-1 SHA-1], better than plain http. This is because you get the torrent file or magnet link over https and the torrent/magnet client checks the SHA-1 checksum at the end. Using OpenPGP verification would be safer.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"

| {{GrayBackground}}| [[File:Magnet_icon.svg.png|20px]] <ref>Magnet link clients known to work: gtk-gnutella. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="magnet:?xt=urn:btih:405e051b5309fb66fd7ba9a04066936de64ce478&dn={{gateway_product_name_short}}-7.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2F{{gateway_product_name_short}}-7.ova">Magnet Link</a></html>
| <html><a href="magnet:?xt=urn:btih:13ec8c33dd9b58fe4e5120002dad7b4c683c2b78&dn={{workstation_product_name}}-7.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2F{{workstation_product_name}}-7.ova">Magnet Link</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl />
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"

| {{GrayBackground}}| [[File:template_source.png|25px]]
| colspan="2"|[[Dev/Build Documentation|Build from source code]]
| See [[Dev/Build Anonymity|Build Anonymity]]
| style="background-color: {{Green}}"| Very High <ref name=fromsourcecode>When you build from source code, audit the source code for being non-malicious and reasonably bug free, you do not have to [[Trust]] the developers, the website or the SSL certificate authorities.</ref>
| style="background-color: {{Green}}"| Best <ref name=fromsourcecode /> <ref>By additional verification that you got the source code from the original authors and by ensuring you're using the same source code as others you get better security.</ref>
|}

= {{project name}} 7 OLD Known Issues =
=== Connection Issues - Tor stops working after an Upgrade and needs a Workaround ===When upgrading to Tor 0.2.4.19-1~d79.jessie+1 (using sudo apt-get dist-upgrade), your Tor connection may go down. There is a temporary workaround.

Open /etc/default/tor.

<pre>
## If you are using a graphical {{gateway_product_name}}, use:
kdesudo kate /etc/default/tor

## Or alternatively, if you are using a terminal-only {{gateway_product_name}}, use:
sudoedit /etc/default/tor
</pre>

Scroll down, near bottom comment in (by removing the # in front of it).

<pre>
USE_AA_EXEC="no"
</pre>

Then try:

<pre>
sudo service tor restart
</pre>

You should keep that in mind and undo that change when {{project name}} or Tor fixes that bug. We'll keep you posted. (See [[Download#Stay_tuned]] and [[Security_Guide#Recommendation_to_install_latest_security_updates_on_all_systems]].)

Forum help thread:
[[Special:AWCforum/st/id287/new_tor_and_debian_updates_today....html]]

=== Virtual Box Shared Folder Issues ===Shared Folders aren’t working with the latest Linux kernel. (This is a Debian/Virtual Box issue, not caused by {{project_name}}. Has already been reported to upstream by a Debian user.)

Possible workarounds, more information, etc. can be found in the {{project name}} User Help Forum discussion thread:
[[Special:AWCforum/st/id261/VirtualBox_shared_directories_on....html]]

=== Tor Browser Starter ({{project_name}}) ===After manually upgrading Tor Browser (see above)... To start Tor Browser, got to your /home/user/tor-browser_en-US folder and double click start-tor-browser. Or type in terminal (Konsole).

<pre>
/home/user/tor-browser_en-US/start-tor-browser
</pre>

=== Tor Browser Updater ({{project_name}}) ===Currently broken due to changes by torproject.org. You have to [[Manually Downloading Tor Browser|manually update Tor Browser]] in meanwhile.

Forum help thread:
[[Special:AWCforum/st/id262/updating_TOR_browser_error...html]]

=== Enigmail Encryption ===When using OpenPGP encryption in Thunderbird / Enigmail you might get "encryption command failed".

Thunderbird has been updated in Debian Testing in meanwhile. Upgrade it.

<pre>
sudo apt-get update
sudo apt-get dist-upgrade
</pre>

You should then install enigmail as usual: <br />
<pre>
sudo apt-get install enigmail
</pre>

=== Defunct Desktop Shortcuts ===The desktop shortcuts Tor Browser, Contribute, Forum, Documentation, Donate won't work until there is an upgrade of {{project_name}}. Please manually visit these pages. How to start Tor Browser has already been explained above.

=== {{gateway_product_name}}: Err: http://deb.torproject.org tor-0.2.4.x-jessie/main i386 Packages 404 Not Found ===
'''Short answer''': <br />
Update and upgrade your underlying Debian system ({{project_name}} is a derivative of Debian).
<pre>
sudo apt-get update
sudo apt-get dist-upgrade
</pre>

See also [[Security_Guide#Recommendation_to_install_latest_security_updates_on_all_systems]]. This bug will be fixed with next {{project name}} upgrade (will take some time). No other action strictly required for now.

'''Long answer''': <br />
This is because torproject deprecated that repository. That was to be expected. The repository we're using now is already preconfigured (in /etc/apt/sources.list.d/torproject.list).

Taking action is not important at this stage. You can comment it out (by putting a # in front of it) in /etc/apt/sources.list.d/torproject.list if you want. ({{Code|kdesudo kate /etc/apt/sources.list.d/torproject.list}} for graphical {{gateway_product_name}} or {{Code|sudoedit /etc/apt/sources.list.d/torproject.list}} for terminal-only {{gateway_product_name}}) If you don't do it, it will be auto fixed with next upgrade of {{project_name}}.


=== apt-get Hash Sum mismatch ===
If you get a hash sum mismatch when updating through sudo apt-get update then deleting the package lists should solve it. A hash sum mismatch can look like:

<pre>
W: Failed to fetch http://ftp.us.debian.org/debian/dists/testing/contrib/i18n/Translation-enIndex  Hash Sum mismatch
</pre>

To delete the package lists, run:
<pre>
sudo rm -fR /var/lib/apt/lists/*
</pre>

To make sure everything works like it should, update your package lists and upgrade your distro. Chances are that your previous update/upgrade attempts have failed due to the mismatch.

<pre>
sudo apt-get update && apt-get dist-upgrade
</pre>

(Source <ref>http://askubuntu.com/questions/41605/trouble-downloading-updates-due-to-hash-sum-mismatch-error</ref>)

=== There is no public key available for the following key IDs ===
The message "{{Code2|There is no public key available for the following key IDs}}" is not necessarily an error. It might be just a warning/information.

<pre>
sudo apt-get update
...
Reading package lists... Done
...
W: There is no public key available for the following key IDs:
9C131AD3713AAEEF
</pre>

Check the exit code of apt-get.

<pre>
echo $?
0
</pre>

When it is 0, there is no problem. This is due to key transition, because {{project name}} repository is currently signed with the old and the new signing key.

= Reasons for Staying Anonymous Developer =
Security and trust shouldn't depend on showing a face:

* [https://tails.boum.org/forum/Who_is_behind_Tails__63__ Tails] ([http://www.webcitation.org/6EnyCggbX w])

= KVM =
=== Convert ===
Converting is only required if you want to use the stable version of {{project_name}}. No longer required for testers-only versions, see: <br />
https://www.whonix.org/blog/category/testers-wanted/

1. Extract the downloaded {{project name}} ova images to obtain the VMDK virtual storage files.

<pre>
tar -xvf ~/{{project_name_short}}.ova
</pre>

As of now, VMDK files cannot be directly used by KVM or converted to a file type supported by KVM.

<pre>
VBoxManage clonehd --format VDI vmdk_file vdi_file
</pre>

(You need to adjust the names vmdk_file and vdi_file.)

2. Use qemu-img to convert the vdi to qcow2. Why qcow2? Because it supports snapshotting, which is very useful for reverting {{workstation_product_name}} to a known clean state. You must not revert gateway snapshots of the gateway vm as that will change your guard nodes which is not good for anonymity. This would increase your chances of having a rogue guard node and exit.

<pre>
qemu-img convert -p -O qcow2 ~/whonix.vdi ~/whonix.qcow2
</pre>

= System Requirements =
*** Lucid has been reported, not to work. Since it is only supported until 2013-04 it won't be fixed.

= Mirror =
<pre>
| {{GrayBackground}}| [[File:SSL_Symbol.png|40px]] {{Anchor|signature}}
| <html><a href="https://jhcloos.com/whonix/{{project_name_short}}-</html>{{VersionNew}}<html>/{{gateway_product_name_short}}-</html>{{VersionNew}}<html>.ova" target="_blank">Download</a></html>
| <html><a href="https://jhcloos.com/whonix/{{project_name_short}}-</html>{{VersionNew}}<html>/{{workstation_product_name}}-</html>{{VersionNew}}<html>.ova" target="_blank">Download</a></html>
|{{Yes}} <ref name=anonymousdownload />
| style="background-color: {{Red}}"| Low <ref>[[Warning#Man-in-the-middle_attacks|Man-in-the-middle attacks]] could poison the download.</ref>
| style="background-color: {{Green}}"| High <ref name=openpgpverification>It does not matter if you did the bulk download over an insecure channel, if you use OpenPGP verification at the end.</ref>
|- style="height: 47px"
</pre>

= Magnet Link =
<pre>
| {{GrayBackground}}| [[File:Magnet_icon.svg.png|20px]] <ref>Magnet link clients known to work: gtk-gnutella. Check this [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Clients_table clients table]. If nobody is [http://wiki.answers.com/Q/What_are_seeders_and_leechers seeding] at the time, only clients with the [https://en.wikipedia.org/wiki/Magnet_URI_scheme#Normal_.28as.29 "as"] feature can be used, because we are providing a [https://en.wikipedia.org/wiki/BitTorrent#Web_seeding webseed].</ref>
| <html><a href="magnet:?xt=urn:btih:b8969f87015c994f2c4dd93b3ed7c62861c27477&dn={{gateway_product_name_short}}-8.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2F{{gateway_product_name_short}}-8.ova">Magnet Link</a></html>
| <html><a href="magnet:?xt=urn:btih:7a6a5294ebebef5e5edcb05aa2caf66ebaeaf300&dn={{workstation_product_name}}-8.ova&tr=http%3A%2F%2Fannounce.torrentsmd.com%3A6969%2Fannounce&as=http%3A%2F%2Fwebseed.whonix.org%3A8008%2F{{workstation_product_name}}-8.ova">Magnet Link</a></html>
|{{No}}
| style="background-color: {{Yellow}}"| Medium <ref name=atleastssl />
| style="background-color: {{Green}}"| High <ref name=openpgpverification />
|- style="height: 47px"
</pre>

= Download / Snapshot =
* Take a snapshot for both {{gateway_product_name}} and {{workstation_product_name}} on VirtualBox. So you can easily restore the original snapshot whenever you need a clean state.

= Mediawiki Install =
Get and install the mediawiki web app.

<pre>
sudo su
cd /var/www
wget http://releases.wikimedia.org/mediawiki/1.22/mediawiki-1.22.3.tar.gz
tar -xvzf mediawiki-1.22.3.tar.gz
mv mediawiki-1.22.3 wiki
</pre>

Start iceweasel.

Setup mediawiki. Go to http://127.0.0.1/wiki/mw-config/index.php.

Use the following settings.

<pre>
Database name: wiki
Datebase password: what you remembered above
No more questions.
Otherwise use the defaults.
Name of wiki:
Whonix
</pre>

Download LocalSettings.php, safe as /home/user/LocalSettings.php.

= Tor Browser Recommended =
When you start '''Tor Browser Recommended''', there is a shortcut on the desktop, see [[Image:important.png|alt=Tor Browser Recommend Icon<|r]], it will open both {{project name}} News Blogs in a privacy friendly way.

= I2P =
'''Clock Skew Issues'''

{{project_name}} 9: <br />
Should have no issues.

In {{project name}} 8: <br/>
I2P-0.9.11 this doesn't work - I2P complains about clock skews even after disabling both '''sdwdate''' and '''bootclockrandomization'''.

<pre>
sudo service sdwdate stop
sudo chmod -x /etc/init.d/sdwdate
</pre>

It is still possible to fix the clock manually. For example, if I2P reports a clock skew of 60 seconds at startup, use this command to change system time:

<pre>
sudo date -s now-60sec
</pre>

then restart I2P.

However, time sync management in {{project name}} is a complex issue, so before changing the default way of time management in {{project_name}}, make sure to read [[Dev/TimeSync]] and understand the implications.

= old known issues =
=== gpg keyserver unreachable ===
Open gpg.conf.
<pre>
kwrite ~/.gnupg/gpg.conf
</pre>

Search for all instances of "keyserver". And comment them out, i.e.
<pre>
#keyserver ...
</pre>

Add a functional keyerver at the bottom. In {{project name}} 9 we will be using the following one as default.

<pre>
keyserver hkp://qdigse2yzvuglcix.onion
</pre>

=== libtorsocks Warning ===
During running apt-get dist-upgrade, you may see a warning similar to the following one.

<pre>
15:36:37 libtorsocks(12225): sendmsg: Connection is a UDP or ICMP stream, may be a DNS request or other form of leak: rejecting.
Cannot talk to rtnetlink: No such file or directory
acpid: error talking to the kernel via netlink
</pre>

Sounds scary, but is of no concern. See footnote for technical explanation. <ref>
This is because in order to implement [[Stream Isolation]], {{project name}} apt-get [https://github.com/{{project_name_short}}/uwt uwt] wrapper forces apt-get through torsocks. Unfortunately, not only apt-get is forced through Tor, but also sysvinit and subsequently all daemons sysvinit is restarting. acpi_fakekey daemon uses local connections. Those will be rejected by torsocks. The worst that can happen is that acpi_fakekey won't operate until manually restarted. This is a bigger issue for web servers and alike, because those may not function until manually restarted.

This will likely be fixed as soon {{project name}} will be based on Debian jessie, because that uses systemd, that is not affected by this as well as torsocks 2.0 may solve this.
</ref>

==== No Network after Upgrade to {{project name}} 12 ====
If whonixcheck fails with "tor.pid does not exist" after upgrade from {{project name}} 11 to {{project name}} 12...

On your {{gateway_product_name}}. And on your {{workstation_product_name}}.

Make sure <code>/etc/network/interfaces</code> looks like this.

<pre>
# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d
</pre>

(The comments starting with # are actually not important. You can skip
them if you wish.)

{{Open with root rights|filename=
/etc/network/interfaces
}}

Then make sure <code>/etc/network/interfaces.d/30_non-qubes-whonix</code> looks
like this:<br />
* {{gateway_product_name}}: https://github.com/{{project_name_short}}/whonix-gw-network-conf/blob/master/etc/network/interfaces.d/30_non-qubes-whonix
* {{workstation_product_name}}: https://github.com/{{project_name_short}}/whonix-ws-network-conf/blob/master/etc/network/interfaces.d/30_non-qubes-whonix

Forum discussion:<br />
[https://forums.whonix.org/t/whonixcheck-fail-tor-pid-does-not-exist-after-upgrade-from-whonix-11-to-whonix-12/1793 whonixcheck fail: tor.pid does not exist after upgrade from {{project name}} 11 to {{project name}} 12]

= Upgrade from Testers repository =
{{project name}} testers-only repository contains a fix. If you like to volunteer as a tester, see [[{{project name short}}-APT-Repository]] on how to [[{{project name short}}-APT-Repository#Change_{{project_name}}_APT_Repository|enable]] it, so this change can move soon into {{project name}} stable repository. After enabling it, [[Security_Guide#Updates|upgrade]].

= VirtualBox spoof the initial virtual hardware clock offset  =
Moved back to [[Advanced_Security_Guide#Spoof_the_Initial_Virtual_Hardware_Clock_Offset]].

= Physical Isolation =
== Install Basic Packages ==
This step is only required up to and including {{project name}} 8. Versions higher than {{project name}} 8 do not require this manual step anymore.

Make sure you have all packages installed which are listed in the file {{Code2|grml_packages}}. You can do that using the following command.

<pre>
sudo apt-get install $(grep -vE "^\s*#" grml_packages | tr "\n" " ")
</pre>

= Why was {{project name}} 7 based on Debian Testing, not Debian Stable? =

* Contains [http://packages.debian.org/python-stem python-stem], which is a Tor controller library. It is in use to ask for Tor's bootstrap status. This is required for whonixcheck (diagnosing connection issues) and [[Dev/TimeSync|TimeSync]] (TimeSync starts as soon as Tor is bootstrapped). See this [https://github.com/{{project_name_short}}/{{project_name_short}}/issues/60 ticket] for more details. The alternative, uploading python-stem to {{project name}} APT Repository is not doable given {{project name}} contributor size. (It would require keeping up with the original package and updating when they update. And implementing the feature, allowing builders to build {{project name}} from source code without touching {{project name}} APT repository for [[Trust]] reasons would also have been more difficult.)
* Being based on stable and incorporating a few packages from testing is difficult, see this [https://github.com/{{project_name_short}}/{{project_name_short}}/issues/60 ticket] for details.
* Contains build dependency [http://packages.debian.org/jessie/config-package-dev config-package-dev] <u>with</u> debhelper support. (We could probably build on stable and just get the config-package-dev <u>with</u> debhelper support elsewhere, but it is simpler just to require Debian testing as build operating system.
* Stable (Wheezy) contains only obfs2 (obfsproxy [http://packages.debian.org/wheezy/obfsproxy 0.1.4]), while Testing (Jessie) contains obfs3 (obfsproxy [http://packages.debian.org/jessie/obfsproxy 0.2.3]), and obfsproxy has been recently removed from torproject's apt repository.

= {{project name}} 9 OLD Issues =
=== KEYEXPIRED Error ===
You might see this error when attempting to [[Security_Guide#Updates|update]] existing {{project name}} versions (build version 9.4 and below.)

<pre>
W: GPG error: http://sourceforge.net wheezy Release: The following signatures were invalid: KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449659 KEYEXPIRED 1421449659 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449659 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449064 KEYEXPIRED 1421449659
</pre>

To fix this issue, open a terminal

<pre>
fpr="916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA"
gpg --recv-keys "$fpr"
gpg --fingerprint "$fpr" 
gpg --export "$fpr" | sudo apt-key add -
</pre>

Then [[Security_Guide#Updates|update your system]] as usual.

After that you will be able to [[Tor_Browser#Update_Tor_Browser|update Tor Browser]] as well.

It will be fixed out of the box in {{project name}} 9.6 and above.

Forum support thread:<br />
https://forums.whonix.org/t/issue-t100-error-signatures-were-invalid-keyexpired-1421449064/810

{{Anchor|Tor Browser Startup Issues - Needs Workaround}}

=== Tor Browser Startup Issues ===
This has been fixed out of the box in {{project name}} 9.3 and above.

After the upgrade to Tor Browser 4.x, it can be no longer started.

{{project name}} stable repository contains a fix. [[Security_Guide#Updates|Upgrade]]. After upgrading, reboot is required. <ref>So [https://github.com/{{project_name_short}}/anon-ws-disable-stacked-tor anon-ws-disable-stacked-tor] environment variables changes take effect to fix the ControlPort quotes warning.</ref>

Forum discussion:<br />
https://forums.whonix.org/t/after-updating-to-tor-browser-4-0-browser-doesnt-start/599

=== Connection Issues - Tor stops working after an Upgrade and needs a Workaround ===
This is [https://www.whonix.org/blog/whonix-9-2-maintenance-release fixed in {{project name}} 9.2] above.

In {{project name}} 9... When upgrading to Tor 0.2.5.8-rc-1~d70.wheezy+1 (using sudo apt-get dist-upgrade) in {{project name}} 9, your Tor connection may go down. There is a workaround.

Open {{Code2|/etc/apparmor.d/local/system_tor}}.

<pre>
## If you are using a graphical {{gateway_product_name}}, use:
kdesudo kate /etc/apparmor.d/local/system_tor

## Or alternatively, if you are using a terminal-only {{gateway_product_name}}, use:
sudoedit /etc/apparmor.d/local/system_tor
</pre>

Scroll down until you see.

<pre>
/usr/bin/obfsproxy rix,
</pre>

Comment out (by adding a # in front of it).

<pre>
#/usr/bin/obfsproxy rix,
</pre>

Then reboot.

<pre>
sudo reboot
</pre>

You should keep that in mind. When {{project name}} fixes that bug, you'll get an interactive dpkg conflict resolution dialog. This is explained in [[Security Guide#Updates]]. Just choose to install the new {{Code2|/etc/apparmor.d/local/system_tor}} file then.

Forum discussion: <br />
https://forums.whonix.org/t/after-last-apt-get-upgrade-gateway-doesnt-connect-to-tor-anymore/532

=== AppArmor Warning during Boot ===
If you wonder during boot about following warning.
<pre>
Warning /etc/apparmor.d/... network rules not enforced.
</pre>

[[File:apparmor_warning.png]]

This is not a security issue. {{project name}} installs [[AppArmor]] and the [https://packages.debian.org/wheezy/apparmor-profiles apparmor-profiles] package by default, but does not enforce AppArmor by default. We are not there yet and Debian also does not enforce AppArmor by default yet either. The apparmor-profiles package gets installed by default for better usability, to make enforcing AppArmor easier. This warning only reflects, that the profile is not enforced by default.

Forum discussion dovecot:<br />
https://forums.whonix.org/t/apparmor-errors-functional-/628

Debian bug report:<br />
[http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=774888 please provide an option to hide or deactivate all the noisy, scary warnings during boot]

= VirtualBox Guest Additions =
=== New Instructions for Debian Wheezy ===
==== Installation from Debian apt repository ====
Inside your VirtualBox virtual machine.

Very simple.

Searching<ref>http://packages.debian.org/search?searchon=names&keywords=virtualbox</ref> for Debian packages containing VirtualBox was a wise thing. In past it was sometimes a real pain to install the guest additions. The search brought up, that honorable people created a debian package with the tools.

1. [[Security_Guide#Updates|Update]] your operating system.

2. Install. Easy:

<pre>
sudo apt-get install virtualbox-guest-x11
</pre>

Advanced security? See footnote or skip: <ref>
If you only want Shared Folder, mouse integration, for improved security, you can try using only the next line, but not the line after next.
You need kernel headers to be able to compile the kernel module.

<pre>
sudo apt-get install --no-install-recommends virtualbox-guest-dkms virtualbox-guest-utils
</pre>

If you want all features, such as dynamic resolution and shared clipboard
<pre>
sudo apt-get install virtualbox-guest-x11
</pre>
</ref>

3. Reboot.

4. NOTE: Sometimes after reboot the Workstation guest fails to pick up a new resolution. Try to change the screen resolution manually a few times, from KDE settings. Once it succeeds to change to fullscreen, the change will stay persistent across reboots.

==== Installing using VirtualBox Instructions ====
Alternatively, above [[#Installation from Debian apt repository]] fails, which should not, you could also refer to the upstream documentation, [https://www.virtualbox.org/manual/ch04.html VirtualBox: Chapter 4. Guest Additions].

==== Instructions for Debian Jessie ====
<div class="toccolours mw-collapsible mw-collapsed">
{{project_name}} 10 is based on Debian Wheezy. So unless you are using a {{custom workstation product name}} based on Debian Jessie, you most likely want to use above instructions. Otherwise press expand on the right side.
<div class="mw-collapsible-content">
'''Not sure if the jessie instructions are still up to date. Maybe the ones for wheezy also work for jessie just fine.

Inside your VirtualBox virtual machine.

This version is difficult to get working with guest additions and vbox shares. Debian Jessie has the issue that {{project name}} installs with Kernel 3.10 and the distro is at 3.12, and the 3.10 headers are not available. Therefore, it is dangerous (and unsafe) to get the Kernel headers on a different repository. Additionally, there are reports that updating the kernel can cause issues (and is also unsafe).

Noteː It has been reported that reverting Virtualbox 2 versions back with 3.10 can also solve issues. Update this wiki with your results.
</div>
</div>

= Build Warnings =
* <u>'''Short'''</u>: '''Don't install {{Code2|apt-listchanges}} as custom package during VM image builds or don't have it installed during {{Code2|--target root}} builds.''' 
<div class="toccolours mw-collapsible mw-collapsed">
<div class="mw-collapsible-content">
''Long'': Because likely might change the build process from a non-interactive one to an interactive one. You're better off purging apt-listchanges.

<pre>
sudo apt-get purge apt-listchanges
</pre>

Alternatively, you could use a non-interactive frontend for {{Code2|apt-listchanges}} such as {{Code2|text}}. To do so, you would have to edit {{Code2|/etc/apt/listchanges.conf}}.

<pre>
sudoedit /etc/apt/listchanges.conf
</pre>

<pre>
[apt]
frontend=text
</pre>

After {{project name}} has been build, you're free to reinstall {{Code2|apt-listchanges}}.
</div>
</div>
<br />

= Tor Browser =
== Change/Remove Proxy Settings ==
'''This is an advanced topic. You most likely only need it for advanced tunneling scenarios.'''

You could either:

* Use Tor Button's -> Preferences to set it to any other proxy or no proxy. {{Code2|Transparent Torification}} means, "no proxy" or in other words it means "use whatever the system provides".
1) Click on Tor Button.
[[File:Tor_Button.png]]<br />
2) Click on Preferences.<br />
[[File:Tor_Button_Settings_Menu.png]]<br />
3) Choose {{Code2|Transparent Torification}}.<br />
[[File:Tor_Button_Settings.png]]<br />
4) Click OK.
* For an alternative method, setting {{Code2|Transparent Torification}} which does not involve Tor Button's graphical user interface, see footnote <ref>
<!--Keeping that, in case Tor Button's settings dialog breaks again.-->
If you want to set it to no proxy, you could either:

* additionally add in ~/tor-browser_en-US/start-tor-browser below "#!/bin/sh".

<pre>export TOR_TRANSPROXY=1</pre>

* Or add to /etc/environment

<pre>TOR_TRANSPROXY=1</pre>

and reboot.
</ref>.
* Forget about Tor Button's -> Open Network Settings. See footnote, if you want to know why.<ref>
When using the regular Tor Browser Bundle from The Tor Project without {{project_name}}, that menu can be used to change network settings inside Tor. It has the same effects as editing Tor's config file torrc. Using this graphical user interface is not possible in {{project_name}}, because for security reasons, in {{project name}} there is only limited access to Tor's control port. (See [[Dev/CPFP]] for more information.) (You could change such settings manually in /usr/local/etc/torrc.d/50_user.conf on {{gateway_product_name}}. (See also [[Features#VPN_.2F_Tunnel_support|VPN/Tunnel suppprt]] for more information.)
</ref>

= Grub Fix =
== Introduction ==
The following instructions differ for 686-pae and 486 kernel users.

Are you are 686-pae kernel kernel or 486 kernel user?
* If you previously did not choose any options right after starting {{project name}} in the grub boot menu, if you don't know what this is about, then you're very likely a [[#686-pae Kernel Users|686-pae Kernel User]].
* If you are used to picking the 486 kernel as per [[Starting_Whonix#Boot_Options|page Starting {{project_name}}, chapter Boot Options]], then you already know, that you're a [[#486_Kernel_Users|486 Kernel User]].

== 686-pae Kernel Users ==
Remove the 486 and 586 kernel meta packages.

<pre>
sudo apt-get remove linux-image-*-486 linux-image-*-586
</pre>

Remove the 486 and 586 kernel packages.

<pre>
sudo apt-get remove linux-image-3.*-486 linux-image-3.*-586
</pre>

Make sure a kernel is installed.

<pre>
sudo apt-get install linux-image-686-pae
</pre>

Proceed with [[#Install Grub]] chapter!

== 486 Kernel Users ==
Remove the 686-pae kernel meta packages.

<pre>
sudo apt-get remove linux-image-686-pae
</pre>

Remove the 686-pae kernel packages.
<pre>
sudo apt-get remove linux-image-3.*-686-pae
</pre>

Make sure a kernel is installed.

<pre>
sudo apt-get install linux-image-486
</pre>

Proceed with [[#Install Grub]] chapter!

= Stream Isolation =
=== Limited workarounds for Tor Browser ===

==== Possible ====
1. Weakest: On Tor Browser, click on the Torbutton and then click on "New Identity". However your current browser session will be lost.

2. Better: Install a second browser and configure it to use its own SocksPort, see [[Tor_Browser#More_than_one_Tor_Browser_in_{{project_name}}More than one Tor Browser in {{project_name}}]].

3. Even better: Use [[multiple {{workstation_product_name_short}}]].

==== IsolateDestAddr and IsolateDestPort for Tor Browser (Recommended against!) ====

'''(Recommended against!)''' If you are interested anyway, see footnote <ref>'''(Recommended against!)'''
As a workaround you could enable IsolateDestAddr and IsolateDestPort for the Tor Browser.

This comes at great performance costs, especially for websites with lots of 3rd party content. It will not isolate connections to different websites on a shared server and it will create new circuits for every IP address you connect to (e.g. it will isolate subdomains if they use different IPs). It will also let you stand out more from other Tor Browser users, because almost no one is using it that way. Generally, for these reasons you should not enable this feature. Instead close the browser and get a "new identity" through arm on the gateway if you want to separate activities inside Tor Browser. If you want to do this anyway, follow the following instructions.

On {{gateway_product_name}} open {{Code2|/usr/local/etc/torrc.d/50_user.conf}}'.

<pre>
sudoedit /usr/local/etc/torrc.d/50_user.conf
</pre>

Add.

<pre>
SocksPort 10.152.152.10:9150 IsolateDestAddr IsolateDestPort
</pre>

Save.

Reload Tor.

<pre>
sudo service tor reload
</pre>

Done.
</ref>.

= Qubes =
== Torified dom0 Updates ==
Now in Qubes wiki.

Go to {{Code2|Qubes VM Manager -> System -> Global Settings}}. See the {{Code2|UpdateVM}} setting. Choose your desired {{gateway_product_name}} ProxyVM from the list. For example: sys-whonix.

<pre>
Qubes VM Manager -> System -> Global Settings -> UpdateVM -> sys-whonix
</pre>

<ref>
implement dom0 -> right click -> VM settings / easy way to configure updatevm setting:<br />
https://github.com/QubesOS/qubes-issues/issues/1165
</ref> <ref>
Or by cli:
<pre>
qubes-prefs --get updatevm
</pre>

<pre>
qubes-prefs --set updatevm sys-whonix
</pre>
</ref>

== [[{{q_project_name_short}}|{{q_project_name}}]] Gnome Workstation ==
OR, to install Workstation with complete Gnome applications that are installed in Qubes Fedora templates:<br /> 
For Gnome, read security notes on [[Other Desktop Environments]].

* Input command:<br /> <code>sudo qubes-dom0-update --enablerepo=qubes-templates-community qubes-template-whonix-ws-gnome</code>

'''2. Increase Update Size'''

The Gnome version of the {{workstation_product_name}} TemplateVM may be too large and will you need to increase the allowed update size to accommodate installing it.

In Dom0 -> Terminal:

* Input command:<br /> <code>export UPDATES_MAX_BYTES=$[ 4 * 1024 ** 3 ]</code>

== AppArmor ==
At the moment, if you want to use this, you must apply these settings to the TemplateVMs as well as the TemplateBasedVMs. [https://github.com/QubesOS/qubes-issues/issues/1091 Once Qubes Q3 gets released, TemplateBasedVMs will inherit the kernelopts setting of their TemplateVM.]

== Edit Firewall Rules ==
'''2. Edit {{workstation_product_name}} Firewall Rules'''

In Dom0 &raquo; Qubes VM Manager:

* Select {{workstation_product_name}} AppVM:
** Edit VM firewall rules:
*** Select: '''Deny''' network access except...
*** Disable: Allow ICMP traffic
*** Disable: Allow DNS queries
*** Disable: Allow connections to Updates Proxy
*** Press: OK

== Misc ==
This guide will create a new instance of a {{gateway_product_name}} ProxyVM, which routes all internet traffic through Tor, that you can then connect your {{workstation_product_name}} AppVMs to.

You can repeat this guide multiple times and create as many {{gateway_product_name}} ProxyVM instances as you need, for greater Tor isolation. Note that using multiple {{gateway_product_name}} ProxyVMs simultaneously will reveal a pattern of connecting to multiple sets of Tor guard nodes, which may or may not be a unique usage indicator.

This guide will create a new instance of a {{workstation_product_name}} AppVM, which serves as an AnonVM application environment, that you connect to Tor through a {{gateway_product_name}} ProxyVM of yours.

You can repeat this guide multiple times and create as many {{workstation_product_name}} AppVM instances as you need, for greater Tor and data isolation. You can connect multiple {{workstation_product_name}} AppVMs to the same or different instances of {{gateway_product_name}} ProxyVMs.

If connecting this AppVM to the internet, you will need an existing {{gateway_product_name}} ProxyVM instance to connect to. You may need to '''[[Qubes/Create_Gateway_ProxyVMs|create a {{gateway_product_name}} ProxyVM]]''' before proceeding.

If you wish to keep your version of {{project name}} up-to-date you should also enable the {{project name}} Repository. You should apply this process to all of your {{project name}} TemplateVMs. In otherwords, make sure you follow these directions for both your {{gateway_product_name}} (commonly called whonix-gw) and {{workstation_product_name}} (commonly called whonix-ws).

When running the {{project_name}}, [[{{project name short}}check|Whonixcheck]] will automatically tell you if Debian package updates are available (Debian is the version of Linux that {{project name}} is built upon).

'''3. Enable {{project name}} repository'''

When first running a {{project name}} TemplateVM, a window called "{{project_name}} Setup Wizard" should automatically pop up.

In {{project name}} Setup Wizard:
<pre>
* Select "Yes. Automatically install updates from the {{project name}} team"
* Click <Next>
* Choose which {{project name}} Repository (recommended: {{project name}} Stable Repository)
* Click <Next> 
* Click <Finish>
</pre>

'''To Manually Restart {{project name}} Repository Tool'''

You may also manually start the {{project name}} Repository Tool to change your settings in the future by doing the following from your respective {{project name}} TemplateVMs (i.e. {{workstation_product_name}}, {{gateway_product_name}}, etc.)

In a terminal: 
<pre>
sudo whonix_repository
</pre>

Or by running: 
<pre>
Start Menu -> Applications -> System -> {{project name}} Repository.
</pre>

You may need to first '''[[Qubes/Create_Gateway_ProxyVMs|create a {{gateway_product_name}} ProxyVM]]''' to use, if one does not exist yet.

Note:  If you are installing {{project name}} on top of Qubes OS, you do not need to worry about disabling ICMP timestamps at this stage.  You will do that after you install the {{gateway_product_name}} and {{workstation_product_name}} TemplateVMs when you create your {{project name}} VMs (done through the Qubes VM Manger).  For more information on this, refer to the links provided under the Next Steps section (point's a and b) in the [[Qubes/Install|Install Guide]] for installing {{project name}} onto Qubes.

== {{project name}} 10 TemplateVM Update ==
<br />
With the advent of {{project name}} 11, the update guide for {{project name}} 10 is now deprecated
If you are still using {{project name}} 10, you are advised to install [[Qubes/Install|{{project_name}} 11]]
If you are still interested in updating {{project name}} 10, click on Expand on the right.
<div class="mw-collapsible-content">
This guide explains how to update your {{project name}} TemplateVMs using the update repositories.

You should regularly apply this update process to all of your {{gateway_product_name}} and {{workstation_product_name}} TemplateVMs.


'''1. Attach {{project name}} TemplateVM to a {{gateway_product_name}} ProxyVM (commonly called sys-whonix)'''

You may need to first '''[[Qubes/Create_Gateway_ProxyVMs|create a {{gateway_product_name}} ProxyVM]]''' to use, if one does not exist yet.

In Dom0 &raquo; Qubes VM Manager:

* Select {{project name}} TemplateVM &raquo; VM Settings &raquo; Basic tab &raquo; NetVM:
** Choose an existing {{gateway_product_name}} ProxyVM from the NetVM list for downloading updates.



'''2. Start {{project name}} TemplateVM'''

In Dom0 &raquo; Qubes VM Manager:

* Select {{project name}} TemplateVM:
** Start selected VM



'''3. Launch TemplateVM Terminal'''

In Dom0 &raquo; Application Launcher Menu:

* For your {{project name}} TemplateVM's launcher menu, click on the "Terminal" app to launch it.



'''4. Enable {{project name}} Repository'''

Qubes and Debian updates install by default. If you would also like to install {{project name}} updates this way, then ensure you have the {{project name}} repository enabled -- (or disabled if you prefer). This setting will remain in your TemplateVM for later. On first run of template you will be presented with the {{project name}} repository options, but you may change them at any time.

In {{project name}} TemplateVM &raquo; Terminal:

* Input command: <code>sudo whonix-setup-wizard repository</code>
** Choose: Yes. Automatically install updates from the {{project name}} team.
** Press: OK
** Choose: {{project name}} Stable Repository (unless you are a tester or developer and understand what you are doing).
** Press: OK



'''5. Check and Install Updates'''

In {{project name}} TemplateVM &raquo; Terminal:

* Input command: <code>sudo apt-get update && sudo apt-get dist-upgrade -y</code>

* OR, You can right click the {{project name}} templateVM in '''Qubes Manager''' and select '''Update'''



'''6. Clear Terminal History'''

In {{project name}} TemplateVM &raquo; Terminal:

* Input command: <code>history -cw</code>



'''7. Shutdown {{project name}} TemplateVM'''

In Dom0 &raquo; Qubes VM Manager:

* Select {{project name}} TemplateVM:
** Shutdown selected VM



'''8. Restart/Update {{project name}} VMs'''

If new updates were available and installed, you will need to either simply restart your running {{gateway_product_name}} ProxyVMs and running {{workstation_product_name}} AppVMs for them to be updated -- or alternatively apply this same update process again to your running VMs if not wanting to restart them right away.

== qubes-release package ==
In dom0, upgrade <code>qubes-release</code> to Qubes' dom0 current testing repository. <ref>
The Qubes <code>templates-community-testing</code> repository definition was introduced in [https://github.com/QubesOS/qubes-installer-qubes-os/commit/30cdd9c 30cdd9c9] in Qubes dom0 package [https://github.com/QubesOS/updates-status/issues/582 v3.2-2-qubes-release #582] / [https://github.com/QubesOS/updates-status/issues/584 v4.0-4-qubes-release] which is currently only available in Qubes' <code>qubes-dom0-current-testing</code> repository.
</ref>

{{CodeSelect|code=
sudo qubes-dom0-update --enablerepo=qubes-dom0-current-testing qubes-release
}}

== Qubes R3.2 Only ==

In Qubes R3.2, users must manually update the TemplateVM setting for <code>sys-whonix</code> and <code>anon-whonix</code>:

# Qubes VM Manager -> sys-whonix -> right click -> VM settings -> Template -> {{whonix-gw}} -> OK
# Qubes VM Manager -> anon-whonix -> right click -> VM settings -> Template -> {{whonix-ws}} -> OK

== Download the {{project name}} Templates ==
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Only the Qubes R3.2 version of {{project name}} requires manual downloading of templates with <code>qubes-dom0-update</code>, which downloads {{project name}} from Qubes' dom0 templates-community-testing repository.
}}

* Reinstall see footnote: <ref>Users who wish to reinstall the templates should add <code>--action=reinstall</code>.</ref>
* Testers see footnote: <ref>Users who wish to install the testers-only version should add <code>--enablerepo=qubes-templates-community-testing</code>.</ref>

Download {{gateway_product_name}} (<code>{{whonix-gw}}</code>) TemplateVM.

{{CodeSelect|code=
sudo qubes-dom0-update --enablerepo=qubes-templates-community qubes-template-{{whonix-gw}}
}}

Download {{workstation_product_name}} (<code>{{whonix-ws}}</code>) TemplateVM.

{{CodeSelect|code=
sudo qubes-dom0-update --enablerepo=qubes-templates-community qubes-template-{{whonix-ws}}
}}

= Before installing =

First you need to have the Qubes OS installed on your system.  A helpful Installation Guide for Qubes OS 3.0 is found [https://www.qubes-os.org/doc/InstallationGuideR3.0rc2/ here]

However, before installing Qubes OS on your system, after you have downloaded the Qubes ISO, make sure that you follow the Qubes OS security advice for verifying the signatures of the Qubes ISO found [https://www.qubes-os.org/doc/VerifyingSignatures/ here]

After you have Qubes OS up and running on your system, before you install {{project name}} you must next

{{Computer Security Education}}

= Enigmail / gpg / keyserver =
Since enigmail just calls gpg. And since everything is torified in {{project name}} anyway, and since gpg is stream isolated (by uwt wrapper) anyhow, there is no need for this setting in {{project_name}}.

(Minor security notice: <ref>
It will not be perfectly [[Stream Isolation|stream isolated]]. DNS might go through Tor's TransPort.

If this matters to you, you could theoretically... '''UNTESTED'''

* Install a http to socks converter (such as polipo) listening on 127.0.0.1:8118 and forwarding to <{{gateway_product_name}} IP>:9102.
* Apply the following setting <u>every time you restart Thunderbird</u>.

Thunderbird -> Enigmail (from menu bar) -> Preferences -> Display Expert Settings and Menus -> Advanced -> Additional Parameters -> replace <code>http-proxy=http://127.0.0.1:8118</code> with <code>socks5://<{{gateway_product_name}} IP>:9102</code> -> OK
</ref>)

= Source Code Verification Wheezy =
<pre>
git tag -v {{VersionNew}}-stable
</pre>

<pre>
git log --show-signature -1 "$(git rev-list --max-count 1 {{VersionNew}}-stable)"
</pre>

= Using Tor / Pluggable Transports from the Tor Browser Bundle =
'''Untested!'''

'''Unfinished!'''

TODO:<br />
Figure out and document below here how to use TBB as "system Tor" inside {{gateway_product_name}}. ([https://phabricator.whonix.org/T116 ticket])

Install the Tor Browser Updater by {{project name}} developers ({{Code2|tb-updater}}). <ref>https://github.com/{{project_name_short}}/tb-updater</ref> <ref>[[Tor Browser]]</ref> <ref>
Using <code>--no-install-recommends</code> to prevent installing {{Code2|[https://github.com/{{project_name_short}}/tb-starter tb-starter]}} and {{Code2|[https://github.com/{{project_name_short}}/tb-default-browser tb-default-browser]}}.
</ref>

{{CodeSelect|code=
sudo apt-get install --no-install-recommends tb-updater
}}

Create a new home folder for user debian-tor.

{{CodeSelect|code=
sudo mkdir /home/user/debian-tor
}}

Fix permissions.

{{CodeSelect|code=
sudo chown --recursive debian-tor:debian-tor /home/user/debian-tor
}}

Allow login as user debian-tor by modifying it is default shell {{Code2|false}} to {{Code2|/bin/bash}}.

{{CodeSelect|code=
sudo usermod debian-tor -s /bin/bash
}}

Login as user debian-tor.

{{CodeSelect|code=
sudo su debian-tor
}}

Change directory into {{Code2|/home/debian-tor}}. (Do not use {{Code|~}}. <ref>Because that is set to /var/lib/tor for user debian-tor.</ref>)

{{CodeSelect|code=
cd /home/debian-tor
}}

Download and install Tor Browser.

{{CodeSelect|code=
update-torbrowser
}}

Security warning: Do not start Tor Browser on {{gateway_product_name}} for any purpose other than configuring Tor. Use {{workstation_product_name}} to browse the web using [[Tor Browser]].

Apply {{project name}} Tor config to TBB.

{{CodeSelect|code=
cp /usr/share/tor/tor-service-defaults-torrc /home/debian-tor/tor-browser_en-US/Browser/TorBrowser/Data/Tor/torrc-defaults
}}

TODO for developers:

* Install tb-updater by default on {{gateway_product_name}}?
* Install Tor Browser by default on {{gateway_product_name}}?

{{CodeSelect|code=
mv /home/debian-tor/tor-browser_en-US/Browser/TorBrowser/Data/Tor/torrc-defaults /home/user/debian-tor
}}

Eventual apparmor issues? Copy is better?

{{CodeSelect|code=
ln -s /usr/share/tor/tor-service-defaults-torrc /home/debian-tor/tor-browser_en-US/Browser/TorBrowser/Data/Tor/torrc-defaults
}}

Future work:<br />
Simplify this setup for users by installing this by default. Ticket: [https://phabricator.whonix.org/T118 make TBB usable as "system Tor", so latest pluggable transports and the tor-launcher graphical user interface can be used in {{project_name}}]

= Footer =
<!--
inspired by http://aboli.sh/
@cnpirates ssl(tor) ssl(I2P) coralcdn .sdns .onion .I2P-->
[https://www.whonix.org{{localurl:{{FULLPAGENAME}}}} https] | {{Mirror_nyud_net}} | {{Mirror_tor2web_org}} |

= Infrastructure =
== File Hosting ==
Files are still hosted on sourceforge.net.

Negative:

* No direct download links (hotlinking).
* No SSL.
* Advertisements.

Positive:

* Unlimited quota and traffic. (Although we [https://sourceforge.net/p/forge/site-support/5403/ should remove old releases from time to time].)

== Bug / Feature Request Tracker ==
Now hosted on github: https://github.com/{{project_name_short}}/{{project_name_short}}/issues

A bit suboptimal, since people have to create a second account just for github and it probably won't scale well enough in long term. Positive points are, that it works for many big projects such as Bitcoin and attracts a lot pull requests (for them). So let's see how that works.

= Old Criteria and Plan for Web Hosting =
== Requirements for Good Hosting ==
=== Requirements ===

* Some webspace and sufficient traffic.
* Needs a wiki, a forum, a blog, a mailing list.
* We can either use free project hosting or own hosting.
* Tor friendly.
* No tracking scripts. (Google analytics etc.)
* Permit to sign up and to use the page exclusively over Tor.
* A wiki on that site (media wiki). (And spoilers.) (And flagged revisions.)
* A free SSL certificate.
* All parts off the website reachable over SSL without any warnings.
** sourceforge.net does not offer that (SSL warnings).
** startssl.com offers free SSL certificates. You simply have to prove, that you have control over the domain - but that's not possible with subdomains.
* Hosting and domain.
** Censor resistant in sense of "{{project_name}} will not get deleted."
** Free - if that is possible. No one is willing to pay and in the beginning there are no donations.
* We allow guest/anonymous postings (bug report, feedback, etc.) and moderate it very non-restrictive. (Allow any critique. Only delete off topic talk such as warez.)
** It is still desired to have the less critical parts of the wiki open for guest edits.
** Where no random trolls/crackers can modify anything important.
** A wiki where guest edits are allowed only works when having a feature for [https://en.wikipedia.org/wiki/Flagged_revisions Flagged revisions] Sighted versions, where admins review changes and manually make the edited version the default visible page for everyone. To my knowledge, only mediawiki has such a feature.

=== Answered Questions ===

* Is there a free project hosting fulfilling all requirements?
** Last time checked, no.

=== Links, that may be helpful ===

* [https://en.wikipedia.org/wiki/Comparison_of_open_source_software_hosting_facilities Comparison of open source software hosting facilities]

== Ideal Hosting offers additionally... ==

* We better don't choose something based in non-free countries, such as US.
* Fully accessible by text mode browsers.
* Fully accessible without JavaScript.
* Optionally reachable by an onion service.

= Reviewed Hosting Services =
== sourceforge.net ==
In past, all components of {{project name}} were hosted on sourceforge.net. {{project name}} still uses sourceforge.net as primary bulk file download service. Unfortunately, sourceforge does not provide direct download links (hotlinking).

The internal wiki, forum and the mailing list and download mirrors provided by sf.net provide unlimited traffic, which is very good.

The forum provided by sourceforge.net was not very well suited for {{project_name}}. Most users are expected to post to the forums over Tor. sourceforge.net doesn't handle changing IP's very well. Registered users often had to post twice until their message got stored. And if they haven't stored their draft beforehand it was lost, which was really annoying. Positive points were, that the forum was viewable over SSL, but only for registered users. Let's say user's managed to successfully post a message, then it was still confusing because the message had to be manually moderated due to automatic spam scripts targeting {{project name}} forum. Sourceforges wiki was unfortunately not viewable over SSL, which was very bad.

sf.net generally provides two different categories of hosting. [http://sourceforge.net/p/allura/ Allura] with "some" SSL, i.e. the wiki, forum, mailing list, download mirrors on the other hand [http://sourceforge.net/apps/trac/sourceforge/wiki/Project%20web%20and%20developer%20web%20platform project web].

Project web (no SSL) has somewhat low limited traffic, but according to their support will be manually increased.

One of the major issues with sf.net is, that is does not support SSL everywhere. In past, the [[Contribute]] page contained a [[Contribute#Vote Ideas|Vote]] chapter and one of the votes users are encouraged to, was [http://sourceforge.net/apps/ideatorrent/sourceforge/ideatorrent/idea/721/ Idea #721: Allow SSL for SourceForge pages whenever possible]. Unfortunately, very few users voted.

A very strong point for sf.net is, that big files (virtual machine images) and unlimited traffic are allowed. Another strong one of course is, that sf.net allows {{project name}} to be hosted on sf.net.

Sourceforge.net blocks users from "Cuba, Iran, North Korea, Sudan, Syria".

Other severe usability bugs:

* [https://sourceforge.net/p/allura/tickets/5661/ Improve Support for Tor Browser; option to disable IP check]
* [https://sourceforge.net/p/allura/tickets/5662/ Prevent drafts from getting lost]
* [https://sourceforge.net/p/allura/tickets/6207/ Long content pages broken]

== Google Code ==
* Google Code blocks users from "Cuba, Iran, North Korea, Sudan, Syria".
* [http://google-opensource.blogspot.com/2013/05/a-change-to-google-code-download-service.html No file downloads.]

=== wikimedia / wikpedia ===
Last time we checked wikipedia (wikimedia) derivatives and wikia weren't Tor friendly.

== savannah ==
* https://savannah.nongnu.org (with SSL) looked promising and they are expected to be gone soon or to do any other stupid stuff (banning countries etc.).
* They offer homepages, for example http://www.nongnu.org/qwe/ but seems like there are no subdomains (qwe.nongnu.org) with SSL (for nongnu.org). That's the minimum requirement.
* Support direct download links (hotlinking).
* Can't provide file hosting for {{project_name}}, because it would cause too much traffic. <ref>https://lists.gnu.org/archive/html/savannah-hackers-public/2013-09/msg00015.html</ref>

== github ==
* Already using github as main git repository.
* github.com offers [https://github.com/blog/272-github-pages sub domains], but they are not reachable over SSL.
* github triggers [https://trac.torproject.org/projects/tor/ticket/7084 a] [https://trac.torproject.org/projects/tor/ticket/7265 scary], [https://trac.torproject.org/projects/tor/ticket/6253 error] message. After either many pages trigger that error so it doesn't matter any more or until this message gets fixed in Tor Browser, we shouldn't use the github as issue tracker or website to avoid FUD. When that got somehow a non-problem, we could think about using github as issue tracker.
* How autocreate table of contents using markdown on github? But...
* Github also [https://github.com/github/markup/ supports] mediawiki syntax.
** Seems it automatically creates a table of contents, good!
** Bug: [https://github.com/github/markup/issues/193 Mediawiki Pictures now shown in Github Wiki], unless this bug gets fixed, we could think about using the github source code hosting as website, see [https://github.com/adrelanos/testw/blob/master/README.mediawiki example].
** We haven't found out yet how to use \[\[include ref=WikiHeader\]\] for github mediawiki pages. It is an important feature for {{project name}} pages.
** Looks like mediawiki support is just a gimmick. More advanced formatting like font size, syntax highlighting and so on doesn't work.
* No file hosting service.

== gitorious ==
* Nice as a git mirror. [https://gitorious.org/whonix/whonix In use] as a git mirror.
* SSL for the whole page including the wiki.
* The wiki supports less features, no html (not that important) and no tables. The side bar takes too much space and leaves too less page for the wiki. The wiki is more suited for smaller documentation but not as a whole website replacement like {{project name}} needs.
* No file hosting service.

== self hosted onion service ==
* Adrelanos is not willing to do it.

== free onion hosting service ==
* We could host a website on third party (free) onion service webspace service.
* Risky, because those services can go away any time without notice. - Looks like a valid risk, two just went down. <ref>
* <s>[http://bj6sy3n7tbt3ot2f.onion OnionHosting] (DOWN)</s>
** <s>Price 5 BTC of "life time".</s>
** <s>Seems like it is a legit service. The Administrator is hosting many services in onionland for a long time. - Turns out this wasn't true</s>
** <s>We don't have 5 BTC to open an account. (Written long time before bitcoin skyrocketed.)</s>
* <s>[http://torhostg5s7pa2sn.onion/ torhost] (DOWN)</s>
** <s>I don't know for how long it will stay.</s>
** <s>I [http://p4vm6o4n4hbfqxhy.onion/ have a sponsored account], which has the same features as the fair paid account.</s>
</ref>
* Can they handle the load when we release a new version? Not talking about bandwidth. Just about page views.
* Clearnet users could only access them through onion.to and tor2web.
** onion.to has a scary landing page.
** tor2web [https://lists.torproject.org/pipermail/tor-talk/2013-February/027344.html does not yet appear in search engines]

== mirror.fsf.org ==
* http://mirror.fsf.org/
* Providing direct download links (hotlinking).
* Probably it will not be possible. They have a quite firm policy ([https://www.gnu.org/distros/free-system-distribution-guidelines.html Guidelines for Free System Distributions]) and if Debian didn't manage to fulfill it, surely {{project name}} can't either.
* In theory, an option could be to base {{project name}} on a distribution which is [https://www.gnu.org/distros/free-distros.html on their list already], but that might not be doable for technical reasons. (Questions open up, such as: Are they in sync with Debian unstable? Are they in sync with Debian testing? How long does it take until they deploy updates from security.debian.org? How up to date are their packages? How are they different from Debian?)
* {{project name}} contacted FSF to be their list. Thes declined, because {{project name}} is not standalone. (Does not fulfill point "Complete Distros", since physical isolation users have to install Debian first.)

== seul.org ==
* Sent registration request for seul.org. They don't accept new registrations, but Roger Dingledine (surprise, surprise) said in private mail, he's seeding Tails already and would volunteer to seed {{project_name}}, if there was an announcement mailing list or if we mailed him new releases. Doing this.

== Conclusion ==
In summary there where no open source hosting sites, which offer SSL everywhere and unlimited download of big files. An open source hosting facility providing free webspace and SSL everywhere would be much desirable, but doesn't exist.

= Hosting Services to be reviewed =
== General Questions ==
* Download traffic?
* Quota?
* Direct download links (hotlinking) possible?
* Optional: SSL downloads?

== Mirror Providers ==
There are a few lists

* http://sourceforge.net/apps/trac/sourceforge/wiki/Mirrors#MirrorProviders
* http://mirror.slitaz.org/mirrors
* http://www.freebsd.org/doc/handbook/mirrors-rsync.html
* http://www.debian.org/distrib/archive

of mirror providers. We could contact them and ask if there were willing to provide direct download links (hotlinking) (+SSL) for {{project_name}}.

When they are able to sponsor sourceforge, in comparison, sponsoring {{project name}} would be only peanuts to them. The question is, if they provide service for individual requests.

== codeplex ==
* Seem to offer direct download links. Just stored some random download links to see how long the direct link is valid.
* https://kinectmultipoint.codeplex.com/downloads/get/692328
* http://download-codeplex.sec.s-msft.com/Download/Release?ProjectName=kinectmultipoint&DownloadId=692328&FileTime=130174287196930000&Build=20602

== bitbucket ==
* Seem to offer direct download links. Just stored some random download links to see how long the direct link is valid.
* https://bitbucket.org/pypy/pypy/downloads
* http://cdn.bitbucket.org/pypy/pypy/downloads/pypy-2.1-beta1-arm-armhf-raspbian.tar.bz2

== autistici ==
https://vpn.autistici.org could be asked, if they were willing to act as webseed.

== alioth ==
http://alioth.debian.org could be asked, if they accepted {{project name}} as a new project, related enough to Debian, then they might be used as webseed.

== Links, that may be helpful ==
* [https://en.wikipedia.org/wiki/Comparison_of_open_source_software_hosting_facilities Comparison of open source software hosting facilities]

== Asked ==
* http://linux.psu.ru/ linux at psu.ru
** November 2013: wants to test {{project name}} for a few months and then decide

* November 2013: mirror.aarnet.edu.au
** asked where their sourceforge folder is
** and if they tell us: asked if we may use them as master mirror for other mirrors

* November 2013: mirrorservice.org
** asked if we are allowed to directly download from them
** asked if we may use them as master mirror for other mirrors

Answer:

<pre>
We have no problem with you direct linking to us or you suggesting other
sites using us to mirror from (we offer rsync too).

But bear in mind that the data in that mirror is controlled by
SourceForge. They don't ship all files to all mirrors - each mirror
specifies how much data it can take, and they put stuff on up to that
limit based on popularity (presumably). Their delivery mechanism knows
which files are on which mirrors, so end users don't get pointed at a
mirror that doesn't contain the file they're after.

So it is possible that we may not have a complete copy of all your files,
and it may change in the future without any intervention from us.

If you're happy with that situation then go ahead and link to us.
</pre>

Answer to follow up email:

<pre>
We don't have any upload facilities I'm afraid. We only offer downloads.

One solution is to run a private rsync server yourselves that only
certain mirrors can access. It doesn't have to be that quick.

You may find other mirrors do offer an upload facility though.
</pre>

* November 2013: switch.ch
** asked for an upload account
** asked for master rsync capabilities

Answer:

<pre>
Dear Sir 

Thank you for your e-mail of 25th November 2013 regarding {{project_name}}. 

Sorry, we are not interested in your offer.
</pre>

= Forum Header =
<pre>
<center><b>Welcome to the new {{project name}} forums!</b></center>
<center><b>As part of the transition, everyone will have to reset their passwords, as they didn't come over in the transisition process. (<a href=https://forums.whonix.org/t/discourse-bug-report-thread/1612>forum thread</a>)</b></center>
</pre>

= {{project name}} APT Repository URI Sourceforge =
To use the sourceforge location uri rather than mirror.whonix.de uri, use the following command line switch. Example.

{{CodeSelect|code=
sudo whonix_repository --baseuri http://sourceforge.net/projects/whonixdevelopermetafiles/files/internal/ --repository testers --enable
}}

= XChat =
All HexChat plugins have been deactivated (hardening) and deactivated using dpkg-divert. To re-enable them, use one of the following commands depending on which plugin you need.

{{Open_a_{{workstation_product_name}}_Terminal}}

{{CodeSelect|code=
sudo dpkg-divert --rename --remove /usr/lib/xchat/plugins/python.so
}}
{{CodeSelect|code=
sudo dpkg-divert --rename --remove /usr/lib/xchat/plugins/tcl.so
}}
{{CodeSelect|code=
sudo dpkg-divert --rename --remove /usr/lib/xchat/plugins/perl.so
}}

Those commands are reverted when {{project name}} Debian Packages get updated. TODO: Document how to prevent that.

= VPN sysvinit =
sysvinit: (Legacy. Prefer the systemd method below.) <ref>
To improve this situation, if you are using OpenVPN and Debian's init script to automatically start it, add an insserv override to wait for openvpn being started.

1. Create a new file {{Code|/etc/insserv/overrides/tor}}. 

{{Open with root rights|filename=
/etc/insserv/overrides/tor
}}

2. Add the following content.

<pre>
### BEGIN INIT INFO
# Provides:          tor
# Required-Start:    $local_fs $remote_fs $network $named $time
# Required-Stop:     $local_fs $remote_fs $network $named $time
# Should-Start:      $syslog openvpn
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts The Onion Router daemon processes
# Description:       Start The Onion Router, a TCP overlay
#                    network client that provides anonymous
#                    transport.
### END INIT INFO
</pre>

3. Then apply these changes by running.

{{CodeSelect2|code=
sudo update-rc.d tor defaults
}}
</ref>

= Repository Location URI =

There are two repository location URI's.

* mirror.whonix.de
** Default: yes. <ref>Since {{project name}} 10.</ref>
** Download speed: fast.
** Agility: After uploading new packages, it takes ~1 hour until all mirrors on the mirror.whonix.de mirror system upgraded.
** Target audience: most users.
* sourceforge
** Default: no. <ref>Was the default up to {{project name}} 9.</ref>
** Download speed: slow.
** Agility: After uploading new packages, packages are available almost instantly.
** Target audience: developers, perhaps testers.

To use the whonix.org location uri rather than mirror.whonix.de uri, use the following command line switch. Example.

= VPN DNS Configuration =

Currently only manual.

{{Open with root rights|filename=
/etc/resolv.conf
}}

Comment out.

<pre>
#nameserver 10.152.152.10
</pre>

Add.

<pre>
## Riseup.net OpenVPN DNS server
nameserver 172.27.100.1
</pre>

If you are not using riseup, you need to replace 172.27.100.1 and enter the virtual LAN IP address of your VPN providers DNS server. You might be able to obtain it from your VPN provider. You can also try to infer it after successfully connecting to the VPN from running "sudo route". The first destination default gateway should function as DNS server also.

Save.

If you want to be sure, that ''/etc/resolv.conf'' does not get overwritten by other packages. (Such as DHCP or resolvconf.)

{{CodeSelect2|code=
sudo chattr +i /etc/resolv.conf
}}

If you ever want to remove it, use ''-i''.

(A more usable way is TODO research, help welcome. As possible starting point, see footnote. <ref>
Possibly Install Packages. But would have to happen much earlier before changing {{project name}} firewall rules. (Because then Tor-only apt will no longer work.)

[[Update]] package lists.
<pre>
sudo apt-get update
</pre>

Install resolvconf. Since this is used by /etc/openvpn/update-resolv-conf. We probably better should not install it by default since it is not needed for {{project name}} generally but may introduce new issues.

<pre>
sudo apt-get install resolvconf
</pre>

Possibly /etc/openvpn/openvpn.conf changes.

<pre>
up "/usr/bin/sudo script_type=up dev=tun0 /etc/openvpn/update-resolv-conf"
down "/usr/bin/sudo script_type=down dev=tun0 /etc/openvpn/update-resolv-conf"
</pre>

Possibly /etc/sudoers.d/tunnel_unpriv additions.

<pre>
tunnel ALL=(ALL) NOPASSWD: /etc/openvpn/update-resolv-conf *
Defaults:tunnel env_keep += script_type
Defaults:tunnel env_keep += dev
</pre>
</ref>)

= merged chroot-scripts =
=== anon-shared-build-apt-sources-tpo ===
<pre>
./packages/anon-shared-build-apt-sources-tpo/usr/lib/anon-dist/chroot-scripts-post.d/40_add_torprojects_key
./packages/anon-shared-build-apt-sources-tpo/usr/lib/anon-dist/chroot-scripts-post.d/50_update_tpo_package_list
./packages/anon-shared-build-apt-sources-tpo/usr/lib/anon-dist/chroot-scripts-post.d/60_install_deb.torproject.org-keyring
</pre>

* Details: Adds The Tor Projects's (TPO) APT repository to Anonymity Linux Distributions during build. - Useful, because TPO's repository sometimes contains better/more recent versions of Tor, obfsproxy, torsocks, etc.
* Used by default in {{project name}} build script: Yes.
* Negligible for {{project name}} installations from repository: Not essential, but probably better not neglected.
* Convertible into postinst script: If you have any ideas? Running "apt-get update" to include TPO's repository while from within a maintainer script apt-get/dpkg is already running is not possible.
* package: https://github.com/{{project_name_short}}/anon-shared-build-apt-sources-tpo
* script: 
** <s>https://github.com/{{project_name_short}}/anon-shared-build-apt-sources-tpo/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/40_add_torprojects_key</s> (Converted to postinst script in {{project name}} 13)
** https://github.com/{{project_name_short}}/anon-shared-build-apt-sources-tpo/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/50_update_tpo_package_list
** https://github.com/{{project_name_short}}/anon-shared-build-apt-sources-tpo/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/60_install_deb.torproject.org-keyring

=== anon-gw-build-upgrade-tor ===
<pre>
./packages/anon-gw-build-upgrade-tor/usr/lib/anon-dist/chroot-scripts-post.d/70_update_tor_and_obfsproxy
</pre>

* Details: Upgrading Tor on Anonymity Distributions from The Tor Project's APT repository, because that sometimes contains better/more recent versions of Tor.
* Used by default in {{project name}} build script: Yes.
* Negligible for {{project name}} installations from repository: Not essential, but probably better not neglected.
* Convertible into postinst script: If you have any ideas? Requires that the [[#anon-shared-build-apt-sources-tpo]] chroot-script has been already applied. Running "apt-get install" from a maintainer script while dpkg/apt-get is running is impossible.
* package: https://github.com/{{project_name_short}}/anon-gw-build-upgrade-tor
* script: https://github.com/{{project_name_short}}/anon-gw-build-upgrade-tor/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/70_update_tor_and_obfsproxy

=== anon-shared-build-upgrade-torsocks ===
<pre>
./packages/anon-shared-build-upgrade-torsocks/usr/lib/anon-dist/chroot-scripts-post.d/70_update_torsocks
</pre>

* Details: Upgrading torsocks on Anonymity Distributions from The Tor Projects repository because that sometimes contains better/more recent versions of torsocks (which is required for [[Stream Isolation]] and by [https://github.com/{{project_name_short}}/uwt uwt].
* Used by default in {{project name}} build script: Yes.
* Negligible for {{project name}} installations from repository: Not essential, but probably better not neglected.
* Convertible into postinst script: Same situation as [[#anon-gw-build-upgrade-tor]].
* package: https://github.com/{{project_name_short}}/anon-shared-build-upgrade-torsocks
* script: https://github.com/{{project_name_short}}/anon-shared-build-upgrade-torsocks/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/70_update_torsocks

=== anon-shared-build-ban-nonfree ===
<pre>
./packages/anon-shared-build-ban-nonfree/usr/lib/anon-dist/chroot-scripts-post.d/75_vrms
</pre>

* Details: Check for nonfree packages during build of Anonymity Distributions to make sure none are installed - for legal reasons.
* Used by default in {{project name}} build script: Yes.
* Negligible for {{project name}} installations from repository: Up to you.
* Convertible into postinst script: Probably not? For this script to have a chance of being effective, it must run after installation of all packages is done.
* package: https://github.com/{{project_name_short}}/anon-shared-build-ban-nonfree
* script: https://github.com/{{project_name_short}}/anon-shared-build-ban-nonfree/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/75_vrms

=== anon-shared-build-inst-tb ===
<pre>
./packages/anon-shared-build-inst-tb/usr/lib/anon-dist/chroot-scripts-post.d/70_torbrowser
</pre>

* Short description: installs Tor Browser during build
* Details: Installs Tor Browser in Anonymity Linux Distributions during build using [https://github.com/{{project_name_short}}/tb-updater tb-updater]. (Only interesting for own custom builds that are not supposed to be redistributed.)
* Used by default in {{project name}} build script: No. [Used by [https://github.com/{{project_name_short}}/qubes-template-whonix qubes-template-whonix] by default: Yes.]
* Negligible for {{project name}} installations from repository: Yes.
* Convertible into postinst script: Not required, because not used by default in {{project name}} build script and because for [[Tor_Browser#Not_installed_by_Default_Footnote|legal reasons]] it is best if users download TBB themselves.
* package: https://github.com/{{project_name_short}}/anon-shared-build-inst-tb
* script: https://github.com/{{project_name_short}}/anon-shared-build-inst-tb/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/70_torbrowser

=== anon-shared-build-log-build-version ===
<pre>
./packages/anon-shared-build-log-build-version/usr/lib/anon-dist/chroot-scripts-post.d/70_log_build_version
</pre>

* Details: Logs build version during build. TODO: Why important.
* Used by default in {{project name}} build script: Yes.
* Negligible for {{project name}} installations from repository: Ideally, no.
* Convertible into postinst script: 
* package: https://github.com/{{project_name_short}}/anon-shared-build-log-build-version
* <s>script: https://github.com/{{project_name_short}}/anon-shared-build-log-build-version/blob/master/usr/lib/anon-dist/chroot-scripts-post.d/70_log_build_version</s> (Deprecated in {{project name}} 13. Replaced by anon-base-files postinst.)

= flashproxy =
'''Untested!'''<br />
Might work. In short: just forget about it. <ref>
[https://trac.torproject.org/projects/tor/ticket/17428 Flashproxy has been removed from TBB.] Therefore it can be considered deprecated.
</ref>

Flash Proxy Bridges. This has NOTHING to do with Adobe Flash.
<div class="toccolours mw-collapsible mw-collapsed">
If you would like to see the unfinished documentation, please press on expand on the right.
<div class="mw-collapsible-content">
Should work in {{gateway_product_name}} as well, but require some fiddling. See also [https://sourceforge.net/p/whonix/discussion/general/thread/729ba238/ Forum topic].

1. Set up a Port Forwarding from your Router to your Computer

https://trac.torproject.org/projects/tor/wiki/FlashProxyHowto#Settingupportforwarding

2. Enable port forwarding from your host operating system to {{gateway_product_name}}. Enter this command in a terminal on the host.

Qubes:

TODO

part of the solution might be:<br />
https://www.qubes-os.org/doc/qubes-firewall/#tocAnchor-1-1-5

KVM:

TODO

VirtualBox:

{{CodeSelect|code=
VBoxManage modifyvm "{{gateway_product_name_short}}" --natpf1 "9000",tcp,127.0.0.1,9000,,9000
}}

3. {{Firewall Settings}}

4. Add the following content.

{{CodeSelect|code=
GATEWAY_ALLOW_INCOMING_FLASHPROXY=1
FLASHPROXY_PORT=9000
}}

5. Save.

6. {{Reload Firewall}}

7. Install flashproxy. <ref>
Will be installed by default in {{project name}} 13 and above:<br />
https://forums.whonix.org/t/ideas-topics-related-to-chaining-pluggable-transports/348/8
</ref>

{{CodeSelect|code=
sudo apt-get install flashproxy-client
}}

8. {{Open_/usr/local/etc/torrc.d/50_user.conf}}

9. Add. <ref>
Source:
{{CodeSelect|code=
/usr/share/doc/flashproxy-client/torrc
}}
</ref>

{{CodeSelect|code=
UseBridges 1

# The address and port are ignored by the client transport plugin.
Bridge flashproxy 0.0.1.0:1 4D6C0DF6DEC9398A4DEF07084F3CD395A96DD2AD
Bridge flashproxy 0.0.1.0:2 4D6C0DF6DEC9398A4DEF07084F3CD395A96DD2AD
Bridge flashproxy 0.0.1.0:3 4D6C0DF6DEC9398A4DEF07084F3CD395A96DD2AD
Bridge flashproxy 0.0.1.0:4 4D6C0DF6DEC9398A4DEF07084F3CD395A96DD2AD
Bridge flashproxy 0.0.1.0:5 4D6C0DF6DEC9398A4DEF07084F3CD395A96DD2AD

# Change the second number here (9000) to the number of a port that can
# receive connections from the Internet (the port for which you
# configured port forwarding).
ClientTransportPlugin flashproxy exec /usr/bin/flashproxy-client --register :0 :9000
}}

10. Save.

11. {{Reload Tor}}

12. Done.
</div>
</div>

= scramblesuit =
[https://labs.riseup.net/code/issues/7909#note-8 Quote intrigeri] (Tails developer):
<blockquote>
On tor-talk we've been told "You shouldn't prioritise ScrambleSuit because it is superseded by obfs4", and there are now pressing plans in the Tor Project to deprecate obfs2 and obfs3 in favour of obfs4. Hence rejecting this ticket, and focusing on [https://labs.riseup.net/code/issues/7980 #7980] [obfs4 support] instead.
</blockquote>

[https://blog.torproject.org/blog/recent-and-upcoming-developments-pluggable-transports Also see Tor Announcement under heading "obfs4 and scramblesuit"]

{{CodeSelect|code=
ClientTransportPlugin obfs2,obfs3,scramblesuit exec /usr/bin/obfsproxy managed
Bridge scramblesuit 141.201.27.48:420 gliberish password=more-gliberish
}}

[[AppArmor]] issue. Probably not been reported anywhere yet.
<pre>
audit: type=1400 audit(1439818522.818:9): apparmor="DENIED" operation="mkdir" profile="/usr/bin/obfsproxy" name="/var/lib/tor/pt_state/scramblesuit/" pid=11163 comm="obfsproxy" requested_mask="c" denied_mask="c" fsuid=106 ouid=106
</pre>

= Bridges =
=== obfs3 ===
Example of using {{Code2|obfs3}} bridges:
You cannot use the example bridge {{Code2|141.201.27.48:420}} below, because it is only an example. You still need to find your own bridges as explained in the section above, titled [[#Finding_a_bridge_and_choosing_the_right_protocol|Finding a bridge and choosing the right protocol]].

{{CodeSelect|code=
UseBridges 1
ClientTransportPlugin obfs2,obfs3 exec /usr/bin/obfsproxy managed
bridge obfs3 141.201.27.48:420 4352e58420e68f5e40bf7c74faddccd9d1349413
}}

=== obfs4 ===
Example using {{Code2|obfs4}} bridges.

You cannot use the example bridge {{Code2|141.201.27.48:420}} below, because it is only an example. You still need to find your own bridges as explained in the section above, titled [[#Finding_a_bridge_and_choosing_the_right_protocol|Finding a bridge and choosing the right protocol]].
{{CodeSelect|code=
UseBridges 1
ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy managed
bridge obfs4 161.217.177.95:10703 B3B8009D01BB7E5FDFAEC cert=4RaIqGiOytEXm6Hw iat-mode=0
}}

= CVE-2016-1252 =
[[Deprecated/CVE-2016-1252]]

= Dev/Mirrors =
Original discussion: https://github.com/{{project_name_short}}/{{project_name_short}}/issues/96

List of all mirrors.

<pre>
dig mirror.whonix.de ANY +noall +answer
</pre>

Test.

{{CodeSelect|code=
curl -H 'Host: mirror.whonix.de' -k http://109.230.212.53/whonixdevelopermetafiles/internal/news_v4/whonix_news.tar.xz.asc
}}

issues

* ssl support: https://phabricator.whonix.org/T145
* onion support
* lag until global dns is updated (when mirrors [temporarily] do not work)
* lag after uploading files
* cannot have any kind of [[Dev/Download_Statistics|download statistics]]
* mirrors are less trusted than whonix.org server

Moving away from mirror network to whonix.org:<br />
https://www.whonix.org/blog/upcoming-usability

= Firejail =
'''3. ''Optional'' - edit janondisttorbrowser.desktop in an editor with root rights.'''

{{Open_with_root_rights|filename=
/usr/share/applications/janondisttorbrowser.desktop
}}

'''4. ''Optional'' - prepend the Exec= line with "firejail"'''

    Exec=firejail torbrowser %u

Save and exit.

Note: 

'''3. ''Optional'' - edit firefox-esr.desktop in an editor with root rights:'''

{{Open_with_root_rights|filename=
/usr/share/applications/firefox-esr.desktop
}}

'''4. ''Optional'' - prepend the Exec= line with "firejail"'''

    Exec=firejail /usr/lib/firefox-esr/firefox-esr %u

Note: Instead of launching sand-boxed applications from the terminal, both {{project name}} and [[{{q_project_name_short}}|{{q_project_name}}]] users can edit the relevant .desktop file that launches a process and prepend the executable path with the firejail command. This process can be repeated with every .desktop application file if desired.<ref>https://www.whonix.org/wiki/Dev/Firejail</ref>

= onionshare from git with Debian jessie =
'''Developers only!'''

==== Preparation ====
You need newer control port filter / upgrade to {{project name}} 14 developers-only. You get it by upgrading to {{project name}} 14 developers-only.

Upgrade both {{gateway_product_name}} and {{workstation_product_name}} to {{project name}} 14 developers-only. For instructions see:
[[Upgrading_{{project_name}}_13_to_{{project_name}}_14]]

Or use {{project name}} 13.0.0.1.4 developers-only from https://forums.whonix.org/t/whonix-13-0-0-1-4-developers-only/3486/3 or newer (if existing).

==== Configure Control Port Filter Proxy ====
On {{gateway_product_name}}.

Control Port Filter Proxy needs some adjustments.

{{CodeSelect|code=
sudo cp /usr/share/tor-controlport-filter-merger/examples/40_onionshare.yml /etc/tor-controlport-filter-merger.d/
}}

Restart Control Port Filter Proxy.

{{CodeSelect|code=
sudo service tor-controlport-filter restart
}}

==== Configure {{workstation_product_name}} Firewall  ====
Inside {{workstation_product_name}}.
<ref>As per https://labs.riseup.net/code/issues/7870#note-15 onionshare uses ports 17600 to 17659.</ref>

{{Firewall Settings Workstation}}

Add.

{{CodeSelect|code=
EXTERNAL_OPEN_PORTS+=" $(seq 17600 17659) "
}}

Save.

{{Reload_Firewall_ws}}

==== enable backports  ====
Add Debian Jessie Backports to repos sources lists.

{{CodeSelect|code=
sudo su -c "echo -e 'deb http://http.debian.net/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"
}}

{{Apt-Pinning}}

==== Install Dependencies ====
{{Update}}

{{CodeSelect|code=
sudo apt-get update
}}

Install the dependencies from jessie-backports. <ref>[https://github.com/micahflee/onionshare/issues/232#issuecomment-162349804 Requires] [https://packages.debian.org/de/jessie-backports/python3-stem python3-stem] 1.4.1b-1~bpo8+1 or higher. Can be installed from Debian backports.</ref>

{{CodeSelect|code=
sudo apt-get install --no-install-recommends -t jessie-backports python3-stem python3-flask python3-pyqt5 python-nautilus
}}

==== Install onionshare ====
You need to use onionshare 0.9.1 or above, because it has the required support for ephemeral Tor onion services. <ref>Tor control protocol command add_onion</ref> Install it from git.

{{CodeSelect|code=
git clone https://github.com/micahflee/onionshare.git
}}

==== Start onionshare - regular ====
{{CodeSelect|code=
cd onionshare
}}

{{CodeSelect|code=
cd dev_scripts
}}

{{CodeSelect|code=
./onionshare /usr/bin/nano
}}

==== Start onionshare - stealth ====
{{CodeSelect|code=
sudo su -c "echo -e 'deb http://http.debian.net/debian stretch main' > /etc/apt/sources.list.d/stretch.list"
sudo apt-get update
sudo apt-get install --no-install-recommends -t stretch python3-stem
}}

{{CodeSelect|code=
./onionshare --stealth /usr/bin/nano
}}

==== Hack to get onionshare with stealth Onion Services Support ====
Developers only.

<pre>
#!/bin/bash

set -x
set -e

sudo su -c "echo -e 'deb http://http.debian.net/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list"

sudo su -c "echo -e 'deb http://http.debian.net/debian stretch main' > /etc/apt/sources.list.d/stretch.list"

sudo apt-get update

sudo apt-get install --yes --no-install-recommends -t jessie-backports python3-stem python3-flask python3-pyqt5 python-nautilus

sudo apt-get install --yes --no-install-recommends -t stretch python3-stem

## build dependencies
sudo apt-get install -y build-essential fakeroot python3-all python3-stdeb dh-python  python3-flask python3-stem python3-pyqt5 python-nautilus python3-nose

echo 'EXTERNAL_OPEN_PORTS+=" $(seq 17600 17659) "' | sudo tee /etc/whonix_firewall.d/50_user.conf

sudo whonix_firewall

cd onionshare

./install/build_deb.sh 

sudo dpkg -i deb_dist/onionshare_0.9.2-1_all.deb

true $?
</pre>

==== Current Status ====
TODO

Forum discussion:<br />
https://forums.whonix.org/t/feature-request-onionshare-support

== Timesync ==
Hardware clock: Set to UTC. OpenSSL (used by Tor) leaks it, but that is of no concern. Tor is running on Linux and Linux is expected to be run in UTC. Therefore there is no point to set it to the local time zone of the user.

** An adversary could guess if someone is running an onion service with constant clock adjustments, that it is hosted inside a {{workstation_product_name}}. It is unknown if the clock adjustments by sdwdate are big enough to enable an adversary to guess that.
*** '''TODO''': Open question... "''ntpd adjusts the clock in small steps so that the timescale is effectively continuous and without discontinuities''" - is that possible with a sdwdate like approach as well? -> Working on [https://github.com/{{project_name_short}}/{{project_name_short}}/issues/169 sclockadj].

** Running sdwdate also every [ 1440 minutes + random(0-1440) ]. Not running this every hour at a random time, because Tor does not like clock jumps. [deprecated because sclockadj] When testing this, there were cases where the clock jumped about 800 seconds, which caused Tor to expire circuits, which caused connection interrupts.
** '''TODO''': Open question... How often should sdwdate run on {{gateway_product_name}}? Every hour is a bad idea, as we see above. Not running it again when some people may run {{gateway_product_name}} for days or weeks is not good either, since the clock can drift. Maybe it should run wait 24 hours and then wait a random amount of minutes within 24 hours? -> Will be solved when [https://github.com/{{project_name_short}}/{{project_name_short}}/issues/169 sclockadj] gets finished.

*** The entry guard or bridge can see the time through TCP timestamp.
*** Continuous clock jumps could help the entry guard or bridge guessing, that a {{gateway_product_name}} is connected.
*** '''TODO''': Open question... "''ntpd adjusts the clock in small steps so that the timescale is effectively continuous and without discontinuities''" - is that possible with a sdwdate like approach as well? -> Will be solved when [https://github.com/{{project_name_short}}/{{project_name_short}}/issues/169 sclockadj] gets finished.

* <s>sdwdate is designed to be as secure as TLS (RFC 2246) but of course the security of TLS is often reduced to whichever CA racket you believe is trustworthy. By default, sdwdate uses curl that by default trusts your local CA root store - so when any of these companies assist in a MITM attack, malicious time information could be feed into your system.</s>

= [[{{q_project_name_short}}|{{q_project_name}}]] Manual Installation =
'''2. Install {{gateway_product_name}} and {{workstation_product_name}} TemplateVM'''

{{Project Current Version Maybe Warning}}

Write down this command inside the konsole , then hit "Enter". 

{{CodeSelect|code=
sudo qubes-dom0-update --enablerepo=qubes-templates-community qubes-template-whonix-gw qubes-template-whonix-ws
}}

'''3. Make sure inactive VMs are shown'''

Start Qubes VM Manager (QVMM).

[[File:qubes-whonix3.png]]

In Qubes VM Manager, if you do not see {{Code2|whonix-…}} in the list, use the “View” menu to toggle the setting “Show/Hide inactive VMs”.

[[File:qubes-whonix5.png]]

After finishing the download process , you should see {{Code2|whonix-ws}} and {{Code2|whonix-gw}}.

[[File:qubes-whonix2.png]]

'''4. Enable AppArmor''' '''(optional, testers-only security enhancement)'''
{{Qubes_AppArmor}}

'''5. Create {{gateway_product_name}} ProxyVM'''

<code>
Qubes VM Manager -> Create AppVM 
</code>

[[File:qubes-whonix4.png]]

Then change the settings as it shown below. (You can choose any name and color you like.)

[[File:Create_Qubes-{{gateway_product_name_short}}_ProxyVM23423.png]]

'''6. Create {{workstation_product_name}} AppVM'''

<code>
Qubes VM Manager -> Create AppVM 
</code>

[[File:Create_[[{{q_project_name_short}}|{{q_project_name}}]] {{workstation_product_name}}_AppVM2.png]]

'''7. TemplateVM proxy settings'''

a) Attach {{project name}} TemplateVMs to a {{gateway_product_name}} ProxyVM (commonly called sys-whonix)

<code>
Qubes VM Manager -> one left click on TemplateVM whonix-gw -> VM-Settings
</code>

[[File:whonix_templatevms_to_a_GW.png]]

<code>
NetVM: -> sys-whonix -> OK
</code>

[[File:Qubes-{{gateway_product_name_short}}_TemplateVM_Qubes_VM_Manager_Settings.png]]

b) Attach {{project name}} TemplateVMs to a {{workstation_product_name}} appVM (commonly called ws-whonix)

<code>
Qubes VM Manager -> one left click on TemplateVM whonix-ws -> VM-Settings
</code>

then

<code>
NetVM: -> sys-whonix -> OK
</code>

[[File:whonix_templatevms_to_a_GW2.png]]

= Why is KDE (big) the default desktop environment? Why not use a minimal DE? =
This answer is outdated by now.

development discussion:<br />
https://forums.whonix.org/t/updating-whonix-from-jessie-to-stretch-migration-to-gnome-shell-port-to-gnome-ish-applications

<s>This was a difficult development path decision. Many people, including Patrick Schleizer, didn't like the old Openbox interface in TorBOX (deprecated project name) 0.1.3 because it was too inconvenient, non-intuitive, uncommon, difficult, etc. There is no rational unarguable choice for the best desktop.

MATE has not been chosen, because there are no packages in Debian repositories. GNOME2 is deprecated and only a fraction of GNOME2 users like GNOME3. Other desktops (LXDE, XFCE, Openbox) are less widespread, not so pretty, and in some opinions harder to use (even difficult to create a desktop shortcut), thus not attracting many users.

Choosing KDE is a personal preference by {{project name}} developer Patrick Schleizer. KDE has one advantage, the only developer likes it and remains interested to maintain and develop {{project name}} further.

You are free to uninstall KDE and install any other desktop environment of your own choice.

This is a non-ideal situation. Inspired by [https://web.archive.org/web/20140903235102/http://www.browserchoice.eu/BrowserChoice/browserchoice_en.htm select your webbrowser], it would be ideal if {{project name}} would offer to choose which desktop to install but unfortunately, such a wizard [http://lists.debian.org/debian-derivatives/2012/09/msg00003.html does not exist yet]. There are no development resources to implement such a solution. Help is welcome.

If there were contributors, we could maybe also include other desktop environments by default or offer alternative {{project name}} builds with different default desktop environments or ideally implement a "choose your desktop" option after first boot of {{project_name}}.

Please also read [[#Why are the {{project name}} images so big?]] above, the same applies here.

See also [[Other Desktop Environments]] for workarounds/alternatives.</s>

= Tor Messenger =
Installation instructions.

{{
TPO_Manual_Install
|website=https://trac.torproject.org/projects/tor/wiki/doc/TorMessenger#Downloads
|software=Tor Messenger
|store_where=/home/user/
|path_installed=/home/user/tor-messenger_en-US
|starter=start-tor-messenger
}}

For usage instructions refer to [https://archive.is/uDNvm this] guide.

Usage of Tor Messenger in {{project name}} should not differ from usage of Tor Messenger outside of {{project_name}}. Already pre-configured for [[Stream Isolation]], no manual settings changes required.

[https://forums.whonix.org/t/tor-messenger-on-whonix/1565/3 Forum discussion]

= [[{{q_project_name_short}}|{{q_project_name}}]] Build =
== Build [[{{q_project_name_short}}|{{q_project_name}}]] Templates - Old ==
<pre>
make get-sources
</pre>

<pre>
./setup
</pre>

override.conf
<pre>
VERBOSE = 3
DEBUG = 1
REPO_PROXY = http://127.0.0.1:3142
CHECK_BRANCH = 1

BRANCH_template_whonix = master
GIT_URL_template_whonix = https://github.com/adrelanos/qubes-template-whonix.git
</pre>

Again required?

<pre>
./setup
</pre>

<pre>
make prepare-merge
</pre>

Another time. <ref>https://github.com/QubesOS/qubes-issues/issues/1420</ref>

<pre>
make prepare-merge
</pre>

<pre>
make qubes-vm
</pre>

<pre>
make templates --debug=v
</pre>

== Build [[{{q_project_name_short}}|{{q_project_name}}]] Templates - New ==
Requires a Qubes Fedora TemplateBasedAppVM.

(Also possible in a Qubes Fedora template based StandaloneVM.)

Create developers-only images.

<pre>
sudo dnf install git createrepo rpm-build rpm-sign make python-sh rpmdevtools rpm-sign dialog dpkg-dev debootstrap apt-cacher-ng
</pre>

<pre>
DISTS_VM="whonix-gateway whonix-workstation" \
COMPONENTS="linux-template-builder builder builder-debian template-whonix" \
BUILDER_PLUGINS="builder-debian template-whonix" \
USE_QUBES_REPO_VERSION=3.2 \
USE_QUBES_REPO_TESTING=1 \
VERBOSE=3 \
DEBUG=1 \
REPO_PROXY=http://127.0.0.1:3142 \
BRANCH_template_whonix=master \
GIT_URL_template_whonix=https://github.com/adrelanos/qubes-template-whonix.git \
make get-sources --debug=v
</pre>

<pre>
DISTS_VM="whonix-gateway whonix-workstation" \
COMPONENTS="linux-template-builder builder builder-debian template-whonix" \
BUILDER_PLUGINS="builder-debian template-whonix" \
USE_QUBES_REPO_VERSION=3.2 \
USE_QUBES_REPO_TESTING=1 \
VERBOSE=3 \
DEBUG=1 \
REPO_PROXY=http://127.0.0.1:3142 \
BRANCH_template_whonix=master \
GIT_URL_template_whonix=https://github.com/adrelanos/qubes-template-whonix.git \
make template --debug=v
</pre>

Marek can build testers-only and stable [[{{q_project_name_short}}|{{q_project_name}}]] images. See: https://github.com/QubesOS/qubes-issues/issues/2228

= Sandboxed Tor Browser =

== Introduction ==
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = The sandboxed Tor Browser is currently only available for 64-bit Linux users.
}}

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = Testers only! There are unresolved issues which affect fingerprinting and security, and as of June 2018, a decision has been made to abandon the project. <ref>See [https://trac.torproject.org/projects/tor/ticket/25540 Stop building and distributing sandboxed-tor-browser binaries].</ref>
}}

{{Anchor|Tor Browser Hardened}}
<font size=-2>[[#Tor Browser Hardened]]</font><br />
The "hardened" Tor Browser has been deprecated and major features like Selfrando memory randomization are now part of the alpha series and planned for eventual mainline adoption. Consequently, The Tor Project recommends users seeking a higher security solution should default to the sandboxed Tor Browser: <ref>https://blog.torproject.org/blog/discontinuing-hardened-tor-browser-series</ref> <ref>Special debug builds will now be used instead of shipping ASan in regular builds. This is beneficial because ASan has a debugging, rather than a security focus, and is extremely resource intensive.</ref>

<blockquote>While the Sandboxed Tor Browser is currently in an experimental state itself, we feel that it provides much better safeguards against exploitation than the features we shipped in the hardened series.</blockquote>

A sandbox is a secure environment for running Tor Browser which mitigates exploit vectors which would otherwise deanonymize the user or infect their computer. For instance, sandboxing reduces the opportunities for an attacker to easily identify real IP and MAC addresses, install malware, or browse user files.<ref>https://blog.torproject.org/blog/q-and-yawning-angel</ref> In simple terms, Tor Browser runs in a limited awareness container that is prevented from interacting with the rest of the user's computer. The spate of recent attacks on Tor Browser in the wild suggest this is a sensible approach for cautious users or those facing significant risks.

The Tor Browser sandbox is compatible with either the stable or alpha Tor Browser series, but it is incompatible with grsec kernels. <ref>https://blog.torproject.org/blog/tor-browser-65a6-hardened-released</ref>

== Sandboxing Effects on Tor Browser Functionality ==

Sandboxing improves security, but some functionality is lost inadvertently or by design. Also, some functions like sound must be optionally configured. In early 2018, broken items include: <ref>https://trac.torproject.org/projects/tor/wiki/doc/TorBrowser/Sandbox/Linux</ref>

*  [https://trac.torproject.org/projects/tor/ticket/20774 Foreign language support].
* The [https://trac.torproject.org/projects/tor/ticket/20781 meek pluggable transport].
* Manual checks for [https://trac.torproject.org/projects/tor/ticket/21090 Tor Browser updates].


The Tor Browser sandbox is unlikely to ever support:

* The FTE pluggable transport.
* Hardware-accelerated 3D rendering due to the inherent hardware access risks.
* Printing, except to a file - this removes any risky network interface in the container.
* Connections outside of the Tor network.
* Compatibility of Tor Browser with a grsec kernel (due to ASAN/Pax conflicts).
* Installing or updating of add-ons - extensions are exposed as read-only files to Tor Browser running in a container.


Manual configuration changes are required for audio support and the Tor circuit display (already disabled in {{project_name}}). Users are not recommended to enable sound, as this opens up potential attack vectors for advanced adversaries to read files from the filesystem.

Users are unable to install additional add-ons that are not bundled by default with Tor Browser. By design, fonts are limited to a minimal set that are bundled with Tor Browser, and plug-ins like Flash or Silverlight will not work.

== Sandboxing Tor Browser in {{project name}} ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = '''Warning:''' These instructions are alpha and require a 64-bit version of {{project name}} ({{project_name}} 14) to work. Testers or advanced users only!
}}

=== Tor Browser Sandbox Dependencies ===

Two dependencies are required in order to install and run the sandbox in Whonix:

* Bubblewrap (>= 0.1.3) from Debian stretch.
* A newer ({{project_name}}-14) version of the control-port-filter-python for Tor cookie control protocol authentication. <ref>https://forums.whonix.org/t/tor-browser-sandbox-linux-alpha-coming-soon/3060</ref>


'''1. Boot {{workstation_product_name}}'''

[[{{q project name short}}|{{q project name}}]]: boot the {{workstation_product_name}} TemplateVM (<code>whonix-ws</code>).

'''2. Update the Package Lists and Install Bubblewrap'''

{{CodeSelect|code=
sudo apt-get update
}}

{{CodeSelect|code=
sudo apt-get install bubblewrap
}}

Note: 

* golang is not needed unless manually building the sandbox from source.
* lib-seccomp dependencies are no longer required since v0.0.3 of the sandbox. 
* Libnotify4 is already installed in the {{project name}} 14 template. 
* The  Adwaita Gtk+-2.0 theme is not installed by default - advanced users can choose to optionally install it at this step as follows: <code>sudo apt-get install gnome-themes-standard</code> <ref>https://packages.debian.org/stretch/gnome-themes-standard</ref>

=== Download Tor Browser Sandbox ===

'''1. Download the Sandbox Binary and Key File'''

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = For later releases, the Tor Project sandbox binaries and key files can be found [http://rqef5a5mebgq46y5.onion/torbrowser/ here].
}}
In the {{workstation_product_name}} ([[{{q project name short}}|{{q project name}}]]: <code>anon-whonix</code>), open a terminal and run.

{{CodeSelect|code=
curl --remote-name http://rqef5a5mebgq46y5.onion/torbrowser/8.0a5/sandbox-0.0.16-linux64.zip
}}

Download the signature file.

{{CodeSelect|code=
curl --remote-name http://rqef5a5mebgq46y5.onion/torbrowser/8.0a5/sandbox-0.0.16-linux64.zip.asc
}}

'''2. Download the Tor Project Signing Key and Verify the Zip File'''

In the terminal, run.

{{CodeSelect|code=
gpg --recv-keys "EF6E 286D DA85 EA2A 4BA7 DE68 4E2C 6E87 9329 8290"
}}

{{CodeSelect|code=
gpg --verify sandbox-0.0.16-linux64.zip.asc
}}

The output should show a good signature from the Tor developers and be similar to this.

<pre>
gpg: Signature made Tue 24 Jan 2015 09:29:09 AM CET using RSA key ID D40814E0
gpg: Good signature from "Tor Browser Developers (signing key) "
gpg: WARNING: This key is not certified with a trusted signature!
gpg: There is no indication that the signature belongs to the owner.
Primary key fingerprint: EF6E 286D DA85 EA2A 4BA7  DE68 4E2C 6E87 9329 8290
</pre>

If a bad signature warning is received, delete the files, rotate the Tor circuits, and download them again.

'''3. Unzip the Sandbox'''

In the terminal, run.

{{CodeSelect|code=
unzip sandbox-0.0.16-linux64.zip
}}

=== Launch Sandboxed Tor Browser ===

To start the sandbox, open a terminal and run.

{{CodeSelect|code=
cd sandbox
}}

{{CodeSelect|code=
./sandboxed-tor-browser
}}

When prompted, select the preferred Tor Browser version to use in {{workstation_product_name}}. Both the stable and alpha Tor Browser releases have been tested to work in {{project name}} 14. To check the sandboxed-tor-browser is correctly using the system Tor process run.

{{CodeSelect|code=
env | grep TOR
}}

The output should show.

<pre>
TOR_CONTROL_IPC_PATH=/var/run/anon-ws-disable-stacked-tor/127.0.0.1_9151.sock
</pre>

Is set as an environment variable.

Important notes:

* sandboxed-tor-browser is also a Tor Browser downloader similar to tb-updater / torbrowser-launcher.
* {{project name}} network settings are auto-detected as system Tor. There is no need to manually configure settings.
* 32-bit support has been deprecated since v0.0.2 of the sandbox.
* 64-bit only support since sandbox v0.0.3 means it is only compatible with {{project name}} 14 and later releases.

== Download the {{project name}} Templates ==
{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Only the testers version of {{project name}} requires manual downloading of templates with <code>qubes-dom0-update</code>, <ref>If Qubes <code>salt</code> was used at this step, it would currently download {{project name}} from <code>qubes-templates-community</code>. See: [https://github.com/QubesOS/qubes-issues/issues/4087 [[{{q_project_name_short}}|{{q_project_name}}]] salt - allow choice of repository / don't hardcode repository].</ref> which downloads {{project name}} from Qubes' dom0 templates-community-testing repository. Users who wish to reinstall the templates should add <code>--action=reinstall</code>.
}}

Download {{gateway_product_name}} (<code>{{whonix-gw}}</code>) TemplateVM.

{{CodeSelect|code=
sudo qubes-dom0-update --enablerepo=qubes-templates-community-testing qubes-template-{{whonix-gw}}
}}

Download {{workstation_product_name}} (<code>{{whonix-ws}}</code>) TemplateVM.

{{CodeSelect|code=
sudo qubes-dom0-update --enablerepo=qubes-templates-community-testing qubes-template-{{whonix-ws}}
}}


= Use Bridges in {{project name}} 13 =

This section will explain how to use obfuscated bridges in {{project name}} 13. Click the expand button for further instructions.

<div class="toccolours mw-collapsible mw-collapsed">
<div class="mw-collapsible-content">

{{Code2|obfs2}}, {{Code2|obfs3}} and {{Code2|obfs4}} are the three bridge options available in {{project name}} 13.

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = '''Tip:''' Until {{project name}} 14 is released, no wizard is available to help set up bridges before connecting to Tor. The graphical [[Tor_Browser/Advanced_Users#tor-launcher_vs_torbrowser-launcher|tor-launcher]] ([[Dev/tor-launcher|screenshots]]) that is associated with The Tor Project's Tor Browser cannot be used in {{project_name}}. 
}}


To use Tor bridges in {{project name}} 13, users must edit the {{Code2|/usr/local/etc/torrc.d/50_user.conf}} file in {{gateway_product_name}} (<code>sys-whonix</code>). <ref>The process is identical to the steps completed on a Debian platform because [[About#Based_on_Debian|{{project_name}} is based on Debian]].</ref>

==== Step 1: Access {{Code2|/usr/local/etc/torrc.d/50_user.conf}} to Add Bridges ====

{{Open_/usr/local/etc/torrc.d/50_user.conf}}

==== Step 2: Edit {{Code2|/usr/local/etc/torrc.d/50_user.conf}} ====

Open {{Code2|/usr/local/etc/torrc.d/50_user.conf}} in an editor, then copy and paste the following text to enable the use of {{Code2|obfs2}}, {{Code2|obfs3}} and {{Code2|obfs4}} bridges.

{{CodeSelect|code=
UseBridges 1
ClientTransportPlugin obfs2,obfs3,obfs4 exec /usr/bin/obfs4proxy
}}

Now add the bridge IP addresses that were sourced in the [[#Finding_a_bridge_and_choosing_the_right_protocol|Finding a Bridge and Choosing the Right Protocol]] section.

Copy and paste the IP addresses to the very bottom of {{Code2|/usr/local/etc/torrc.d/50_user.conf}}, <u>after the ClientTransportPlugin entries</u>. Users must ensure "bridge" appears at the beginning of each line.

In the <i>obfs3</i> and <i>obfs4</i> examples below:
* '''Do not copy and paste this list of bridge entries to the torrc file.''' They will not work.
* Users must retrieve [https://bridges.torproject.org/bridges?transport=obfs3 obfs3 bridges] or [https://bridges.torproject.org/bridges?transport=obfs4 obfs4 bridges] from The Tor Project '''before''' editing this file.
* Use '''either''' the <i>obfs3</i> or <i>obfs4</i> protocol, not both.
* '''Capitalization in the torrc file matters.''' For example, bridges will not connect if users type "Bridge" instead of "bridge".


{{Code2|Obfs3}} example text to add to {{Code2|/usr/local/etc/torrc.d/50_user.conf}}.

{{CodeSelect|code=
bridge obfs3 109.195.132.77:22321 4352e58420e68f5e40bf7c74faddccd9d1349413
bridge obfs3 55.32.27.22:38123  4352e58420e68f5e40bf7c74faddccd9d1349413
bridge obfs3 192.24.131.513:62389 4352e58420e68f5e40bf7c74faddccd9d1349413
}}

{{Code2|Obfs4}} example text to add to {{Code2|/usr/local/etc/torrc.d/50_user.conf}}.

{{CodeSelect|code=
bridge obfs4 192.235.207.85:42086 0EEB10BF4B4FAF56D46E cert=oue8sYYw5wi4n3mf2WDOg iat-mode=0
bridge obfs4 161.217.177.95:10703 B3B8009D01BB7E5FDFAEC cert=4RaIqGiOytEXm6Hw iat-mode=0
}}

After {{Code2|/usr/local/etc/torrc.d/50_user.conf}} editing is finished, save and exit.

<pre>
<Ctrl-X> --> press Y --> <Enter>
</pre>

The sample text for a complete {{Code2|obfs4}} torrc file is below. Check your file is similar, except for the specific bridge entries.
<pre>
# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos
p# See the file COPYING for copying conditions.

# Use this file for your user customizations.
# Please see /usr/local/etc/torrc.d/50_user.conf.examples for help, options, comments etc.

# Anything here will override {{project name}} own Tor config customizations in /usr/share/tor/tor-service-defaults-torrc

# Enable Tor through whonixsetup or manually uncomment "DisableNetwork 0" by
# removing the # in front of it.
DisableNetwork 0
UseBridges 1
ClientTransportPlugin obfs2,obfs3,obfs4 exec /usr/bin/obfs4proxy

bridge obfs4 192.235.207.85:42086 0EEB10BF4B4FAF56D46E cert=oue8sYYw5wi4n3mf2WDOg iat-mode=0
bridge obfs4 34.218.26.20:43263 DD21A551767816A0C9495 cert=7qzS6KASquPvJU82Fm7qoJw iat-mode=0
bridge obfs4 161.217.177.95:10703 B3B8009D01BB7E5FDFAEC cert=4RaIqGiOytEXm6Hw iat-mode=0
</pre>

==== Step 3: Enable Tor ====

Follow this procedure if it has not been previously completed.

{{Enable_Tor}}

==== Step 4: Have {{Code2|/usr/local/etc/torrc.d/50_user.conf}} Changes Take Effect ====

{{Reload_Tor}}

</div>
</div>

= Permissions on directory /var/run/tor are too permissive Error =
To discover if you are affected by the {{Code2|Permissions on directory /var/run/tor are too permissive}} error, <ref>
https://trac.torproject.org/projects/tor/ticket/19824
</ref> run the following command inside {{gateway_product_name}} ([[{{q project name short}}|{{q project name}}]]: <code>sys-whonix</code>).

<pre>
sudo cat /var/run/tor/log | grep -i permissive
</pre>

If a user is affected, a warning similar to the following will appear.

<pre>
Aug 03 17:36:33.000 [warn] Permissions on directory /var/run/tor are too permissive.
</pre>

Currently there is only one workaround, which needs to be manually applied after every reboot.

{{CodeSelect|code=
sudo chmod --recursive 700 /var/run/tor
}}

= Meta Package Missing Warning =

The following warning...

[[File:whonix meta packages warning.png]]

It most likely happened after {{project name}} 12 to {{project name}} 13 upgrades. In that case, please upgrade using the proper instructions for [[Upgrading {{project name}} 12 to {{project name}} 13]].

= Unexpected timedatectl NTP Result =

When <code>sys-whonix</code> launches in [[{{q_project_name_short}}|{{q_project_name}}]] 13, a false positive warning appears stating:

<pre>ERROR: Systemd Clock Check Result: 
Unexpected results by timedatectl. 
timedatectl_output_pretty: 
Local time: Fri 2018-01-12 14:04:59 UTC
Universal time: Fri 2018-01-12 14:04:59 UTC
RTC time: Fri 2018-01-12 14:04:06
Time zone: Etc/UTC (UTC, +0000)
NTP enabled: yes 
NTP synchronized: no
RTC in local TZ: no
DST active: n/a
It is generally recommended to keep the default as per {{project name}} Design. [1] If you did not change timezone related settings, please report this {{project name}} bug. If you know what you are doing and changed this on purpose, feel free to disable this check. [2] 

[1] https://www.whonix.org/wiki/Dev/Design-Shared#timezone 
[2] Create a file /etc/whonix.d/50_whonixcheck_user and add: 
whonixcheck_skip_functions+=" check_systemd_clock "</pre>

Although NTP is enabled, it is inactive (dead) and does not pose any threat to anonymity. This problem has been [https://github.com/QubesOS/qubes-issues/issues/3469 rectified in the {{project name}} 14 release].

=== Translations Coordinator ===
The tasks of a [https://www.whonix.org/blog/translations-coordinator Translations Coordinator] include:

* Joining the {{project name}} team on https://www.whonix.org
* Reading the translation extensions documentation for mediawiki.
* Getting new translators started.
* Perhaps translating text into your own native language.
* Coordinating translations.


This is a volunteer position.

== {{project name}} Warrant Canary ==
Some users may wonder why {{project name}} does not maintain a warrant canary to warn the community of the ''potential'' existence of a secret subpoena <ref> Any disclosures that it exist are prohibited.</ref> like a number of other high-profile organizations, [https://en.wikipedia.org/wiki/Warrant_canary#Companies_and_organizations_with_warrant_canaries including Qubes OS]. This decision has been taken for several reasons.

Firstly, a warrant canary is an imperfect mechanism since it does not provide definitive information. As [https://www.canarywatch.org Canary Watch] notes: <ref>https://www.eff.org/deeplinks/2016/05/canary-watch-one-year-later</ref>

<blockquote>Yet, in our time working with Canary Watch we have seen many canaries go away and come back, fail to be updated, or disappear altogether along with the website that was hosting it. Until the gag orders accompanying national security requests are struck down as unconstitutional, there is no way to know for certain whether a canary change is a true indicator. Instead the reader is forced to rely on speculation and circumstantial evidence to decide what the meaning of a missing or changed canary is.</blockquote>

The implication is that if the {{project name}} team forgot to update the canary for innocuous reasons, this would cause a false alarm and lead to undue anxiety in the community. Similar effects could be expected if the wording changed slightly, if the canary changed location, or if it disappeared entirely before reemerging.

Another reason a warrant canary has not been introduced relates to free speech. Worried users argue that a [https://en.wikipedia.org/wiki/National_security_letter National Security Letter (NSL)] or similar authority might lead to:

* Vulnerabilities being forcibly introduced into code or during package upgrades.
* A backdoored binary version of {{project name}} software. 
* The forcible handing over of the private {{project name}} signing keys.

These possibilities have been discussed in the following [https://forums.whonix.org/t/whonix-warrant-canary/3208 {{project name}} Forum Thread]. In general, it appears that since code has been legally established as speech, and free speech cannot be hindered, there is no legal basis to compel backdoors in either the source code or binary versions.

Finally, there is serious doubt about the actual effectiveness of any legal order that might be served on the {{project name}} project. For instance, a NSL seeking "relevant information" related to national security investigations would yield little information because most visitors to the forums or wiki are using Tor already, and neither software is configured to log anything about these visits. In the case of hypothetical, malicious changes to source code, the existence of the code in the public domain already provides some protection against this threat, since it would likely be detectable.

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Deprecated]]
