{{Header}}
{{#seo:
|description=Using a Tor Controller with {{project_name}}. Onion Circuits. Nyx. Vidalia. View or change your Tor circuits. Monitor Tor and inspect logs.
|image=https://www.whonix.org/w/images/5/54/Screenshot_arm_page1_cropped.png
}}
{{Title|
title=Control and Monitor Tor
}}
__FORCETOC__
[[File:onioncircuits.png|onioncircuits - View Tor Circuits|thumb]]
[[image:0brand_Arm_Controller-1.png|Nyx Tor Controller|thumb]]

= Introduction =

[[#Nyx|nyx]] is the primary Tor Controller option that comes pre-installed in {{project_name}}.

Note: [[#Vidalia|Vidalia]] and [[#tor-ctrl|tor-ctrl]] have been deprecated and are no longer packaged in Debian.

{{Anchor|Arm}}
= Nyx =

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = The [https://packages.debian.org/buster/nyx nyx] Tor controller is a later version of the arm package, so the functionality and appearance are very similar. The [https://nyx.torproject.org/ Tor Project nyx homepage] states: <i>"Nyx is a command-line monitor for Tor. With this you can get detailed real-time information about your relay such as bandwidth usage, connections, logs, and much more."</i>
}}

== Nyx Usage ==

Nyx is recommended and is already pre-installed in {{gateway_product_name}}. <ref>Since [[#Vidalia|Vidalia]] is [[#Vidalia_recommended_against|recommended against]].</ref>

{{Start_Arm}}

To receive a new circuit, press:

<pre>
n
</pre>

To exit nyx, press:

<pre>
q
q
</pre>

== Nyx FAQ ==

{| class="wikitable" style="background-color: #fff;text-align: left"

! '''Message / Question'''
! '''Response'''

|-
| {{Code2|arm vs nyx?}}
| The software was previously called arm, but the new name is nyx. <ref>https://tor.stackexchange.com/tags/nyx/info</ref>

|-
| <u>{{Code2|Should any of the following nyx messages concern me?}}</u>
| No; see below for reasons why. See also: [[FAQ#Am_I_Compromised.3F|"Am I Compromised?" FAQ entry]].

|-
| <u>{{Code2|Am I compromised? Does nyx report leaks?}}</u>
| Nyx is conceptually not a tool to discover serious issues such as a possible compromise or leaks. <ref>

Nyx works on a different level -- it is a Tor Controller. Nyx talks to Tor using Tor's ControlPort and is an interface to show what Tor thinks. Neither Tor nor nyx implement anything like virus detection, compromise detection, leak detection and so on. Nyx messages are generally interesting and useful, but there is rarely  any cause for concern.

For leak testing, see [[Dev/Leak_Tests|leak tests]].
</ref>

|-
| <u>{{Code2|Nyx sometimes shows my public IP address and other times the internal <code>10.0.2.15</code> and <code>127.0.0.1</code> IPs. Is it normal or dangerous?}}</u> <ref>https://forums.whonix.org/t/strange-nyx-behavior/9514</ref>
| This is a normal nyx feature. {{project_name}} uses a control-port-filter proxy ([[Onion-grater|onion-grater]]) that prevents abuse of the control port, including blocking dangerous commands like "getinfo address". When the real IP address appears, it is only local and nobody else can see it.

|-

| {{Code2|Tor is preventing system utilities like netstat and lsof from working. This means that nyx can't provide you with connection information. You can change this by adding 'DisableDebuggerAttachment 0' to your torrc and restarting tor. For more information see... https://trac.torproject.org/3313}}
| If you want to learn about the technical details, read https://trac.torproject.org/3313.

|-
| DisableDebuggerAttachment even when running as root.
| This [https://trac.torproject.org/projects/tor/ticket/7709 bug] in nyx has been resolved.

|-
| {{Code2|man page (GENERAL OPTIONS and COMMAND-LINE OPTIONS)}}
| This [https://trac.torproject.org/projects/tor/ticket/9679 bug] in nyx has been resolved.

|-
| {{Code2|[WARN] Socks version 71 not recognized. (Tor is not an http proxy.)}}
| 
This is caused by the [[whonixcheck]] function {{Code2|check_tor_socks_port_reachability}}. It checks if a Tor SocksPort is reachable by trying to fetch it using curl. <ref>
{{CodeSelect|code=
{{Curl_Plain}} 10.152.152.10:9100
}}
</ref> It will not report anything if it works, but will complain if it fails.


|-
| {{Code2|[WARN] Socks version 71 not recognized. (This port is not an HTTP proxy; did you want to use HTTPTunnelPort?)}}
| This occurs for similar reasons to the entry above.

|-
| {{Code2|[WARN] Rejecting request for anonymous connection to private address [scrubbed] on a TransPort or NATDPort.  Possible loop in your NAT rules?}}
| This happens for example if you run "curl 192.168.0.15". The reason is when you type "curl" in {{project_name}}, by default you are not directly using curl, but a uwt-wrapped ([[Stream_Isolation|stream-isolated]]) curl instead. It does not try to directly connect to 192.168.0.15, but rather to connect to 192.168.0.15 through Tor, leading to this Tor message. It really means an operation was attempted that will not work in that way. In this instance, deactivate the curl stream isolation wrapper or use the non-wrapped version - see [https://www.whonix.org/wiki/Stream_Isolation Stream Isolation].

|-
| {{Code2|[NOTICE] You configured a non-loopback address '10.152.152.10:9179' for SocksPort. This allows everybody on your local network to use your machine as a proxy. Make sure this is what you wanted. [1 duplicate hidden]}} (Or another port number or DnsPort or TransPort.)
| Tor really listens on that IP/port. It is {{gateway_product_name}} network interface and is only available to {{workstation_product_name}}s. This restriction is enforced by an internal network with {{workstation_product_name}}(s) and because {{gateway_product_name}} is firewalled; see ''{{W_Firewall}}'' or the {{project_name}} source code for more information.

|-
| {{Code2|[NOTICE] New control connection opened. [2 duplicates hidden]}} (Or more duplicates.)
| This is caused by [[whonixcheck]]'s Tor Bootstrap Status Test, which uses Tor's ControlPort or [[Dev/CPFP|CPFP]].

|-
| {{Code2|[NOTICE][NYX_WARN] The torrc differ from what tor's using. You can issue a sighup to reload the torrc values by pressing x. Configuration value is missing from the torrc: RunAsDaemon}}
| Nyx usability bug. <ref>https://trac.torproject.org/projects/tor/ticket/16459</ref> <ref>The issue was closed as 'not a bug' several years ago.</ref>

|-
| {{Code2|"192.168.0.1 UNKNOWN 1 / Guard" in circuit information}}
| This indicates that you are connecting to the Tor network with a [[Bridges|Tor Bridge]].

If you are directly connecting to the public Tor network without a Tor Bridge, the real IP and Nickname of the Guard should be visible instead. <ref>https://forums.whonix.org/t/how-to-check-if-i-configured-bridges-correctly-and-the-bridges-are-working-properly/4371/5</ref>

|}

= Onion Circuits =
<blockquote>
Onion Circuits is a GTK+ application to display Tor circuits and streams. It allows the user to inspect the circuits the locally running Tor daemon has built, along with some metadata for each node. 
</blockquote> <ref>https://packages.debian.org/buster/onioncircuits</ref>

[https://packages.debian.org/buster/onioncircuits Onion Circuits] is installed by default, but is not a full Tor controller; only Tor circuits are shown. It can be launched from the start menu.

= Alternatives =

== netcat ==

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Advanced users only.
}}

netcat provides an easy way to send Tor ControlPort protocol commands to Tor's ControlPort. <ref>Or potentially only to [[Dev/CPFP|Control Port Filter Proxy]] if this operation is performed in {{workstation_product_name}}.</ref>
{{Box|text=
'''1.''' Install netcat.

{{CodeSelect|code=
sudo apt-get install netcat-openbsd
}}

On {{gateway_product_name}} or {{workstation_product_name}}. 

'''2.''' Connect to Tor's ControlPort. <ref>This works also on {{workstation_product_name}}, because the [https://github.com/{{project_name_short}}/anon-ws-disable-stacked-tor anon-ws-disable-stacked-tor] package has set up listening for connections on localhost and forwards them to {{gateway_product_name}}, where the [[Dev/CPFP|Control Port Filter Proxy]] is listening.</ref>

{{CodeSelect|code=
nc 127.0.0.1 9051
}}

'''3.''' Example command to change the Tor circuit.

{{CodeSelect|code=
signal newnym
}}

The output should be.

<pre>
250 OK
</pre>
}}

== tor-prompt ==

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Advanced users only.
}}

On {{gateway_product_name}}, run.

{{CodeSelect|code=
tor-prompt 
}}

{{CodeSelect|code=
Welcome to Stem's interpreter prompt. This provides you with direct access to
Tor's control interface.

This acts like a standard python interpreter with a Tor connection available
via your 'controller' variable...

  >>> controller.get_info('version')
  '0.2.5.1-alpha-dev (git-245ecfff36c0cecc)'
}}

You can also issue requests directly to Tor...

{{CodeSelect|code=                                                                                                                                                                                    
GETINFO version
}}

Should show.

<pre>
  250-version=0.2.5.1-alpha-dev (git-245ecfff36c0cecc)
  250 OK
</pre>

= New Identity and Tor Circuits =

The behavior of "New Identity" in the context of Tor Browser and nyx is often misunderstood. First of all, there are various ways to issue a "New Identity" (this list is not exhaustive):

* [[Tor_Browser#New_Identity_Function|Tor Browser New Identity Function]]
* [[#Nyx|nyx]]
* [[#tor-ctrl|tor-ctrl]]
* [[#netcat|netcat]]

In all cases, the "New Identity" function sends the protocol command "signal newnym" to Tor's ControlPort. This clears the browser state, closes tabs and obtains a fresh Tor circuit for future requests. <ref>https://blog.torproject.org/blog/torbutton-141-released</ref> 

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = '''Warning:''' The New Identity feature will ''likely'' create a new circuit with a different Tor exit relay and IP address, but this is not guaranteed.
}}

The impact of "signal newnym" on Tor circuit lifetimes is often misunderstood. "signal newnym" uses a fresh circuit for ''new'' connections. Sometimes Tor only replaces the middle relay while using the same Tor exit relay. This is by design and the Tor default. Further, "signal newnym" does not interfere with long-lived connections like an IRC connection.

Interested readers can verify the effect of "signal newnym" as follows:

# Open https://check.torproject.org in Tor Browser.
# Issue "signal newnym" using [[#Nyx|nyx]].
# Reload https://check.torproject.org. 
# In some cases it will still show the same IP address, probably because the browser did not close the connection to https://check.torproject.org in the first place.

Now repeat this experiment with a small modification which should result in a new Tor exit IP address:

# Open https://check.torproject.org in Tor Browser.
# Issue "signal newnym" using [[#Nyx|nyx]].
# Close Tor Browser, then restart it. 
# Open https://check.torproject.org again and a new Tor exit relay IP address is (likely) visible.

New Identity is not yet perfect and there are open bugs; this is not a {{project_name}}-specific issue. "signal newnym" is not a guaranteed method of unlinking various protocol states (like the browser) so the user absolutely appears to be a different identity. {{Browser_Fingerprinting_Footnote}} Tor Browser's TorButton [[Tor_Browser/Advanced_Users#New_Identity_Design|New Identity feature]] (now integrated as a Tor Browser feature) attempts this, but it is not yet perfect.

In general for greater security, it is better to completely close Tor Browser and restart it. In [[{{q project name short}}|{{q project name}}]], the safest option is using a {{workstation_product_name}} [[Qubes/DisposableVM|DisposableVM]] and closing it and recreating a new one after critical activities.

= Deprecated =

== tor-ctrl ==

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = tor-ctrl has been deprecated because it is not supported upstream. See: [https://forums.whonix.org/t/tor-ctrl-tor-control-port-command-line-tool/8074 tor-ctrl - Tor control port command line tool]. <ref>https://github.com/Whonix/tor-ctrl</ref>
}}

=== On {{gateway_product_name}} ===

tor-ctrl <ref>https://github.com/{{project_name_short}}/tor-ctrl</ref> was formerly bundled in {{project_name}} by default.

To get a new circuit, run.

{{CodeSelect|code=
tor-ctrl -a /var/run/tor/control.authcookie -c "signal newnym"
}}

{{CodeSelect|code=
tor-ctrl -v -a /var/run/tor/control.authcookie -c "signal newnym"
}}

See also.

{{CodeSelect|code=
man tor-ctrl
}}

=== On {{workstation_product_name}} ===

==== Interactive Tor Control Connection ====
Connect to the Tor control socket.

{{CodeSelect|code=
socat - UNIX-CONNECT:/var/run/tor/control
}}

Run the following command. <ref name=nologin-required>
No login required due to [[Dev/Control_Port_Filter_Proxy|Control Port Filter Proxy]] filtered access.
</ref>

{{CodeSelect|code=
signal NEWNYM
}}

The output should show.

<pre>
250 OK
</pre>

==== Command Line Tor Control Command ====
Run the following command. <ref name=nologin-required />

{{CodeSelect|code=
cmd="signal NEWNYM" && ( echo "$cmd" && sleep 1 ) {{!}} socat - UNIX-CONNECT:/var/run/tor/control
}}

The output should show.

<pre>
250 OK
</pre>

==== New Circuits ====

Repeat this command every time a new circuit is desired.

Run {{Code2|tor-ctrl}} (installed by default) with {{Code2|signal NEWNYM}}. <ref name=nologin-required />

{{CodeSelect|code=
bash -x tor-ctrl -p notrequired -c "signal NEWNYM"
}}

If the following output appears at the bottom.

<pre>
+ VERSION=v1
+ TORCTLIP=127.0.0.1
+ TORCTLPORT=9051
+ TOR_COOKIE=/var/run/tor/control.authcookie
+ SLEEP_AFTER_CMD=1
+ VERBOSE=0
+ getopts :a:c:s:p:P:f:vh Option
+ case $Option in
+ PASSWORD=notrequired
+ getopts :a:c:s:p:P:f:vh Option
+ case $Option in
+ CMD='signal NEWNYM'
+ getopts :a:c:s:p:P:f:vh Option
+ '[' -e '' ']'
+ '[' 'signal NEWNYM' '!=' '' ']'
+ checkprogs
+ programs=telnet
+ '[' notrequired = '' ']'
+ for p in $programs
+ command -v telnet
+ '[' 0 '!=' 0 ']'
+ cmdpipe signal NEWNYM
+ login
+ '[' notrequired = '' ']'
+ sendcmd 'AUTHENTICATE "notrequired"'
+ echo 'AUTHENTICATE "notrequired"'
+ sleep 1
+ telnet 127.0.0.1 9051
+ myecho
++ cat
+ sendcmd signal NEWNYM
+ echo signal NEWNYM
+ sleep 1
+ sendcmd QUIT
+ echo QUIT
+ sleep 1
+ STR='Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '\''^]'\''.
250 OK
250 OK
250 closing connection'
+ vecho 'Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '\''^]'\''.
250 OK
250 OK
250 closing connection'
+ '[' 0 -ge 1 ']'
+ echo 'Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '\''^]'\''.
250 OK
250 OK
250 closing connection'
++ grep -c '^250 '
+ '[' 3 = 3 ']'
+ exit 0
</pre>

Then the process succeeded. ({{Code2|exit 1}} is a bug in {{Code2|tor-ctrl}}, because it does not understand the double {{Code2|250 OK}}.)

== Vidalia ==
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = Vidalia is no longer maintained.
}}
{{Anchor|Vidalia_recommended_against}}

Vidalia is recommended against because development has ceased, leading to it being removed from all Debian variants (stretch, sid etc.) as well as from Tor Browser Bundle v3.5 by The Tor Project. <ref>https://tor.stackexchange.com/questions/1075/what-happened-to-vidalia</ref> <ref>As noted by Tor developer Roger Dingledine: <br />
<blockquote>Cammy is right -- we've removed the bridge/relay/exit bundles from the download page too, since Vidalia has been unmaintained for years and pointing people to unmaintained software is dangerous. I'd love to have enough developers to do everything at once, but we don't.</blockquote>
</ref> Vidalia had a number of limitations, such as an inability to fully control Tor -- it could not stop Tor which came with the Debian package because it is started as user "debian-tor". It also could not edit {{Code2|/usr/local/etc/torrc.d/50_user.conf}} <ref>It is unclear whether control commands such as New Identity were correctly processed either.</ref> and did not understand obfuscated bridges. Since Vidalia has been deprecated and provides a pretty bad and confusing user experience, it is simply better to use [[#Nyx|nyx]]. <ref>Unless the reader is interested in Vidalia's nice network map.</ref>

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
