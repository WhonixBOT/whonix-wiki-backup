{{Header}}
{{#seo:
|description=Using a Tor Controller with Whonix. Arm. Vidalia. Change your Tor circuit. Monitor Tor.
}}
<languages />

<translate>
= Tor Controller = <!--T:34-->

<!--T:35-->
Three options. <tvar|A>{{Code|arm}}</>, <tvar|A>{{Code|tor-ctrl}}</> or <tvar|A>{{Code|Vidalia}}</>. <tvar|A>{{Code|arm}}</> and <tvar|A>{{Code|tor-ctrl}}</> are already <tvar|A>{{Code2|pre-installed}}</> on Whonix.

<!--T:36-->
'''<tvar|A>{{Code|arm}}</> is <tvar|A>{{Code2|recommended}}</>.'''

= Vidalia = <!--T:37--></translate>

<translate>
<!--T:38-->
'''Not recommended.'''<ref>
<tvar|A>{{Anchor|Vidalia_recommended_against}}</>
Vidalia is recommended against, because:</translate>

<translate>
<!--T:39-->
* Vidalia is unmaintained (no one is working on it anymore). Vidalia has been removed from Tor Browser Bundle 3.x by The Tor Project. So this project is pretty much dead anyway.
* Vidalia has issues with controlling Tor, i.e. Vidalia can't stop the Tor which comes from the Debian package, which is started as user "debian-tor". It also can not edit <tvar|A>{{Code2|/etc/tor/torrc}}</>. Not sure if control commands such as New Identity are correctly processed (easy to find out).
* Vidalia does not understand obfuscated bridges.
* Which overall makes a pretty bad and confusing user experience. Therefore recommended against.
* However, if it's Vidalia's nice network map you're after, that will work.
</ref> Better use Arm. See below.</translate>

<font size="-3">
<translate>
<!--T:40-->
See</translate>
[[Vidalia]].</font>

<translate>
= Arm = <!--T:41-->
== Arm Usage ==
Since Whonix does not include Vidalia, Arm is '''recommended'''. It's already pre-installed on Whonix-Gateway.</translate>

[[Image:screenshot_arm_page1_cropped.png|arm, Tor Controller|thumb]]

<translate>
<!--T:42-->
If you are using a <u>graphical</u> Whonix-Gateway, go to:</translate>

<pre>
Start Menu -> Applications -> System -> Arm
</pre>

<translate>
<!--T:43-->
If you are using a <u>terminal</u> Whonix-Gateway:</translate>

<pre>
arm
</pre>

<translate>
<!--T:44-->
To get a new circuit, press:</translate>

<pre>
n
</pre>

<translate>
<!--T:45-->
To exit arm, press:</translate>

<pre>
q
q
</pre>

<translate>
== Arm FAQ == <!--T:46--></translate>

* <blockquote><translate>
<!--T:47-->
Tor is preventing system utilities like netstat and lsof from working. This means that arm can't provide you with connection information. You can change this by adding 'DisableDebuggerAttachment 0' to your torrc and restarting tor. For more information see... </translate>https://trac.torproject.org/3313</blockquote> --> <translate>
<!--T:48-->
Not of concern. If you want to learn about the technical details, read https://trac.torproject.org/3313.
* DisableDebuggerAttachment even when running as root:
This is a [<tvar|A>https://trac.torproject.org/projects/tor/ticket/7709</> bug] in arm.</translate>
* <blockquote><translate><!--T:49-->
man page (GENERAL OPTIONS and COMMAND-LINE OPTIONS)</translate></blockquote> --><translate><!--T:50-->
This is not of concern. This is a bug in arm.</translate>
* <blockquote><translate><!--T:51-->
[WARN] Socks version 71 not recognized. (Tor is not an http proxy.)</translate>
</blockquote> --> <translate><!--T:52-->
This is caused by <tvar|A>[[whonixcheck]]</> (by function check_tor_socks_port_reachability). It checks if a Tor SocksPort is reachable by trying to fetch it using curl. It will not report anything if it worked, but would complain if it failed.</translate>
* <blockquote><translate><!--T:53-->
[WARN] Rejecting request for anonymous connection to private address [scrubbed] on a TransPort or NATDPort.  Possible loop in your NAT rules?</translate></blockquote> --> <translate><!--T:54-->
This happens for example if you run "curl 192.168.0.15", because when you type "curl", by default in Whonix, you are not directly using curl, but a uwt wrapped (stream isolated) [<tvar|A>https://www.whonix.org/wiki/Stream_Isolation|</> Stream Isolation] curl. It would not try to directly connect to 192.168.0.15, but to connect to 192.168.0.15 through Tor and this is what Tor is mentioning. This is not of concern for security. It only means, that you attempted something, that will not work that way. Deactivate the curl stream isolation wrapper or use the non-wrapped version (see [<tvar|A>https://www.whonix.org/wiki/Stream_Isolation|</> Stream Isolation]).</translate>
* <blockquote>[NOTICE] <translate><!--T:55-->
You configured a non-loopback address '10.152.152.10:9179' for SocksPort. This allows everybody on your local network to use your machine as a proxy. Make sure this is what you wanted. [1 duplicate hidden]</translate></blockquote> <translate><!--T:56-->
(Or other port number or DnsPort or TransPort.) --> This is not of concern. Tor really listens on that IP/port. It is Whonix-Gateway's network interface, that is only available to Whonix-Workstations, because it is an internal network with Whonix-Workstation and because Whonix-Gateway is firewalled (see ''<tvar|A>{{WhonixFirewall}}</>'' or in Whonix source code).</translate>
* <blockquote>[NOTICE]<translate> <!--T:57-->
New control connection opened. [2 duplicates hidden]</blockquote> (Or more duplicates.) --> This is not of concern. This is caused by <tvar|A>[[whonixcheck]]</>'s Tor Bootstrap Status Test, which uses Tor's ControlPort or <tvar|A>[[Dev/CPFP|CPFP]]</>.</translate>

<translate>
= tor-ctrl = <!--T:58-->
== On Whonix-Gateway ==
tor-ctrl <tvar|A><ref>https://github.com/Whonix/tor-ctrl</ref></> comes with Whonix by default.

<!--T:59-->
Example usage to get a new circuit, on Whonix-Gateway:</translate>

<pre>
tor-ctrl -a /var/run/tor/control.authcookie -P 9051 -c "signal newnym"
</pre>

<translate>
<!--T:60-->
See also:</translate>

<pre>
man tor-ctrl
</pre>

<translate>
== On Whonix-Workstation == <!--T:61-->
=== Example: Get a New Identity using Whonix-Workstation Terminal ===
Do this every time you want a new circuit. Run <tvar|A>{{Code2|tor-ctrl}}</> (installed by default) with <tvar|A>{{Code2|signal newnym}}</>.</translate>

<pre>
bash -x tor-ctrl -p notrequired -c "signal newnym"
</pre>

<translate>
<!--T:62-->
If you see at the bottom of the output.</translate>

<pre>
+ sendcmd signal newnym
+ echo signal newnym
+ sleep 1
+ sendcmd QUIT
+ echo QUIT
+ sleep 1
+ STR='Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '\''^]'\''.
250 OK
250 OK'
+ vecho 'Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '\''^]'\''.
250 OK
250 OK'
+ '[' 0 -ge 1 ']'
+ echo 'Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '\''^]'\''.
250 OK
250 OK'
++ grep -c '^250 '
+ '[' 2 = 3 ']'
+ exit 1
</pre>

<translate>
<!--T:63-->
Then it succeeded. (<tvar|A>{{Code2|exit 1}}</> is a bug in <tvar|A>{{Code2|tor-ctrl}}</>, because it doesn't understand the double <tvar|A>{{Code2|250 OK}}</>.)</translate>

= netcat =
nc 127.0.0.1 9051

<translate>
= Footnotes = <!--T:64--></translate>
<references />

<translate>
= License = <!--T:65--></translate>
<font size="-3">
<translate>
<!--T:66-->
Thanks to [<tvar|A>https://www.torproject.org/projects/arm.html.en|</> torproject.org] for the arm screenshot, which is under [<tvar|A>http://creativecommons.org/licenses/by/3.0/us/</> Creative Commons Attribution 3.0 United States License].; [<tvar|A>http://www.atagar.com/arm/screenshots.php</> Other screenshots of Arm]; [<tvar|A>https://www.torproject.org/projects/arm.html.en</> Arm project page]</translate></font>

{{Footer}}

[[Category:Documentation]]
