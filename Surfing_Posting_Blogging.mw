{{Header}}
{{#seo:
|description=Surf, Blog and Post anonymously on the Internet. Essential knowledge about Anonymous File Sharing, Keystroke / Mouse Fingerprinting and Stylometry risks. Tips for avoiding detection.
|image=https://www.whonix.org/w/images/5/57/Blog-1616979640.jpg
}}

{{Contributor|
|status=stable
|about=About this {{Code2|{{PAGENAME}}}} Page
|difficulty=easy
|contributor=[https://forums.whonix.org/users/hulahoop HulaHoop]
|support=[[Support]]
}}

= Introduction =

Tor Browser is installed in {{project_name}} by default to browse the Internet anonymously. Tor Browser is optimized for safe browsing via pre-configured security and anonymity settings that are quite restrictive. It is recommended to read the entire [[Tor_Browser|Tor Browser]] chapter for tips on basic usage before undertaking any high-risk activities.

{{workstation_product_name}} contains all the necessary tools to post or run a blog anonymously. It is recommended to review the following chapters / sections, as well as follow all the recommendations on this page: 

* [[DoNot|Tips on Remaining Anonymous]]
* [[Data_Collection_Techniques|Data Collection Techniques]]
* [[Tor_Browser#Unsafe_Tor_Browser_Habits|Unsafe Tor Browser Habits]]
* [[Hardware_Threat_Minimization|Hardware Threat Minimization]]
* [[Multiple_{{workstation_product_name_short}}|Multiple {{workstation_product_name}}]]

= Anonymous File Sharing =

== Audio Recordings ==

It is possible for adversaries to link audio recordings to the specific hardware (microphone) that is used. It is also trivial to fingerprint the embedded audio acoustics associated with the particular speaker device; for example, consider ringtones and video playback in public spaces. <ref>[https://www.cs.cmu.edu/~anupamd/paper/CCS2014.pdf Do You Hear What I Hear? Fingerprinting Smart Devices Through Embedded Acoustic Components]</ref> For these reasons it is recommended to follow the operational security measures in the [[#Photographs|Photographs]] section when sharing audio files. 

This recommendation equally applies to any data that is recorded by each and every other sensor component, such as [https://en.wikipedia.org/wiki/Accelerometer accelerometers]. <ref>[https://arxiv.org/abs/1408.1416 Mobile Device Identification via Sensor Fingerprinting].</ref> The best way to defend against this threat is to deny all access to the hardware in question, while also avoid the sharing of unencrypted data recorded by sensors. Similarly, it is inadvisable to share audio with third parties who have limited technical ability or if they are potentially malicious.

== Documents ==

Digital watermarks are a subset of the science of [https://en.wikipedia.org/wiki/Steganography steganography] and can be applied to any type of digital media, including audio, pictures, video, texts or 3D models. <ref>For detailed information on this topic, see: [https://www.cs.bham.ac.uk/~mdr/teaching/modules03/security/students/SS5/Steganography.pdf Steganography and Digital Watermarking].</ref> In basic terms, covert markers are embedded into the "noise" of data which are imperceptible to humans: <ref>https://www.daoudisamir.com/steganography-and-watermarking/</ref>

<blockquote>Digital watermarking is defined as inserted bits into a digital image, audio or video file that identify the copyright information; the digital watermarking is intended to be totally invisible unlike the printed ones, bits are scattered in different areas of the digital file in such a way that they cannot be identified and reproduced, otherwise the whole goal of watermarking is compromised.</blockquote>

A digital watermark is said to be robust if it remains intact even if modifications are made to the files. <ref>https://en.wikipedia.org/wiki/Digital_watermarking</ref> <ref>Notably the watermark does not change the size of the carrier signal.</ref> In addition to protecting copyright, another watermarking goal is to trace back information leaks to the specific source. A good countermeasure to this threat is to run documents through an [https://en.wikipedia.org/wiki/Optical_character_recognition optical character recognition (OCR)] reader and share the output instead.

According to a talk by Sarah Harrison from WikiLeaks, <ref>Missing footnote.</ref> source tracing can also happen through much simpler techniques such as inspecting the access lists for the materials that have been leaked. For example, if only three people have access to a set of documents then the hunt is narrowed down considerably.

Redacting identifying information in electronic documents by means of image transformation (blurring or pixelization) has proven inadequate for concealing the intended text; the words can be reconstructed by machine learning algorithms. Solid bars are sufficient but they must be large enough to fully cover the original text. Otherwise, clues are left about the length of underlying word(s) which makes it easier to infer the censored text based on the sentence remainder. <ref>[https://cseweb.ucsd.edu/~saul/papers/pets16-redact.pdf On the (In)effectiveness of Mosaicing and Blurring as Tools for Document Redaction]</ref>

== Photographs ==

Every camera's sensor has a unique noise signature because of subtle hardware differences. The sensor noise is detectable in the pixels of every image and video shot with the camera and could be fingerprinted. In the same way ballistics forensics can trace a bullet to the barrel it came from, the same can be accomplished with adversarial digital forensics for all images and videos. <ref>http://dde.binghamton.edu/download/camera_fingerprint/</ref> <ref>[https://github.com/guardianproject/ObscuraCam/issues/102 Fingerprintable Camera Anomalies]</ref> Note this effect is different from file [[Metadata]] that is easily sanitized with the [[Metadata#MAT_-_Metadata_Anonymisation_Toolkit|Metadata Anonymization Toolkit v2 (MAT2)]]. <ref>While MAT2 does clean a wide range of files, the list of supported file formats is <u>not</u> exhaustive. Also, the author of MAT notes embedded media inside of complex formats might not be cleaned.</ref>

=== Photo-Response NonUniformity ===

A camera fingerprint arises for the following reason: <ref>https://www.slideshare.net/justestadipera/digital-image-forensics-camera-fingerprint-and-its-robustness</ref>

<blockquote>Photo-Response NonUniformity (PRNU) is an intrinsic property of all digital imaging sensors due to slight variations among individual pixels in their ability to convert photons to electrons. Consequently every sensor casts a weak noise-like pattern onto every image it takes and this pattern plays the role of a sensor fingerprint.</blockquote>

The reason for this phenomenon is all devices have manufacturing imperfections that lead to small variation in camera sensors, causing some pixels to project colors a little brighter or darker than normal. When extracted by filters, this leads to a unique pattern. <ref>https://www.futurity.org/smartphones-cameras-prnu-1634712-2/</ref> Simply put, the type of sensor being used, along with shot and pattern noise leads to a specific fingerprint. 

The threat to privacy is obvious: if the camera reference pattern can be determined and the noise of an image is calculated, a correlation between the two can be formed. For example, [http://www.buffalo.edu/content/dam/www/news/photos/2017/12/ndss18-paper99.pdf recent research] suggests that only ''one'' image is necessary to uniquely identify a smartphone based on the particular PRNU of the built-in camera's image sensor. <ref>The error rates is less than 0.5%</ref> Major data mining corporations are starting to use this technique to associate identities of camera owners with everything or everyone else they shoot. <ref>https://www.google.com/patents/US20150124107</ref> It follows that governments have had the same capabilities for some time now and can apply them to their vast troves of data.

There are methods to [https://www.slideshare.net/justestadipera/digital-image-forensics-camera-fingerprint-and-its-robustness destroy, forge or remove PRNU], but these should only be used with caution. The reason is related research on the question of spoofing sensor fingerprints in image files has proven non-trivial and easily defeated. <ref>[http://ws2.binghamton.edu/fridrich/Research/EI7541-29.pdf Sensor Noise Camera Identification: Countering Counter-Forensics]</ref> <ref>Anonymizing the PRNU noise pattern of pictures remains a promising area of research.</ref>

=== Operational Security Advice ===

This section assumes the user wants to preserve their anonymity, even when publicly sharing media on networks that are monitored by the most sophisticated adversaries on the Internet. Always conduct a realistic threat assessment before proceeding. These steps do not apply for communications that never leave anonymous encrypted channels between trusted and technically competent parties.

'''Table:''' ''Operational Security Advice''

{| class="wikitable"
|-
! scope="col"| '''Domain'''
! scope="col"| '''Recommendation'''
|-
! scope="row"| Current Devices
| It is almost a certainty that photos and videos have been shared from your current devices through non-anonymous channels. Do <u>not</u> use any of these devices to shoot media that will be shared anonymously.
|-
! scope="row"| Suitable Devices
| 
Most will probably want to avoid phones altogether and use tablets instead, but for most situations phones are a reasonable choice: <br />
* Buy a new Android phone with cash if possible. <br />
* Avoid other choices because a proprietary operating system is a nonstarter. <br />
* <u>In all cases</u> flash a freedom and privacy-respecting ROM before using the camera. Be aware that the glorified corporate malware that comes pre-installed on the phone will leak a range of data to the cloud.
|-
! scope="row"| Safe Use
| 
* The camera must <u>only</u> be reserved for anonymous media. <br />
* Do not commit serious mistakes like taking "selfies" or photographing places or people associated with you. <br />
* Sanitize metadata with [[Metadata#MAT2:_Metadata_Anonymisation_Toolkit_v2|MAT2]] before sharing photographs anonymously online. <br />
* Completely obscure faces with solid fills using an image manipulation program. Advancements in neural nets and deep machine learning make pixelated or gaussian blurred faces reconstructable. <ref>https://github.com/david-gpu/srez/blob/master/README.md</ref> <ref>[https://arxiv.org/pdf/1609.00408v2.pdf Defeating Image Obfuscation with Deep Learning]</ref> <br />
* Consider using the [https://guardianproject.info/apps/obscuracam/ ObscuraCam] app from The Guardian Project to protect the identities of protestors: <ref>https://lists.mayfirst.org/pipermail/guardian-dev/2016-September/004895.html</ref> <br />
** It pixelates images using a technique resistant to facial reconstruction. <br />
** ObscuraCam also offers a full pixel removal "black bar" option.
|}

= Keystroke Fingerprinting =

== Introduction ==

Keystroke biometric algorithms have advanced to the point where it is viable to fingerprint individuals based on soft biometric traits. This is a privacy risk because masking spatial information -- such as the IP address via Tor -- is insufficient for anonymity. <ref>https://github.com/vmonaco/keystroke-obfuscation</ref>

Unique fingerprints can be derived from various dynamics: <ref name=keystroke_dynamics>https://en.wikipedia.org/wiki/Keystroke_dynamics</ref>

* Typing speed.
* Exactly when each key is located and pressed (seek time), how long it is held down before release (hold time), and when the next key is pressed (flight time).
* How long the breaks/pauses are in typing.
* How many errors are made and the most common errors produced.
* How errors are corrected during the drafting of material.
* The type of local keyboard that is being used.
* The likelihood of being right or left-handed.
* Rapidity of letter sequencing indicating the user's likely native language.

A unique neural algorithm generates a primary pattern for future comparison. It is thought that most individuals produce keystrokes that are as unique as handwriting or signatures. This technique is imperfect; typing styles can vary during the day and between different days depending on a person's emotional state and energy level. <ref name=keystroke_dynamics />

Unless protective steps are taken to obfuscate the time intervals between key press and release events, it is likely most people can be deanonymized based on their keystroke manner and rhythm biometrics; see [https://arxiv.org/pdf/1609.07612.pdf Obfuscating Keystroke Time Intervals to Avoid Identification and Impersonation]. Adversaries are likely to have samples of clearnet keystroke fingerprinting which they can compare with "anonymous" Tor samples. One basic precaution is to avoid typing into browsers with Javascript enabled, since this enables this deanonymization vector. Text should be written in an offline text editor and then copied and pasted into the web interface when it is complete.

There are several related anonymity threats that need to be considered. For instance:

* Linguistic style must be disguised to combat [[Surfing_Posting_Blogging#Stylometry|stylometric analysis]].
* [[Surfing_Posting_Blogging#Mouse_Fingerprinting|Mouse tracking techniques]] must also be countered.

== Keystroke Anonymization Tool (kloak) ==

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Kloak is installed in {{non q project name}} {{workstation product name}} 15 by default. [[{{q project name short}}|{{q project name}}]] is unfortunately [[unsupported]]. <ref>
* https://github.com/QubesOS/qubes-issues/issues/2558
* https://github.com/QubesOS/qubes-issues/issues/1850
* Using <code>/dev/input/event0</code> in Qubes VMs [https://forums.whonix.org/t/current-state-of-kloak/5605/6 will not work since not a keyboard device].
</ref>
}}

=== Overview ===

kloak is designed to stymie adversary attempts to identify and/or impersonate users' biometric traits. The GitHub site succinctly describes kloak's purpose and the tradeoff between usability and the level of privacy. Notably, shorter time delays between keystrokes and release events reduces overall anonymity: <ref>https://github.com/vmonaco/kloak</ref>

<blockquote>kloak is a privacy tool that makes keystroke biometrics less effective. This is accomplished by obfuscating the time intervals between key press and release events, which are typically used for identification. <b>This project is experimental.</b> 

...

kloak works by introducing a random delay to each key press and release event. This requires temporarily buffering the event before it reaches the application (e.g., a text editor).

The maximum delay is specified with the -d option. This is the maximum delay (in milliseconds) that can occur between the physical key events and writing key events to the user-level input device. The default is 100 ms, which was shown to achieve about a 20-30% reduction in identification accuracy and doesn't create too much lag between the user and the application (see the paper below). As the maximum delay increases, the ability to obfuscate typing behavior also increases and the responsive of the application decreases. This reflects a tradeoff between usability and privacy.</blockquote>

While kloak makes it hard for adversaries to identify individuals or to replicate their typing behavior -- for example to overcome two-factor authentication based on keystroke biometrics -- it is not perfect:

* Small delays are not effective; higher values that can be tolerated are preferable.
* It does not address stylometric threats.
* Repeated (held-down) key presses that repeat at a unique rate can lead to identification.

=== Installation ===

The following procedure should take place inside {{workstation_product_name}}. <ref>https://forums.whonix.org/t/kloak-keystroke-level-online-anonymization-kernel-obfuscates-typing-behavior-at-the-device-level-testers-wanted/7089</ref>
{{Box|text=
'''1.''' Update the {{workstation_product_name}} packages lists.

{{CodeSelect|code=
sudo apt-get update
}}

'''2.''' Install kloak.

{{CodeSelect|code=
sudo apt-get-update-plus install kloak
}}

'''3.''' Test kloak was properly installed.

{{CodeSelect|code=
sudo systemctl status kloak
}}

Note: kloak can be manually started or stopped with the following commands.

{{CodeSelect|code=
sudo service kloak start
sudo service kloak stop
}}

For detailed troubleshooting, options and other advice refer to [https://github.com/vmonaco/kloak GitHub].
}}

=== Testing and Interpretation ===

It is recommended to test that kloak is actually working by trying an [https://www.keytrac.net/en/tryout online keystroke biometrics demo]. Three different scenarios are available, but "Train normal" (without kloak running) is <u>not</u> recommended for anonymity reasons:

# Train normal, test normal
# Train normal, test kloak
# Train kloak, test kloak

The KeyTrac demo allows the entering of a username and password on the enrollment page and then testing it on an authentication page. Below is a sample result and interpretation of entering a username and password without/without kloak running, with both training methods. 

'''Table:''' ''Sample kloak Test Results''

{| class="wikitable"
|-
! scope="col"| '''kloak Configuration'''
! scope="col"| '''Results and Interpretation'''
|-
! scope="row"| Train normal, test normal
| 
* trial 1: 94% accuracy identified <br />
* trial 2: 92% accuracy <br />
* trial 3: 94% ..
|-
! scope="row"| Train normal, test kloak
| 
* trial 1: 18% <br />
* trial 2: 15% <br />
* trial 3: 19%
|-
! scope="row"| Train kloak, test kloak
| 
* trial 1: 40% <br />
* trial 2: 42% <br />
* trial 3 36%
|}

From the first test set it is evident that without kloak, users can be identified with a high degree of certainty. The second test set demonstrates that kloak definitely obfuscates typing behavior, making it difficult to authenticate or identify a particular user. Finally, the third set evidences that users who run kloak may look "similar" to one another. That is, it might be possible to identify kloak users from non-kloak users; if this is true, then the anonymity set will increase as more users start running kloak.

= Mouse Fingerprinting =

Mouse or cursor tracking occurs when software collects the positions of the mouse cursor and click data on the computer. While this can have benefits for web designers, it also poses a privacy (profiling) threat. Without explicit user consent or awareness, a range of data can be leaked via JavaScript, plug-ins or other software: <ref name=mouse_tracking>https://en.wikipedia.org/wiki/Mouse_tracking</ref>

* JavaScript and Cascading Style Sheets (CSS) <ref>https://en.wikipedia.org/wiki/Cascading_Style_Sheets</ref> readily allow developers to track users' mouse movements by simply entering relevant code on the webpage. This has already been employed on high-traffic websites, such as search engines.
* Similar to JavaScript, installed and enabled software modules (plug-ins) can track mouse movements.
* Specific mouse tracking software can reveal:
** Mouse location.
** Time stamps.
** Mouse clicks.
** A mouse cursor hovering over embedded links and its duration.
** The amount of time spent in certain webpage areas.
** Heat maps.
** Full playbacks which retrace the mouse's trajectory.

For a practical example of deanonymization, consider someone who regularly uses both clearnet and Tor with JavaScript enabled. Individuals have distinctly unique characteristics associated with mouse movements and mouse clicks. Therefore, if these research methods are used in the public domain, supervised learning methods are likely to "learn" the typical behavior of individuals. Over time, it may be possible to link "anonymous" activities with the known profile of a clearnet user with a high degree of probability. <ref name=mouse_tracking /> <ref>This deanonymization technique is likely to succeed, since it is already used to lock persons out of secure accounts (pending identity verification) when their monitored behavior significantly deviates from behavior that has been learned.</ref>

Disabling JavaScript cannot mitigate this as it can also be done with just CSS. <ref>https://twitter.com/davywtf/status/1124146339259002881</ref>

= Stylometry =

{{project_name}} does not obfuscate an individual's writing style. Consequently, unless precautions are taken (see below), users are at risk from [https://en.wikipedia.org/wiki/Stylometry stylometric analysis based on their linguistic style]. Research suggests only a few thousand words (or less) may be enough to positively identify an author and there are a host of software tools available to conduct this analysis.

This technique is used by advanced adversaries to attribute authorship to anonymous documents, online texts (web pages, blogs etc.), electronic messages (emails, tweets, posts etc.) and more. The field is dominated by A.I. techniques like neural networks and statistical pattern recognition, and is critical to privacy and security. Current anonymity and circumvention systems are focused on location-based privacy, but ignore leakage of identification via the content of data which has a high accuracy in authorship recognition (90%+ probability). 
<ref name=stylometry>https://www.cs.drexel.edu/~sa499/papers/adversarial_stylometry.pdf</ref>

There are multiple ways to conduct statistical analysis on "anonymous" texts, including: <ref name=stylometry /> <ref>https://en.wikipedia.org/wiki/Stylometry</ref> 
<div style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
* Keystroke fingerprinting, for example in conjunction with Javascript.
* Stylistic flourishes.
* Abbreviations.
* Spelling preferences and misspellings.
* Language preferences.
* Word frequency.
* Number of unique words.
* Regional linguistic preferences in slang, idioms and so on.
* Sentence/phrasing patterns.
* Word co-location (pairs).
* Use of formal/informal language.
* Function words.
* Vocabulary usage and lexical density.
* Character count with white space.
* Average sentence length.
* Average syllables per word.
* Synonym choice.
* Expressive elements like colors, layout, fonts, graphics, emoticons and so on.
* Analysis of grammatical structure and syntax.
</div><br />
Fortunately, research suggests that by purposefully obfuscating linguistic style or imitating the style of other known authors, this is largely successful in defeating all stylometric analysis methods. This means they are no better than randomly guessing the correct author of a document. However, using automated methods like machine translation services does not appear to be a viable method of circumvention. <ref name=stylometry />

= Tips for Anonymous Posting, Blogging and Uploading =

Before undertaking any anonymous activities, be sure to understand and exercise a healthy dose of [[DoNot|Operational Security]] (OpSec). Even the best anonymity software available today cannot prevent catastrophic mistakes by individuals.

== Blogging ==
 
'''Table:''' ''Blogging Tips''

{| class="wikitable"
|-
! scope="col"| '''Activity'''
! scope="col"| '''Tips'''
|-
! scope="row"| Activity Partitioning
| Separate all online activities and only use a dedicated email address for the blog.
|-
! scope="row"| Blog Administration
| Usually the blog is administrated via a web interface only. Use Tor Browser for all blog activities.
|-
! scope="row"| Blog Posting
| Every type of blog software offers the option to select a point in time when new postings are published. It is safer to delay the publishing of new posts to a time when you are not online anymore, rather than publishing immediately. <ref>This will trick lesser adversaries, who cannot force the blog service provider to reveal exactly when and for how long a blog administrator logged in. This will not fool the blog service provider nor an adversary capable of recording all internet traffic.</ref>
|-
! scope="row"| Email Address Registration
| 
For anonymous blogs hosted on third-party services, register it with a new and anonymous e-mail address (see [[E-Mail]]) that has never been used before and which has been exclusively paired with Tor for logins and other related activity: <ref>Do not use personal or identifying data as part of the account creation.</ref> <br />
* Different Providers: The blog can be registered with different providers anonymously; for example, to utilize https://wordpress.com/ <br />
* Payments: If using a premium product, keep the option open to [[Money|pay anonymously]] via [[Money#Bitcoin|BitCoin]] or cash cards like [https://www.paysafecard.com/ Paysafecard]. Note that cash card codes differ by country and could theoretically contain an ID which is linked to the shop where it was bought. 
|}

== Browser Input ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = A browser is an unsafe environment to directly write text, regardless of whether it is a forum post, email, webmail or IMAP-related reply. 
}}

'''Table:''' ''Browser Input Tips''

{| class="wikitable"
|-
! scope="col"| '''Activity'''
! scope="col"| '''Tips'''
|-
! scope="row"| Accidental Searches
| Text can be accidentally pasted into the search or URL bar, which triggers an unintended search across the public internet.
|-
! scope="row"| JavaScript
| 
With JavaScript enabled, user behavior can be tracked and profiled as already noted in this chapter:<br />
* [[#Keystroke_Fingerprinting|Keystroke Fingerprinting]]. <br />
* [[#Mouse_Fingerprinting|Mouse Fingerprinting]]. See additional footnotes. <ref>As noted in the [[#Mouse_Fingerprinting|Mouse Fingerprinting]] section, mouse movements are another biometric profiling vector and disabling JavaScript is therefore recommended. High accuracy is achieved in limited situations, such as active authentication during log-on.</ref> <ref>This does not clear EU false positive requirements however, so they recommend it is combined with keystroke dynamics for extra confirmation, see: [https://doi.org/10.1145/1029208.1029210 User re-authentication via mouse movements], [http://www.cs.sjsu.edu/faculty/pollett/papers/shivanipaper.pdf On Using Mouse Movements as a Biometric] and [http://www.cs.wm.edu/~hnw/paper/ccs11.pdf http://www.cs.wm.edu/~hnw/paper/ccs11.pdf]</ref> <br />
* When the methods above are combined with [[#Stylometry|Stylometry]], a user will be de-anonymized unless countermeasures are implemented, like faking one's authorship style <ref>For instance, stylometry works with less data (final text only) and in concert with keystroke fingerprinting is completely effective. An adversary can compare statistics about a user's typing over clearnet, then compare it to texts composed over Tor in real-time.</ref> and confusing stylometry with a spell checker. <ref>For example, launch KWrite: <code>Start menu button</code> &rarr; <code>Applications</code> &rarr; <code>Utilities</code> &rarr; <code>Text Editor (KWrite)</code>. Once KWrite is open, click on <code>Tools</code> &rarr; <code>Automatic spell checking</code>. Misspelled words will be underlined with a red color. </ref> <br />
* Tor Browser defenses are based on skewing JavaScript's perception of time. <ref>https://trac.torproject.org/projects/tor/ticket/19186</ref> <ref name=tbb-user-behaviour>[https://www.torproject.org/projects/torbrowser/design/ '''User Behavior''']
<blockquote>
While somewhat outside the scope of browser fingerprinting, for completeness it is important to mention that users themselves theoretically might be fingerprinted through their behavior while interacting with a website. This behavior includes e.g. keystrokes, mouse movements, click speed, and writing style. Basic vectors such as keystroke and mouse usage fingerprinting can be mitigated by altering Javascript's notion of time. More advanced issues like writing style fingerprinting are the domain of other tools.
</blockquote>
</ref> The eventual packaging of [https://github.com/vmonaco/kloak/ kloak] (keystroke-level online anonymization kernel; currently in testing) in {{project_name}} will provide a system-wide solution for keystroke and mouse profiling.
|-
! scope="row"| Text Editors
| 
* Offline Editors: It is recommended to prepare text in an offline text editor like KWrite and then copy and paste the content into the web interface once finished. <br />
* External Devices: Avoid typing in places where open microphones are used, otherwise recorded keyboard sounds might provide enough information to accurately reconstruct what was typed. <ref>This is a variation of an older attack perfected during the Cold War where recorded typewriter sounds allowed discovery of what was typed. See: https://freedom-to-tinker.com/2005/09/09/acoustic-snooping-typed-information/ and https://www.schneier.com/blog/archives/2016/10/eavesdropping_o_6.html</ref>
|}

== Hardware Threat Mitigation ==

'''Table:''' ''Hardware Threat Tips''

{| class="wikitable"
|-
! scope="col"| '''Category'''
! scope="col"| '''Tips'''
|-
! scope="row"| Disable Dangerous Peripherals
| 
* Speakers / Microphones: It is advisable to shut off the speakers and [[Hardware_Threat_Minimization#Microphones|microphone]] at all times, as newer methods of advertisement tracking can link multiple devices via ultrasound covert channels. <ref>This deanonymization technique works by playing a unique sound inaudible to human ears which is picked up by the microphones of untrusted devices. Watermarked audible sounds are equally dangerous, which means that hardware incapable of ultrasound is an ineffective protection.</ref> It is also possible to decrease the risk by playing video and audio from untrusted sources with headphones connected and adjusted at a low volume. <ref>https://www.schneier.com/blog/archives/2015/11/ads_surreptitio.html</ref> <br />
* LCD Coil Whine: The coil whining of LCD screens is unique enough to leak the information presented on the screen as reconstructed by machine learning applied on wiretapped data (via the webcam microphone). <ref>https://arstechnica.com/information-technology/2018/08/researchers-find-way-to-spy-on-remote-screens-through-the-webcam-mic/</ref> 
|-
! scope="row"| Remove External Devices
| Remove all phones, tablets and so on from the room to avoid them issuing watermarked sounds as well as listening to keystroke sounds and watermarked sounds. <ref>https://www.newscientist.com/article/2110762-your-homes-online-gadgets-could-be-hacked-by-ultrasound/</ref> <ref>https://trac.torproject.org/projects/tor/ticket/20214</ref> Similarly, do not make / take calls in the same room where anonymous browsing is underway, or run sensitive applications (like Orfox) or have documents open on the phone before calls.
|-
! scope="row"| Side-channel Attacks
| Energy leaks that reveal sensitive information are a long studied area of cryptography research; see footnotes. <ref>[https://www.tau.ac.il/~tromer/radioexp/ Stealing Keys from PCs using a Radio: Cheap Electromagnetic Attacks on Windowed Exponentiation]: Extraction of secret decryption keys from laptop computers, by non-intrusively measuring electromagnetic emanations for a few seconds from a distance of 50 cm. The attack can be executed using cheap and readily-available equipment: a consumer-grade radio receiver or a Software Defined Radio USB dongle.</ref> <ref> Another attack involves measuring acoustic emanations: [https://www.tau.ac.il/~tromer/papers/acoustic-20131218.pdf RSA Key Extraction via Low-Bandwidth Acoustic Cryptanalysis].</ref> <ref>A poor man's implementation of TEMPEST attacks (recovering cryptographic keys by measuring electromagnetic emissions) using $3000 worth of equipment was proven possible from an adjacent room across a 15cm wall. These attacks were only possible for adversaries with nation-state resources for the past 50 years. See: [https://eprint.iacr.org/2016/129.pdf CDH Key-Extraction via Low-Bandwidth Electromagnetic Attacks on PCs]</ref> There is no need for alarm, as all these attacks were foiled by software countermeasures in cryptographic libraries and GPG. Also bear in mind this vector is targeted and not a dragnet surveillance threat, since it requires dedicated and skilled attackers.
|-
! scope="row"| Wi-Fi Signal Emitters
| Another keystroke snooping technique involves a WiFi signal emitter (router) and malicious receiver (laptop) that detects changes in the signal that correspond to movements of the target's hands on their keyboard. <ref>[https://www.sigmobile.org/mobicom/2015/papers/p90-aliA.pdf Keystroke Recognition Using WiFi Signals]</ref> This attack has many limitations in the real-world which make it unpractical and susceptible to noise, but it is important to remember that public places are riskier computing environments. <ref> An attack variant using USRP (cellphone radio ranges) has performed poorly because of background energy interference.</ref>
|}

== User Habits ==

'''Table:''' ''User Habit Tips''

{| class="wikitable"
|-
! scope="col"| '''Category'''
! scope="col"| '''Tips'''
|-
! scope="row"| CAPTCHA / reCAPTCHA
| Google's CAPTCHAs fingerprint the behavior of individuals.<ref>https://www.quora.com/Why-cant-bots-check-%E2%80%9CI-am-not-a-robot%E2%80%9D-checkboxes/answer/Oliver-Emberton?share=1</ref> Only disable JavaScript if it must absolutely be solved. <ref>http://scraping.pro/no-captcha-recaptcha-challenge/</ref> <ref>CAPTCHAS also directly enhance the strike capabilities of military drones, see: https://joeyh.name/blog/entry/prove_you_are_not_an_Evil_corporate_person/</ref>
|-
! scope="row"| Cookies
| Remember to purge the browser's cookie and history cache periodically. When running [[Tor Browser]], it is recommended to simply close Tor Browser after online activities are finished, then restart it.
|-
! scope="row"| Environment
| Avoid public places where people are likely to shoulder surf or where CCTV cameras are deployed. When having sensitive conversations even over encrypted channels, consider that AI is capable of reading lips when captured on video footage.<ref>https://arxiv.org/pdf/1611.01599.pdf</ref>
|-
! scope="row"| File Sanitization
| 
Generally, any blog pictures, documents or other files must have unique [[Metadata]] removed (anonymized) before they are uploaded - check the file format is compatible with the [[Metadata#MAT_-_Metadata_Anonymisation_Toolkit|MAT]] software: <ref>Such as unique camera IDs and often GPS coordinates in the case of photographs.</ref> <br />
* Refer to the additional, [[#Operational_Security_Advice|operational security advice]] for photographs. <br />
* Follow the same [[#Operational_Security_Advice|operational security advice]] for audio recordings. <br />
* Refer to the additional [[#Documents|countermeasures]] for embedded digital watermarks in documents.
|-
! scope="row"| Passwords
| 
* Detection: Although a remote threat, thermal imaging can capture body heat remains from keys touched to input passwords up to one minute after the fact. <ref>https://www.schneier.com/blog/archives/2018/07/recovering_keyb.html</ref> Also avoid places with CCTV or those which risk shoulder surfing. <br />
* Generation: Use random usernames and [[Passwords#Generating_Unbreakable_Passwords|strong Diceware passwords]] for anonymous accounts. <code>pwgen</code> should only be used to generate usernames and not passphrases because its emphasis is on generating phonemes; see footnote. <ref>Such a bias means the program does what it is designed to do: produce pronounceable passwords rather than pure line noise. Even with the secure option <code>-s</code> it has been noted that it produces passwords with bias towards numbers and uppercase letters to make password checkers happy. The CVE to fix this was rejected and the behavior was not corrected by the authors. This is undesirable for creating true random output, see: [https://bugs.debian.org/726578 pwgen: Multiple vulnerabilities in passwords generation].</ref> <br />
* Retention: Consider the password-retention policy of the browser. If it supports a master password that encrypts every password it saves, then use that feature. It is generally safest not to save any blog or other passwords in the browser, but instead use a password manager and cut and paste passwords into the browser.
|-
! scope="row"| Pseudonym Isolation
| For advanced separation of discrete activities, use [[Multiple {{workstation_product_name_short}}|Multiple {{workstation_product_name}}s]].
|-
! scope="row"| Publishing Time
| Over time, pseudonymous activity can be profiled to provide an accurate estimate of the timezone, reducing the user's anonymity set. It is better to restrict posting activity to a fixed time that fits the daily activity pattern of people across many places.
|-
! scope="row"| Tor Browser Censorship
| In most cases, Tor blocks by destination servers can be easily bypassed with simple [[Tor_Browser#Bypass_Tor_Censorship|proxies]].
|}

= Footnotes =
{{reflist|close=1}}

= License =

{{JonDos}} The Surfing, Posting, Blogging page contains content from the JonDonym documentation [https://anonymous-proxy-servers.net/en/help-live-cd/jondo-live-cd4.html Surfing and Blogging] page.

{{Footer}}

[[Category:Documentation]]
