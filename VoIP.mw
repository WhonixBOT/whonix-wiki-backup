{{Header}}
{{#seo:
|description=Anonymous Voice over IP (VoIP). Encrypted anonymous phone calls using the Tor Anonymity Network.
|image=https://www.whonix.org/w/images/f/f9/Sound-856771640.png
}}

= Voice over IP =
== Introduction ==
Anonymizing Voice over IP is somewhat difficult, but possible. It is not so much about hiding the IP, which is easy with {{project_name}}, it is about voice recognition and slow Tor network speed (latency). Pseudonymous use or hidden voice communication with known contacts depends on your threat model.

For people behind Tor, who know each other, talking to each other, it is possible to hide the fact that they are talking with each other, from their ISP, government, exit relays, man-in-the-middle, etc. That wouldn't be anonymous, because they know each other.

You can't anonymously use your own voice and whistle-blow over VoIP. Voice gets recorded and voice recognition works well. When you are having a phone call later over a non anonymous connection (which almost everyone had at least once in its life, so everyone supplied a sample of their voice and name), they can correlate the two identities. You would have to use a voice scrambler and how good that works is a whole new field for research, which is outside the scope of Whonix.

You could type and let a artificial voice speak (like in anonymous videos), that could work. But is that the point? You better write a mail then.

It is also recommended against voice chatting with other anonymous people. (Like you can talk in a forum.) You don't know who you are talking to. That voice also could be correlated later, putting aside voice scrambler, or artificial voice, which wouldn't make sense.

If you are not calling from .onion to .onion (which delegates encryption to Tor), you should use a VoIP client supporting an end-to-end encryption protocol, such as ZRTP<ref>https://en.wikipedia.org/wiki/ZRTP</ref>. '''ZRTP End-to-End Encryption cannot Protect VBR Streams.''' When using ZRTP + SRTP  for encryption in any stretch that goes on the clearnet, be sure to never select a VBR (variable bitrate) codec as the pauses in a conversations produce fingerprints in the encrypted stream that allow the adversary to infer what words are being said.<ref>http://zfoneproject.com/faq.html#vbr</ref> <ref>http://www.webcitation.org/6RrGGaAho</ref>

With ZRTP encryption make sure you compare authentication strings with the other party during the initial call. If they don't match then do not continue the call as it indicates an active MITM attack.

Some good libre software soft-phone programs are Linphone and Jitsi.  However communicating directly over Tor with a VoIP server is not possible at the moment as SIP based clients all use UDP. You can still use a [[Tunnel_UDP_over_Tor|workaround]] but there are limitations. Please don't expect phone calls over Tor can't to be as convenient as over ordinary networks. This is because even when UDP packets are tunneled the restrictions of the underlying TCP protocol still apply. Push to talk will always work however, which is more like using walkie-talkie<ref>https://en.wikipedia.org/wiki/Walkie-talkie</ref>,  push-to-talk<ref>https://en.wikipedia.org/wiki/Push-to-talk</ref>. Useful advice has been given by the Guardian Project. They recommend to use prowords<ref>http://en.wikipedia.org/wiki/Procedure_word</ref>. Acknowledge the end of transmission (your speech, your sentence, what you just said) with the word "Roger". Once your calling partner hears "Roger", it knows, it is safe to answer and also terminate the answer with "Roger" or "Out" when leaving the conversation.

Other than the things said above, no additional anonymity/security problems are expected. It is less tested, so as for performance and voice quality, just try it and see yourself and please leave feedback.

== VoIP Servers and Privacy ==
VoIP servers servers can still see call signalling metadata with end-to-end encryption. However if the VoIP IDs are anonymously registered, i.e. if no personal data is required for signing up, everyone only and always connects over Tor, never connected or will ever connect without Tor, and all calls are encrypted and you won't talk to strangers, there is probably very little a malicious server could log or do. <ref>Apart from trying to [https://en.wikipedia.org/wiki/Exploit_(computer_security) exploit] random Tor users.</ref>

== VoIP Solutions ==
==== Tox ====
{{Template:Tox}}
==== Mumble ====

===== Introduction =====

Mumble<ref>http://sourceforge.net/projects/mumble/</ref>

* Looks a bit like Team Speak without its disadvantages.
* It is Open Source.
* And supports client to server encryption.<ref>http://mumble.sourceforge.net/FAQ/English#Is_Mumble_encrypted.3F</ref>
* Supports push to talk.<ref>http://www.mumble.com/support/mumble-server-push-to-talk.php</ref>
* You can (and must) force TCP mode<ref>http://en.kioskea.net/faq/26187-mumble-force-tcp-mode</ref>, because the Tor network does not support UDP yet.
* One has to act as server.
* Everyone else can act as client.
* If the server admin runs the server on its local machine and also wants to connect to the server, the admin should connect locally to the server, i.e. to 127.0.0.1 and not the onion service domain to have faster connection.
* For group chats you have to consider, that there is no end-to-end encryption and once the server has been compromised, conversions are no longer private. However, if two people use mumble just to talk to each other this doesn't matter and you could safely do that with mumble.
* When one of the two communication partners hosts a mumble server as Tor onion service and the other one connects over Tor, encryption is already provided by Tor. There are different ways to achieve security. In this case, setting a server password (explained below), should be sufficient. <font size=-3>Mumble's own encryption is not required. Alternatively, feel free to learn about mumble certificates for defense in depth, channel passwords instead of server password and so on.</font>

===== Mumble Server Instructions =====
If you want to read and introduction about onion services and to learn about about onion service security, see [[Onion Services]].

If you also want to run a hidden web server on the same .onion domain (nice for testing and learning Onion Services basics), see [[Onion Services]].

On {{gateway_product_name}}.

{{Open /usr/local/etc/torrc.d/50_user.conf}}

Add.

{{CodeSelect|code=
HiddenServiceDir /var/lib/tor/mumble_service/
HiddenServicePort 64738 10.152.152.11:64738
HiddenServiceVersion 3
}}

Save.

{{Reload Tor}}

To get your Tor onion service url.

{{CodeSelect|code=
sudo cat /var/lib/tor/hidden_service/hostname
}}

{{
Backups_Tor_Onion_Service_private_key
|private_key_file=/var/lib/tor/hidden_service/private_key
}}

On Whonix-Workstation.

{{Firewall Settings Workstation}}

Add.

{{CodeSelect|code=
EXTERNAL_OPEN_PORTS+=" 64738 "
}}

Save.

{{Reload_Firewall_Whonix-Workstation}}

Update package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install the {{Code2|mumble-server}} package.

{{CodeSelect|code=
sudo apt-get install mumble-server
}}

Configure the server.

{{CodeSelect|code=
sudo dpkg-reconfigure mumble-server
}}

The following questions...

* Autostart, better yes. Otherwise you would have to "sudo service mumble-server start", which didn't work for me.
* Higher priority? Yes.
* Password: choose a secure password.

There is also an upstream [http://mumble.sourceforge.net/Running_Murmur Murmur], i.e. mumble server guide. The upstream guide does not consider onion services, that's the part already described here. For any other questions regarding the server setup, you can also refer to the upstream documentation.

Set a server password. Open ''/etc/mumble-server.ini''.

{{Open with root rights|filename=
/etc/mumble-server.ini
}}

Search for "''serverpassword=''" and file in.

<pre>
serverpassword=use_a_long_and_secure_server_password
</pre>

Restart mumble-server.

{{CodeSelect|code=
sudo service mumble-server restart
}}

===== Mumble Client =====

====== Installation ======

Update package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install mumble.

{{CodeSelect|code=
sudo apt-get install mumble
}}

====== Start ======
Start mumble.

<pre>
Start menu -> Applications -> Internet -> Voice Chat
</pre>

====== Configure ======

Configure mumble to your liking.

Enable Force TCP mode.

<pre>Go to Configure -> Check "Advanced" -> Network -> Check "Force TCP mode" -> Ok</pre>

====== Add Server ======

Add a new server:

<pre>
Server -> Connect -> Add new ->

    Label   : anything, can be same as .onion domain name
    Address : your .onion domain name or,
              if the mumble server is running in your own
              {{workstation_product_name}} choose
              127.0.0.1
    Port    : 64738
    Username: anything
</pre>

You can now connect to the server.

===== Technical Comments =====

<ref>Mumble (and mumble-server)'s connections go through Tor's TransPort. This shouldn't matter, because (connections to and ) onion services (itself) are stream isolated so or so, see [[Stream Isolation]] for more information on TransPort, SocksPort, Stream Isolation and so on.</ref> Implementing privacy critical software in a browser is seen as a bad and dangerous idea by security conscious Free Software developers. Browser security holes and lack of adequate process isolation, could lead to theft of private encryption keys by a malicious code running in the browser.

=== Warnings ===
==== USB Webcam Passthrough ====
The firmware of USB devices could be flashed by malware and cross infect the host.

==== TOR Fone ====
{{Anchor|SpeakFreely}}
The developer of TOR Fone (a fork of SpeakFreely) recommends against<ref>https://lists.torproject.org/pipermail/tor-talk/2013-February/027215.html</ref> using TOR Fone. Quote: "''I did not think this project as a finished product for practical use.''" The project got overall a pretty bad review in the mailing list thread.

==== Skype ====
'''Does this mean that, for example, is my IP and location safe when using Skype?'''

Yes, IP and location is safe. Skype has been tested in {{project_name}}, it "works" quite well (does it? it seems to have stopped working in 2013 - see <ref>http://community.skype.com/t5/Security-Privacy-Trust-and/Is-Skype-blocking-TOR-exit-nodes/td-p/1706941</ref>), still recommended against. Some further comments you should be aware of:

Those are not Whonix or Tor issues, those are Skype issues. Consider Skype usage [[DoNot#Do_not_confuse_Anonymity_with_Pseudonymity.|pseudonymous rather than anonymous]]. Skype is closed source and given Skype's history (reading BIOS etc. just research) it is very much likely that they link all your account names inside {{workstation_product_name}} to the same pseudonym.

Also obviously, if you log into an account, which you have ever used without Tor, consider the account non-anonymous. You really should assume, that they have logs and link your Tor and non-Tor use together.

Security doesn't depend on your local security and key management, but on a third party, the Skype authority. Consider the Skype encryption broken by the Skype authority.

Another obvious thing, if you chat with people, who have not created their account over Tor and who have not always connected over Tor, it is also not so hard to guess who you are. Remember, you are not in control of Skype's encryption keys and Skype is not Open Source, thus do not rely on Skype's encryption.

Voice recognition software also got very sophisticated. Since you should be unsure if the Skype encryption is broken or not, voice recognition software could be used to find out who you are.

Also read [[DoNot#Do_not_mix_Modes_of_Anonymity.21|Do not mix Modes of Anonymity!]]

In conclusion Skype usage does not leak IP/location, but is discouraged anyway, unless you want to use it for circumvention only, without wanting to be anonymous or pseudonymous.

What's the point in using Skype if you and all your chat partners are also willing to create and use their accounts only over Tor? You are advised to use Skype alternatives.

If you are wondering, why Skype works at all in Whonix over Tor, since Tor only supports TCP, see technical details: <ref>
* Quote [http://www.secdev.org/conf/skype_BHEU06.handout.pdf Silver Needle in the Skype] ([http://www.webcitation.org/6ST50b3Pp w]):
<blockquote>
Skype can’t work without a TCP connection <br />
But Skype can work without UDP <br />
Blocking UDP is not sufficient <br />
</blockquote>
* [https://guardianproject.info/2012/12/10/voice-over-tor/ guardianproject.info: Voice over Tor? (scroll down to "Skype over Tor)] ([http://www.webcitation.org/6ST6J7Oay w])
</ref>

=== List ===
There is a [https://en.wikipedia.org/wiki/Comparison_of_VoIP_software Comparison of VoIP software] in wikipedia. The client should be Open Source and if you are not calling from .onion to .onion (and let Tor handle encryption) it should also support voice encryption such as ZRTP.

== Sources ==

* [https://guardianproject.info/2013/01/31/anonymous-cb-radio-with-mumble-and-tor/ guardianproject.info: Mumble and the Bandwidth – Anonymous CB radio with Mumble and Tor]

== External Resources ==
* Not Whonix specific, still interesting: [http://huertanix.tumblr.com/post/55261352264/location-anonymous-voice-communication-a-step-by-step Location-Anonymous Voice Communication, A Step-by-Step Guide]

== Footnotes ==
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
