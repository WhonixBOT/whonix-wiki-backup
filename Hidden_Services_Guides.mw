{{Header}}
{{#seo:
|description=Collection of various Hidden Services Guides
}}

= GlobaLeaks =
[https://globaleaks.org/ Project main site]

[https://github.com/globaleaks/GlobaLeaks/wiki/Installation-guide Guide]

This is a guide to help you set up your own secure and anonymous whistle blowing platform. Note that this is a standalone node and not part of a network, although you can optionally list yourself in the [http://leakdirectory.org/ Leaks Directory].

= OnionCat =
See [[OnionCat]].

= OpenBazaar =
OpenBazaar supports both TCP and UDP. The latter was added to aid those using it on the clearnet that had difficulties connecting from behind their routers. <ref>https://github.com/OpenBazaar/OpenBazaar/issues/795</ref> When using Tor you don't have to worry about that.

A [https://www.reddit.com/r/OpenBazaar/comments/2iusp4/openbazaar_tor_demo/ community demo] for OpenBazaar  was done with Tor by hosting seed nodes as Hidden Services.

= SecureDrop =
SecureDrop is another widely used whistle-blowing platform installed at many news organizations. To set it up please refer to the [https://github.com/freedomofpress/securedrop/blob/develop/docs/install.md official guide]. To use SecureDrop as a source, refer to this [https://github.com/freedomofpress/securedrop/blob/develop/docs/source_user_manual.md documentation] and for using SecureDrop as a journalist go [https://github.com/freedomofpress/securedrop/blob/develop/docs/journalist_user_manual.md here]. For general information and project code go to their main [https://github.com/freedomofpress/securedrop Github page].

If you are a news or whistle-blowing site operator you may be interested in having your Hidden Service address listed at the [https://freedom.press/securedrop/directory Freedom of The Press Foundation].

= Sparkleshare =
For a private and anonymous DropBox alternative you can run [https://guardianproject.info/2013/11/12/your-own-private-dropbox-with-free-software/ Sparkleshare as a Hidden Service]. To ensure that only you and the intended parties can access the service you need to set up Hidden Service Authentication, see [https://www.whonix.org/wiki/Hidden_Services#Hidden_Service_Authentication instructions].

= Stormy =
Stormy is a simple hidden service blog setup script. The developer hopes to have it packaged for Debian at some point. You can see it on [https://github.com/glamrock/Stormy Github].

=Syncthing with OnionCat=

Syncthing is a libre software solution for private file synchronization.

This section will cover file syncing with peers inside the Tor network.

1. Set up [[OnionCat]] on Whonix Gateway. All parties involved will need to configure a Hidden Service with OnionCat because syncing is bidirectional.

2. [https://www.whonix.org/w/index.php?title=OnionCat&stable=0&shownotice=1&fromsection=Tunneling_IPv4#Tunneling_IPv4 IPv4 over IPv6 tunneling] for OnionCat is a must because Syncthing only supports IPv4 peer addresses. Make sure you can successfully ping all OnionCat IPv4 addresses before proceeding.

3. Next, add the Syncthing offical repo <ref>apt.syncthing.net</ref>:

First add the release PGP keys:
<pre>
curl -s https://syncthing.net/release-key.txt | sudo apt-key add -
</pre>


Add the "release" channel to your APT sources:
<pre>
sudo sh -c 'echo deb http://apt.syncthing.net/ syncthing release > /etc/apt/sources.list.d/syncthing-release.list'
</pre>


The project's GPG key information is posted on this [https://syncthing.net/security.html page].

Cross-reference the keys by visually comparing them with the output of:
<pre>
sudo apt-key list
</pre>


Update and install Syncthing:
<pre>
sudo apt-get update
sudo apt-get install syncthing
</pre>


4. Lauch Syncthing:
<pre>
$ syncthing
</pre>

Do not close the running terminal or Syncthing will shutdown.
Answer 'No' if asked to 'Allow Anonymous Usage Reporting'.

To open the WebGUI, open Iceweasel and paste:
<pre>
http://127.0.0.1:8384/
</pre>

Do NOT use Iceweasel for any other purpose because of fingerprinting threats. Opening the WebGUI in TBB won't work because of stream isolation settings.


5. At this point Syncthing back-end should have generated your unique Device ID.
Go to:
<pre>
Actions > Show ID
</pre>

Copy and distribute this Device ID along with your IPv4 OnionCat address to other endpoints out-of-band (using OTR encrypted chat or similar). This data is needed for configuring Syncthing instances to find one another.


6. Once the data is exchanged go to <pre>Add Device</pre> and paste the other endpoint's Device ID. Then under '''Addresses''' change ''dynamic'' to <pre>192.168.100.2:22000</pre> 


This example is based on IPv4 tunneling with OnionCat and may vary with custom choices.

Make sure to select ''default'' under '''Share Folders With Device'''.


7. Syncing more than two endpoints can quickly become tedious so select at least one node to be an '''Introducer''' by selecting the option.


8. Finally drag and drop any files you want to sync to the 'Sync' folder under your Home directory. Done.


Note: No one can connect to your swarm without you adding them but you may still want to make your virtual network more private. This is done using '''HiddenServiceAuthorizeClient''' - a Tor feature.



'''OPTIONAL'''

Adding a Syncthing discovery server that acts as a tracker is not necessary and adds no value, but here are some steps for those wanting to experiment.
 
The Discovery Server is not packaged for Debian and has no official repos. Your options are to roll your own build from the code on [https://github.com/syncthing/discosrv Github] or to download the  [http://build.syncthing.net/job/discosrv/lastSuccessfulBuild/artifact/ nightlies]. 

Note: Nightlies are not signed. Building from source is a more secure option but might not succeed without extensive troubleshooting. Go is a rapidly changing language and the language features the nigtlies rely on are incompatible with the older Go compiler packages from the repos.


Running the Nightlies:

1. Install Go:

<pre>
 sudo apt-get install golang
</pre>

 
For privacy refuse to report the download of public packages to Go Dashboard.

 
2. [http://build.syncthing.net/job/discosrv/lastSuccessfulBuild/artifact/ Download] the i386 build file to your Home folder.

3. Extract
<pre>
 tar -xvf discosrv*
</pre>


4. Change directory to the one holding the binary:
<pre>
cd ~/discosrv*
</pre>


5. Mark the file as executable to run it:
<pre>
sudo chmod +x discosrv
</pre>


6. Run the binary file by typing the following command:
<pre>
./discosrv
</pre>


7. Other peers will need to add your Discovery server by going to: <pre>Actions > Settings</pre>

Under '''Global Discovery Server''' Append <pre>udp4://192.168.100.1:22026</pre> separated by a comma from the defaults.


Note that Device IDs will still need to be exchanged to permit connections.



=Torrenting over OnionCat=

This section will cover torrenting with anonymous peers inside the Tor network.

1. Set up [[OnionCat]] on Whonix Gateway. All parties involved will need to configure a Hidden Service with OnionCat because torrenting is bidirectional.

2. You will need to configure [https://www.whonix.org/w/index.php?title=OnionCat&stable=0&shownotice=1&fromsection=Tunneling_IPv4#Tunneling_IPv4 IPv4 over IPv6 tunneling] for OnionCat because the qBittorrent version in Debian Stable does not have IPv6 support.

3. Next install qBittorrent: <pre>sudo apt-get install qbittorrent</pre>
N.B. qBittorrent is the only popular (and functional) libre software client to have a built-in tracker. Bittornado is GUI based and has a tracker, but is broken in mysterious ways - it refuses to work without adding a torrent file and the GUI hangs. Other trackers are in the form of separate packages that need be built from source (because they are not included in Debian) and could only be configured through the command line.

4. Start the torrent client and go to <pre>Options > Advanced</pre> and check  <pre>Enable embedded tracker</pre> and restart the program.<ref>https://github.com/qbittorrent/qBittorrent/wiki/How-to-use-qBittorrent-as-a-tracker</ref>


5. Create your torrent: <pre>Tools > Torrent creator</pre> Add the file/folder you want to share. For Tracker Urls append the Workstation's OnionCat IPv4 address, for example 192.168.100.1, followed by the port number (default 9000) to the url: <pre>http://192.168.100.1:9000/announce</pre>
Check <pre>Start seeding after creation</pre> then create and save the torrent file.


6. Share the torrent file or alternatively the magnet link which you can get from right clicking the seeded torrent from the main panel.


In summary to share files you will need two things:
* Hidden Service addresses exchanged in order to derive the OnionCat IPv6 addresses and setup IPv4 tunneling. 
* magnet links or .torrent files.


For a private sharing environment you will need to configure Tor to use the HiddenServiceAuthorizeClient option. More on that [https://www.whonix.org/wiki/Hidden_Services#Hidden_Service_Authentication here].

= See Also =
* [[Hosting_Location_Hidden_Services|Hosting Location Hidden Services]]
* [[Hidden_Services|Hidden Services]]
* [[Hosting|Third Party Hosting Services]]

= References =
<references/>

{{Footer}}

[[Category:Documentation]]
