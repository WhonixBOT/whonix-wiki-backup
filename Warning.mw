{{Title|title={{project_name}} and Tor Limitations}}
{{Header}}
{{#seo:
|description=Things you should know about {{project_name}} and Anonymity in General to stay safe.
|image=https://www.whonix.org/w/images/a/a5/Mitm.png
}}
<!--
Copyright:
   {{project_name}} Warning wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   {{project_name}} Warning wiki page Copyright (C) 2012 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in {{project_name}} virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/{{project_name_short}}/{{project_name_short}}/blob/master/GPLv3>.
-->
<!--
This wiki page is a fork of the Tails Warning page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob_plain;f=wiki/src/doc/about/warning.mdwn;hb=a12ede51f51195374f6f76c33750cb0fd673efef>.
-->
{{security intro}}

{{project_name}} developers have done their utmost to provide solid tools which protect online privacy, <u>but no perfect solution exists to the complex anonymity problem.</u> Before deciding whether {{project_name}} is the right platform to use, it is crucial that each individual understands the limitations of the tools offered and how to make best use of them.

= Anonymous Identities =

== {{project_name}} does not Separate Different Contextual Identities ==

It is usually inadvisable to use the same {{workstation_product_name}} to perform more than one task, or when using two (or more) contextual identities that must be kept separate from each other. For example, it is poor operational security to use the same {{workstation_product_name}} to check email via Tor, while simultaneously publishing an anonymous document.

The first reason is Tor tends to reuse the same circuits, for example during the same browsing session. The Tor exit relay of a circuit knows both the destination server (and possibly the content of the communication if not encrypted) and the address of the previous relay it received the communication from. This makes it easier to infer that several browsing requests which took place on the same circuit are possibly correlated and originate from the same person. Global adversaries described later are in the perfect position to undertake this form of correlation analysis.

Secondly, if {{project_name}} or one of its applications has a security hole or is misused, then information might leak from the {{workstation_product_name}}. That could reveal that the same person was behind the various activities conducted inside the {{workstation_product_name}}.

To address both threats, better isolation of new identities is required <i>on every occasion they are used</i>. It is recommended to conduct one activity at a time, and implement one or more of the following solutions: <ref>Depending on personal circumstances and the {{project_name}} platform in use.</ref>

* [[{{workstation product name short}}_Security#VM_Snapshots | Multiple VM Snapshots]].
* [[Multiple_{{workstation_product_name_short}}|Multiple {{workstation_product_name}}]].
* [[Qubes/Disposable_VM | DisposableVMs in {{q_project_name}}]].

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = [[TorController | Nyx's]] "New Identity" button sends the protocol command "signal newnym" to Tor's ControlPort. A new Tor exit relay and a new IP address is likely, <i>but this is not guaranteed.</i> 
}}

Using this feature, Tor may only have replaced the middle relay while using the same Tor exit relay. Additionally, "signal newnym" will not interfere with long-lived connections like an IRC connection. Apart from the Tor circuits, other types of information can reveal past activities, for example the cookies stored by the browser. Therefore, this arm feature is not a solution for properly separating contextual identities.

== {{project_name}} does not Protect Against Social Engineering ==

{{project_name}} does not protect against [https://en.wikipedia.org/wiki/Social_engineering_%28security%29 social engineering] attacks. These attacks rely on human cognitive biases and trick people into revealing passwords or other sensitive information that allows the compromise of a target system's security. <ref name=social_eng>https://www.sans.org/reading-room/whitepapers/engineering/social-engineering-means-violate-computer-system-529</ref>

Other examples of social engineering include convincing someone to send a copy of logs or other information from the {{gateway_product_name}} or host operating system machine. In all cases, after trust has been established between the attacker and the victim, and sufficient information has been gathered, an exploit will be executed to perform harmful actions such as stealing personal or financial information, sabotaging the target's system, deanonymizing the individual and so on. <ref name=social_eng /> 

The best tools in maintaining anonymity are the knowledge that comes from research and experience, and healthy skepticism towards scenarios that pose potential security threats.

== {{project_name}} does not Protect Against External Threats or User Mistakes ==

Obviously, {{project_name}} cannot protect against external threats like people looking over the user's shoulder or gaining physical access to the machine in order to subvert the anonymity features of Tor and {{project_name}}.

Neither can {{project_name}} prevent people from shooting themselves in the foot, leading to inadvertent deanonymization. It is strongly encouraged to read the [[DoNot|Tips on Remaining Anonymous]] page to learn about non-technical steps to stay anonymous when using Tor, Tor Browser and {{project_name}}. This list considers:
<div style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
* Safe use of social networks.
* (Mobile) phone verification.
* Personal websites and links.
* Accounts previously used without Tor.
* Banking / financial provider accounts.
* Modes of anonymity.
* The risks posed by identifying data and online identities.
* When to use bridges.
* How to protect sensitive data and communications.
* Safe Tor networking considerations.
* The danger of random files and links.
* The difference between anonymity and pseudonymity.
* The danger of mixing clearnet and Tor simultaneously.
* The consequences of changing settings.
* Server connections.
</div>

== Only {{workstation_product_name}} is Designed for Anonymous Activity ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    =  All anonymous activity should only take place inside {{workstation_product_name}} and nowhere else.
}}

The host operating system -- the operating system running the virtualizer, and the system which was used before  downloading {{project_name}} -- is <u>not</u> "torified". Anonymous tasks should never be performed on the host system.

The {{gateway_product_name}} is solely designed to run Tor and act as a firewall. Any "anonymous" activities  <u>should not</u> be conducted on the Gateway. Further, in most cases there is no need to modify settings on the {{gateway_product_name}}, except for minor modifications like [[Bridges|setting up bridges]] which is already documented.

= Attacks =

== Man-in-the-middle Attacks ==

A man-in-the-middle attack (MitM) is a where an attacker makes independent connections with two parties and secretly relays (and potentially alters) messages between them. This is a form of active eavesdropping, since the two parties think they are communicating directly with each other and are unaware the conversation is being controlled by the attacker. <ref>https://en.wikipedia.org/wiki/Man-in-the-middle_attack</ref>

'''Figure:''' ''Illustration of a MitM Attack''

[[Image:Mitm.png|500px]]

While using Tor, MitM attacks can still happen between the exit relay and the destination server. The exit relay itself can also act as a man-in-the-middle. For an example of such an attack see [http://www.teamfurry.com/wordpress/2007/11/20/tor-exit-node-doing-mitm-attacks MW-Blog: TOR exit-node doing MITM attacks] ([http://www.webcitation.org/6EUybaLf8 w]). It is worth reiterating that <i>protecting against these attacks requires end-to-end encryption and taking extra steps to verify the server's authenticity</i>.

Normally a server's authenticity is automatically verified by the browser using [https://en.wikipedia.org/wiki/Transport_Layer_Security SSL/TLS certificates] which are checked against a set of recognized [https://en.wikipedia.org/wiki/Certificate_authority certificate authorities (CAs)]. If a security exception message appears like the figure below, then this might constitute a MitM attack. The warning should not be bypassed unless there is another trusted way of checking the certificate's fingerprint with the people running the service.

'''Figure:''' ''An Untrusted Connection''

[[Image:ssl_warning.png|ssl_warning.png]]

Mozilla has an educational resource to help determine if a [https://support.mozilla.org/en-US/kb/how-do-i-tell-if-my-connection-is-secure connection to a website is secure]. ([http://www.webcitation.org/6EUzXi9P5 w]) The Electronic Frontier Foundation (EFF) also has an excellent [https://www.eff.org/pages/tor-and-https interactive illustration] that provides an overview of HTTP / HTTPS <ref>HTTPS here refers to encrypted connections, whether it is (inferior) SSL or TLS.</ref> connections with and without Tor, and what information is visible to various third parties.

=== The Fallible Certificate Authority Model ===

Unfortunately, the vast majority of Internet encryption relies on the CA model of trust which is susceptible to various methods of compromise. Ultimately, encryption in and of itself does not solve the authentication problem in electronic communications, as seen in the actions of advanced adversaries who have targeted and undermined this central pillar upon which the Internet relies.

For example, Verisign was [https://www.schneier.com/blog/archives/2012/02/verisign_hacked.html hacked successfully and repeatedly] in 2010, with the likely conclusion being the attackers were able to forge certificates for an unknown number of websites.

A more glaring example was the confirmation by Comodo on March 15, 2011, that a user account with an affiliate registration authority had been compromised. This is a privacy and security disaster since Comodo is a major [https://en.wikipedia.org/wiki/Transport_Layer_Security SSL/TLS] company and the breach led to the creation of a new user account that issued nine certificate signing requests for seven domains: mail.google.com, login.live.com, www.google.com, login.yahoo.com (three certificates), login.skype.com, addons.mozilla.org, and global trustee. <ref>Source: [http://blogs.comodo.com/it-security/data-security/the-recent-ra-compromise/ Comodo: The Recent RA Compromise] ([http://www.webcitation.org/6EUyeEwBE w])</ref>

Later in 2011, DigiNotar, a Dutch SSL certificate company, incorrectly issued certificates to a malicious party or parties. It later emerged that DigiNotar was apparently compromised months before, or perhaps even in May of 2009, if not earlier. Rogue certificates were issued for multiple domains, including: google.com, mozilla.org, torproject.org, login.yahoo.com and many more. <ref>Source: [https://blog.torproject.org/blog/diginotar-debacle-and-what-you-should-do-about-it The Tor Project: The DigiNotar Debacle, and what you should do about it] ([http://www.webcitation.org/6EUyf0rpk w])</ref>

Considering the frequency of attacks and the passage of time, there is a distinct possibility that a MitM attack might occur <i>even when the browser is trusting a HTTPS connection.</i> <ref>This is one reason why self-authenticating onion services (<i>.onion</i>) connections are superior to HTTPS, because they do not rely on the flawed CA system for confirmation of the destination server.</ref>

=== SSL/TLS Alternatives ===

Depending on your personal circumstances, there are alternatives to SSL/TLS which can be considered. Unfortunately, none of them can be used as a drop-in replacement for SSL/TLS. Tools providing connection security include: [http://web.monkeysphere.info/ Monkeysphere], [https://en.wikipedia.org/wiki/Convergence_%28SSL%29 Convergence], [http://perspectives-project.org/ Perspectives Project] and Tor onion services. <ref>[[Onion Services]] are [[Onion_Services#Notes_about_End-to-end_Security_of_Onion_Services|automatically encrypted end-to-end]]. More specifically, connections remain within the Tor network at all times.</ref>

Using Tor does not magically solve the authentication problem. Tor's distinct advantage is that by providing anonymity, it is more difficult for attackers to perform a MitM attack with a rogue SSL/TLS certificate that is targeted at just one specific individual. However, the disadvantage of Tor is that it is easier for people or organizations running malicious Tor exit relays to perform a large scale MitM attempt. Further, malicious exit nodes could perform attacks targeted at a specific server, and especially those Tor clients who happen to utilize the service.

In all cases, it is advised to use additional message encryption for email, chats and so on. It is unwise to rely on SSL/TLS alone. Relevant tools that may be useful include:

* [[Chat|Encrypted messengers]].
* [https://en.wikipedia.org/wiki/GNU_Privacy_Guard GPG].
* [[Software#Encrypt.2C_decrypt.2C_sign.2C_and_verify_text_using_OpenPGP.3B_GnuPG_frontend | KGpg]].
* [[Encrypted_Email_with_Thunderbird_and_Enigmail|Mozilla Thunderbird, Enigmail and TorBirdy]] for anonymous, encrypted email.

<ref>Quoted from [https://en.wikipedia.org/wiki/Man-in-the-middle_attack wikipedia Man-in-the-middle_attack] ([http://www.webcitation.org/6EUyk0IKX w]) and [https://blog.torproject.org/blog/detecting-certificate-authority-compromises-and-web-browser-collusion Tor Project: Detecting Certificate Authority compromises and web browser collusion] ([http://www.webcitation.org/6EUykcmES w]).</ref>

== Tor Network Attacks ==

Tor is not invulnerable to attacks. Several techniques are already used for deanonymization and {{project_name}} users can be similarly affected -- some of these attacks are described in further detail below. Interested readers can also refer to the [[Speculative_Tor_Attacks|Speculative Tor Attacks]] entry for a more comprehensive list of ''potential'' attacks against the Tor client, servers and/or network.

=== Confirmation Attacks ===

A confirmation attack targets the broader Tor network itself, usually via multiple malicious Tor nodes. In this instance, the adversary controls or observes relays at both ends of the Tor circuit (the guard and exit relays). Comparisons are made of traffic timing, volume and other characteristics to confirm the relays share the same circuit. Since the first entry guard knows the user's IP, and the last exit relay knows the destination/resource accessed (like a webpage), this leads to deanonymization. <ref>https://blog.torproject.org/tor-security-advisory-relay-early-traffic-confirmation-attack</ref>

In a 2009 blog post, The Tor Project described this threat of [https://blog.torproject.org/blog/one-cell-enough deanonymization under specific conditions]: <ref>http://www.webcitation.org/6EUyo9u9N</ref>

<blockquote>
The Tor design doesn't try to protect against an attacker who can see or measure both traffic going into the Tor network and also traffic coming out of the Tor network. That's because if you can see both flows, some simple statistics let you decide whether they match up.<br />
<br />
That could also be the case if your ISP (or your local network administrator) and the ISP of the destination server (or the destination server itself) cooperate to attack you.<br />
<br />
Tor tries to protect against traffic analysis, where an attacker tries to learn whom to investigate, but Tor can't protect against traffic confirmation (also known as end-to-end correlation), where an attacker tries to confirm a hypothesis by monitoring the right locations in the network and then doing the math.
</blockquote>

=== Traffic Analysis ===

Adversaries conducting traffic analysis are able to discover a varying amount of user information, depending on the position(s) they are occupying in the network. The following observations reveal various information, in increasing order: <ref name=tor_edition>https://blog.torproject.org/tors-open-research-topics-2018-edition</ref>

* Observing the client-to-guard-node network path.
* Controlling the guard relay, as individual circuits can be examined.
* Observing the paths to the guard relay and from the Tor exit relay.
* Controlling the guard and exit relays (or client guard and onion service guard).
* Controlling both ends of the communication, and able to inject and manipulate traffic patterns.

Notably, The Tor Project has recently highlighted research that has identified a number of new, low cost, website traffic (fingerprinting) analysis attacks and potential mitigations; see [[Speculative_Tor_Attacks#Website Oracles|Website Oracles]] for further information.

=== Guard Discovery ===

Advanced adversaries are capable of identifying the guard node(s) in use by an onion service or Tor client. Many connections are made to the onion service, forcing it to create multiple circuits until one of the adversary's nodes is chosen as the middle relay (next to the guard). A traffic analysis side channel then confirms the relay is next to the onion service, confirming the identity of the service's guard node. The guard node is then compromised, forced or surveilled to discover the actual IP address of the onion service or client. <ref name=tor_edition />

=== Tor Defenses ===

Tor has implemented some defenses against limited adversaries that can gather traffic statistics from Internet routers along the path to the guard node, and is planning defenses against website traffic fingerprinting by guard node adversaries. However, a number of other attacks remain viable at present such as end-to-end correlation attacks, alternate guard node exploits, circuit fingerprinting attacks and so on.

= Documents = 

== {{project_name}} does not Encrypt Documents by Default ==

If documents are saved inside {{project_name}}, they will not be encrypted by default. This is why it is recommended to apply [[Full_Disk_Encryption_and_Encrypted_Images#Full_Disk_Encryption_on_the_Host | full disk encryption on the host]] to protect sensitive data.

Documents created in {{project_name}} may also have specific file signatures that reveal use of the platform. This issue is currently being further investigated.

== {{project_name}} does not Clear Document Metadata ==

Numerous file formats store hidden data or metadata inside of the files. For example, text processors or PDF files could store the author's name, the date and time of file creation, and sometimes even parts of the file's editing history. The extent of hidden data depends on the file format and the software that is used.

Image file formats like [https://en.wikipedia.org/wiki/Tagged_Image_File_Format TIFF] and [https://en.wikipedia.org/wiki/JPEG JPEG] are some of the worst offenders. For instance, when these files are created by digital cameras or mobile phones, they contain a metadata format called [https://en.wikipedia.org/wiki/Exchangeable_image_file_format Exif] whose defined tags can include:

* Date and time information.
* Occasionally GPS coordinates of the picture.
* Camera settings: camera model and make (including the serial number), orientation (rotation), aperture, shutter speed, focal length, metering mode and ISO speed information.
* A thumbnail for previewing the picture in file managers, on camera, or in photo editing software. Image processing software tend to keep Exif data intact.
* Descriptions.
* Copyright information.

Notably, the Internet is full of cropped or blurred images where the Exif thumbnail still contains the full original picture. [https://packages.debian.org/stretch/mat Specialist software] is often required to remove Exif tags before safely publishing images. <ref>For example, the [https://en.wikipedia.org/wiki/XKeyscore XKeyscore] program is actively targeting Exif information for collection.</ref>

Be aware that <i>{{project_name}} does not clear file metadata automatically.</i> However, {{project_name}} comes bundled with [[Metadata#MAT2:_Metadata_Anonymisation_Toolkit_v2 |  MAT2 -- the Metadata Anonymisation Toolkit v2 --]] as part of the design goal to help protect users.

= Email =

== {{project_name}} does not Encrypt Subject: and other Header Fields of Encrypted Emails ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = Unless precautions are taken, the "Subject:" line and other header fields are <i>not</i> encrypted when using OpenPGP encrypted email.
}}

This weakness is not related to {{project_name}} or the [http://www.mozilla-enigmail.org/forum%20viewtopic.php?f=3&t=328 OpenPGP] ([http://www.webcitation.org/6EUyt6L0f w]) protocol; it is for backwards compatibility with the original [https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol SMTP protocol]. Unfortunately, no RFC standard exists yet for Subject line encryption.

Recently, TorBirdy v2.3 has implemented Enigmail features which enable [https://blog.torproject.org/our-latest-release-torbirdy-thunderbird-includes-new-enigmail-features encrypted email headers]. <ref>The preference in TorBirdy is: <code>extensions.enigmail.protectHeaders</code></ref> The new feature encrypts the Subject and References headers and moves them into the encrypted message body.

Those who require OpenPGP encryption with a suitable email client are recommended to use [[Encrypted_Email_with_Thunderbird_and_Enigmail|Thunderbird (Mozilla's email client) and Enigmail]], which is a graphical front-end for using the GnuPG ("GPG") encryption program. The [[Encrypted_Email_with_Thunderbird_and_Enigmail#Install_the_Torbirdy_Plugin_in_Thunderbird|TorBirdy extension]] is also available to make Thunderbird connections take place over the Tor network.

= Fingerprinting =

== {{project_name}} does not Defeat Stylometry ==

=== Coding Style ===

[https://www.wired.com/story/machine-learning-identify-anonymous-code/ Recent research] has revealed that coders have a unique fingerprint similar to linguistic expressions. Machine learning techniques are capable of de-anonymizing code samples, using "abstract syntax trees" that analyze the underlying structure. For instance, a 2017 study found that GitHub coders could be identified with [https://arxiv.org/pdf/1701.05681.pdf 99 per cent accuracy] based on small and incomplete source code fragments. To date, attempts to obfuscate coding style have failed.

The implication is that "anonymous" developers of open-source projects might be identified by prior non-anonymous code contributions. It is likely that advanced adversaries will use this capability to target and de-anonymize developers of popular anonymity and censorship circumvention tools.

=== Linguistic Style ===

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = '''Tip:''' The warning below equally applies to regular {{project_name}} wiki contributors and forum participants. <ref>Who should also prefer v3 onion connections to {{project_name}} infrastructure whenever possible.</ref>
}}

{{project_name}} does not obfuscate an individual's writing style, which is easily fingerprinted based on syntax and other grammatical idiosyncrasies. [[Surfing_Posting_Blogging#Stylometry|Unless precautions are taken]], [https://en.wikipedia.org/wiki/Stylometry stylometric analysis based on linguistic characteristics] is a credible threat. Research suggests only a few thousand words (or less) may be enough to positively identify an author, and there are a host of software tools available to conduct this analysis.

== {{project_name}} may have an Unknown Signature ==

Developers have designed {{project_name}} to be indistinguishable from standard use of the Tor network. However, there may be unknown fingerprinting methods available to ISPs and other network adversaries which identify {{project_name}} users. If this is a legitimate concern, then investigate optional configurations which can [[Hide_Tor_and_{{project_name_short}}_from_your_ISP |hide Tor / {{project_name}} use from the ISP]].

= Platform Security =

== {{project_name}} does not Improve Password Strength ==

Tor promotes online anonymity, while {{project_name}} automatically forces desktop-wide activities through Tor (along with many extra [[Design|security features]]). However, neither Tor or {{project_name}} are one-click solutions for impregnable security or absolute anonymity.

If weak passwords (passphrases) are used they can be easily determined by [https://en.wikipedia.org/wiki/Brute-force_attack brute-force attacks], whether or not {{project_name}} is installed. In essence, attackers systematically try all passwords until the correct one is found, or attempt to guess the key which is created from the password using a key derivation function (an exhaustive key search). This method is very fast for short and/or non-random passwords.

For greater security it is recommended to generate strong and unique [[Passwords#Generating_Unbreakable_Passwords|Diceware passwords]] and follow [[Passwords#Principles_for_Stronger_Passwords|other recommendations]] concerning safe habits, password generation and storage.

== {{project_name}} does not Protect against Compromised Hardware or Advanced Malware ==

Virtualizers like Qubes, VirtualBox and KVM cannot absolutely prevent the compromise of hardware, nor detect advanced malware. Running all activities inside VMs is a very reasonable approach. However, this only raises the bar and makes it more difficult and/or expensive to compromise the whole system. It is by no means a perfect solution. 

{{project_name}} cannot provide protection if the system's [https://en.wikipedia.org/wiki/Trusted_computing_base trusted computing base] has been compromised by:

* Physical access and the installation of untrusted pieces of hardware (like a keylogger);
* [[Malware_and_Firmware_Trojans#Firmware_Trojans|Firmware Trojans]] (including BIOS/UEFI attacks); or
* [[Malware_and_Firmware_Trojans#Malware|Malware]].

If the host system is affected by malware, firmware trojans or malicious hardware components, then every {{project_name}} virtual machine, Tor process and communication thought to be anonymous is similarly compromised. 

In the event a system compromise is strongly suspected or confirmed, the ultimate goal is to re-establish a trusted, private environment for future activities -- see [[Disaster_Recovery|Compromise Recovery]] for  techniques to recover from host and/or {{project_name}} VM infections.

== {{project_name}} does not Secure the Host ==

The security of the {{project_name}} platform is itself reliant upon the security of the host. Naturally, a majority are likely to run {{project_name}} on top of the every day operating system without making any additional changes. However, safety is materially improved by using a [[System_Configuration_and_Access#Use_a_Dedicated_Host_Operating_System_and_Computer | dedicated host operating system]] solely for {{project_name}} VMs. For better security, this system should be configured on a computer bought solely for {{project_name}} activities, and which has never been used before.

There are a number of recommendations relevant to host OS security in the following [[Documentation]] sections: 

* Basic Security Guide.
* Advanced Security Guide.
* Computer Security Education.

The [[System_Hardening_Checklist|System Hardening Checklist]] also provides a quick and handy reference guide for specific areas of interest.

= Software = 

{{Anchor|Avoid Non-free Software}}
== Avoid Non-Freedom Software ==

{{Avoid nonfreedom software}}

{{Anchor|Avoid Unsigned Software}}

== Always Verify Signatures ==

{{always verify signatures}}

= Tor =

== Tor Exit Relays can Eavesdrop on Communications ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = The Tor network hides an individual's location, but it does not automatically encrypt communications.
}}

Instead of taking a direct route from source to destination, communications using the Tor network take a random pathway through several Tor relays to help cover the user's tracks. This means observers at any single point cannot tell both where the data came from and where it is going.

'''Figure:''' <i>How Tor Works</i> <ref>Source: [https://www.torproject.org/about/overview.html.en#overview Tor: Overview] License: [http://creativecommons.org/licenses/by/3.0/us/ Creative Commons Attribution 3.0 United States License]</ref>
[[Image:htw2-tails.png|frame|none|alt=| A Tor connection usually goes through 3 relays with the last one establishing the actual connection to the destination server]]
<br />
The last relay on the three-hop circuit is called the Tor exit relay. It is the critical relay that establishes the actual connection to the destination server. By design, Tor does not encrypt the traffic between a Tor exit relay and the final destination. This means <i>any exit relay is in a position to capture any traffic passing through it.</i> To protect against snooping by the Tor exit relay, end-to-end encryption should always be used. <ref>For example, a HTTPS or onion service (<i>.onion</i>) connection.</ref>

Malicious exit nodes have previously been used to spy on sensitive communications. For example, in 2007, a security researcher monitored the connections coming out of an exit relay under their control and [http://www.wired.com/politics/security/news/2007/09/embassy_hacks intercepted thousands of private e-mail messages] sent by foreign embassies and human rights groups around the world. ([http://www.webcitation.org/6EUyHbBEU w]).

While browsing, sending email or chatting online, it is recommended to utilize the necessary tools bundled with {{project_name}} to enforce strong encryption. Refer to the [[Documentation]] for necessary steps to remain safe. <ref>Source: [https://trac.torproject.org/projects/tor/wiki/TheOnionRouter/TorFAQ#CanexitnodeseavesdroponcommunicationsIsntthatbad Tor FAQ: Can exit relays eavesdrop on communications?] ([http://www.webcitation.org/6EUyAPZe4 w])</ref>

== Use of Tor Is Obvious ==

Tor tries to prevent attackers from learning what destination websites are being connected to.

Both the ISP and a local network administrator <i>can easily check if connections are made to a Tor relay</i> and not a normal web server. In how far it is possible to hide that, see [[Hide_Tor_from_your_Internet_Service_Provider|Hide Tor use from the Internet Service Provider]].

<i>The destination server contacted through Tor can learn whether the communication originates from a Tor exit relay</i> by consulting the publicly available list of known exit relays. For example, The Tor Project [https://check.torproject.org/cgi-bin/TorBulkExitList.py Tor Bulk Exit List tool] could be used for this purpose.

Based on this information, {{project_name}} users will <u>not</u> appear to be a random Internet user is used to prevent the telltale signs of Tor use. The strong anonymity provided by Tor and {{project_name}} is based on trying to make everyone look exactly the same, so it is not possible to identify a specific individual in the larger user pool.

Ultimately, stronger protection requires a social approach; the larger the pool of Tor users (in close proximity) and the more [https://www.torproject.org/about/torusers.html.en diverse] their interests, the less likely it will be that an specific individual can be identified. Convincing others to use Tor will help the larger anonymity-minded community. <ref>
Attribution: Two sentences in this chapter have been forked from the [https://www.torproject.org/download/download-easy.html.en Tor] ([http://www.webcitation.org/6EUyWNl4n w]) website, which was licensed under a [https://creativecommons.org/licenses/by/3.0/us/ Creative Commons Attribution 3.0 United States License] ([http://www.webcitation.org/6EUyX0A2y w]) at the time of writing.
</ref>

== Persistent Tor Entry Guard Relays can Enable Physical Location Tracking ==

{{Persistent Tor Entry Guards Introduction}}

For more information, see the advanced topic [[Tor_Entry_Guards#Configure_Non-Persistent_Entry_Guards|Configure Non-Persistent Entry Guards]].

== Tor cannot Protect Against a Global Adversary ==

A global, passive adversary is defined as a person or entity who is able to monitor the traffic between all the computers in a network at the same time. By studying the timing and volume patterns of the different communications across the network, it is statistically feasible to identify Tor circuits and thus match Tor clients with destination servers.

In order to create a low-latency communication service which is usable for web browsing, Internet chat or SSH connections, The Tor Project has made a security trade-off and has not attempted to address this threat.

For more expert information on this topic, see [https://svn.torproject.org/svn/projects/design-paper/tor-design.pdf Tor Project: The Second-Generation Onion Router], ([http://www.webcitation.org/6EUyv297d w]) part 3. Design goals and assumptions.

= {{project_name}} Development =

== {{project_name}} is not Amnesic ==

Unlike Tails, at the time of writing {{project_name}} does not offer an Amnesic Live DVD / USB, although this situation may change in the future. <ref>
* https://forums.whonix.org/t/whonix-host-operating-system/3931
* https://forums.whonix.org/t/whonix-desktop-installer-with-calamares-field-report/7350
* https://phabricator.whonix.org/tag/live-mode/
* https://phabricator.whonix.org/project/view/26/
</ref> If {{project_name}} is installed on a computer, local traces of the installation will be left on the device's HDD/SSD. 

Any created files will still exist after the computer is powered-off or rebooted, unless steps are taken to securely wipe the files to remove all signs of their existence. {{project_name}} has not implemented any special measures to limit what is written to disk and acts like an ordinary installed operating system. Therefore, there may be evidence of activity in created files, backup files, temporary files, swap, chat history, browser history and so on. 

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Those relying on [[{{project name short}}_Live|{{project_name}} Live]] in [[{{non q project name short}}|{{non q project name}}]] should be aware that although writes go to RAM instead of the HDD/SSD, traces of activity may be left in swap files, core dumps or via other configurations. <u>Live mode does not yet meet the technical amnesic threshold.</u>
}}

Unix-like operating systems also [https://en.wikipedia.org/wiki/Swap_partition#Unix_and_Unix-like_systems  swap (move) memory pages between host RAM and the host disk], and this behavior cannot be prevented in {{project_name}} because it is based on Debian. The danger is data leakage might occur and an unencrypted swap partition could reveal interesting data to an attacker or be used to store unencrypted copies of files in <i>/tmp</i> for later retrieval. <ref>http://www.linuxtopia.org/online_books/linux_administrators_security_guide/06_Linux_File_System_and_File_Security.html</ref> This is why the documentation recommends to [[{{workstation product name short}}_Security#VM_Snapshots | use multiple VM Snapshots]] and [[Full_Disk_Encryption#Full_Disk_Encryption_on_the_Host|apply Full Disk Encryption on the host]]. Encrypting everything, including data, system and swap partitions provides a higher level of security.

For more information on this topic, see: [[Dev/Technical_Introduction#Live_Operating_System|Live Operating System]].

== Missing {{project_name}} Features ==

{{project_name}} is currently alpha quality software and missing some features, including those relating to security. While many issues listed below are planned for future implementation, a number will probably never get "fixed" because they are impossible to address in a software-only project.

'''Table:''' ''Missing {{project_name}} Features''

{| class="wikitable"
|-
! scope="col"| '''Category'''
! scope="col"| '''Missing Feature or Capability'''
|-
! scope="row"| Adversaries
| Protect against global network adversaries.
|-
! scope="row"| AppArmor
| Apply AppArmor profiles for every process or application. <ref>Although a full system MAC policy is currently in development, see [https://forums.whonix.org/t/apparmor-for-complete-system-including-init-pid1-systemd-everything-full-system-mac-policy/8339 here] for further details.</ref>
|-
! scope="row"| Backdoors
| Protect against hardware or software backdoors.
|-
! scope="row"|  Encryption
| Encrypt a user's data, documents, files and so on.
|-
! scope="row"| Hardening
| Use all the possible hardening options like full PIE and grsecurity.
|-
! scope="row"| Local Adversaries
| Protect against local adversaries who could mount cold boot and evil maid attacks, or otherwise compromise a user's physical machine.
|-
! scope="row"| MAC Address
| Automatically protect against MAC address fingerprinting on public networks.
|-
! scope="row"| Passwords
| Make weak passwords stronger.
|-
! scope="row"| RAM
| 
* Wipe RAM on shut down. See [http://brainstorm.ubuntu.com/idea/30076/ Idea #30076: Enhancy Privacy/Security, Wipe RAM on shut down, reboot and trigger]. <br /> 
* Wipe video RAM on shut down. See [https://tails.boum.org/todo/erase_video_memory_on_shutdown/ Tails -erase video memory on shutdown].
|-
! scope="row"| Security Updates
| Automatically apply security updates. This was a conscious developer decision because automated updates also come with their own set of security problems. However, [[{{project name short}}check|whonixcheck]] provides notifications about updates on {{workstation_product_name}}.
|-
! scope="row"| Software Attacks
| Protect against highly skilled software attacks, unless [[Dev/Build_Documentation/Physical_Isolation|physical isolation]] or [[{{q project name short}}|{{q project name}}]] is utilized.
|-
! scope="row"| Stylometry
| Obfuscate an individual's linguistic style to defeat stylometric analysis.
|-
! scope="row"| Tor
| 
* Provide protection by default if Tor is somehow broken. This situation is partially mitigated (with caveats) by chaining Tor with SSH, proxies or VPNs. <br />
* Disguise the use of Tor by default - it has been assessed this goal is  [[Hide_Tor_and_{{project_name_short}}_from_your_ISP | difficult beyond practicality]].
|-
! scope="row"| User Behavior
| Protect those who: fail to read the [[Documentation]], engage in unsafe behaviors, or change default settings without knowing the implications.
|-
! scope="row"| {{project_name}} Builds
| Have deterministic builds, see [[Dev/Archived Discussions]]. <ref>Although Tor now has deterministic builds, see [https://trac.torproject.org/projects/tor/ticket/3688 Bug 3688].</ref>
</div>
|}

This list is likely incomplete. It is strongly encouraged to read the rest of the [[Documentation]] and perhaps the [[Design]] chapter to have a full overview of {{project_name}} security, including the list of supported and unsupported features.

Contributors who want to help improve {{project_name}} security should join the discussions on [[Dev/Archived Discussions]], or on the developer mailing list.

{{Anchor|Whonix_is_a_Work_in_Progress}}
== {{project_name}} is a Work in Progress ==

{{project_name}}, as well as all the software it includes, are under continuous development and might contain programming errors or security holes -- [[Download#Stay_tuned | Stay Tuned]] to {{project_name}} development, and do not rely on the platform for strong anonymity.

That said, {{project_name}} has a [https://lists.torproject.org/pipermail/tor-talk/2012-October/025921.html strong foundational design] since it uses both the Isolating Proxy and Transparent Proxy concepts. Since {{project_name}} was founded in 2012, no anonymity leaks or proxy bypass problems have yet been discovered. {{project_name}} has been developed with great care, but it is impossible to ever prove that it is absolutely "leak-proof" or free of mistakes that degrade the goals of the extended project description. ([http://www.webcitation.org/6EUzBC5nH w])

Basic functionality is built-in and {{project_name}} can be used to browse the web and [[Onion Services | host onion services]], use email, IRC, SSH, and a host of other activities. [[Reporting_Bugs#Software_Development_Cycle|Development is ongoing]] and more features are continually being added. Contributors who want to join the development process are most welcome; see [[Reporting_Bugs#Patches_are_Welcome|Patches are Welcome]]. A complete list of open issues is available on the [https://phabricator.whonix.org/maniphest/ {{project_name}} issues tracker].

See also: [[Security_in_Real_World | {{project_name}} Protection Against Real World Attacks]], [[Security_Reviews_and_Feedback | Security Reviews and Feedback]] and [[Technical_Introduction#Security_Overview | Security Overview]].

= Unsubstantiated Conclusions =
Users must be careful not to draw incorrect conclusions based on the existence of specific {{project name}} communication channels, community software utilized, applications installed on the platform, or the availability of certain wiki entries. {{project name}} tries to use concise language so that users are not misled into believing anything has been implied. Despite this effort, users will sometimes draw false conclusions in an unintended way. Consider the following hypothetical discussion.

<blockquote>
Developer: Donations to {{project name}} are possible via Bitcoin.
</blockquote>

<blockquote>
{{project name}} user: Since you are knowledgeable about Bitcoin, can you also accept Monero donations?
</blockquote>

In this case the hypothetical developer did not state "I am knowledgeable about Bitcoin", but rather concisely stated "Donations to {{project name}} are possible via Bitcoin." The conclusion drawn by the user "Since you are knowledgeable about Bitcoin" might be totally unsubstantiated.

In a similar fashion, just because {{project name}} does something -- like providing a [https://forums.whonix.org/t/whonix-telegram-chat-channel/8346 telegram channel] -- it does <u>not</u> follow that {{project name}} endorses it; see also [[Terms_of_Service#Non-Endorsement|Terms of Service: Non-endorsement]]. A list of further examples is outlined below.

'''Table:''' ''Facts vs. False Conclusions''

{| class="wikitable"
! '''Fact''' <ref>Things that were really stated.</ref>
! '''False Conclusion''' <ref>Things which were <u>not</u> said or implied.</ref>
! '''More Information'''

|-
| {{project name}} provides a [[Donate|Bitcoin (BTC) donation address]].
| Bitcoin is anonymous.
| [[Money|Anonymous Money]]

|-
| {{project name}} provides a [[Donate|Monero (XMR) donation address]].
| Monero is perfect.
| [[Money|Anonymous Money]]

|-
| The {{project name}} website is using popular web applications (web apps) like [https://www.mediawiki.org/wiki/MediaWiki MediaWiki], [https://phabricator.wikimedia.org/ Phabricator] and [https://www.discourse.org/ Discourse] (forum software).
| These are perfectly "secure" (for whatever purpose, threat model) web apps.
| In an ideal world, better web apps would be used but this is not possible due to finite {{project name}} resources. To learn more, see: [[Privacy_Policy_Technical_Details#website|Privacy on the {{project name}} Website]].

|-
| {{project name}} provides downloadable [[VirtualBox]] builds.
| VirtualBox is secure.
| [[Dev/Virtualization_Platform#VirtualBox|VirtualBox isn't an ideal choice]] but there are [[Dev/Virtualization_Platform#Arguments_for_keeping_VirtualBox_Support|reasons for maintaining VirtualBox support]].

|-
| {{project name}} is available for Windows hosts.
| Windows is a suitable host.
| [[Windows Hosts]] pose numerous security and privacy threats.

|-
| {{project name}} is installable on macOS hosts. 
| macOS is a suitable host.
| [[Host_Operating_System_Selection#macOS_Hosts|macOS Hosts]] pose numerous security and privacy threats.

|-
| {{project name}} is [[Why_Whonix_is_Freedom_Software|Freedom Software]].
| {{project name}} is a Freedom Software 'maximalist' project.
| See also: <br />
* [[Dev/nonfree]]; <br />
* Forum discussion: [https://forums.whonix.org/t/whonix-host-nonfree-blobs-firmware-linux-nonfree/7251 Whonix host - nonfree blobs - firmware-linux-nonfree]; and <br />
* [https://forums.whonix.org/t/whonix-and-free-system-distribution-guidelines-gnu-fsdg/5877 {{project_name}} and Free System Distribution Guidelines (GNU FSDG)].

|-
| {{project name}} provides a [https://forums.whonix.org/t/whonix-telegram-chat-channel/8346 telegram channel] [[support]] channel.
| Telegram is a perfect, privacy-respecting, secure messenger.
| See footnote. <ref>
Some criticisms of Telegram.

* New releases are squished into a single commit, see: [https://github.com/DrKLO/Telegram/commit/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0 one commit].
* It is impossible to sign up without a phone number.
* There are other concerns, but they are irrelevant for illustrating the point being made here.
</ref>

|-
| There is an [[Official_Whonix_Online_Profiles|official]] [https://twitter.com/Whonix {{project name}} twitter profile].
| Twitter is a safe platform to utilize.
| [[Official_Whonix_Online_Profiles|Official {{project name}} Online Profiles]]

|-
| whonix.org has a public [https://forums.whonix.org forum].
| The whonix.org forum and associated comments are intended to promote free speech.
| Unfortunately, running a free speech platform is a full-time job and would constitute a separate project in itself. This is simply not possible as a side project. For further details, see: [[Limitations on Free Speech on Whonix Website ‎and Whonix Chat]].

|-
| {{project name}} is Open Source.
| {{project name}} must/should implement all ideas from the community.
| See: [[Reporting_Bugs#Community_Feedback|Community Feedback]] / [[Reporting_Bugs#Patches_are_Welcome|Patches are Welcome]]

|-
|
|
| See also: [[DoNot#Draw_Wrong_Conclusions|Do Not Draw Wrong Conclusions]].

|}

It is also recommended to consult the following resources:

* [https://forums.whonix.org/tags/project-philosophy list of forum posts regarding the {{project name}} project philosophy]; 
* [[Linux User Experience versus Commercial Operating Systems]]; and
* the underpinning [[DoNot#Rationale|Rationale]] for this chapter.

On top of unsubstantiated conclusions it also happens that adherence to "perfectly moral" behavior or an approved ™ set of political/ideological beliefs is expected from the {{project name}} project. However, what counts as "perfectly moral" and the path of attaining therein will always be subjective and disputed among proponents. Such demands include "don't allow running {{project name}} on Windows hosts", "don't have a twitter project account", "don't accept Bitcoin donation", "don't use centralized services such as telegram", "don't document X, because of Y". Those disagreeing with our methods and philosophy are welcome to exercise their right to [https://en.wikipedia.org/wiki/Fork_(software_development) fork] the project under the respective licenses.

= Footnotes =
{{reflist|close=1}}

= License =
{{License_Amnesia|{{FULLPAGENAME}}}}

{{Footer}}

[[Category:Documentation]]
