{{Header}}
{{#seo:
|description=Things you should know about Whonix and Anonymity in General to stay safe.
|image=https://www.whonix.org/w/images/8/8c/MITM.jpg
}}
<!--
Copyright:
   Whonix Warning wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   Whonix Warning wiki page Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/Whonix/Whonix/blob/master/GPLv3>.
-->
<!--
This wiki page is a fork of the Tails Warning page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob_plain;f=wiki/src/doc/about/warning.mdwn;hb=a12ede51f51195374f6f76c33750cb0fd673efef>.
-->
= Introduction =

Whonix developers have done their utmost to provide solid tools which protect the online privacy of users, <u>but no perfect solution exists to the complex anonymity problem.</u> Before deciding whether Whonix is the right platform to use, it is crucial that each individual understands the limitations of the tools offered, and how to make best use of them.

= Anonymous Identities =

== Whonix does not Separate Different Contextual Identities ==

It is usually inadvisable to use the same Whonix-Workstation to perform more than one task, or when using two (or more) contextual identities that the user wishes to keep separate from each other. For example, it is poor operational security to use the same Whonix-Workstation to check email via Tor, while simultaneously publishing an anonymous document.

The first reason is Tor tends to reuse the same circuits, for example during the same browsing session. The Tor exit relay of a circuit knows both the destination server (and possibly the content of the communication if not encrypted) and the address of the previous relay it received the communication from. This makes it easier to infer that several browsing requests which took place on the same circuit are possibly correlated and originate from the same user. Global adversaries described later are in the perfect position to undertake this form of correlation analysis.

Secondly, if Whonix or one of its applications has a security hole or is misused, then information might leak from the Whonix-Workstation. That could reveal that the same person was behind the various activities conducted inside the Whonix-Workstation.

To address both threats, better isolation of new identities is required <i>on every occasion they are used</i>. Users are recommended to conduct one activity at a time, and implement one or more of the following solutions: <ref>Depending on personal circumstances and the Whonix platform in use.</ref>

* [[SecurityGuide#Recommendation_to_use_multiple_VM_Snapshots | Multiple VM Snapshots]].
* [[Multiple_Whonix-Workstations | Multiple Whonix-Workstations]].
* [[Qubes/Disposable_VM | DisposableVMs in Qubes-Whonix]].


{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       =  [[TorController | Arm's]] "New Identity" button sends the protocol command "signal newnym" to Tor's ControlPort. Users will likely receive a new Tor exit relay and a new IP address, <i>but this is not guaranteed.</i> 
}}


Using this feature, Tor may only have replaced the middle relay while using the same Tor exit relay. Additionally, "signal newnym" will not interfere with long-lived connections like an IRC connection. Apart from the Tor circuits, other types of information can reveal the user's past activities, for example the cookies stored by the browser. Therefore, this arm feature is not a solution for properly separating contextual identities.

== Whonix does not Protect Against Social Engineering ==

Whonix does not protect against [https://en.wikipedia.org/wiki/Social_engineering_%28security%29 social engineering] attacks. These attacks rely on human cognitive biases and trick users into revealing passwords or other sensitive information that allows the compromise of a target system's security. <ref>https://www.sans.org/reading-room/whitepapers/engineering/social-engineering-means-violate-computer-system-529</ref>

Other examples of social engineering include convincing the user to send a copy of logs or other information from the Whonix-Gateway or host operating system machine. In all cases, after trust has been established between the attacker and the victim, and sufficient information has been gathered, an exploit will be executed to perform harmful actions such as stealing personal or financial information, sabotaging the user's system, deanonymizing the user and so on. <ref>https://www.sans.org/reading-room/whitepapers/engineering/social-engineering-means-violate-computer-system-529</ref> 

The best tools in maintaining anonymity are the knowledge that comes from research and experience, and healthy skepticism towards scenarios that pose potential security threats.

== Whonix does not Protect Against External Threats or User Mistakes ==

Obviously, Whonix cannot protect against external threats like people looking over the user's shoulder or gaining physical access to the machine in order to subvert the anonymity features of Tor and Whonix.

Neither can Whonix prevent users from shooting themselves in the foot, leading to inadvertent deanonymization. Users are strongly encouraged to read the [[DoNot|list of non-technical steps to stay anonymous]] when using Tor, Tor Browser and Whonix. This list considers:

* Safe use of social networks.
* (Mobile) phone verification.
* Personal websites and links.
* Accounts previously used without Tor.
* Banking / financial provider accounts.
* Modes of anonymity.
* The risks posed by identifying data and online identities.
* When to use bridges.
* How to protect sensitive data and communications.
* Safe Tor networking considerations.
* The danger of random files and links.
* The difference between anonymity and pseudonymity.
* The danger of mixing clearnet and Tor simultaneously.
* The consequences of changing settings.
* Server connections.

== Only Whonix-Workstation is Designed for Anonymous Activity ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       =  All anonymous activity should only take place inside Whonix-Workstation and nowhere else.
}}


The host operating system - the operating system running the virtualizer, and the system which was used before  downloading Whonix - is <i>not</i> "torified". Users should never undertake any anonymous tasks on the host system.

The Whonix-Gateway is solely designed to run Tor and act as a firewall. Users <i>should not</i> conduct any "anonymous" activities on the Gateway. Further, in most cases there is no need to modify settings on the Whonix-Gateway, except for minor modifications like [[Bridges|setting up bridges]] which is already documented.

= Attacks =

== Man-in-the-middle Attacks ==

A man-in-the-middle attack (MitM) is a where an attacker makes independent connections with two parties and secretly relays (and potentially alters) messages between them. This is a form of active eavesdropping, since the two parties think they are communicating directly with each other and are unaware the conversation is being controlled by the attacker. <ref>https://en.wikipedia.org/wiki/Man-in-the-middle_attack</ref>

'''Figure:''' ''Illustration of a MitM Attack''

[[Image:man_in_the_middle.jpg|500px]]

While using Tor, MitM attacks can still happen between the exit relay and the destination server. The exit relay itself can also act as a man-in-the-middle. For an example of such an attack see [http://www.teamfurry.com/wordpress/2007/11/20/tor-exit-node-doing-mitm-attacks MW-Blog: TOR exit-node doing MITM attacks] ([http://www.webcitation.org/6EUybaLf8 w]). It is worth reiterating that <i>users can protect against such attacks by using end-to-end encryption and taking extra steps to verify the server's authenticity</i>.

Normally a server's authenticity is automatically verified by the browser using [https://en.wikipedia.org/wiki/Transport_Layer_Security SSL/TLS certificates] which are checked against a set of recognized [https://en.wikipedia.org/wiki/Certificate_authority certificate authorities (CAs)]. If a user receives a security exception message like that seen in the figure below, then this could constitute a MitM attack. The warning should not be bypassed unless the user has another trusted way of checking the certificate's fingerprint with the people running the service.

'''Figure:''' ''An Untrusted Connection''

[[Image:ssl_warning.png|ssl_warning.png]]

Mozilla has an educational resource to help users determine if their [https://support.mozilla.org/en-US/kb/how-do-i-tell-if-my-connection-is-secure connection to a website is secure]. ([http://www.webcitation.org/6EUzXi9P5 w]) The Electronic Frontier Foundation (EFF) also has an excellent [https://www.eff.org/pages/tor-and-https interactive illustration] that provides an overview of HTTP / HTTPS <ref>HTTPS here refers to encrypted connections, whether it is (inferior) SSL or TLS.</ref> connections with and without Tor, and what information is visible to various third parties.

=== The Fallible Certificate Authority Model ===

Unfortunately, the vast majority of Internet encryption relies on the CA model of trust which is susceptible to various methods of compromise. Ultimately, encryption in and of itself does not solve the authentication problem in electronic communications, as seen in the actions of advanced adversaries who have targeted and undermined this central pillar upon which the Internet relies.

For example, Verisign was [https://www.schneier.com/blog/archives/2012/02/verisign_hacked.html hacked successfully and repeatedly] in 2010, with the likely conclusion being the attackers were able to forge certificates for an unknown number of websites.

A more glaring example was the confirmation by Comodo on March 15, 2011, that a user account with an affiliate registration authority had been compromised. This is a privacy and security disaster since Comodo is a major [https://en.wikipedia.org/wiki/Transport_Layer_Security SSL/TLS] company and the breach led to the creation of a new user account that issued nine certificate signing requests for seven domains: mail.google.com, login.live.com, www.google.com, login.yahoo.com (three certificates), login.skype.com, addons.mozilla.org, and global trustee. <ref>Source: [http://blogs.comodo.com/it-security/data-security/the-recent-ra-compromise/ Comodo: The Recent RA Compromise] ([http://www.webcitation.org/6EUyeEwBE w])</ref>

Later in 2011, DigiNotar, a Dutch SSL certificate company, incorrectly issued certificates to a malicious party or parties. It later emerged that DigiNotar was apparently compromised months before, or perhaps even in May of 2009, if not earlier. Rogues certificates were issued for multiple domains, including: google.com, mozilla.org, torproject.org, login.yahoo.com and many more. <ref>Source: [https://blog.torproject.org/blog/diginotar-debacle-and-what-you-should-do-about-it The Tor Project: The DigiNotar Debacle, and what you should do about it] ([http://www.webcitation.org/6EUyf0rpk w])</ref>

Considering the frequency of attacks and the passage of time, there is a distinct possibility that a user may be subject to a MitM attack <i>even when the browser is trusting a HTTPS connection.</i> <ref>This is one reason why self-authenticating onion services (<i>.onion</i>) connections are superior to HTTPS, because they do not rely on the flawed CA system for confirmation of the destination server.</ref>

=== SSL/TLS Alternatives ===

There are alternatives to SSL/TLS which the user might consider, depending on their personal circumstances.  Unfortunately, none of them can be used as a drop-in replacement for SSL/TLS. Tools providing connection security include: [http://web.monkeysphere.info/ Monkeysphere], [https://en.wikipedia.org/wiki/Convergence_%28SSL%29 Convergence], [http://perspectives-project.org/ Perspectives Project] and Tor onion services. <ref>[[Onion Services]] are [[Onion_Services#Notes_about_End-to-end_security_of_Onion_Services|automatically encrypted end-to-end]]. More specifically, connections remain within the Tor network at all times.</ref>

Using Tor does not magically solve the authentication problem. Tor's distinct advantage is that by providing anonymity, it is more difficult for attackers to perform a MitM attack with a rogue SSL/TLS certificate that is targeted at just one specific individual. However, the disadvantage of Tor is that it is easier for people or organizations running malicious Tor exit relays to perform a large scale MitM attempt. Further, malicious exit nodes could perform attacks targeted at a specific server, and especially those Tor users who happen to utilize the service.

In all cases, users are advised to use additional message encryption for email, chats and so on. It is unwise to rely on SSL/TLS alone. Relevant tools that may be useful include:

* [[Chat|Encrypted messengers]].
* [https://en.wikipedia.org/wiki/GNU_Privacy_Guard GPG].
* [[Software#Encrypt.2C_decrypt.2C_sign.2C_and_verify_text_using_OpenPGP.3B_GnuPG_frontend | KGpg]].
* [[E-Mail|Mozilla Thunderbird with TorBirdy]] and Enigmail (gpg add-on) for email.

<ref>Quoted from [https://en.wikipedia.org/wiki/Man-in-the-middle_attack wikipedia Man-in-the-middle_attack] ([http://www.webcitation.org/6EUyk0IKX w]) and [https://blog.torproject.org/blog/detecting-certificate-authority-compromises-and-web-browser-collusion Tor Project: Detecting Certificate Authority compromises and web browser collusion] ([http://www.webcitation.org/6EUykcmES w]).</ref>

== Confirmation Attacks ==

The Tor Project makes it clear that advanced network adversaries can [https://blog.torproject.org/blog/one-cell-enough de-anonymize users under specific conditions]: <ref>http://www.webcitation.org/6EUyo9u9N</ref>

<blockquote>
The Tor design doesn't try to protect against an attacker who can see or measure both traffic going into the Tor network and also traffic coming out of the Tor network. That's because if you can see both flows, some simple statistics let you decide whether they match up.
</blockquote>

<blockquote>
That could also be the case if your ISP (or your local network administrator) and the ISP of the destination server (or the destination server itself) cooperate to attack you.
</blockquote>

<blockquote>
Tor tries to protect against traffic analysis, where an attacker tries to learn whom to investigate, but Tor can't protect against traffic confirmation (also known as end-to-end correlation), where an attacker tries to confirm a hypothesis by monitoring the right locations in the network and then doing the math.
</blockquote>

= Documents = 

== Whonix does not Encrypt Documents by Default ==

If documents are saved inside Whonix, they will not be encrypted by default. The [[Advanced Security Guide]] recommends [[Advanced_Security_Guide#Full_Disk_Encryption | the host is fully encrypted]] to protect sensitive data.

Documents created in Whonix may also have specific file signatures that reveal use of the platform. This issue is currently being researched.

== Whonix does not Clear Document Metadata ==

Numerous file formats store hidden data or metadata inside of the files. For example, text processors or PDF files could store the author's name, the date and time of file creation, and sometimes even parts of the file's editing history. The extent of hidden data depends on the file format and the software that is used.

Image file formats like [https://en.wikipedia.org/wiki/Tagged_Image_File_Format TIFF] and [https://en.wikipedia.org/wiki/JPEG JPEG] are some of the worst offenders. For instance, when these files are created by digital cameras or mobile phones, they contain a metadata format called [https://en.wikipedia.org/wiki/Exchangeable_image_file_format Exif] whose defined tags can include:

* Date and time information.
* Occasionally GPS coordinates of the picture.
* Camera settings: camera model and make (including the serial number), orientation (rotation), aperture, shutter speed, focal length, metering mode and ISO speed information.
* A thumbnail for previewing the picture in file managers, on camera, or in photo editing software. Image processing software tend to keep Exif data intact.
* Descriptions.
* Copyright information.


Notably, the internet is full of cropped or blurred images where the Exif thumbnail still contains the full original picture. [https://packages.debian.org/jessie/mat Specialist software] is often required to remove Exif tags before safely publishing images. <ref>For example, the [https://en.wikipedia.org/wiki/XKeyscore XKeyscore] program is actively targeting Exif information for collection.</ref>

Users should always remember that <i>Whonix does not clear file metadata automatically.</i> However, Whonix comes bundled with [[Metadata |  MAT - the Metadata Anonymisation Toolkit -]] as part of the design goal to help protect users.

= Email =

== Whonix does not Encrypt Subject: and other Header Fields of Encrypted Emails ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = Unless precautions are taken, the "Subject:" line and other header fields are <i>not</i> encrypted when using OpenPGP encrypted email.
}}


This weakness is not related to Whonix or the [http://www.mozilla-enigmail.org/forum%20viewtopic.php?f=3&t=328 OpenPGP] ([http://www.webcitation.org/6EUyt6L0f w]) protocol; it is for backwards compatibility with the original [https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol SMTP protocol]. Unfortunately, no RFC standard exists yet for Subject line encryption.

Recently, TorBirdy v2.3 has implemented Enigmail features which enable [https://blog.torproject.org/our-latest-release-torbirdy-thunderbird-includes-new-enigmail-features encrypted email headers]. <ref>The preference in TorBirdy is <code>extensions.enigmail.protectHeaders</code>.</ref> The new feature encrypts the Subject and References headers and moves them into the encrypted message body.

Users who require OpenPGP encryption with a suitable email client are recommended to use [[Encrypted_Email_with_Thunderbird_and_Enigmail|Thunderbird (Mozilla's email client) and Enigmail]], which is a graphical front-end for using the GnuPG ("GPG") encryption program. The [[Encrypted_Email_with_Thunderbird_and_Enigmail#Install_the_Torbirdy_Plugin_in_Thunderbird|TorBirdy extension]] is also available to make Thunderbird connections take place over the Tor network.

= Fingerprinting =

== Whonix may have an Unknown Signature ==

Developers have designed Whonix to be indistinguishable from standard use of the Tor network. However, there may be unknown fingerprinting methods available to ISPs and other network adversaries which identify Whonix users. 

Users who are concerned about this issue should investigate optional configurations which can [[Hide_Tor_and_Whonix_from_your_ISP | hide Tor/Whonix use from the ISP]].

== Whonix does not Defeat Stylometry ==

Whonix does not obfuscate a user's writing style. Consequently, [[Surfing_Posting_Blogging#Stylometry|unless precautions are taken]], users are at risk from [https://en.wikipedia.org/wiki/Stylometry stylometric analysis based on their linguistic style]. Research suggests only a few thousand words (or less) may be enough to positively identify an author, and there are a host of software tools available to conduct this analysis.

= Platform Security =

== Whonix does not Improve Password Strength ==

Tor promotes online anonymity, while Whonix automatically forces desktop-wide activities through Tor (along with many extra [[Design|security features]]). However, neither Tor or Whonix are one-click solutions for impregnable  security or absolute anonymity.

If weak passwords (passphrases) are used, they can be easily determined by [https://en.wikipedia.org/wiki/Brute-force_attack brute-force attacks], whether or not Whonix is installed. In essence, attackers systematically try all passwords until the correct one is found, or attempt to guess the key which is created from the password using a key derivation function (an exhaustive key search). This method is very fast for short and/or non-random passwords.

For greater security, users should generate strong and unique passwords by following the relevant [[Security_Guide#Passwords|recommendations]] in the Security Guide.

== Whonix does not Secure the Host ==

The security of the Whonix platform is itself reliant upon the security of the host. Naturally, many users might simply choose to run Whonix on top of the every day operating system without making any additional changes. However, user safety is greatly enhanced by following the recommendation to [[Computer_Security_Education#Using_a_Dedicated_Host_Operating_System_and_Computer | use a dedicated host operating system]] solely for Whonix VMs. For even greater security, the dedicated host OS can be used on a computer solely bought for Whonix activities and which has never been used before for any other activities.

There are also a range of recommendations relevant to host OS security in the following entries: [[Computer_Security_Education|Computer Security Education]], [[Security_Guide|Security Guide]], [[Advanced_Security_Guide|Advanced Security Guide]] and [[System_Hardening_Checklist|System Hardening Checklist]].

= Software = 

== Avoid Non-free Software ==

{{Avoid nonfree software}}

{{Anchor|Avoid Unsigned Software}}

== Always Verify Signatures ==

For greater system security, it is strongly recommended to avoid installing unsigned software. Always make sure that [[Security_Guide#Verifying_Software_Signatures|signing keys and signatures are correct]] and/or use mechanisms that heavily simplify and automate this process, like [[Security_Guide#Updates|apt-get upgrades]]. 

As a reminder, digital signatures are not a magic bullet. While they increase the certainty that no backdoor was introduced by a third party during transit, this does not mean the software is absolutely "backdoor-free". Learn more about this process and [[Trust#What_do_Digital_Signatures_Prove_and_What_They_DO_NOT_Prove|what digital signatures prove and do not prove]].

= Tor =

== Tor Exit Relays can Eavesdrop on Communications ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = The Tor network hides a user's location, but does not automatically encrypt communications.
}}


Instead of taking a direct route from source to destination, communications using the Tor network take a random pathway through several Tor relays to help cover the user's tracks. This means observers at any single point cannot tell both where the data came from and where it is going.

'''Figure:''' <i>How Tor Works</i>
[[Image:htw2-tails.png|frame|none|alt=| A Tor connection usually goes through 3 relays with the last one establishing the actual connection to the destination server]]
<br />
The last relay on the three-hop circuit is called the Tor exit relay. It is the critical relay that establishes the actual connection to the destination server. By design, Tor does not encrypt the traffic between a Tor exit relay and the final destination. This means <i>any exit relay is in a position to capture any traffic passing through it.</i> To protect against snooping by the Tor exit relay, users should always use end-to-end encryption. <ref>For example, a HTTPS or onion service (<i>.onion</i>) connection.</ref>

Malicious exit nodes have previously been used to spy on the sensitive communications of users. For example, in 2007, a security researcher monitored the connections coming out of an exit relay under their control and [http://www.wired.com/politics/security/news/2007/09/embassy_hacks intercepted thousands of private e-mail messages] sent by foreign embassies and human rights groups around the world. ([http://www.webcitation.org/6EUyHbBEU w]).

While browsing, sending email or chatting online, users are recommended to utilize the necessary tools bundled with Whonix to enforce strong encryption. See the [[Documentation]] for steps on how to remain safe. <ref>Source: [https://trac.torproject.org/projects/tor/wiki/TheOnionRouter/TorFAQ#CanexitnodeseavesdroponcommunicationsIsntthatbad Tor FAQ: Can exit relays eavesdrop on communications?] ([http://www.webcitation.org/6EUyAPZe4 w])</ref>

== Whonix Makes Tor Use Obvious ==

Tor tries to prevent attackers from learning what destination websites a user connects to.

Unless an [[Hide_Tor_and_Whonix_from_your_ISP|optional configuration]] has been set to hide the use of Tor/Whonix, both the ISP and a local network administrator <i>can easily check if a user is connecting to a Tor relay</i> and not a normal web server.

Unless the optional configuration [[Tunnel Proxy or SSH or VPN through Tor | Tunnel Proxy/SSH/VPN through Tor]] is set, <i>the destination server contacted through Tor can learn whether the communication originates from a Tor exit relay</i> by consulting the publicly available list of known exit relays. For example, The Tor Project [https://check.torproject.org/cgi-bin/TorBulkExitList.py Tor Bulk Exit List tool] could be used for this purpose. <ref>Tor also has an obvious network signature, since Tor traffic passes along these connections (circuits) in [https://svn.torproject.org/svn/projects/design-paper/tor-design.html fixed-size cells of exactly 512 bytes].</ref> 

Based on this information, Whonix users will <i>not</i> appear to be a random Internet user unless an optional configuration is used to prevent the telltale signs of Tor use. The strong anonymity provided by Tor and Whonix is based on trying to make all users look exactly the same, so it is not possible to identify a specific individual in the larger user pool.

Ultimately, stronger protection requires a social approach; the larger the pool of Tor users (in close proximity) and the more [https://www.torproject.org/about/torusers.html.en diverse] their interests, the less likely it will be that an individual user can be identified. Convincing other people to use Tor will help the larger anonymity-minded community. <ref>Attribution: Two sentences in this chapter have been forked from the [https://www.torproject.org/download/download-easy.html.en Tor] ([http://www.webcitation.org/6EUyWNl4n w]) website, which was licensed under a [https://creativecommons.org/licenses/by/3.0/us/ Creative Commons Attribution 3.0 United States License] ([http://www.webcitation.org/6EUyX0A2y w]) at the time of writing.</ref>

== Persistent Tor Entry Guard Relays can Enable Physical Location Tracking ==

{{Persistent Tor Entry Guards Introduction}}

For more information, see the advanced topic [[Tor#Non-Persistent_Entry_Guards]].

== Tor cannot Protect Against a Global Adversary ==

A global, passive adversary is defined as a person or entity who is able to monitor the traffic between all the computers in a network at the same time. By studying, for example, the timing and volume patterns of the different communications across the network, it is statistically feasible to identify Tor circuits and thus match Tor users with destination servers.

In order to create a low-latency communication service which is usable for web browsing, Internet chat or SSH connections, The Tor Project has made a security trade-off and has not attempted to address such a threat.

For more expert information on this topic, see [https://svn.torproject.org/svn/projects/design-paper/tor-design.pdf Tor Project: The Second-Generation Onion Router], ([http://www.webcitation.org/6EUyv297d w]) part 3. Design goals and assumptions.

= Whonix Development =

== Whonix is not Amnesic ==

Unlike Tails, Whonix is not an Amnesic Live CD. If Whonix is installed on a computer, local traces of the installation will be left on the device's HDD/SSD. Further, any created files will still exist after the computer is powered-off or rebooted, unless steps are taken to securely wipe the files to remove all signs of their existence.

Whonix has not implemented any special measures to limit what is written to disk and acts like an ordinary installed operating system. Therefore, there may be evidence of user activity in created files, backup files, temporary files, swap, chat history, browser history and so on. 

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = Users who rely on [[Whonix_Live|Whonix live]] in non-Qubes-Whonix should be aware that although writes go to RAM instead of the HDD/SSD, traces of activity may be left in swap files, core dumps or via other configurations. <ref>Live mode does not yet meet the technical amnesic threshold.</ref>
}}


Unix-like operating systems also [https://en.wikipedia.org/wiki/Swap_partition#Unix_and_Unix-like_systems  swap (move) memory pages between host RAM and the host disk], and this behavior cannot be prevented in Whonix because it is based on Debian. The danger is data leakage may occur and an unencrypted swap partition might reveal interesting data to an attacker or be used to store unencrypted copies of files in <i>/tmp</i> for later retrieval. <ref>http://www.linuxtopia.org/online_books/linux_administrators_security_guide/06_Linux_File_System_and_File_Security.html</ref> This is why the documentation recommends to [[SecurityGuide#Recommendation_to_use_multiple_VM_Snapshots | use multiple VM Snapshots]] and [[Advanced_Security_Guide#Full_Disk_Encryption | apply Full Disk Encryption on the host]]. Encrypting everything, including data, system and swap partitions provides a higher level of security.

For more information on this topic, see: [[FAQ#Is_there_a_substitute_for_Whonix.27s_lack_of_an_Amnesic_feature_.2F_Live_CD.2FDVD.3F_Forensics.3F|Is there a substitute for Whonix's lack of an Amnesic feature / Live CD/DVD? Forensics?]]"

== Missing Whonix Features ==

Whonix is currently alpha quality software and missing some features, including those relating to security. While many issues listed below are planned for future implementation, a number will probably never get "fixed" because they are impossible to address in a software-only project.

Whonix in its current form does not:

* Encrypt a user's data, documents, files and so on.
* Wipe RAM on shut down. See [http://brainstorm.ubuntu.com/idea/30076/ Idea #30076: Enhancy Privacy/Security, Wipe RAM on shut down, reboot and trigger].
* Wipe video RAM on shut down. See [https://tails.boum.org/todo/erase_video_memory_on_shutdown/ Tails -erase video memory on shutdown].
* Make weak passwords stronger.
* Protect against local adversaries who could mount cold boot and evil maid attacks, or otherwise compromise a user's physical machine.
* Protect users who: fail to read the [[Documentation]], engage in unsafe behaviors, or change default settings without knowing the implications.
* Automatically apply security updates. This was a conscious developer decision because automated updates also come with their own set of security problems. However, users are always notified about updates on Whonix-Workstation by whonixcheck.
* Protect against global network adversaries.
* Protect against hardware or software backdoors.
* Automatically protect against MAC address fingerprinting on public networks.
* Protect against highly skilled software attacks, unless [[Dev/Build_Documentation/Physical_Isolation|physical isolation]] or [[Qubes-Whonix]] is utilized.
* Protect users by default if Tor is somehow broken. This situation is partially mitigated (with caveats) by chaining Tor with SSH, proxies or VPNs.
* Disguise the use of Tor by default, although an optional configuration is available to  [[Hide_Tor_and_Whonix_from_your_ISP | hide the fact Tor/Whonix is being used]].
* Use all the possible hardening options like full PIE and grsecurity. 
* Apply AppArmor profiles for every process or application.
* Obfuscate a user's linguistic style to defeat stylometric analysis.
* Have deterministic builds, see [[Dev/Archived Discussions]]. <ref>Although Tor now has deterministic builds, see [https://trac.torproject.org/projects/tor/ticket/3688 Bug 3688].</ref>


This list is likely incomplete. Users are encouraged to read the rest of the [[Documentation]] and perhaps the [[Design]] chapter to have a full overview of Whonix security, including the list of supported and unsupported features.

Users who want to help improve Whonix security should join the discussions on [[Dev/Archived Discussions]], or on the developer mailing list.

== Whonix is a Work in Progress ==

Whonix, as well as all the software it includes, are under continuous development and might contain programming errors or security holes. Users should [[Download#Stay_tuned | stay tuned]] to Whonix development, and not rely on it for strong anonymity.

That said, Whonix has a [https://lists.torproject.org/pipermail/tor-talk/2012-October/025921.html strong foundational design] since it uses both the Isolating Proxy and Transparent Proxy concepts. Over the last 5 years, no anonymity leaks or proxy bypass problems have been discovered. Whonix has been developed with great care, but it is impossible to ever prove that it is absolutely "leak-proof" or free of mistakes that degrade the goals of the extended project description. ([http://www.webcitation.org/6EUzBC5nH w])

Basic functionality is built-in and Whonix can be used to browse the web and [[Onion Services | host onion services]], use email, IRC, SSH, and a host of other activities. Development is still ongoing and more features are being added to Whonix. Contributors who want to join the development process are most welcome. A complete list of open issues is available on the [https://phabricator.whonix.org/maniphest/ Whonix issues tracker].

See also [[Security_in_Real_World | Whonix security in the real world]], [[Security_Reviews_and_Feedback | Security Reviews and Feedback]] and [[Technical_Introduction#Security_Overview | Security Overview]].

= Footnotes =
{{reflist|close=1}}

= License =
{{License_Amnesia|{{FULLPAGENAME}}}}

{{Footer}}

[[Category:Documentation]]
