{{Header}}
{{#seo:
|description=Instructions on how to connect to a VPN before Tor (User -> VPN -> Tor -> Internet)
}}

{{Tunnels_Introduction}}

'''User -> VPN -> Tor -> Internet'''

There are at least two ways to connect to a VPN before Tor (User -> VPN -> Tor -> Internet): Using software on the host operating system and using software on Whonix-Gateway.

What's the difference of installing a VPN on the host versus installing on Whonix-Gateway?

{{VPN_on_the_host_vs_on_Whonix-Gateway}}

=== VPN Software on Host OS ===

When using a Whonix-Gateway virtual machine, connect to a VPN using software on the host operating system (and not on the Whonix-Workstation nor Whonix-Gateway).

Using software inside the host operating system may be more convenient if your more familiar with the host operating system than Whonix. Additionally, your VPN provider might provide custom software with tools for connecting to their servers. However, there are issues that you must consider:
* A VPN on the host operating system will route all traffic originating from the host through the VPN, as well as Whonix's traffic. It is up to your preferences, if you like this or not.
* Your VPN software may not be designed or configured to "fail closed". That is, if your VPN session suddenly disconnects, your Tor connection will be automatically sent through your ISP without going through your VPN service. 

==== How to add the VPN in Host OS ====
Use the host operating system's built-in tools connect to your VPN or use the software provided by your VPN service.

Use a Fail Closed Mechanism!

{{Fail_Closed_Mechanism}}

If you want to enforce, that the VPN always gets used, try [https://github.com/adrelanos/VPN-Firewall VPN-Firewall].

(Or if that works for you, install the VPN on the gateway instead, because it comes with an integrated VPN-Firewall feature.)

=== VPN Software on Whonix-Gateway ===

Whonix-Gateway can be configured to connect to a VPN server before Tor, as well as "fail closed", blocking all Tor traffic if the VPN disconnects. 

==== How to add the VPN in Whonix-Gateway ====

After installing Whonix-Gateway, do the following steps before activating Tor in {{Code|Whonix Setup Wizard}}.

1. {{Firewall Settings}}

2. Add the following settings. You can skip comments (starting with {{Code|#}}). Don't use {{Code|;}} for comments. <ref>That config file is a bash fragment.</ref> Note: make sure to adjust the {{Code|VPN_SERVERS}} variable in your config (unless you are using {{Code|seattle.vpn.riseup.net}} as your VPN service). Likely you do not need to either uncomment (removing the {{Code|#}} in front) or modify {{Code|VPN_INTERFACE}} / {{Code|LOCAL_NET}}.

<pre>
## Make sure Tor always connects through the VPN.
## Enable: 1
## Disable: 0
## DISABELD BY DEFAULT, because it requires a VPN provider.
VPN_FIREWALL=1

## IP address of the VPN server.
## Get the IP using: nslookup vpn-example-server.org
## Example: seattle.vpn.riseup.net
## Some providers provide multiple VPN servers.
## You can enter multiple IP addresses, separated by spaces.
VPN_SERVERS="198.252.153.26"

## For OpenVPN.
#VPN_INTERFACE=tun0

## Destinations you don not want routed through the VPN.
## 10.0.2.2-10.0.2.24: VirtualBox DHCP
#      LOCAL_NET="\
#         127.0.0.0-127.0.0.24 \
#         192.168.0.0-192.168.0.24 \
#         192.168.1.0-192.168.1.24 \
#         10.152.152.0-10.152.152.24 \
#         10.0.2.2-10.0.2.24 \
#      "
</pre>

3. Save.

4. {{Reload Firewall}}

5. Note, you must use IP addresses. You cannot use DNS hostnames. For example, you could not use {{Code2|vpn.riseup.net}}. You have to use IP addresses such as for example {{Code2|198.252.153.226}}. You find out the IP from your provider or by using nslookup on the host. Example. (You need to use your actual DNS hostname, not {{Code2|vpn.riseup.net}}.

<pre>
nslookup vpn.riseup.net
</pre>

6. Now setup OpenVPN. It should be able to connect. You find [[Tunnels/Examples#Examples_of_setting_up_VPNs_to_work_with_Whonix|example instructions here]].

7. Enable Tor using Whonix Setup Wizard.

{{whonixsetup}}


===== Whonix 13 Changes =====
VPN_SERVERS was abolished for better security. <ref>https://phabricator.whonix.org/T460</ref>

{{Open with root rights|filename=
/etc/sudoers.d/tunnel_unpriv
}}

Comment in. (Remove the single hashes ({{Code2|#}} in front of all lines, but do not remove the double hashes ({{Code2|ää}}).

Run OpenVPN as user 'tunnel'.

Add add to OpenVPN config.

<pre>
user tunnel
</pre>

==== Additional Tweaks / Recommendations / Troubleshooting ====
<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
'''If having problems with the connection / Tor is not fully bootstrapped''', please press on expand on the right.
<div class="mw-collapsible-content">
You have may have to manually restart Tor. This is because the VPN may not be ready when Tor is attempting to connect, because the VPN connection initialization takes too long. Due to a bug in Tor, it won't keep trying to connect. To fix this, you may have to manually restart Tor after boot, if whonixcheck reports that Tor is not fully bootstrapped. The same may be necessary if your VPN software or connection temporarily broke down.

'''To Manually restart Tor:'''

{{Reload Tor}}

'''Leak Tests'''

When you shut down the VPN, neither Tor, nor Whonix-Gateway's whonixcheck/apt-get/etc. nor Whonix-Workstation should be able to connect anywhere anymore.

''' Force Tor to wait for OpenVPN '''

sysvinit: (Legacy. Prefer the systemd method below.) <ref>
To improve this situation, if you are using OpenVPN and Debian's init script to automatically start it, add an insserv override to wait for openvpn being started.

1. Create a new file {{Code|/etc/insserv/overrides/tor}}. 

{{Open with root rights|filename=
/etc/insserv/overrides/tor
}}

2. Add the following content.

<pre>
### BEGIN INIT INFO
# Provides:          tor
# Required-Start:    $local_fs $remote_fs $network $named $time
# Required-Stop:     $local_fs $remote_fs $network $named $time
# Should-Start:      $syslog openvpn
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts The Onion Router daemon processes
# Description:       Start The Onion Router, a TCP overlay
#                    network client that provides anonymous
#                    transport.
### END INIT INFO
</pre>

3. Then apply these changes by running.

{{CodeSelect2|code=
sudo update-rc.d tor defaults
}}
</ref>

systemd (Whonix 11 and above):

Create a folder /etc/systemd/system/tor.service.d.

{{CodeSelect2|code=
sudo mkdir /etc/systemd/system/tor.service.d
}}

Create a file /etc/systemd/system/tor.service.d/50_user.conf.

{{Open with root rights|filename=
/etc/systemd/system/tor.service.d/50_user.conf
}}

Add the following content.

{{CodeSelect2|code=
[Unit]
After=openvpn.service
}}

Save.

At next boot, the Tor daemon will be started after the OpenVPN daemon.

Debugging: <ref>
Reload systemd.

{{CodeSelect2|code=
sudo systemctl daemon-reload
}}

Check Tor service status.

{{CodeSelect2|code=
sudo service tor status
}}

It should list the drop-in file {{Code2|/etc/systemd/system/tor.service.d/50_user.conf}}.
</ref>

'''Limitations'''
* Only tested with OpenVPN. Most other VPN's have deficiencies anyway.
* DNS (IP address) of VPN server has to be manually resolved. There is technically no way to automatically resolve DNS without making the setup much more complex. The VPN server's IP address should not be resolved over Tor, because that's what you wanted to hide in the first place. Since outside observers will know, that you are connecting to the VPN IP anyway, it is probably save to resolve the DNS over clearnet or by asking the VPN provider if they don't already document their IPs on their website anyway.
* No support for IPv6 yet.

'''Troubleshooting VPN -> Tor'''

*If not connecting, see above to manually restart Tor
*Check your VPN software's logs.

*'''Test if you are able to connect using your VPN'''

1. Login as user {{Code|clearnet}}.

{{CodeSelect2|code=
sudo su clearnet
}}

2. Try connecting to check.tpo. Note, at time of writing, it looked like usaip free trial is probably blocking SSL, therefore it might not work.

{{CodeSelect2|code=
curl.anondist-orig --silent --tlsv1 --proto =https -H 'Host: check.torproject.org' -k https://38.229.72.22 | grep IP
}}

Should show something along: {{Code2|Your IP address appears to be: xxx.xxx.xxx.xxx}}

3. Get back to normal user.

{{CodeSelect2|code=
exit
}}
</div>
</div>

= Footnotes =
<references />

{{Footer}}

[[Category:Documentation]]
