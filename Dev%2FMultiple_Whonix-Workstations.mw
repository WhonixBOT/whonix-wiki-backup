{{#seo:
|description=Qubes-Whonix development notes.
}}
{{Header}}

= Single Tor-Gateway with Multiple Workstations =
Pros:

* Not subverting Tor guard selection and cycling.
* Single Gateway VM uses less resources.

Cons:

* Some unforeseen way malicious VM "X" can link activities of or  influence traffic of VM "Y"
* Maybe sending NEWNYM requests in a timed pattern that changes exit IPs of VM Y's traffic, revealing they are behind the same client?
* <b>[XXX] perhaps some discovery attacks even with a control port filter can leak VM's guards and even entire circuits</b>
* Maybe eavesdropping on HSes running on VM Y's behalf?
* caching of DNS
* caching of HS descriptors
* preemptive circuits. 
* circuit cannibalization (cannot be isolated)
* SSL state
* guard state
* consensus availability and content
* descriptor availability and content
* connectivity (or lack thereof)
* uptime
* ControlPort config information
* ControlPort config changes
* And many more.
* <ref>
https://lists.torproject.org/pipermail/tor-dev/2016-October/011591.html
</ref> <ref>
https://lists.torproject.org/pipermail/tor-dev/2016-November/011634.html
</ref>
* "We don't even recommend running a SOCKS client and a hidden service on the same instance."
* If the host or Whonix-Gateway internet connection goes down, all workstations will go offline at the same time which could aid to link them to the same pseudonym.

[[Stream Isolation]] defends at the remote end. Not at the client end.

= Multiple Tor-Gateways mapped 1:1 to Workstation VMs =

Pros:

* Conceptually simple. Uses a different Tor instance so no need to worry about all these questions.

Cons:

* Subverting Tor guard selection. (For better anonymity, Tor developers decided to reduce entry guards from 3 to 1.)
* Subverting Tor guard cycling. (For better anonymity, Tor developers decided to cycle Tor guards less often.)
* Uses a different entry guard which can increase chance of running into a malicious relay that can deanonymize some of the traffic.
* Uses extra resources (though not much as a Tor Gateway can run with as little as 192MB RAM).
* Links traffic at different guards to the same source IP address
* <b>[XXX] Even VM-level isolation is not proof against some attacks</b>
** covert and sidechannel attacks
** [[Advanced Attacks]]
** [[Dev/Advanced Attacks]]
* Much worse usability.
** More difficult to explain to and grasp by users.
** More hassle setting up [[bridges]].
* [[Non-Qubes-Whonix]]:
** Wastes lots of disk space.
** Lots of more VMs to keep updated.
* If the host internet connection goes down, all workstations will go offline at the same time which could aid to link them to the same pseudonym.

= Multiple Tor instances on same Gateway =

* Running multiple Tor instances on the same Gateway. [Tor's systemd service supports that. (Would use separate Tor data dirs, thereby Tor entry guards.)]
* Ideas: 
** *Might* be simpler to make all instances of Tor use the same Tor entry guards.
** There could be a Tor "master" instance. It would fetch consensus and set entry guard. All other Tor slave instances would use that, perhaps using symlinks or so. Might require features that Tor does not provide yet.

= Tor Hidden Services =
== Compartmentalization ==
<blockquote>
We don't even recommend running a SOCKS client and a hidden service on the same instance.
</blockquote>

Safe to recommend:

* use one gateway / workstation[s] combination for simple client activities (browsing, mail, chat)
* use another gateway / workstation[s] combination where add_onion is whitelisted, i.e. where using Tor ephemeral hidden services is white listed

Deanonymization is more at risk when using Tor hidden services compared to just using Tor as client. This is because Tor hidden services can be made to talk by connecting to them. A whole different class of attacks.

So when one just users Tor as a client and that workstation gets compromised, it would be a safer if that VM did not have access to Tor creating ephemeral hidden services, since that allows more deanonymization attacks.

== Ephemeral Detached  ==
When using <u>detached</u> ephemeral onion services, VMs can read onion service keys and hostnames of other VM as well as shut them down.

* Requires Whonix 14 or above (Whonix 13 control port filter does not support ephemeral onion services).
* Only when white listening the command for listing ephemeral onion services in control port filter.
** It's not clear that will be required since there are no ephemeral HS applications in the wild that would require that command.

= Draft =
UNFINISHED

TLDR:

Should Whonix recommend against using multiple workstations behind the same Tor-Gateway?

Using a control port filter.

Recommend using a separate Tor instance of client use and for hidden service use.

When using multiple Tor instances, should these share the same Tor entry guard or bridge?

Not too long ago Tor got some improvements:

    The number of Tor entry guards was reduced from 3 to 1.
    And guards are kept for longer. (Longer guard cycling period.)

If we encourage multiple Whonix-Gateways, we subvert these improvements.

a) I think guard related attacks are much more serious since they lead
to deanonymization.

b) Caching issues for in multi-ws single-gw setups can lead to linking
multiple workstations together.

I think a) is more serious than b). So for now I guess multi-ws
single-gw is still better than multi-gw multi-ws.

For multi-gw setups it might be theoretically an option to have them
manually use the same Tor entry guard? That also does not seem too
great, since Tor guard selection then would be manual?

Perhaps we could equate the following two?

    single-gw multi-ws

        perhaps some discovery attacks even with a filter

    multi-gw multi-ws

        Even VM-level isolation is not proof against some attacks

what is worse.

    a) single gateway sharing vs
    b) using multi-gw and thereby subverting number and duration of entry


usability issues...

cloning a gateway not a reliable solution to keep entry guards



There are three options for user recommendation:

    multi-gw multi-ws
    single-gw multi-ws
    single-gw with multi-ws while recommending against running different

activities of different trust levels / pseudonyms at the same time

Yet another option might be to run multiple Tor instances on the same
Whonix-Gateway. Tor's systemd service supports that. (Would use separate
Tor data dirs, thereby Tor entry guards.)

= Footnotes =
<references />

{{Footer}}

[[Category:Design]]
