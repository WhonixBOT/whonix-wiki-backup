{{#seo:
|description=Qubes-Whonix development notes.
}}
{{Header}}

= Single Tor Gateway with Multiple Workstations =
Pros:

* Not subverting Tor guard selection and cycling.
* Single Gateway VM uses less resources.

Cons:

* Some unforeseen way malicious VM "X" can link activities of or  influence traffic of VM "Y"
* Maybe sending NEWNYM requests in a timed pattern that changes exit IPs of VM Y's traffic, revealing they are behind the same client?
* perhaps some discovery attacks even with a control port filter can leak VM's guards and even entire circuits
* Maybe eavesdropping on HSes running on VM Y's behalf?
* caching of DNS
* caching of HS descriptors
* preemptive circuits. 
* circuit cannibalization (cannot be isolated)
* SSL state
* guard state
* consensus availability and content
* descriptor availability and content
* connectivity (or lack thereof)
* uptime
* ControlPort config information
* ControlPort config changes
* And many more.
* <ref>
https://lists.torproject.org/pipermail/tor-dev/2016-October/011591.html
</ref> <ref>
https://lists.torproject.org/pipermail/tor-dev/2016-November/011634.html
</ref>

= Multi-Tor Gateways mapped 1:1 to Workstation VMs =

Pros:

* Conceptually simple. Uses a different Tor instance so no need to worry about all these questions.

Cons:

* Subverting Tor guard selection and cycling.
* Uses a different entry guard which can increase chance of running into a malicious relay that can deanonymize some of the traffic.
* Uses extra resources (though not much as a Tor Gateway can run with as little as 192MB RAM).
* Links traffic at different guards to the same source IP address
* Even VM-level isolation is not proof against some attacks
* [[Non-Qubes-Whonix]]:
** Wastes lots of disk space.
** Lots of more VMs to keep updated.

= Footnotes =
<references />

{{Footer}}

[[Category:Design]]
