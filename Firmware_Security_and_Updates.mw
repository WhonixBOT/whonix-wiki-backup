<!--
Copyright:

   Whonix Computer Security Education wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   Whonix Computer Security Education wiki page Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/Whonix/Whonix/blob/master/GPLv3>.
-->
<!--
The Whonix Computer Security Education wiki page is forked from the Tails Enable MAC Changer page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/doc/advanced_topics/mac_changer.mdwn;hb=770c6f26f8dcd06452fef1c57dafb2878e0dee11> and on the Tails macchanger page from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/todo/macchanger.mdwn;hb=f27853e23d7985594d54f00f30153b6acd97312e>.
-->

{{Header}}
{{#seo:
|description=Firmware Security and Updating Issues
}}

= Introduction =

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = This chapter contains general security advice and is unspecific to Whonix.
}}


Due to the difficulty of this topic and the specificity of hardware and host OS firmware, this issue is generally outside the scope of Whonix documentation. The links provided further below may not be the most relevant to the end user, necessitating further individual research.

= Firmware on Personal Computers =

Firmware is generally defined as the type of software that provides control, monitoring and data manipulation of engineered products. <ref>https://en.wikipedia.org/wiki/Firmware</ref> In the case of computers, firmware is held in non-volatile memory devices such as [https://en.wikipedia.org/wiki/ROM ROM], [https://en.wikipedia.org/wiki/Eprom EPROM] or [https://en.wikipedia.org/wiki/Flash_memory flash memory] and is associated with: <ref>https://en.wikipedia.org/wiki/Firmware#Personal_computers</ref> <ref>https://en.wikipedia.org/wiki/Firmware#Examples</ref> <ref>http://www.darkreading.com/partner-perspectives/intel/raising-the-stakes-when-software-attacks-hardware/a/d-id/1319423</ref> <ref>https://www.fsf.org/campaigns/priority-projects/hardware-firmware-drivers</ref>

* [https://en.wikipedia.org/wiki/BIOS BIOS] [https://wiki.gentoo.org/wiki/BIOS_Update updates].
* [https://en.wikipedia.org/wiki/Binary_blob Non-free] drivers or [https://packages.debian.org/jessie/firmware-linux-nonfree firmware].
* [https://en.wikipedia.org/wiki/Microcode Processor microcode] [https://wiki.archlinux.org/index.php/Microcode updates] (on Debian systems, depending on your processor, either the [https://packages.debian.org/jessie/intel-microcode intel-microcode] or the [https://packages.debian.org/jessie/admin/amd64-microcode amd-microcode] package).
* Firmware in storage devices like harddrives, DVD drives, and flash storage.
* All computer peripherals like printers, scanners and cameras / webcams.
* [https://help.ubuntu.com/community/BIOSUpdate UEFI] compliant firmware.
* [https://en.wikipedia.org/wiki/Firmware#Examples Routers and firewalls].
* Network adapters, IO controllers, power management and graphics processing units.
* 3-D graphics engines.

= Firmware Updating and Security Problems =
== Introduction ==
The major problem with updating firmware is that it cannot be done automatically in most cases. Therefore, it is difficult to fix functionality or security issues after the hardware has shipped. While utility programs are often available to update BIOS, firmware in other devices is rarely updated and mechanisms for detecting and updating firmware is not standardized. <ref>https://en.wikipedia.org/wiki/Firmware#Personal_computers</ref> 

If firmware can be upgraded, this is usually possible via a program created by the provider. Old firmware should always be saved before upgrading. If the process fails or the newer version performs worse, the process can be reverted. <ref>https://en.wikipedia.org/wiki/Firmware#Flashing</ref> Updating firmware may or may not improve security. On the one hand it may fix vulnerabilities, but on the other  hand an update may introduce a new backdoor. 

Unfortunately most end users must blindly trust the hardware producer, so it probably better to install non-free updates rather than risk being vulnerable to known attacks in the wild. <ref>Also see this debian-security mailing list thread: [https://lists.debian.org/debian-security/2013/09/msg00027.html How secure is an installation with no non-free packages?]</ref> Until these re-writable firmware areas are locked down or the code is open-sourced and vastly simplified, it is likely to remain a rich environment for malicious adversaries. <ref>http://www.darkreading.com/partner-perspectives/intel/raising-the-stakes-when-software-attacks-hardware/a/d-id/1319423</ref> <ref>Mark Shuttleworth, founder of the Ubuntu Linux distribution, has described [http://www.markshuttleworth.com/archives/1332 proprietary firmware as a security risk], stating "firmware on your device is the NSA's best friend" and calling firmware "a trojan horse of monumental proportions".</ref>

The reality is that advanced adversaries are routinely hacking the firmware of [https://www.wired.com/2013/09/nsa-router-hacking/ Internet routers, switches and firewalls], along with [https://www.wired.com/2015/02/nsa-firmware-hacking/ harddrive firmware], and [https://wikileaks.org/vault7/#Dark%20Matter UEFI/EFI and ethernet adapters]. The number of targets is already in the tens of thousands on an annual basis. Subverting firmware in this manner provides a stealthy and persistent presence that can eavesdrop on or re-route all network data, or access information in invisible storage areas that are unecrypted (bypassing disk encryption). Worst of all, firmware sabotage is believed to survive software updates or complete OS re-installations. Attacks may also be designed to corrupt firmware so machines are prevented from booting, even with an external drive. <ref>http://www.darkreading.com/partner-perspectives/intel/raising-the-stakes-when-software-attacks-hardware/a/d-id/1319423</ref>

== Processor Microcode Updates ==

One recent example of a firmware vulnerability is the processor microcode update for Intel chips to address [https://security-tracker.debian.org/tracker/CVE-2018-3620 speculative] [https://security-tracker.debian.org/tracker/CVE-2018-3646 execution flaws]. The [https://www.debian.org/security/2018/dsa-4279 Debian package] is only available in the non-free repository, meaning it is not installed by default in all Whonix variants. <ref>Relevant Debian packages for processor microcode: [https://packages.debian.org/stretch/intel-microcode Intel] and [https://packages.debian.org/stretch/amd64-microcode amd64].</ref> <ref>Installing these updates by default would require the Debian non-free repository, and logically also make Whonix images non-free.</ref> It is unnecessary to apply these updates in standard non-Qubes-Whonix and Qubes-Whonix guest VMs, as they do not have the ability to alter the microcode.  However, processor microcode updates <u>should</u> be applied on the host OS / baremetal configurations if running: <ref>See: https://forums.whonix.org/t/whonix-vulerable-due-to-missing-processor-microcode-packages/5739</ref>

* [[Physical_Isolation|Physical Isolation]]; or
* ARM architecture. <ref>ARM is less affected than Intel architecture.</ref>

=== Install Microcode Package ===
{{Update}}

{{CodeSelect|code=
sudo apt-get update
}}

For the Intel platform, run.

{{CodeSelect|code=
sudo apt-get install intel-microcode
}}

For the AMD platform, run.

{{CodeSelect|code=
sudo apt-get install amd64-microcode
}}

=== spectre-meltdown-checker ===
It is possible to check if the system is vulnerable to the [https://arstechnica.com/gadgets/2018/01/meltdown-and-spectre-every-modern-processor-has-unfixable-security-flaws/ Spectre] and [https://meltdownattack.com/ Meltdown] attacks, which use flaws in modern chip design to bypass system protections.

==== Installation ====
{{Install Backport|package=
spectre-meltdown-checker
}}

==== Usage ====
{{CodeSelect|code=
sudo spectre-meltdown-checker --paranoid ; echo $?
}}

=== Forum Discussion ===
See: https://forums.whonix.org/t/whonix-vulerable-due-to-missing-processor-microcode-packages

= References =
{{reflist|close=1}}

= License =
{{License_Amnesia|{{FULLPAGENAME}}}}

{{Footer}}

[[Category:Documentation]]
