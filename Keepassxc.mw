{{Header}}
{{Title|
title=KeePassXC Password Manager
}}
{{#seo:
|description=Keepassxc
|image=https://www.{{project_clearnet}}/w/images/5/51/KeePassXC.png
}}
[[image:KeePassXC.png|KeePassXC Icon|thumb|250px]]

= Introduction =
{{stub}}

[https://keepassxc.org/ KeePassXC] is: <ref>https://en.wikipedia.org/wiki/KeePassXC</ref>
<blockquote>...a free and open-source password manager. It started as a community fork of [https://en.wikipedia.org/wiki/KeePassX KeePassX] (itself a cross-platform fork of [https://en.wikipedia.org/wiki/KeePass KeePass]). ... The [https://en.wikipedia.org/wiki/Electronic_Frontier_Foundation Electronic Frontier Foundation] mention KeePassXC as "an example of a password manager that is open-source and free." The tech collective PrivacyTools has included KeePassXC in their list of recommended password manager software because of its active development.</blockquote>

KeePassXC is recommended by the EFF in their [https://ssd.eff.org/en/ Surveillance Self-Defense] guide <ref>It is also recommended by [https://www.privacytools.io/ PrivacyTools], see [https://www.privacytools.io/software/passwords/ here] ([http://www.privacy2zbidut4m4jyj3ksdqidzkw3uoip2vhvhbvwxbqux5xy5obyd.onion/software/passwords/ v3])</ref> and it is considered a feature-rich, modern and fully cross-platform password manager; refer to the [https://keepassxc.org/project/ features list] and [https://keepassxc.org/docs/#faq-format FAQ] for more detail. The benefits of a password manager include: <ref>https://ssd.eff.org/en/module/creating-strong-passwords</ref>
* Strong and unique passwords can be created and stored by the one application.
* Responses to security questions can be safely stored. <ref>It is recommended to provide fictional information to security questions in order to limit personal disclosures. Honest answers might be discoverable by adversaries who then utilize it to bypass your passwords completely.</ref>
* All passwords can be protected by a single master password/passphrase.
* This methodology prevents the reuse of passwords across multiple services, which is a poor security practice.
* This provides better account protection, particularly when combined with [[Two-factor_authentication_2FA|Two-factor Authentication (2FA)]].

Note that KeePassXC does not automatically save changes when it is used, so this should be changed in the settings (otherwise unsaved password changes could be lost).

Reliable, open-source password managers are a useful tool but they also come with risks:
* Password managers create a single point of failure.
* Research suggests coding vulnerabilities are present in many password managers.
* Highly capable adversaries are likely to target password managers.
* Avoid storing passwords "in the cloud" (on remote servers) -- this is more convenient but introduces the risk of a cloud vulnerability leading to an exploit.
* Avoid crossing remote borders with electronic devices containing your password manager -- some jurisdictions can compel/demand password disclosure and the unlocking of devices. <ref>The US border is a case in point, see: [https://www.eff.org/wp/digital-privacy-us-border-2017 Digital Privacy at the U.S. Border: Protecting the Data On Your Devices].</ref> 

Before using a password manager like KeePassXC, conduct a risk assessment of your personal circumstances. If you are likely to be targeted, then consider creating [[Passwords|strong passwords]] manually instead and storing them in a safe physical location. One suitable method is EFF's [https://www.eff.org/dice Dice-Generated Passphrases] via their [https://www.eff.org/files/2016/07/18/eff_large_wordlist.txt long wordlist]. Note that passphrases should be at least [[Passwords#Diceware_Password_Strength|six words long]]; passphrases of 15 words or more will protect against future quantum computer advancements. <ref>Quantum computers halve the number of iterations required to brute-force a key. This means doubling the length of symmetric keys to protect against future (hypothetical) quantum attacks.</ref>

= Installation =

Recommended to be installed inside an offline VM (vault). <ref>
* In [[Qubes]], apt-get package installation could be done in TemplateVM.
* In [[Qubes]], download and verification could be done in a temporary TemplateBased AppVM, ideally [[Qubes/DisposableVM]]. Then move to offline vault VM.
* In [[{{non q project name short}}|{{non q project name}}]]: install first, then disconnect internet and never re-enable internet access. TODO document
</ref> When you want to keepassxc as replacement for Google Authenticator (actually TOTP, Time based One Time Password) [[2FA|Two Factor Authentication (2FA)]]) then a Debian based VM is more suitable than a {{workstation_product_name}} based VM. <ref>
Because accurate time required for TOTP and due to [[Boot Clock Randomization]] and [[sdwdate]] anonymizing time.
</ref>

Packages <code>yubikey-personalization yubikey-personalization-gui</code> are YubiKey related. Users not using YubiKey can skip installation of these packages and install <code>keepassxc</code> only.

{{Install_Package|package=
keepassxc yubikey-personalization yubikey-personalization-gui
}}

<ref>
https://addons.mozilla.org/de/firefox/addon/passifox/
</ref>

= Autostart =
Optional. If you like to autostart keepassxc.

Create folder <code>~/.config/autostart/</code>.

{{CodeSelect|code=
mkdir -p  ~/.config/autostart/
}}

{{Open File|filename=
~/.config/autostart/keepassxc.desktop
}}

Paste the following content.

{{CodeSelect|code=
[Desktop Entry]
Type=Application
Name=keepassxc
Exec=keepassxc
}}

Save.

The process is now complete.

= Usage =
'''1.''' Use of an offline VM (vault) is recommended.

'''2.''' Make sure clock is correct.

{{Workstation product name}} is unsuitable due to [[Boot Clock Randomization]] and [[sdwdate]] clock randomization. (Unless disabled and offline.)

'''3.''' To start.

{{CodeSelect|code=
keepassxc
}}

'''4.''' Create a new database.

'''5.''' Default file name <code>Passwords.kdbx</code> is ok.

If you are using [[Full Disk Encryption]] you might want to use a very easy password. Up to you.

'''6.''' Left click on <code>root</code>.

'''7.''' Menu &rarr; <code>Entries</code> &rarr; <code>Add new entry</code> &rarr; under <code>Title:</code> write any name name (such as <code>test</code>) &rarr; <code>OK</code>.

'''8.''' Right click on the new entry (such as <code>test</code>) &rarr; <code>Time-based one-time password</code> &rarr; <code>set up TOTP</code> &rarr; <code>Default RFC 6238 token settings</code> &rarr; paste 2FA code &rarr; <code>OK</code>.

'''9.''' Right click on the new entry (such as <code>test</code>) &rarr; <code>Time-based one-time password</code> &rarr; <code>show TOTP</code>.

= Time Fix =
* Non-Whonix 

[[2FA]] TOTP code changes every 30 seconds. So clock needs to be reasonable correct.

Troubleshoting only. If code does not match.

Set timezone to UTC for simplicity.

{{CodeSelect|code=
sudo cp /usr/share/zoneinfo/Etc/UTC /etc/localtime
}}

Go to https://www.timeanddate.com/worldclock/timezone/utc or any other similar source to find out the time in UTC.

Fix the clock. Change the date and time accordingly!

{{CodeSelect|code=
sudo date -s "26 SEPT 2018 11:54:25"
}}

Check if the clock is correct now.

{{CodeSelect|code=
date
}}

* Whonix (Offline WorkStation)

Since whonix use sdwdate then there will be a delay in the 30 seconds, Meaning if the TOTP code showed up at 30 and you copy/paste it to the website or service which require the TOTP it wont work until the timer will reach to 8 seconds and below, This mean we have 22 seconds delay. (The result is tested in offline whonix-ws standaloneVM within Qubes OS)

If you want to fix this delay then disable sdwdate and bootclockrandomization by running this command: 

{{CodeSelect|code=
sudo service sdwdate stop && sudo service bootclockrandomization stop
}}

= Getting the Browser Extension To Work =
{{Community Support}}

Install the browser addon from https://addons.mozilla.org/en-US/firefox/addon/keepassxc-browser/

(OPTIONAL) Install a more recent version of <code>keepassxc</code> (See https://backports.debian.org/Instructions/)

Create the following symlink to get the proxy to work:

{{CodeSelect|code=
cd ~/.tb/tor-browser/Browser/TorBrowser/Data/Browser/.mozilla
}}

{{CodeSelect|code=
ln -s /home/user/.mozilla/native-messaging-hosts native-messaging-hosts
}}

Notes:
If the <code>.mozilla</code> folder does not exist, create it.

Also take a look at https://github.com/keepassxreboot/keepassxc-browser/wiki/Troubleshooting-guide

= Footnotes =
{{reflist|close=1}}
[[Category:Documentation]]
{{Footer}}
