{{Title|title=Qubes Disposables}}
{{Header}}
{{#seo:
|description=How to use Disposables in {{q_project_name}}.
|image=https://www.{{project_clearnet}}/w/images/8/82/Qubesdisposable123123123.png
}}
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = 
These Disposable instructions <u>only</u> apply to [[Qubes|{{q_project_name}}]] {{VersionShort}} in Qubes R4. <ref>
Disposables have significant improvements; see https://github.com/QubesOS/qubes-issues/issues/866#issuecomment-220495485
</ref> <ref>
Qubes R3.2 is unsupported by {{project name}} developers and reached [https://www.qubes-os.org/news/2019/03/28/qubes-3-2-has-reached-eol/ EOL] on 28 March, 2019.
</ref> <ref>
A serious [https://phabricator.whonix.org/T695 privacy bug] is unresolved in Qubes R3.2 / R3.2.1 and below.
</ref>
-----
A [[#Warnings|few usability issues]] in Disposables affect anonymity. If the risks are unknown to the user, then first carefully read this page.
}}
[[image:Qubesdisposable123123123.png|190px|thumb]]
__TOC__

----

= What are Disposables? =

In the Qubes Template model, <ref>[https://www.qubes-os.org/doc/getting-started/ App Qubes and Templates].</ref> any changes made to a [https://github.com/QubesOS/qubes-issues/issues/2489 root filesystem of an App Qube] are lost upon reboot. This is advantageous for several reasons: it saves time and disk space, and allows faster, centralized updates for applications that are usually found inside the root filesystem. However, certain directories are designed to persist between reboots in order to store files and settings. These directories are stored in <code>/rw</code>, including <code>/home/user</code> and <code>/usr/local</code> as well as additional directories defined by "bind directory" settings. <ref>[https://www.qubes-os.org/doc/bind-dirs/ How to make any file persistent (bind-dirs)].</ref>

Qubes does not have a built-in snapshot capability like VirtualBox that can completely revert all changes back to a previous VM state. <ref>
Apart from [https://www.qubes-os.org/doc/dom0-tools/qvm-revert-template-changes/ qvm-revert-template-changes] which can only revert to the state existing before the last shutdown of the Template.
</ref> <ref>
[https://forums.whonix.org/t/qubes-vm-snapshots-using-git-svn Qubes VM snapshots using git / SVN].
</ref> In other words, no method exists within App Qubes to reverse changes made to the persistent file system  without implementing some type of custom solution. To ensure that ''all'' filesystem changes are discarded after a session, Qubes offers Disposables. When a Disposable is shutdown, the VM is removed from Qubes and all related VM images are deleted from the host filesystem. This method is [[#Warnings|not yet amnesic]] and should not be relied upon for anti-forensics!

While Disposables ensure that files do not persist without user intervention, the downside is the user can no longer decide whether or not the current VM state should be kept or destroyed; users must choose beforehand to use a standard App Qube or a Disposable.

{{Qubes persistence}}

== The Layered Disposable System ==

Qubes uses a two-layered approach to Disposables. At the core of the system is a [https://www.qubes-os.org/doc/glossary/#template ''Template''] upon which a ''[https://www.qubes-os.org/doc/glossary/#disposable-template Disposable Template]'' is based. Every time a new Disposable is launched it is based on the ''Disposable Template'' - hence, two layers. In a standard [[Qubes|{{q_project_name}}]] installation:

* The {{workstation_product_name}} default Template is <code>{{whonix-ws}}</code>. 
* The {{workstation_product_name}} default Disposable Template is called <code>{{whonix-ws-dvm}}</code>.
* Each {{workstation_product_name}} default Disposable (<code>disp1, disp2, ...</code>) is based on <code>{{whonix-ws-dvm}}</code>. 

Once a Disposable Template is created, its <i>/home/user/</i> directory can be customized <ref>https://www.qubes-os.org/doc/disposable-customization/</ref> independently of the Template. In this special case, the Disposable Template will continue to inherit changes from the base Template's root filesystem (like package updates), but user files in <i>/home/user/</i> will persist independently.

It is possible to have multiple Disposable Templates and Disposables at the same time. <i>Any</i> App Qube can be enabled for use as a template for Disposables, by setting its [https://www.qubes-os.org/doc/disposable-customization/ <code>template_for_dispvms</code>] property.

In Qubes R4, [[Qubes|{{q_project_name}}]] {{VersionShort}}'s default Disposable Template (<code>{{whonix-ws-dvm}}</code>) can be easily created [[#Setup|using salt]] and will have this property set.

== Disposable Traffic Stream Isolation ==

Disposables work especially well with {{gateway_product_name}}. <ref>Because each VM is assigned a unique, internal IP address.</ref> All Disposable traffic is [[Stream_Isolation|stream-isolated]] from the traffic of other VMs running in parallel.

= Warnings =

'''Table:''' ''Disposable Warnings''

{| class="wikitable"
|-
! scope="col"| '''Category'''
! scope="col"| '''Warning'''
|-
! scope="row"| Amnesic Capability
| 
* All changes to a Disposable's file system are discarded upon shutdown. However, Disposables are similar to snapshots insofar as they can leave traces of their activity on storage and in memory. <u>These traces may be later recoverable through data forensics.</u> <br />
* This is further justification for using [[Full_Disk_Encryption|full disk encryption]] on the Qubes host and completely shutting down the system when it is not in use. Laptop users may wish to remove batteries to ensure that power to the RAM is definitely disconnected.  <ref>[[FAQ#Is_there_a_{{project_name}}_Amnesic_Feature_.2F_Live_CD_.2F_Live_DVD.3F_What_about_Forensics.3F|Is there a substitute for {{project name}} lack of an Amnesic feature?]]</ref> <ref>[https://groups.google.com/d/topic/qubes-devel/QwL5PjqPs-4/discussion Disposables do not run entirely in RAM].</ref> <ref>[https://github.com/QubesOS/qubes-issues/issues/904 Disposables: support for in-RAM execution only (for anti-forensics) #904]</ref> <ref>
[https://github.com/QubesOS/qubes-issues/issues/3037 4.0rc1 dirty shutdown causes disposables to remain persistent #3037]
</ref>
|-
! scope="row"| Ephemeral {{gateway_product_name}} ProxyVMs
| Using Disposables for both the {{project name}} Gateway and Workstation in Qubes R4 <u>does not</u> increase security without any corresponding privacy downside, for the following reasons: <ref>[[#Warnings|Disposables are not Amnesic]].</ref> <ref>https://github.com/QubesOS/qubes-issues/issues/904</ref> <ref>[[Tor_Entry_Guards|Tor Entry Guards]].</ref> <br />
* Disposables are not amnesic. In practice this means traces of their activity can be left on storage or in memory, making them vulnerable to forensic operations. <ref>This is another reminder of why full disk encryption should always be used on the host.</ref> <br />
* Using a Disposable for the {{gateway_product_name}} results in [[Tor_Entry_Guards#Configure_Non-Persistent_Entry_Guards|non-persistent entry guards]] to the Tor network; behavior unlike the default configurations for {{project_name}}, Tor, and the Tor Browser Bundle. Mathematically speaking, end-to-end correlation attacks are ''more'' likely to succeed when a user chooses many random entry and exit points in the Tor network, rather than semi-permanent entry guards which are only rotated every few months. <ref>https://gitlab.torproject.org/legacy/trac/-/issues/8240</ref> <ref>The reason is there are both malicious and benign guards in the Tor network. The more often the user "rolls the dice" (changes guards), the greater the chance of striking out.</ref> <br />
* See additional footnote. <ref>The solution to the first problem is only allowing [https://github.com/QubesOS/qubes-issues/issues/904 in-RAM execution of Disposables], but this is not planned for implementation in the short-term. There is no perfect solution to the second problem. That said, there is an actual unstated security-privacy trade-off by running this configuration. Theoretically, an ephemeral {{gateway_product_name}} ProxyVM is only able to be infected for a single session (via the ''/home'', ''/usr/local'' and ''/rw'' directories), since it is discarded upon shutdown. This provides a counterbalance to the increased threat of malicious guards, as [https://tails.boum.org/blueprint/persistent_Tor_state/ {{project name}} becomes more "Tails-like"].</ref>
|-
! scope="row"| Named Disposables: Manual Shutdown
| Unlike Disposables spawned from the {{project name}} default Disposable Template,<ref>See [[#User_Tips|Disposable Shutdown]] for more on this.</ref> named Disposables do <u>not</u> automatically shutdown when the first user process is terminated. If a fresh Named Disposable is needed, users must first shutdown the named Disposable and start a new Disposable instance. <ref>This is because named Disposables are created using a similar method to that which is used to create App Qubes. This means that named Disposables -- in <u>some</u> respects -- exhibit behavior similar to that of an App Qube. For example, behavior such as persistent VM settings across restarts; this includes, but is not limited to settings like --netvm, --autostart and --label to name a few. Before starting a new named Disposable instance, first verify in Qube Manager that the VM is fully shutdown.</ref> Failure to do so could lead to session data from previous activities persisting until the Disposable is properly shutdown.
|-
! scope="row"| Spawning Disposables
| 
* If a Disposable is spawned from within a VM that is not connected to {{gateway_product_name}}, the new Disposable may route its traffic over clearnet. <ref>Disposables are created in one of two ways: 
<code>Open in Disposable</code>. On the command line (domU), run.
{{CodeSelect|code=
qvm-open-in-dvm
}}
</pre><code>Edit/View in Disposable</Code>. From the GUI context-menu (domU). 
<code>File</code> &rarr; <code>Actions</code> &rarr; <code>Edit/View in Disposable</code></pre>  </ref> <br />
* The reason is because Disposables inherit their NetVMs from the calling VM, or the calling VM's <code>dispvm_netvm</code> setting (if different). The <code>dispvm_netvm</code> setting can be configured per VM via: <code>dom0</code> &rarr; <code>Qube Manager</code> &rarr; <code>VM Settings</code> &rarr; <code>Advanced</code> &rarr; <code>NetVM for Disposable</code> <ref>On the command line (dom0), run. {{CodeSelect|code=qvm-prefs -s vmname dispvm_netvm {{gateway_product_name_vm}}}} </ref> <br />
* If the calling VM is connected to {{gateway_product_name}}, this step is not necessary and the Disposable's traffic will be routed over Tor. See: [https://github.com/QubesOS/qubes-issues/issues/1954 {{project name}} default NetVM settings fixes].
|-
! scope="row"| Tor Browser in a Disposable Template
| Do not start Tor Browser in a Disposable Template! For reasons why, see: [[Tor_Browser/Advanced_Users#Running_Tor_Browser_in_Qubes_TemplateVM|Running Tor Browser in Qubes Template]]. Only start Tor Browser in App Qubes or Disposables, see: [[#Start_Tor_Browser_in_a_DisposableVM|Start Tor Browser in a Disposable]].
|-
! scope="row"| Tor Browser Updater in a Disposable Template
| Do not start Tor Browser Updater in a Disposable Template! For reasons why, see: [[Tor_Browser/Advanced_Users#tb-updater_in_Qubes_DVM_Template|tb-updater in Qubes Disposable Template]]. Instead, run [[#Keep Tor Browser Up-to-date|Tor Browser Downloader]] by {{project name}} developers in {{workstation_product_name}} Template (<code>{{whonix-ws}}</code>).
|-
! scope="row"| Tor Browser Version
| 
* When using Disposables, use the [[Tor_Browser#Tor_Browser_Internal_Updater|Tor Browser Internal Updater]] daily to check the browser is up-to-date! <br />
* To learn about recent Tor Browser versions, follow [https://blog.torproject.org The Tor Project blog] or look at raw data for the latest [https://www.torproject.org/projects/torbrowser/RecommendedTBBVersions Recommended TBB Versions]. Tor Browser's version number can also be checked manually: <code>Tor Browser</code> &rarr; <code>Menu</code> &rarr; <code><u>H</u>elp</code> &rarr; <code>About Tor Browser</code>. See [[#Keep Tor Browser Up-to-date|Keep Tor Browser Up-to-date]].
|-
! scope="row"| Verify Disposable Status
|
* Use caution when spawning a Disposable for the first time when it is based on a freshly created Disposable Template. This [https://github.com/QubesOS/qubes-issues/issues/3574 Qubes bug] can lead to the Disposable Template starting instead of the Disposable. <ref>https://forums.whonix.org/t/whonix-14-starting-a-whonix-14-dispvm-actually-starts-the-templatebasedvm-instead/5579</ref> <ref>After creation of a new Disposable Template, all VMs spawned from the Disposable Template should be Disposables by design. This includes the first start and all subsequent starts thereafter. While this is expected behavior, it is safest to confirm the Disposable was correctly spawned on each occasion it is used.</ref> There could be serious consequences if an application like Tor Browser was started in a Disposable Template and used extensively for web browsing. Compromise of the Disposable Template would mean all Disposables spawned from it would be similarly compromised; see [[Tor_Browser/Advanced_Users#Running_Tor_Browser_in_Qubes_TemplateVM|Running Tor Browser in Qubes Template]]. <br />
* To check the freshly started VM is a Disposable, verify it is named <i>[disp xxxx]</i> where <i>xxxx</i> is the number assigned to that Disposable. If the Disposable Template was started instead, then it should be shut down immediately. If the Disposable Template is ever inadvertently used for a dangerous activity like web browsing, then delete it and create a new one.
|-
! scope="row"| {{gateway_product_name}} Linkability
| The Tor Project developer Teor has stated that [[Tor]] caches {{Code|DNS, HS descriptors, pre-emptive circuits, etc.}} <ref>https://lists.torproject.org/pipermail/tor-dev/2016-October/011591.html</ref> which may lead to linkage between App Qubes and Disposables sharing the same {{gateway_product_name}}. The extent to which this is a threat for {{project name}} users has now been documented; see [[Multiple Whonix-Workstation|Multiple {{workstation_product_name}}]].
|}

= Setup =
<u>Note:</u> Examples below reference GUI steps whenever possible, but Qube Manager configuration options in R4 are limited in comparison to earlier releases. <ref>For instance, Dispoable networking can no longer be set from Qube Manager.</ref> Where relevant, additional command line commands are listed in the footnotes.

== Create a {{project name}} Default Disposable Template based on {{workstation_product_name}} ==

# [[Qubes/Update|Update]] [[Qubes|{{q_project_name}}]].
# Open a dom0 terminal: <code>Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>System Tools</code> &rarr; <code>Xfce Terminal</code>
# Create <code>{{whonix-ws-dvm}}</code> Disposable Template.

{{CodeSelect|code=
sudo qubesctl state.sls qvm.whonix-ws-dvm
}}

[[Qubes|{{q_project_name}}]] Dispoables are now ready for use.

== Create a Named {{project name}} Disposable based on {{workstation_product_name}} ==

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Nearly all users can skip steps 1 and 2 below. A specific use case for Disposable naming conventions has not (yet) been identified. 
}}

Do ''not'' include <code>-dvm</code> when naming Disposables! Tor Browser will not be inherited from {{workstation_product_name}} Template (<code>{{whonix-ws}}</code>) if this advice is ignored.

Before creating named Disposables, familiarize yourself with their behavior and read all relevant [[Qubes/DisposableVM#Warnings|warnings]]. Failure to do so could lead to unwanted behavior which occurs without the user's knowledge. 
{{Box|text=
'''1.''' Create a Disposable called <code>anon-whonix-disp</code> based on the <code>{{whonix-ws-dvm}}</code> Template.

In dom0 run.

{{CodeSelect|code=
qvm-create -C DispVM -l red --template {{whonix-ws-dvm}} anon-whonix-disp
}}

'''2.''' Launch Xfce Terminal in the Disposable.

{{CodeSelect|code=
qvm-run -a anon-whonix-disp xfce4-terminal
}}
}}
TODO - Investigate use cases for this procedure:

* A named Disposable might be useful for a larger root/private image.
* It might also be useful for activities such as building Templates in a Disposable.

== Customization ==

=== Disposable Templates ===

Extra caution must be exercised when customizing a Disposable Template. <ref>Qubes documentation: [https://www.qubes-os.org/doc/disposable-customization/ Disposable Customization].</ref> From a privacy perspective, it is ideal to have a Disposable Template that is indistinguishable from any other {{workstation_product_name}}. If changes are made to the Disposable Template, these may link all of the Disposables via a uniquely generated fingerprint should they be compromised independently. Risky changes include, but are not limited to:

* Installation of obscure programs;
* Uncommon configuration settings; or 
* The placement of unique data files. 

Always keep in mind the Disposable will likely be exposed to the greatest Internet threats.

Tor Browser is specifically designed to prevent website fingerprinting or identification based on the user's browser [[Fingerprint|fingerprint]]. It is safest to run Tor Browser in its stock configuration so the fingerprint is [[Data_Collection_Techniques#Fingerprinting_and_Anonymity|less unique]], due to commonality with the larger Tor Browser user pool. Each individual browser change can significantly worsen the fingerprint because of the associated entropy, <ref>33 bits of entropy will identify one individual out of several billion.</ref> so only make alterations if the impacts are known. See also: [[Tor_Browser/Advanced_Users#tb-updater_in_Qubes_DVM_Template|tb-updater in Qubes Disposable Template]].

A decision must be made in advance whether to disable JavaScript by default. There is a [[Tor_Browser#Security_vs_Usability_Trade-off|usability-security trade-off]] to consider: fingerprinting and usability is worsened by disabled JavaScript, but this provides better protection against vulnerabilities. Conversely, enabled JavaScript improves usability and increases the risk of exploitation, but the browser fingerprint is (likely) more common.

=== Tor Browser in Disposable Template ===

For most users, Tor Browser customizations in the Disposable Template or Template are discouraged. Advanced users who wish to customize the Disposable Template despite the risks should follow [[Tor_Browser/Advanced_Users#DisposableVM_Template_Customization|these steps]].

=== Applications other than Torbrowser in Disposable Template ===

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = Customization is completely optional. Only files in <i>/home/user</i> (or more generally, in <i>/rw</i>) can be customized in a Disposable Template.
}}
{{Box|text=
'''1.''' Launch the application in the Disposable Template.

Either open dom0 terminal and run.

{{CodeSelect|code=
qvm-run -a {{whonix-ws-dvm}} <app>
}}

Or use Qube Manager:

<code>dom0</code> &rarr; <code>Qube Manager</code> &rarr; <code>right-click '{{whonix-ws-dvm}}'</code> &rarr; <code>Run command in qube</code> &rarr; <code>type name of the <app></code>

'''2.''' Customize application settings.

Customize the application as per normal procedures.

'''3.''' Exit the application.

If required, save application-specific settings, then exit the application so settings are stored on the disk.

'''4.''' Shutdown the Disposable Template.

Either use a dom0 terminal.

{{CodeSelect|code=
qvm-shutdown {{whonix-ws-dvm}}
}}

Or use Qube Manager:

<code>dom0</code> &rarr; <code>Qube Manager</code> &rarr; <code>right-click '{{whonix-ws-dvm}}'</code> &rarr; <code>left-click 'Shutdown qube'</code>

The changes will be available when the Disposable is restarted.
}}

== Delete a Disposable Template ==

If a Disposable Template has been customized and it is necessary to revert these changes, a Disposable Template can be deleted the same way as any other VM.

Note the Disposable Template cannot be deleted while it is the default Disposable of another VM, otherwise an error message appears. In that case, follow tips found [https://github.com/QubesOS/qubes-issues/issues/3993 here] on how to manually change the default Disposable of VMs to another setting, then repeat the procedure.

<code>dom0</code> &rarr; <code>Qube Manager</code> &rarr; <code>right-click '{{whonix-ws-dvm}}'</code> &rarr; <code>left-click 'Delete qube'</code>
<ref>Or on the command line (dom0), run. {{CodeSelect|code=qvm-remove <vmname>}}</ref>

== Keep Tor Browser Up-to-date ==
To obtain the latest Tor Browser, the simplest method is to use {{project name}} built-in Tor Browser downloader functionality. Simply update using [[Tor_Browser#Tor_Browser_Downloader_by_{{project_name}}|Tor Browser Downloader by {{project name}} (tb-updater)]] in {{workstation_product_name}} Template (<code>{{whonix-ws}}</code>) when performing your usual maintenance [[Qubes/Update|updating]]:

<code>Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>{{whonix-ws}}</code> &rarr; <code>Xfce Terminal</code> <ref>
<code>dom0</code> &rarr; <code>Qube Manager</code> &rarr; <code>right-click on '{{whonix-ws}}'</code> &rarr; <code>click 'Run command in qube'</code> &rarr; <code>type 'xfce4-terminal'</code>
</ref> <ref>
On the command line (dom0), run.
{{CodeSelect|code=
qvm-run -a {{whonix-ws}} xfce4-terminal
}}</ref>

{{Update}}

{{CodeSelect|code=
sudo apt update
}}

Upgrade.

{{CodeSelect|code=
sudo apt full-upgrade
}}

If Tor Browser is not upgraded, use {{Code2|update-torbrowser}} to download a new copy.

Launch Tor Browser Downloader by {{project name}} and follow the instructions. <ref>
{{CodeSelect|code=
update-torbrowser
}}
</ref>

{{CodeSelect|code=
update-torbrowser --input gui
}}

Shutdown the Disposable Template: <ref>
On the command line (dom0), run.
{{CodeSelect|code=
qvm-shutdown {{whonix-ws-dvm}}
}}
or<br />
Disposable Template command line (domU), run. {{CodeSelect|code=
sudo poweroff
}}
</ref>

<code>dom0</code> &rarr; <code>Qube Manager</code> &rarr; <code>right-click on '{{whonix-ws-dvm}}'</code> &rarr; <code>click 'Shutdown qube'</code>

== Update a Disposable Template ==
Changes to the underlying Template (<code>{{whonix-ws}}</code>) are detected automatically and the Disposable Template is updated without user intervention. That means package updates that are applied to <code>{{whonix-ws}}</code> are also applied to the <code>{{whonix-ws-dvm}}</code>.

= Usage =

Disposables are well-suited for risky and largely independent activities, like web browsing or opening untrusted files. In contrast, App Qubes might be better suited for activities necessitating file persistence, like email clients with local email storage.

With either kind of VM, Qubes' VM integration tools like [https://www.qubes-os.org/doc/copying-files/ secure file copy] and [https://www.qubes-os.org/doc/copy-paste secure clipboard] ensure that clean, trusted files and text can be easily and safely transferred to trusted VMs (if necessary).

== User Tips ==

'''Table:''' ''Disposable User Tips''

{| class="wikitable"
|-
! scope="col"| '''Category'''
! scope="col"| '''Recommendation'''
|-
! scope="row"| Data Storage 
| 
* In Qubes, it is unrecommended to store any valuable data in an untrusted VM. This perspective is reinforced by the Tor Browser design which similarly does not remember bookmarks or credentials. Best practice is to store sensitive data in an offline vault VM; for instance, when accessing passwords with a password manager. <br />
* @rustybird has announced a new "split-tor-browser" <ref>[https://github.com/rustybird/qubes-split-browser Github: Split Browser]</ref> package that can retrieve urls and credentials from a trusted VM for use in a Disposable's browser. This package is yet to be tested or endorsed by {{project_name}}, but it looks promising.
|-
! scope="row"| Disposable Shutdown
| A Disposable automatically shuts down when the <u>first</u> user-launched process is terminated. For example, if a new Disposable is created by launching Tor Browser and a user simultaneously starts typing in an editor later on, all this work will be lost after Tor Browser is closed. To avoid this, first launch a terminal in the Disposable and then launch additional applications from the terminal. This way the Disposable is only destroyed after exiting the terminal.
|-
! scope="row"| Offline Disposables
| 
* Use utmost caution if deciding to re-establish network connectivity for off-line Disposables! No mechanism is currently available to prevent connections to a clearnet NetVM. <br />
* Non-networked Disposables are useful for opening untrusted files that potentially might try to use the network maliciously. Like all Qubes VMs, the NetVM for a Disposable can be changed dynamically while the VM is still running. Simply set the NetVM to "none" using Qube Manager or the command line interface. <ref>On the command line (dom0), run.{{CodeSelect|code=qvm-prefs disp<1 {{!}} 2 {{!}} ...> netvm none}}</ref>
|-
! scope="row"| Shortcuts
| 
* Disposables can be created directly by launching programs from the application menu using shortcuts; [[#Add_a_Desktop_Shortcut|see below for instructions]]. <br />
* Disposables can also be spawned by using context-menus or the command line interface in other App Qubes. Refer to the [https://www.qubes-os.org/doc/how-to-use-disposables/ Qubes Disposable documentation] for instructions on different methods. <br />
* Note the [[#Warnings|relevant warning]] concerning shortcuts in this chapter ("Spawning Disposables").
|-
! scope="row"| Spawning Disposables from other App Qubes
| 
* There are several ways to spawn Disposables from App Qubes. In fact, in addition to the dom0 terminal and application menu, users can also spawn Disposables from the App Qube terminal emulator or context-menu. <ref>See: [https://www.qubes-os.org/doc/how-to-use-disposables/ Qubes Disposables].</ref> These tools provide a safe and convenient way to open files and email attachments that could contain malicious code. There is also an option to convert potentially dangerous [https://en.wikipedia.org/wiki/Portable_Document_Format PDFs] into trusted PDFs and open it in a Disposable. <ref>See Micahflee's blog on [https://micahflee.com/2016/07/how-qubes-makes-handling-pdfs-way-safer/ How Qubes makes handling pdfs way safer].</ref> <br />
* The most commonly used methods to spawn Disposables from App Qubes are listed below. It is recommended to read the [[#Warnings|"Spawning Disposables" warning]] detailing Disposable network settings before proceeding: <br />
# Context-menu <br />
# Dolphin file manager - open file in Disposable: <code>File</code> &rarr; <code>Actions</code> &rarr; <code>Edit/View in Disposable</code> <br />
# Nautilus file manager - open file in Disposable: <code>File</code> &rarr; <code>Edit/View in Disposable</code> <br />
# Nautilus file manager- sanitize PDF: <code>PDF</code> &rarr; <code>Convert to Trusted PDF</code> <br />
# [[Encrypted_Email_with_Thunderbird|Thunderbird]] E-[[E-Mail|mail]] client - open email attachment in Disposable: <code>Email</code> &rarr; <code>Attachments</code> &rarr; <code>Open in Disposable</code> <br />
# Command line interface - open file in Disposable:{{CodeSelect|code=
qvm-open-in-dvm <file_name>
}}
|}

== Add a Desktop Shortcut ==

# From the Qubes application menu, drag and drop a menu item onto the desktop.
# Double-click the newly created launcher to start it.
# At first start, it is safe to click "Mark Executable".

== Add an XFCE4 Panel Shortcut ==

From the Qubes application menu, drag and drop the menu item onto the panel.

== Start Tor Browser in a Disposable ==

Tor Browser can be started via the GUI or on the command line. 

{{Box|text=
<u>If you are using a GUI</u>, complete the following steps.

<code>Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>Disposable: {{whonix-ws-dvm}}</code> &rarr; <code>Tor Browser (AnonDist)</code>

<u>If you are using a terminal</u>, complete the following steps.

{{CodeSelect|code=
qvm-run --dispvm={{whonix-ws-dvm}} torbrowser
}}
}}

After launch, ''always'' first [[#Warnings|check the Tor Browser version]]!

'''Figure:''' ''Tor Browser in {{q_project_name}} Disposable'' 

[[Image:QubesDispVM.png|border]]

== Start Terminal Emulator in a Disposable ==

Terminal emulator <code>xfce4-terminal</code> can be started via the GUI or on the command line.

{{Box|text=
<u>If you are using a GUI</u>, complete the following steps.

<code>Qubes App Launcher (blue/grey "Q")</code> &rarr; <code>Disposable: {{whonix-ws-dvm}}</code> &rarr; <code>Xfce Terminal</code>

<u>If you are using a terminal</u>, complete the following steps.

{{CodeSelect|code=
qvm-run --dispvm={{whonix-ws-dvm}} xfce4-terminal
}}
}}

= TODO =
* TODO document how to use multiple Disposable Templates - https://forums.whonix.org/t/is-anyone-interested-in-using-multiple-dvm-templates-based-on-whonix-ws-dvm/5757/5

= Footnotes =
{{reflist|close=1}}

{{Footer}}
[[Category:Documentation]]
