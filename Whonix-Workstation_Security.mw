{{Header}}
{{#seo:
|description=Whonix-Workstation Security
|og:image=https://www.whonix.org/w/images/9/98/Whonixworkstation3423423.png
}}

= Whonix-Workstation Security Introduction =

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = '''Tip:''' Whonix implementation examples are based on Debian. To use a customized Whonix-Workstation VM based on other operating systems, see [[Other_Operating_Systems|here]]. For technical design notes, see [[Operating_System|here]].
}}


If the Whonix-Workstation VM is ever compromised, the attacker has access to the data it contains, including all credentials, browser data and passwords. The IP address is never leaked, since this requires a compromise of the Whonix-Gateway VM, but this information may still result in identity disclosure.

In [[Non-Qubes-Whonix|Non-Qubes-Whonix]]:

The best practice is to keep a clean master copy of the Whonix-Workstation VM, make snapshots / clones of the master, and then only use these for internet activity. The user can then 'rollback' (use a new clean clone / snapshot VM) after risky activity, or if they suspect the integrity of the system has been compromised. See the [[Whonix-Workstation_Security#VM_Snapshots|multiple VM snapshots recommendation]] below.

In [[Qubes-Whonix|Qubes-Whonix]]:

The best practice is to use [[Qubes/Disposable_VM|DisposableVMs]] for all your internet activity. Alternatively, periodically delete your Whonix-Workstation AppVM(s) and create fresh instances from the Whonix-Workstation TemplateVM.

{{Anchor|Recommendation to use multiple VM Snapshots}}

= Adding a Host-Only Networking Adapter to Whonix-Workstation / SSH into Whonix-Workstation =

If accessing the Whonix-Workstation via SSH, some users may consider something dangerous - adding a second network adapter with [http://www.virtualbox.org/manual/ch06.html#network_hostonly host-only networking].

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' Never add another network adapter in this manner! It is also potentially dangerous if any other VMs are running except the Whonix-Workstation. The reason is that it will expose the MAC address of the host to the Whonix-Workstation.
}}


The VMware host-only warning regarding routing and connection sharing may equally apply to Whonix: <ref>https://www.vmware.com/support/ws4/doc/network_host_ws.html</ref>

<blockquote>If you install the proper routing or proxy software on your host computer, you can establish a connection between the host virtual Ethernet adapter and a physical network adapter on the host computer. This allows you, for example, to connect the virtual machine to a Token Ring or other non-Ethernet network.

On a Windows 2000, Windows XP or Windows Server 2003 host computer, you can use host-only networking in combination with the Internet connection sharing feature in Windows to allow a virtual machine to use the host's dial-up networking adapter or other connection to the Internet. See your Windows documentation for details on configuring Internet connection sharing.</blockquote>

If it is necessary to SSH or VNC into the Whonix-Workstation, then:

* It is safest to do this from another Whonix-Workstation. When using VMs, they can see each other if they are within the same virtual LAN. When using [[Physical Isolation]], VMs can see each other if they are within the same LAN.
* Alternatively run the services using [[Onion Services]] and access them through another Whonix-Workstation.
* Another alternative is to run the services using [[Onion Services]] and access them from the host using ordinary torification methods.
* A final method is to SSH from the host into Whonix-Gateway (see [[File Transfer]] for instructions) and then SSH from there [[File_Transfer#SSH_into_Whonix-Workstation|into the Whonix-Workstation]].


Note: The last two methods are <i>not</i> recommended. They risk weakening isolation between the host and Whonix-Workstation.

= Adding a NAT Adapter to Whonix-Workstation / Updates without Tor =

Anonymity is compromised if another NAT network adapter is added to the Whonix-Workstation. If this advice is disregarded, then a user's identity is leaked if/when infection occurs. Therefore, it is strongly recommended to always update over the Tor network. Although Tor updating is slow by comparison, it prevents inadvertent leaks.

= AppArmor =

Strongly consider enabling the [[AppArmor|Whonix AppArmor profiles]] which are available for various applications that are run in either the Whonix-Gateway or Whonix-Workstation, such as Tor, Tor Browser, Thunderbird and others. The profiles are easily applied and provide a considerable security benefit.

= Firejail =

== Introduction ==

According to the Firejail project page: <ref>https://firejail.wordpress.com/</ref>

<blockquote>Firejail is a SUID program that reduces the risk of security breaches by restricting the running environment of untrusted applications using Linux namespaces and seccomp-bpf. It allows a process and all its descendants to have their own private view of the globally shared kernel resources, such as the network stack, process table, mount table.

Written in C with virtually no dependencies, the software runs on any Linux computer with a 3.x kernel version or newer. The sandbox is lightweight, the overhead is low. There are no complicated configuration files to edit, no socket connections open, no daemons running in the background. All security features are implemented directly in Linux kernel and available on any Linux computer. The program is released under GPL v2 license.</blockquote>

Firejail has built-in profiles for a large number of popular Linux programs, including many which are used in Whonix. A small sample of the 100+ profiles includes: Chromium, CryptoCat, Dolphin, Evince, Firefox, HexChat, LibreOffice, Okular, Thunderbird, Transmission, VirtualBox, VLC and wget. <ref>https://github.com/netblue30/firejail/tree/master/etc</ref>

== Install Firejail ==

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = '''Tip:''' Firejail works in both [[Qubes-Whonix]] and [[Non-Qubes-Whonix]]. Before installing Firejail, considering cloning the Whonix-Workstation TemplateVM, as a host of dependencies will be installed.
}}


Boot the Whonix-Workstation (<code>whonix-ws</code>) TemplateVM and [[Operating_System_Software_and_Updates#Updates|update]] the package lists.

{{CodeSelect|code=
sudo apt-get update
}}

Install Firejail.

{{CodeSelect|code=
sudo apt-get install firejail
}}

== Launch Firejailed Applications ==

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = In [[Qubes-Whonix]], create a new Whonix-Workstation AppVM based on any modified, cloned template before running any applications. Never launch applications in the Whonix-Workstation TemplateVM.
}}

To run sandboxed applications, simply prefix the program command with "firejail" in a terminal. For example: 

{{CodeSelect|code=
firejail evince
}}
{{CodeSelect|code=
firejail vlc
}}
{{CodeSelect|code=
firejail torbrowser
}}

Running Tor Browser in a Firejail sandbox is recommended, because it is an untrusted application with a huge attack surface; it is frequently and successfully attacked in the wild. <ref>Firejail has been tested to work in Whonix with both the latest stable and alpha versions of Tor Browser.</ref>

To confirm an application is sandboxed, open a terminal and run.

    firejail --tree

The output should show the application (Tor Browser in this example) is running in a Firejail container.

    XXXX:user:firejail torbrowser
    XXXX:user:/bin/bash /usr/bin/torbrowser
    XXXX:user:bash /home/user/.tb/tor-browser/Browser/start-tor-browser --all
    XXXX:user:./firefox --class Tor Browser -profile TorBrowser/Data/Browse

=== Additional Firejail Options ===

The full list of Firejail command line options can be found in the [https://firejail.wordpress.com/features-3/man-firejail/ official Firejail documentation]. Alternatively, run the following terminal command in Whonix-Workstation (<code>anon-whonix</code>).

{{CodeSelect|code=
man firejail
}}

Firejail has a host of additional security features. For instance, VLC could be run while blocking access to the Internet as follows.

{{CodeSelect|code=
firejail --net=none vlc
}}

Similarly, the following commands would run Firefox or Tor Browser with seccomp restrictions and debug output. <ref>Preliminary tests of other security features reveals they are not yet functional in Whonix, for instance {{code|--apparmor}}, {{code|--private}}, and {{code|--overlay-tmpfs}}. If the user does not specify a path to a specific profile when running Firejail, it will search for any relevant profile automatically. If a specific profile is not located, a default profile will be used.</ref>

{{CodeSelect|code=
firejail --debug --seccomp firefox
}}
{{CodeSelect|code=
firejail --debug --seccomp torbrowser
}}

For a further technical discussion of Firejail containment options, see [https://forums.whonix.org/t/firejail-seccomp-more-options-for-program-containment here]. To build a customized Firejail profile for Tor Browser or other applications, follow [https://firejail.wordpress.com/documentation-2/building-custom-profiles/ these steps].

=== Automatically Prepend Tor Browser with Firejail ===

Starting with Whonix 14, users can automatically prepend the Tor Browser binary with Firejail by editing ''etc/torbrowser.d/50_user.conf'' and adding the following text. <ref>https://github.com/Whonix/tb-starter/commit/ca3e4cbaedaaa80a6e92145badf0fcdb3c5b22db</ref>

{{CodeSelect|code=
tb_starter_bin_pre="firejail --seccomp"
}}

== Firejail Firefox-ESR in Qubes Debian AppVM ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning:''' Do not use Firefox-ESR in a Whonix template! It is easily fingerprinted and is less secure than Tor Browser.
}}


It is recommended to clone the Debian TemplateVM before proceeding, as a number of dependencies are installed:

* Complete the steps to [[Whonix-Workstation_Security#Install_Firejail|install Firejail]].
* In a Debian AppVM, [[Whonix-Workstation_Security#Launch_Firejailed_Applications|launch a firejailed Firefox-ESR application]].
* Confirm Firefox-ESR is sandboxed:
** {{CodeSelect|code=
firejail --tree
}}

The output should confirm Firefox-ESR is now running in a firejail container.

    XXXX:user:firejail /usr/lib/firefox-esr/firefox-esr

= VM Snapshots =

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = '''Tip:''' The following advice refers to [[Non-Qubes-Whonix|Non-Qubes-Whonix]] users.
}}


Apart from offering protection against hardware serial leaks, VMs have another major advantage: the ability to quickly discard and restore a system. This process is easy in [[Qubes-Whonix|Qubes-Whonix]], since every template-based AppVM used for activities is based on a TemplateVM which is only used for software installation and updates, and nothing else. AppVMs are easily discarded and recreated in a clean state whenever the user requires it. <ref>https://www.qubes-os.org/doc/templates/</ref> In [[Non-Qubes-Whonix|Non-Qubes-Whonix]], greater precaution is required. 

It is ''strongly recommended'' the user keep a master copy of the Whonix-Workstation VM which is:

* Kept updated.
* Does not have any additional software installed.
* Does not have any default settings changed.
* Is not used directly for any activities.


Regular "clean" snapshots or clones of the master VM should be made for activities that require anonymity. Particular care must be taken that clean and unclean states are never mixed up!

The correct method for the safest operation of Non-Qubes-Whonix is as follows:
# Import both VMs into the virtualizer.
# Start both the Whonix-Gateway and Whonix-Workstation VMs.
# [[Operating_System_Software_and_Updates#Updates|Securely update both VMs]].
# After the updates have finished, shut down both VMs. '''Do not''' browse anywhere or open any unauthenticated communication channels to the internet.
# Create snapshots of both VMs in their clean state.
# Only use the snapshots for browsing or initiating any external connections.


Note: The only exception made is running apt, since it has a guaranteed way to securely download and verify packages.

<div class="toccolours mw-collapsible mw-collapsed" style="width:800px">
<u>For important [[VirtualBox]] information</u>, please press on Expand on the right.
<div class="mw-collapsible-content">
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text       = '''Warning''': VirtualBox's VM Snapshot feature is recommended against because [https://www.whonix.org/old-forum/index.php/topic,97.msg1586.html#msg1586 data loss] has been experienced using it. Instead, use clones or other methods outlined in the "Reliable Alternative To VirtualBox VM Snapshots" section below.
}}


{{Anchor|Reliable Alternative To Virtualbox VM Snapshots}}
{{Anchor|Reliable Alternative To VirtualBox VM Snapshots}}

Although VirtualBox's snapshot feature is useful when making interim snapshots of live running systems, it is not recommended as a reliable method for backing up VMs. The user risks possible data loss, primarily in the form of corrupted virtual hard drives (VHDs). Reverting can be very painful, or even impossible, following VHD corruption. Alternative methods are copy / paste, cloning, and exporting / importing. These methods reliably provide VM backups, but disk resources are used inefficiently and manual versioning is required.

'''SubVersioN (SVN) Backup Tool'''

[http://en.wikipedia.org/wiki/Subversion_(software) SubVersioN] is considered the best alternative tool for backing up VM operating environments. It is similar to VirtualBox's snapshot feature, but is much more reliable and efficient. Prior to using it, familiarize yourself with the tool's [https://subversion.apache.org/docs/ documentation] and design. SVN [http://en.wikipedia.org/wiki/Comparison_of_Subversion_clients clients] are available for various platforms.

SVN is a tool typically used by software developers to conduct: collaborative configuration management, version control, and backup / restore of file sets under development by many people over extended period of time. Basic functionality of versioning, backing up and restoring changes to sets of files is available. However, SVN is considered superior to CVS, GIT and other options for VM backups, because it does not have any file size limitations by design. Regardless of how big or small the files are, SVN handles them reliably and efficiently. See the following section: [http://svn.apache.org/repos/asf/subversion/trunk/doc/user/svn-best-practices.html "Be patient with large files"]. 

When versioning file sets, SVN employs [http://en.wikipedia.org/wiki/Atomic_commit "atomic commits"]. By way of comparison, [http://en.wikipedia.org/wiki/Concurrent_Versions_System Concurrent Versions System (CVS)] does not employ [http://en.wikipedia.org/wiki/Atomic_commit atomic commits]. Manual backup procedures are inherently not [http://en.wikipedia.org/wiki/Atomic_commit atomic functions]. Additionally, SVN also handles [http://en.wikipedia.org/wiki/Sparse_file sparse (dynamic)] virtual hard disk files, an option VirtualBox offers when [http://www.virtualbox.org/manual/ch01.html#gui-createvm instantiating new virtual disk drives].

Similar to VirtualBox's snapshot capability, SVN also takes into consideration differences in files - both textual and binary - from version to version. For instance, if a 50 GB virtual hard drive grows by an additional 60 GB over the course of a week, SVN's repository will not necessarily increase by an additional 60 GB when a new back up is performed. The outcome depends on how much of the original file changed since the previous backup. SVN will analyze differences between newer files against older files in its repository and only save the differences. Therefore, the repository may only grow as little as 10 GB+, making more efficient use of system resources.

VirtualBox's snapshot feature provides [http://forums.virtualbox.org/viewtopic.php?f=3&p=123806 'branching'] capability. This means one can revert to an earlier version of your VM and start a new branch / version of your VM from where you left off earlier. SVN also provides similar [http://svnbook.red-bean.com/en/1.7/svn.branchmerge.html branching] capability. 

'''Note:''' For backups and restores, configuration management tools like SVN require significant additional disk space over and above the size of the file. For instance, a 50 GB file typically requires approximately 150 GB of disk space to manage that instance of the VM because you require: 50 GB for the original source file, 50 GB in SVN's database [http://en.wikipedia.org/wiki/Apache_Subversion#Repository_types repository], and another 50 GB for SVN's [http://svnbook.red-bean.com/en/1.6/svn.tour.initial.html local workspace] working folder ('./.svn'). Although this overhead may seem inefficient, it is not when you consider SVN's functionality and reliability in comparison to manual backup methods outlined earlier.

'''Complete Operating Environment Backups'''

In addition to backing up the Whonix-Gateway and Whonix-Workstation(s) virtual hard drive files, it is also possible to back up the whole of the VirtualBox application and Whonix environment for a completely restoreable solution.  Cloning is another possible option, but that requires more advanced technical skills.

Typically, the VirtualBox application installed is the one provided by [http://www.virtualbox.org Virtualbox.org]. However, a [http://en.wikipedia.org/wiki/Portable_application portable application] version of VirtualBox is available via a tool provided by [http://www.vbox.me VBox.me]. This application converts VirtualBox's 'install application' into a 'portable application', thereby providing the option to port VMs to other computers via external USB hard drives and/or sticks. By instantiating VMs under portable VirtualBox's '~/data/.VirtualBox/Machines' folder, it is possible to backup and restore the complete operating environment of not only Whonix, but also specific instances of VirtualBox and SVN for complete portability. This method captures the entire Whonix operating environment under one parent folder, rather than distributing it across various user and system folders:
<br /><br />
[[File:2014-05-11 09_42_19.png|400px]]
<br /><br />
[[File:2014-05-11 09_46_43.png|400px]]
<br /><br />
[[File:2014-05-11 09_54_39.png|400px]]
</div>
</div>

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
