{{Header}}
{{#seo:
|description=A reasonably accurate host clock is required for many general security properties. An inaccurate clock can lead to broken internet connectivity and time related security issues.
|image=https://www.{{project_clearnet}}/w/images/e/e7/TineSynchronization2134234.jpg
}}
[[image:TineSynchronization2134234.jpg|thumb]]

= Introduction =
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = '''Warning:''' The system clock inside {{project name}} is set to UTC to prevent against time zone leaks. This means it may be a few hours ahead or behind the user's host system clock. <u>It is strongly recommended not to change this setting.</u>
}}

= Warnings =
A reasonably accurate host clock is crucially important. An inaccurate clock can lead to:

* '''A)''' Broken internet connectivity, and
* '''B)''' [[Time Attacks]].

Therefore, at all times it is recommended to have a host clock with accuracy of up to Â± 30 minutes. Clocks that are days, weeks, months or even years slow or fast can lead to many issues such as connectivity problems with Tor, inability to download operating system upgrades and inaccessible websites. <ref>
Due to invalid (not yet or no longer valid) TLS certificates.
</ref>

Follow the platform-specific recommendations below to avoid Tor connectivity problems and to limit possible adverse anonymity impacts.

= All Platforms =
To protect against time zone leaks, the system clock inside {{project name}} is set to UTC. This means it may be a few hours before or ahead of your host system clock. <u>Do not change this setting!</u>

If the host clock (in UTC! <ref>
To view the system time in UTC on Linux platforms, run.
{{CodeSelect|code=
date --utc
}}
</ref> <ref>
TODO: [https://phabricator.whonix.org/T71 Show desktop clock in local time; keep system in UTC]</ref>) is more than 1 hour in the past or more than 3 hours in the future, Tor cannot connect. In this case, manually fix the host clock by right-clicking on it, and also check for an empty battery. Then, power off and power on the {{gateway_product_name}} (<code>{{gateway_product_name_vm}}</code>) and Tor should be able to reconnect.

= Easy instructions =
<u>{{non_q_project_name_short}}:</u> It is strongly discouraged to use the pause / suspend / save / hibernate features.

<u>{{q_project_name}}:</u> It is strongly discouraged to use the pause feature of Qube Manager, but it is is safe to use the suspend or hibernate feature of dom0.

<div class="toccolours mw-collapsible mw-collapsed">

= Advanced instructions =
If you are interested in using the pause / suspend / save / hibernate features, please click the expand button for further instructions.
<div class="mw-collapsible-content">
'''<u>{{non_q_project_name_short}}</u>''':

* <u>{{gateway_product_name}}</u>: It is strongly discouraged to pause / suspend / save / hibernate the {{gateway_product_name}}, because it is difficult to restore the clock after resume. <ref name=gateway_pause>
This is because the clock will be incorrect after system resume. A correct clock is important for anonymity (see [[Dev/TimeSync]] to learn more).

When a user suspends or saves the VM state, the clock will stop and continue after resuming, leading to a time that lags behind the correct value. This can cause later Tor connectivity problems or introduce possible adverse anonymity impacts.

The {{gateway_product_name}} state should not be suspended or saved. It is far better to  power it off when it is no longer needed.

If this advice is ignored, Tor can become confused if the time is more than 1 hour in the past or more than 3 hours in the future. When this happens, Tor will only reconnect to the Tor network if the clock is manually fixed or powered off and on again.
</ref> If this advice is ignored, it is easiest to shutdown and restart {{gateway_product_name}}.
* <u>{{workstation_product_name}}</u>: It is strongly discouraged to pause / suspend / save / hibernate the {{workstation_product_name}}. If this advice is ignored, [[#Restart sdwdate|restart sdwdate]] after resume. <ref>
Similarly, if users suspend or save the {{workstation_product_name}} state, the clock will again lag behind the correct value. This can be manually fixed by running: <code>Start Menu</code> &rarr; <code>Applications</code> &rarr; <code>System</code> &rarr; <code>Time Synchronization Monitor (sdwdate-gui)</code> &rarr; <code>restart sdwdate</code>.
</ref>

'''<u>{{q_project_name}}</u>''':

* <u>{{gateway_product_name}}</u>: It is strongly discouraged to pause {{gateway_product_name}} (<code>{{gateway_product_name_vm}}</code>) using the pause feature of Qube Manager, because it is difficult to restore the clock after resume. <ref name=gateway_pause /> If this advice is ignored, it is easiest to shutdown and restart {{gateway_product_name}}.
* <u>{{workstation_product_name}}</u>: It is strongly discouraged to pause {{workstation_product_name}} (<code>anon-whonix</code>) using the pause feature of Qube Manager. If this advice is ignored, [[#Restart sdwdate|restart sdwdate]] after resume. <ref>
Qubes does not dispatch the <code>/etc/qubes/suspend-post.d</code> / <code>/etc/qubes/suspend-pre.d</code> hooks upon pause / resume using Qube Manager.
</ref>
* <u>dom0 suspend / hibernate</u>: It is safe to use the suspend or hibernate feature of dom0 and a manual restart of sdwdate is unnecessary. <ref>
https://github.com/QubesOS/qubes-issues/issues/1764
</ref>
</div>
</div>

= Restart sdwdate =
To restart <code>sdwdate</code>.

<code>Start Menu</code> &rarr; <code>Applications</code> &rarr; <code>System</code> &rarr; <code>Time Synchronization Monitor (sdwdate-gui)</code> &rarr; <code>restart sdwdate</code>

Or in a terminal. <ref>
Simplified in next upgrade.

{{CodeSelect|code=
sudo sdwdate-clock-jump
}}
</ref>

{{CodeSelect|code=
sudo /usr/lib/sdwdate/restart_fresh
}}

= Manually Set Clock Time and Date =
Usually not required.

In case [[Sdwdate|sdwdate]] fails to properly randomize the system clock, it is possible to manually set a random value. 

The first step should be completed on the host to ensure the host clock is set to the correct time.
{{Box|text=
'''1.''' On the host ([[{{q project name short}}|{{q project name}}]]: <code>dom0</code>), run the following command to report the time in UTC.

{{CodeSelect|code=
date -u
}}

The output should be similar to the following. <ref>
{{CodeSelect|code=
Mon Apr 22 04:30:44 UTC 2019
}}
</ref>

{{CodeSelect|code=
{{CURRENTMONTHABBREV}} {{CURRENTDAY2}} {{CURRENTTIME}}:44 UTC {{CURRENTYEAR}} 
}}

'''2.''' Set the correct time in {{gateway_product_name}} (<code>{{gateway_product_name_vm}}</code>). 

Run the following command with the correct date and time parameters. <ref>
A non-zero exit codes signifies an error, while <code>0</code> means it succeeded.
</ref> <ref>
Also see: 

{{CodeSelect|code=
man clock-random-manual-gui
}}

{{CodeSelect|code=
man clock-random-manual-cli
}}
</ref>

* <code>clock-random-manual-gui</code>: a randomized clock setting (in UTC) is entered via a GUI.
* <code>clock-random-manual-cli</code>: a randomized clock setting (in UTC) is entered on the command line. For example <ref>
{{CodeSelect|code=
echo "Sat Oct 26 07:18:25 UTC 2019" {{!}} /usr/bin/clock-random-manual-cli
}}
</ref>:
{{CodeSelect|code=
echo "{{CURRENTMONTHABBREV}} {{CURRENTDAY2}} {{CURRENTTIME}}:44 UTC {{CURRENTYEAR}}" {{!}} sudo clock-random-manual-cli
}}

'''3.''' Restart sdwdate.

{{CodeSelect|code=
sudo service sdwdate restart
}}

'''4.''' If Tor is still not functional, try restarting Tor.

{{CodeSelect|code=
sudo service tor restart
}}

Tor should work once correct clock values are set, but that can be manually tested with [[whonixcheck]].
}}

= Block Networking until sdwdate Finishes =

[[Sdwdate|sdwdate]] is a Tor-friendly replacement for rdate and ntpdate that sets the system's clock by communicating via end-to-end encrypted TCP with Tor onion webservers. Since timekeeping is crucial for security and anonymity, blocking network access until sdwdate succeeds is sensible. <ref>https://forums.whonix.org/t/testers-wanted-blocking-networking-until-sdwdate-finished-status-of-sdwdate-gui/5372</ref> 

[[sdwdate]] is functional on both {{gateway_product_name}} and {{workstation_product_name}}, but in some cases it is possible for the time to leak before it is changed. Potential leak channels include time or other servers, daemons, and client programs such as Tor Browser which are used before sdwdate successfully finishes. <ref>
https://phabricator.whonix.org/T533
</ref> In this case, the user is only left with the protections afforded by [[Boot Clock Randomization]]. <ref>
[[Dev/TimeSync#Block_Networking_until_sdwdate_Finishes]]
</ref>

Inside {{gateway_product_name}} and {{workstation_product_name}}.

([[Qubes|{{q_project_name}}]]: It is the easiest to apply changes in the {{gateway_product_name}} and {{workstation_product_name}} TemplateVMs since these settings will be inherited by all TemplateBasedVMs. Alternatively, apply this setting in TemplateBasedVMs, see footnote. <ref>
{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = [[{{q project name short}}|{{q project name}}]] only.
}}

The procedure can optionally be completed in select TemplateBasedVMs (AppVMs) like <code>{{gateway_product_name_vm}}</code> and <code>anon-whonix</code>.
{{Box|text=
'''1.''' Edit the Whonix firewall configuration.

In the chosen {{project name}} TemplateBasedVMs, run.

{{Open with root rights|filename=
/usr/local/etc/whonix_firewall.d/*.conf
}}

'''2.''' Copy and paste the following text.

{{CodeSelect|code=
firewall_mode=
}}

'''3.''' Save the file and reboot.
}}
</ref>)

{{Box|text=
'''1.''' Edit the Whonix firewall configuration.

In ''both'' {{gateway_product_name}} (<code>{{whonix-gw}}</code>) and {{workstation_product_name}} (<code>{{whonix-ws}}</code>), run.

{{Open with root rights|filename=
/etc/whonix_firewall.d/50_user.conf
}}

'''2.''' Copy and paste the following text.

{{CodeSelect|code=
firewall_mode=
}}

'''3.''' Save the file and reboot.

'''4.''' Have the changes take effect.

* <u>{{non_q_project_name}}</u>: restart {{gateway_product_name}} and {{workstation_product_name}}.
* <u>{{q_project_name}}</u>: shutdown the {{gateway_product_name}} (<code>{{whonix-gw}}</code>) and {{workstation_product_name}} (<code>{{whonix-ws}}</code>) TemplateVMs and restart the TemplateBasedVMs (<code>{{gateway_product_name_vm}}</code> and <code>anon-whonix</code>).
}}

= NTP =
== Disabling NTP ==
If ISP tampering with NTP is ever confirmed, users are advised to [[Time_Attacks#GNU.2FLinux_Host|disable NTP]] and manually update the host clock out-of-band. For example, a watch or [https://en.wikipedia.org/wiki/Atomic_clock atomic clock] can be used for this purpose. If the tampering is targeted and not a widescale attack, then the user already has much bigger problems to worry about than NTP; see [[Warning#Confirmation_Attacks|Confirmation Attacks]].

If following the advice above -- disabling NTP on the host and adjusting the clock out-of-band -- be aware that clearnet traffic might be easier to fingerprint. <ref>See the [[Fingerprint]] page to discover what fingerprinting means in this case.</ref> The reason is that it introduces a device issuing clearnet traffic (such as OS updates), but without the use of NTP. It is unknown how many people have NTP which is deactivated, broken, uninstalled, or never in fact installed in the first place. Also unknown is how many people are using alternative time synchronization methods such as authenticated NTP, tails_htp, tlsdate, [[sdwdate]] or similar. However, search engine research suggests that very few people fall into both these categories.

== NTP Issues ==
The host system clock synchronization mechanism still uses unauthenticated NTP from a single source. This is not optimal, but there is no real solution to this problem. <ref>See Design: [[Dev/TimeSync]].</ref> A potential attack vector is created by this NTP behavior; the ISP and/or time server could either inadvertently or maliciously introduce a significant clock skew, or the host clock could simply malfunction.

If the host clock value is grossly inaccurate -- more than one hour in the past or more than 3 hours in future -- Tor cannot connect to the Tor network. <ref>In this case, Tor cannot verify the Tor consensus.</ref> This is easily solved by manually fixing the clock on the host, then powering the {{gateway_product_name}} (<code>{{gateway_product_name_vm}}</code>) off and on again.

Another side effect of a significantly inaccurate host clock concerns operating system (OS) updates and cryptographic verification on the host. Until the host clock is manually fixed, it may no longer be possible to download updates or verify SSL certificates correctly with the host browser.

Users should always check whether a host clock defect relates to an empty battery before assuming the ISP is tampering with NTP.

= Spoof the Initial Virtual Hardware Clock Offset  =

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = '''Tip:''' Spoofing the initial virtual hardware clock offset is useful to prevent [[Dev/TimeSync#Clock_Correlation_Attack|Clock Correlation Attacks]].
}}

== KVM ==
<div class="toccolours mw-collapsible mw-collapsed">
For KVM, click on Expand on the right.
<div class="mw-collapsible-content">
[[KVM#XML_Modification_.28OPTIONAL.29|Edit the VM xml before import]] or [[KVM#Editing_an_imported_Machine.27s_XML_Configuration|edit the VM xml after import]] and change the following setting.
{{CodeSelect|code=
<clock offset='utc'>
}}
To.

{{CodeSelect|code=
<clock offset='variable' adjustment='123456' basis='utc'>
}}

The <code>adjustment</code> attribute takes any arbitrary value for seconds. The user must pick a random value that is unknown to others, ranging between 0 and 900 (a 15 minute range).
</div>
</div>

== Qubes ==

TODO

Unfortunately, it is not yet possible to set a random clock offset for {{q_project_name}} VMs to prevent clock correlation attacks since it is [https://phabricator.whonix.org/T440 unsupported by Xen]. A related issue is [https://phabricator.whonix.org/T389 denying {{q_project_name}} access to "clocksource=xen"], which may not be possible without Linux kernel and/or Xen patches. For a detailed discussion of these issues, see [https://groups.google.com/forum/#!topic/qubes-devel/aN3IOv6JmKw here].

== VirtualBox ==
<div class="toccolours mw-collapsible mw-collapsed">
For [[VirtualBox]], click on Expand on the right.
<div class="mw-collapsible-content">
VirtualBox has a feature to spoof the initial virtual hardware clock offset by setting the clock X milliseconds in the future or past. The syntax is outlined below.

{{CodeSelect|code=
VBoxManage modifyvm <name> --biossystemtimeoffset -<milliseconds>
VBoxManage modifyvm <name> --biossystemtimeoffset +<milliseconds>
}}

It is recommended to add a random delay within the following range.

{{CodeSelect|code=
VBoxManage modifyvm <name> --biossystemtimeoffset -60000
VBoxManage modifyvm <name> --biossystemtimeoffset +60000
}}

A spoofing example is below. Users should select their own unique and random values for both the past (-) and future (+) within the specified range. Different values should be used for each distinct VM (on the host).

{{CodeSelect|code=
VBoxManage modifyvm "{{gateway_product_name_short}}" --biossystemtimeoffset -35017
VBoxManage modifyvm "{{gateway_product_name_short}}" --biossystemtimeoffset +27931

VBoxManage modifyvm "{{workstation_product_name}}" --biossystemtimeoffset -35017
VBoxManage modifyvm "{{workstation_product_name}}" --biossystemtimeoffset +27931
}}

Apart from this small <code>biossystemtimeoffset</code>, a clock skew always degrades privacy. <ref><code>biossystemtimeoffset</code> is used to unlink the virtualizer's initial clock synchronization of the VM from the host clock.</ref> <ref>After powering on a VM, it initially synchronizes the VM clock with the host clock until {{project name}} Timesync adjusts it.</ref> <ref>Clock skews can lead to linkability, meaning the user would be [[DoNot#Confuse_Anonymity_with_Pseudonymity|pseudonymous rather than anonymous]].</ref>

</div>
</div>

= Summary =

'''Table:''' ''Network Time Synchonization Summary''

{| class="wikitable"
|-
! scope="col"| '''Platform'''
! scope="col"| '''Recommendations'''
|-
! scope="row"| All Platforms
|
* [[timezone|Do not change system timezone.]]
* Tor cannot connect if the host clock is grossly inaccurate. In this case, users should manually fix the host clock before powering the {{gateway_product_name}} (<code>{{gateway_product_name_vm}}</code>) off and on again.
* Periodically check the host clock to ensure that it is accurate or approximately so.
* For greater security, [[#Block_Networking_until_sdwdate_Finishes|block networking until sdwdate finishes]].
|-
! scope="row"| {{non_q_project_name_short}}
|
* It is strongly discouraged to use the pause / suspend / save / hibernate features.
* Only [[#Spoof_the_Initial_Virtual_Hardware_Clock_Offset|spoof the initial virtual hardware clock offset]] after importing the VM.
|-
! scope="row"| {{q_project_name_short}}
|
* It is strongly discouraged to use the pause feature of Qube Manager.
* it is is safe to use the suspend or hibernate feature of dom0. 
|}

= Appendix =

== Deactivate Automatic TimeSync ==

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = 
'''Warning:''' This action is recommended against and is usually not required. In all cases, first check with the {{project name}} developers.
}}

To deactivate sdwdate, run.

{{CodeSelect|code=
sudo service sdwdate stop
}}

{{CodeSelect|code=
sudo systemctl mask sdwdate
}}

= Related =
* [[Timezone]]
* [[sdwdate]]
* [[sdwdate-gui]]
* [[Boot Clock Randomization]]
* [[Time Attacks]]
* [[Dev/sdwdate]]
* [[Dev/TimeSync]]

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]
