===Introduction===
This guide is for Zax-type nymservers<ref>Zax (aka Steve Crook) is the author of this newer type of nymservers.</ref>. It is based on Zax's [http://is-not-my.name help] [http://www.is-not-my.name/send_howto.html guides] on Mixnym.net, also [https://archive.is/uIO5I archived] [https://archive.is/Qss3y here]. A special thanks to Nymphemeral developer, Felipe Dau, for helping with the instructions.

Zax-type Nymservers are infinitely more usable than GHIO-type servers which should be avoided at all costs, unless you like to [http://www.iusmentis.com/technology/remailers/nym.html hand-craft reply-blocks]. If you don't know what a reply-block is, good. You won't have to.

To manage your nym, messages  can be sent to the Nymserver, via your SMTP server, Mixmaster or even your personal email (not recommended, but would still work). It is highly recommend to use Mixmaster to communicate with Nymservers. They are commonly used together but are totally independent.

===Why?===

*You will have an uncensorable inbox that does not rely on a single service provider that come with the inherent risks of folding under coercion or service decapitation [see [https://en.wikipedia.org/wiki/Lavabit Lavabit]]

*No browser based log-ins into webmail interfaces, where connections can be intercepted and poisoned by adversaries attacking a selector.


===Instructions===
The process broken down into steps:


'''A) Create Nym Request -> B) Send Nym Request to Nymserver -> C) Install and Configure aam2mail to Fetch Replies -> D) Send Mail with Registered Nym'''


'''Conventions'''

For these instructions the example: nym@server will be used. You must change it to suit the nym choice you make and the domain name of the Nymserver.

This example is for Mixnym.net but the guide is still generic and relevant to apply to any other Zax-type Nymserver. For a selection of Nymservers see this [https://www.whonix.org/w/index.php?title=Mixmaster&stable=0&shownotice=1&fromsection=Other_Useful_Topics#Zax_Server_List list].
 


====Creating a Nym Request====

*A Nymserver's key is usually on their homepage, but sometimes it may only be available from the GPG keyservers. In that situation, open KGpg's keyserver dialog and search for it and then import from there.

1. Download the Mixnym.net Nymserver key with curl to home folder.

<pre>
curl -o key.asc http://is-not-my.name/key.asc
</pre>



2. Check fingerprints/owners without importing anything.

<pre>
gpg --with-fingerprint key.asc
</pre>


Always check the fingerprint for yourself. The output at the moment is: 

<pre>
pub  4096R/0xFF4DB66014D0C447 2010-05-05 URL is-not-my.name (URL Retrieval address for Is-Not-My Nymserver) <url@is-not-my.name>
      Key fingerprint = 94F2 04C2 8BF0 0937 EFC8  5D1A FF4D B660 14D0 C447
</pre>


3. If it looks good import with GPG:

<pre>
gpg --import key.asc
</pre>

    

*Create a new key pair for nym@server with KGpg.
    
    <pre>
    KGpg -> Keys -> Generate Key Pair...
    
    Name: John Doe (or any alias of choice)
    Email: nym@server
    RSA key of 4096 bits
    
    
    Enter passphrase for key. OK.
    </pre>

    
    
*Export your Public Key
This will extract the newly generated key from your keyring and store it in a text file. In the following example, I've named that file pubkey.txt
    
    <pre>
    gpg --armor --export nym@server > pubkey.txt
    </pre>
    
    

*Edit the pubkey.txt file
You only need to perform this step if you want to configure additional options on your Nym, such as Subject Identification or Symmetric Encryption. Its highly recommended you do so to keep your messages from standing out on the Newsgroup.
For each option, add a line to the pubkey.txt file using the format:-
'''option: setting'''

Caps are unimportant in the option name, but are sensitive in the setting.
    
Choose some unique keyword as a Subject to be able identify the Nymserver reply on alt.anonymous.messages.
For example, to add a hashed subject of ''panda'':-
    
Your message should look like this:
    
    <pre>
    hsub: panda
    
    -----BEGIN PGP PUBLIC KEY BLOCK-----
    <snipped>
    -----END PGP PUBLIC KEY BLOCK-----
    </pre>


The Mixmyn.net Nymserver parameters specified here are optional.<ref>https://groups.google.com/forum/#!topic/alt.privacy.anon-server/f3H4Xw5j2LI</ref> You can set them now or change them in the future. Future messages requesting these changes would need to be both signed and encrypted to '''config@mixnym.net''' to be accepted by the Nymserver - as shown in the next sub-section<ref>https://groups.google.com/forum/?_escaped_fragment_=topic/alt.privacy.anon-server/2INtTYns2p8#!topic/alt.privacy.anon-server/2INtTYns2p8</ref>

Symmetric: passphrase  //Add a layer of symmetric encryption (not recommended).

Subject: hard subject  //Define plain-text - do not use with 'Hsub:'

Hsub: passphrase       //Define your hsub secret subject

DELETE: yes            //Delete a Nym (specify "yes" as the option's value)


Any of the below can be used to set in place of ''hsub: passphrase''
above:

hash-subject: passphrase

subject-password: passphrase

hash-key: passphrase

hsub: passphrase


Do not use ''Symmetric: passphrase''.  If you do, some (if not all) of the free hsub programs and routines will not be able to automatically find your messages. aam2mail supports the option but it complicates the operation. Its also not commonly used and therefore not a good choice for blending in.

To change your hsub, create a message containing just this. The example is applicable to other options:

<pre>
hsub: your_new_hsub
</pre>


    
*Now you must wrap, pubkey.txt, the message containing your public key + unique Subject Identifier, to the Nymserver.The pubkey.txt file is the input for the following example and the encrypted file will be created as pubkey.txt.asc
    
    <pre>
    gpg --armor --encrypt --recipient config@mixnym.net pubkey.txt
    </pre>
    
Ignore the warning about encrypting to an "untrusted" key and select 'y' for yes.


====Send Nym Request to Nymserver====

*Before sending, update remailer keys first. Its enough to do this once a day:<ref>https://www.youtube.com/watch?v=dzbrFPO4604 LinuxJournal</ref>

    <pre>
    mixmaster

    u

    *
    
    pick remailer letter (optional)
    
    q)uit

    </pre>
        
    
    
*Send the encrypted file to the Nymserver with Mixmaster:
    
    <pre>
    mixmaster --mail -l *,*,* -c 3 config@mixnym.net pubkey.txt.asc
    </pre>
    
Here we are sending three copies through three Mixmaster nodes. If necessary, run Mixmaster and check the remailer chain list to see node availability and reliability stats and choose accordingly.  Note that the protection provided by Mixmaster is not of importance here because everything is done behind Tor.<ref>http://www.mail-archive.com/liberationtech@lists.stanford.edu/msg00022.html</ref>

That's it! The Nymserver decrypts the message, extracts your Nym's email address from the supplied Public Key and processes it. Provided that the nym isn't already taken, you will receive a confirmation message from the Nymserver, encrypted to your key.


'''IMPORTANT'''

Nym creation and configuration messages should only be sent to '''config@server''' and regular messages intended for recipients to '''send@server'''.

It's worth noting that the nym creation request is the only message the server will ever accept from you that's not signed by your key. From now on, your digital signature will prove your ownership of the nym. Messages without it will be rejected.


*Signing messages to the Nymserver with GPG:

<pre>
    gpg --armor --sign --encrypt --recipient config@mixnym.net pubkey.txt
</pre>


Type your password

Answer 'y' for yes when prompted that its not certain that the key belongs to the person named in the user ID.

Note that if you have multiple keys you must specify the nym key as the default so its auomatically used by the ''--sign'' command.

====Install and Configure aam2mail to Fetch Replies====

1. Install git and clone aam2mail source. aam2mail requires no extra dependencies.

<pre>
sudo apt-get install git
git clone https://github.com/crooks/aam2mail

cd aam2mail
sudo python setup.py install
</pre>


2. Configure aam2mail settings. Use the hsub you chose:

<pre>
mkdir aam2mail/etc
echo 'panda' >> aam2mail/etc/subject_hsub
echo 'news.aioe.org' >> aam2mail/etc/servers
</pre>


3. Run aam2mail periodically to check for messages. There is an expected delay of a few hours before getting replies.

<pre>
aam2mail --start
</pre>

or

<pre>
aam2mail --restart
</pre>


4. Replies will be downloaded by aam2mail to this path: ''/home/user/Maildir/new''. aam2mail does not decrypt messages for you but retrieves them only.

5.To decrypt, copy-paste the ciphertext block '''only''' into KGpg or else decryption will fail.

<pre>
KGpg -> File -> Open Editor 
</pre>


Congratulations for registering your first nym. Now you are ready to use it for sending messages. Be sure to check for new messages regularly because messages on Usenet accumulate beyond the fetch-limit and you may miss them.

The reply will arrive in the alt.anonymous.messages newsgroup. Nymservers will always encrypt replies to your key because the Newsgroup acts as a public mailbox. Everybody can see and download the messages but only the intended recipient can decrypt it.

====Send Mail with Registered Nym====

* Create a plaintext file called message.txt in your Home folder. Add the required headers so it looks like this:

<pre>
From: nym@server
To: recipient@domain
Subject: Example

This is an example
</pre>


* Optionally encrypt your message body to the recipient if you have their key. Similar to Tor, the last hop between the Nymserver and the recipient are not encrypted. If they don't use encryption, you have no choice but to send a plaintext message.
<pre>
KGpg -> Open editor -> compose your message body and Encrypt to recipient's key (its assumed that its been imported beforehand) 

Options -> Allow encryption with untrusted keys

Select recipient key
</pre>

Copy-paste the encrypted message body in place of ''This is an example'' in the step above and save.



* The message  '''must''' be signed and encrypted to the Nymserver:
<pre>
    gpg --armor --sign --encrypt --recipient send@mixnym.net message.txt
</pre>

Type your password

Answer 'y' for yes when prompted that its not certain that the key belongs to the person named in the user ID.

Note that if you have multiple keys you must specify the nym key as the default so its automatically used by the --sign command.


*You '''must''' then edit the message encrypted to the Nymserver and add a set of headers so it looks like this:

<pre>
From: nym@server
To: send@server
Subject: Example

-----BEGIN PGP MESSAGE-----
<snipped>
-----END PGP MESSAGE-----
</pre>

The "From:" and "Subject:" headers do not even have to match or be valid.


*Finally, send the message to the Nymserver which will then pass it onto the recipient(s):

    <pre>
    mixmaster --mail -l *,*,* -c 3 send@mixnym.net message.txt.asc
    </pre>

===Zax Server List===
Active Zax nymservers as of 2015:<ref>http://alt.privacy.anon-server.narkive.com/Zd27lR8z/how-to-get-nymserver-help-key</ref>


nymphet.paranoici.org

mixnym.net

nym.now.im

breaka.net

bravonym.inbox5.com


===Public/Open News Servers===

news.dizum.net<ref>A open (read-only) (text) usenet server. Both nntp and nntps are supported. https://dizum.com/</ref>

news.aioe.org<ref>Used by QSA. https://www.quicksilvermail.net/</ref>

news.mixmin.net<ref>Used by QSA. https://www.quicksilvermail.net/</ref>

eternal-september.org


===Other Useful Topics===

* You can change the default Mixmater editor to something more usable than vi<ref>http://alt.privacy.anon-server.narkive.com/5dbZVYpQ/choice-of-editor-with-mixmaster</ref>:
<pre>
sudo echo 'export EDITOR=kwrite' >> ~/.bashrc
</pre>
Log-out then back in again for changes to take effect.


* What happens if you register a nym that is already taken?

You will receive a message in a.a.m that its already been taken.<ref>http://alt.privacy.anon-server.narkive.com/Zd27lR8z/how-to-get-nymserver-help-key</ref>

===Dev Notes===

See if we can ship aam2mail<ref>The latter also written by Steve Crook https://github.com/crooks/aam2mail</ref> - a stand-alone python utility for hsub management.


Readings:

Mixnym.net key expired but Zax fixed the problem.<ref>https://groups.google.com/forum/?_escaped_fragment_=topic/alt.privacy.anon-server/A6ltHhItGrw#!topic/alt.privacy.anon-server/A6ltHhItGrw</ref>
