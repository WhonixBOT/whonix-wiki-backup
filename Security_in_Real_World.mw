__NOTITLE__
{{Header}}
{{#seo:
|description=How Whonix defeats many notable "in the wild" anonymity attacks.
|image=https://www.whonix.org/w/images/0/0d/Flashleaktest.png
}}

[[Image:flash_leak_test.png|<code>Flash Leak Test SocksPort and TransPort</code>|thumb]]
[[Image:flash_leak_test_both_transport.png|<code>Flash Leak Test both TransPort</code>|thumb]]

== Whonix Protection Against Real World Attacks ==

=== BitTorrent ===

[https://blog.torproject.org/bittorrent-over-tor-isnt-good-idea IP leaks]([http://www.webcitation.org/6FDaBuhHi w]) have been reported when using ordinary proxification methods. However, since Whonix prevents information leaks, using BitTorrent will not leak a user's real external IP address (see [[File Sharing]]). The reason is  Whonix-Workstation (<code>anon-whonix</code>) has no knowledge of the external, ISP-facing IP address.

=== Flash and Java ===

Whonix prevents information leaks from browser plugins since it has no knowledge of the real external IP address. This protection also applies to Flash-based applications used by [https://en.wikipedia.org/wiki/Operation_Torpedo advanced adversaries]. Nevertheless, it is not recommended to install browser plugins such as Flash when anonymity is the goal. <ref name=plugin>[https://www.whonix.org/wiki/Comparison_with_Others#Flash_.2F_Browser_Plugin_Security https://www.whonix.org/wiki/Comparison_with_Others#Flash_.2F_Browser_Plugin_Security]</ref> See [[ Browser Plugins]] for further details.     

=== Nautilus ===

A [https://bugzilla.gnome.org/show_bug.cgi?id=777991 security bug]([http://linux.debian.bugs.dist.narkive.com/Z4frRjjC/bug-860268-desktop-files-can-hide-malware-in-nautilus d]) was reported in Nautilus file manager that allows an attacker to disguise a malicious script as a <code>.desktop</code> file. In this attack, an adversary tricks the user into downloading the <code>.desktop</code> file from a website or sends the file in an email. Once the file is on the target's computer, the file (PDF, ODT) only has to be opened by the user for the script to execute. 

This security bug was used to craft an exploit which was able to break the [https://subgraph.com/sgos/index.en.html Subgraph OS] security model.<ref name=break>[https://micahflee.com/2017/04/breaking-the-security-model-of-subgraph-os/ https://micahflee.com/2017/04/breaking-the-security-model-of-subgraph-os/]</ref> Since Subgraph does not contain Nautilus in an <i>Oz sandbox</i>, <ref>The Subgraph OS sandbox framework is known as Oz, which is unique to the platform. It is designed to isolate applications from each other and the rest of the system.</ref> once the malicious script was executed, it would have enabled access to much of the user's data; PGP keys, SSH keys, stored email, documents, password databases, MAC addresses and nearby Wi-Fi access points.

This sensitive information could be used by attackers to deanonymize the user.<ref>To be fair, when this bug was reported Subgraph OS was still in Alpha status.</ref>  Whonix defeats this attack and others like it. Since Whonix-Workstation (<code>anon-whonix</code>) is isolated from the host and Whonix-Gateway (<code>sys-whonix</code>), even if a malicious <code>.desktop</code> script is executed, no information can be gathered about the external IP address, hardware serials or sensitive data outside of Whonix-Workstation (<code>anon-whonix</code>).<ref>All data inside Whonix-Workstation (<code>anon-whonix</code>) would be available to the attacker and aid deanonymization.</ref> Once Subgraph developers were informed of the vulnerability, the Nautilus package was patched on the platform. <ref name=patched>[https://twitter.com/subgraph/status/852000407253594114 https://twitter.com/subgraph/status/852000407253594114]</ref>

=== P2P ===

An [https://hal.inria.fr/inria-00574178/en/ attack]([https://www.webcitation.org/6FVK6WpNu w]) was published that targets P2P applications in order to trace and profile Tor users. Whonix defeats this attack and others like it because Whonix-Workstation (<code>anon-whonix</code>) has no knowledge of the external IP address. Furthermore, Whonix provides extended protection by using [[Stream Isolation|stream isolation]].

=== Pidgin ===

A bug was found in [https://www.webcitation.org/6FDZj1gpN Pidgin source code] that would have leaked the real IP address. Whonix did not exist when this bug was discovered. Nevertheless, the security by isolation model adopted by Whonix prevents this kind of leak from occurring. Notably, this bug only existed in the developmental source code and it was patched before the release date. [https://mailman.boum.org/pipermail/tails-dev/2012-September/001704.html source]([https://www.webcitation.org/6FDZe0ZXS w]) 

=== Skype ===

Whonix will not leak a user's IP address / location while using [[Voip#Skype|Skype]] or other [[Voip|VoIP]] protocols, although [[VoIP#Introduction|it is fairly difficult to anonymize voice]] over these channels.

=== Targeted Clock Skew Correlation ===

This type of correlation allows an adversary to acquire the time stamp of an Onion Service http header and measure the skew ([https://www.webcitation.org/6FDZnhH5j clock skewing])([https://www.webcitation.org/6FDZnhH5j w]). The adversary then compares the acquired time stamp against Tor relays or other publicly reachable web servers. If the time skew of the Onion Service server matches any publicly reachable servers or Tor relays, it is very likely the Onion Service is hosted on the same server. 

Whonix defeats this and other [[Time Attacks| time attacks]] since it uses [[sdwdate]]. This program connects to a variety of servers (likely to be hosted on different hardware) at random intervals and extracts time stamps from the https headers. Using the sclockadj option, time is gradually adjusted thus preventing bigger clock jumps that could confuse logs, servers, Tor, i2p, etc. <ref name=sdwdate-github>[https://github.com/Whonix/sdwdate https://github.com/Whonix/sdwdate]</ref> <ref>To be fair, when this attack was first described Whonix did not exist.</ref>

{{mbox	
| image   = [[File:Ambox_warning_pn.svg.png|40px]]	
| text       = It is not recommended to run Tor relays on a publicly reachable server along with an Onion Service on the same server. This configuration aids [https://www.webcitation.org/6FDZnhH5j traffic correlation and fingerprinting].	
}}	

=== Thunderbird ===

[https://tails.boum.org Tails] reported that [https://tails.boum.org/security/IP_address_leak_with_icedove/index.en.html Thunderbird leaks]([https://www.webcitation.org/6FDZcatic w]) the real external IP address. Although Whonix did not exist when this bug was discovered, it would have been impossible for the real external IP address to leak, since Whonix-Workstation (<code>anon-whonix</code>) has no knowledge of it. In fairness to Tails, this kind of leak is now considered unlikely since they no longer use transparent torification. <ref name=transparent>[https://mailman.boum.org/pipermail/tails-dev/2012-September/001704.html https://mailman.boum.org/pipermail/tails-dev/2012-September/001704.html]</ref> 

=== Tor Browser Bundle ===

# A severe [https://blog.torproject.org/blog/firefox-security-bug-proxy-bypass-current-tbbs bug]([https://www.webcitation.org/6FDZlP2Ht w]) was discovered in FireFox which related to WebSockets bypassing the SOCKS proxy DNS configuration. <ref name=proxy-bypass>[https://trac.torproject.org/projects/tor/ticket/5741 https://trac.torproject.org/projects/tor/ticket/5741]</ref> Whonix defeats this bug since Whonix-Gateway (<code>sys-whonix</code>) forces all traffic through the Tor network or it is blocked. At worst, a proxy bypass would have emitted traffic through Tor's TransPort. In this scenario, the only information that could leak is the IP address of another Tor Exit Relay, which would not affect anonymity.
# An old [https://lists.torproject.org/pipermail/tor-announce/2013-August/000089.html attack] was observed in the wild that exploited a JavaScript vulnerability in Firefox. <ref>JavaScript was enabled by default in Tor Browser at the time this exploit was discovered.</ref> The observed version of the attack collected the [[Security Guide#hostname|hostname]] and [[Computer Security Education#MAC|MAC address]] of the victims' computers, and sent that information to a remote web server. This threat is partially mitigated nowadays by the development of a [[Tor_Browser#Security_Slider|security slider]] in the Tor Browser Bundle, which prevents the execution of JavaScript code completely with the correct settings. Nevertheless, Whonix would have protected against a MAC address leak <ref>Since Whonix-Workstation (<code>anon-whonix</code>) is unaware of the MAC address.</ref> and at worst leaked a [[Computer_Security_Education#Hostnames|hostname which is common to all Whonix users]].
# A [https://blog.torproject.org/tor-browser-703-released security bug] was reported in version 7.0.2 that allowed systems with GVfs/GIO support to bypass Firefox proxy settings using a specially crafted URL, leading to an IP address leak. Since Whonix-Gateway (<code>sys-whonix</code>) forces all traffic through Tor, and information leaks are blocked, Whonix users were not affected by this bug.
# A [https://trac.torproject.org/projects/tor/ticket/8751 defect] was discovered which allowed an adversary to use targeted clock skew correlation to identify a user.  Since Tor Browser transmits TLS "Hello Client" <code>gmt_unix_time</code> there are two scenarios in which these transmissions could be used to track users. 
** In the first scenario an adversary either compromises [https://en.wikipedia.org/wiki/Network_Time_Protocol NTP] servers or uses a man-in-the-middle to intercept NTP server replies and introduces a unique clock skew. Since "Hello Client" transmissions are visible to ISPs that host Tor Exit Relays as well as destination servers, an adversary could use clock skew correlation to track users' movements. 
** In the second scenario, a user visits a clearnet website under adversary control without Tor Browser and the unique clock skew of the TLS "Hello Client" <code>gmt_unix_time</code> is recorded.  Afterwards, the user visits the same or a different adversary-controlled website using Tor Browser. If both clock skews match, this could indicate the two visitors were the same person. At the very least this would significantly degrade anonymity. Since Whonix uses sdwdate and not NTP to keep time, these instances of targeted clock skew correlation and many like it are defeated.

== Footnotes ==
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]] [[Category:Design]]
