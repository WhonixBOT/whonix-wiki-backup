<!--
Copyright:

   Whonix Computer Security Education wiki page Copyright (C) Amnesia <amnesia at boum dot org>
   Whonix Computer Security Education wiki page Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
         
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
      
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to:

    Free Software Foundation, Inc. 
    51 Franklin St, Fifth Floor
    Boston, MA 02110-1301, USA.

On Debian GNU/Linux systems, the complete text of the GNU General Public
License can be found in the /usr/share/common-licenses' directory.

The complete text of the GNU General Public License can also be found online on gnu.org <https://www.gnu.org/licenses/gpl.html>, in Whonix virtual machine images in /usr/share/common-licenses/GPL-3 file or on Github <https://github.com/Whonix/Whonix/blob/master/GPLv3>.
-->
<!--
The Whonix Computer Security Education wiki page is forked from the Tails Enable MAC Changer page, from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/doc/advanced_topics/mac_changer.mdwn;hb=770c6f26f8dcd06452fef1c57dafb2878e0dee11> and on the Tails macchanger page from this exact source <http://git.immerda.ch/?p=amnesia.git;a=blob;f=wiki/src/todo/macchanger.mdwn;hb=f27853e23d7985594d54f00f30153b6acd97312e>.
-->

{{Header}}
{{#seo:
|description=Establishing Hardware Trust, Open-source Hardware Alternatives
|og:image=https://www.whonix.org/w/images/6/69/Opensourcehardware.png
}}

= Introduction =

{{mbox
| type      = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text       = This chapter contains general security advice and is unspecific to Whonix. Users interested in this topic should undertake significant research before purchasing any open-source hardware.
}}

= Hardware Trust in Modern Computing =

Security researcher and Qubes founder, Joanna Rutkowska, has noted that modern computing and networking security relies upon a critical foundation - trusted hardware and firmware domains. Even high-security operating systems have an security upper bound, since that is defined by the trustworthiness of hardware components that are ideally placed to compromise the entire system if bugs or backdoors are present: <ref name=x86_harmful.pdf>https://blog.invisiblethings.org/papers/2015/x86_harmful.pdf</ref>

<blockquote>... for years we have been, similarly, assuming the underlying hardware, together with all the firmware that runs on it, such as the BIOS/UEFI and the SMM, GPU/NIC/SATA/HDD/EC firmware, etc., is all. . . trusted.
<br />
But isn’t that a rational assumption, after all?<br />
<br />
Well, not quite: today we know it is rather unwise to assume all hardware and firmware is trusted. Various research from the last ten years, as discussed below, has provided enough evidence for that, in the author’s opinion. We should thus revisit this assumption. And given what’s at stake, the sooner we do this, the better.
</blockquote>

Rutkowska has concluded the following hardware components and mechanisms are all vulnerable to exploitation and often flawed in their implementation, making them easy to "backdoor": <ref name=x86_harmful.pdf />

* x86 boot security (BIOS implementation).
* Vt-d (CPU-enforced sandboxing of networking).
* Graphics cards (GPUs) and sub-systems.
* USB controllers.
* Disk controllers (SATA etc.).
* Embedded controllers (for keyboard operation, battery charging etc.).
* Audio cards.
* Peripheral devices.
* Intel Management Engine (ME) and AMD Security Processor (embedded microcontrollers).
* Built-in speakers, microphones and cameras.

This is particularly true for privileged, out-of-band hardware components like Intel ME's AMT which can read or write any of the host computer's memory, without any constraints - the perfect, undetectable rootkiting infrastructure. <ref name=x86_harmful.pdf /> In short, it appears that modern computing architectures are impossible to secure properly, especially since popular, proprietary hardware options (Intel and AMD) dominate the market. <ref>AMD-based x86 platforms have analogous hardware mechanisms to Intel, so they are not theoretically safer.</ref>

= Open-source Hardware Alternatives =

Users who are motivated to avoid proprietary hardware solutions are in a bind. There are few options available that are truly "free" (open-source), affordable and which provide suitable processing power to run "secure" operating systems like Qubes-Whonix, because specific hardware requirements like VT-d and VT-x are necessary for compatibility with future software releases. 

Open-source hardware is also not perfectly secure since it is not "stateless". Meeting this standard requires there be no persistent storage at all. <ref name=x86_harmful.pdf /> Further, "free" hardware does not really exist, since by definition it requires that hardware be free at all levels, including: licensing, the chip and circuit board designs, the field-programmable gate array, source code, relevant repositories and so on. Also, proprietary "soft cores" which are often incorporated in various hardware circuits need to be purged to meet the necessary criteria. <ref>https://www.wired.com/2015/03/richard-stallman-how-to-make-hardware-designs-free/</ref> <ref>https://www.wired.com/2015/03/need-free-digital-hardware-designs/</ref>

== ARM-based Platforms ==

ARM architecture dominates smartphone and tablet markets, providing a good level of performance. However, an open-source "ARM processor" is non-existent, because only the specifications and other intellectual property (IP) are released to manufacturers under specific licenses. This leads to NVIDIA, Samsung and others combining the ARM IP with their own, leading to the actual, customized processors called System-on-Chips (SoCs). <ref name=x86_harmful.pdf /> ARM SoCs also often have a TrustZone extension, with implementation providing similar functionality to Intel's ME. There is nothing special in ARM architecture that prevents the possible introduction of backdoors.

== Open-source Processors ==

Unfortunately, a fully open-source, Linux-capable based processor (SoC) is not yet available, with the design still being finalized. While this project will eventually allow a 64-bit RISC-V instruction set architecture and the development of low-cost boards, the wait may be lengthy (many years) and it is not clear such processors will perform well enough for typical desktop workflows like watching movies, running browsers, using office suites and so on. It is also unknown whether this design will allow for security technologies like IOMMU and memory virtualization. <ref>http://www.lowrisc.org/about/</ref> <ref name=x86_harmful.pdf />

= Final Hardware Purchase =

The Free Software Foundation (FSF) makes a number of relevant recommendations: <ref>https://www.fsf.org/resources/hw</ref>

* Find devices which support fully free distributions of GNU/Linux.
* Purchase hardware from manufacturers who support GNU/Linux.
* Purchase hardware which supports coreboot/libreboot as a proprietary BIOS replacement. <ref>For example, the Thinkpad X200 and X60 laptop series. Users utilizing coreboot/libreboot with Intel CPUs are not necessarily safe, since the Firmware Support Package (FSP) can still potentially modify things in a malicious manner.</ref>
* Purchase hardware without the need for proprietary drivers or firmware: [http://h-node.org/ hdnode.org].
* Check the [https://www.fsf.org/resources/hw/endorsement/criteria FSF criteria] for hardware certification requirements.
* If looking for a single-board computer (SBC), check the [https://www.fsf.org/resources/hw/single-board-computers list] of available (flawed) hardware. <ref>None of these options are completely free in their design.</ref>
* Check the list of [http://www.coreboot.org/Supported_Motherboards motherboards] that are compatible with coreboot. <ref>Some motherboards still require proprietary CPU microcode.</ref>

A list of suppliers selling or providing [https://libreboot.org/ Libreboot] pre-installed on laptops, desktops, servers and motherboards can be found [https://libreboot.org/suppliers.html here]. Readers interested in purchasing hardware with Coreboot pre-installed can start their search [https://www.coreboot.org/users.html here].

== Buyer Considerations ==

Based on the preceding information and links, users seeking an open-source solution need to make a compromise. Since RISC processors supporting a fully-fledged operating system do not yet exist, the closest thing available is [https://www.fsf.org/resources/hw/single-board-computers single-board computers (SBCs)], which are delivered as one circuit board that are powerful enough to run a real operating system. 

These systems generally contain a SoC with an ARM processor, with options like [http://spectrum.ieee.org/consumer-electronics/portable-devices/novena-a-laptop-with-no-secrets Novena] and [http://www.mouser.com/new/pandaboardorg/pandaboardES/ PandaBoardES] falling into this category. However, they still have a number of closed-source binary blobs and the FSF also notes "severe flaws" in these products due to proprietary design concerns.

Some High-end laptops options like [https://store.vikings.net/libre-friendly-hardware/vikings-d16-workstation VKGS-WORK-D16] which is fully compatible with [https://libreboot.org/ Libreboot] BIOS plus It has the ability to boot Qubes OS at its full needs and it comes with absolutely no proprietary software, or firmware blobs.

And those provided by [https://puri.sm/ Purism] also seek to remove as many proprietary blobs as possible, for example by using coreboot in place of the standard BIOS implementation. Unfortunately, this solution is expensive and still relies on an Intel processor. Despite the claims that ME is "neutralized", the ME still poses potential security threats to the user as highlighted in Rutkowska's research.

In practical terms, it is just simpler for the majority of users to purchase a standard closed-source architecture. This provides a high-performance solution and the features necessary for compatibility with high-end operating systems like [[Qubes-Whonix]]. In the coming years when open-source processors and hardware designs further mature and the necessary functionality is provided for virtualization, users will then have a reasonable and fairly-priced alternative.

== Firmware Considerations ==

[https://en.wikipedia.org/wiki/Open-source_hardware Open-source hardware] is not affected by the non-free firmware updates issue described in the previous chapter. Such hardware might be more trustworthy, but open-source firmware can be just as insecure as a proprietary one. Fortunately, open source firmware increases the chances of actually making it secure, with options like coreboot appearing to be a promising solution. <ref name=x86_harmful.pdf />

= References =
{{reflist|close=1}}

= License =
{{License_Amnesia|{{FULLPAGENAME}}}}

{{Footer}}

[[Category:Documentation]]
